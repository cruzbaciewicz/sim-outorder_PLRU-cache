cscope 15 $HOME/PR3/simplesim-3.0               0001573444
	@bitmap.h

52 #i‚de‡
BITMAP_H


53 
	#BITMAP_H


	)

61 
	#BITMAP_SIZE
(
BITS
Ë(((BITS)+31)/32)

	)

62 
	#BITMAP_TYPE
(
BITS
, 
NAME
Ë(NAME)[
	`BITMAP_SIZE
(BITS)]

	)

64 
	tBITMAP_ENT_TYPE
;

65 *
	tBITMAP_PTR_TYPE
;

68 
	#BITMAP_SET_MAP
(
BMAP
, 
SZ
) \

69 { 
i
; i=0; i<(
SZ
); i++Ë(
BMAP
)[i] = 0xffffffff; }

	)

72 
	#BITMAP_CLEAR_MAP
(
BMAP
, 
SZ
) \

73 { 
i
; i=0; i<(
SZ
); i++Ë(
BMAP
)[i] = 0; }

	)

76 
	#BITMAP_SET
(
BMAP
, 
SZ
, 
BIT
) \

77 (((
BMAP
)[(
BIT
)/32] |(1 << ((BITË% 32))), (BMAP))

	)

80 
	#BITMAP_CLEAR
(
BMAP
, 
SZ
, 
BIT
) \

81 (((
BMAP
)[(
BIT
)/32] &~(1 << ((BITË% 32))), (BMAP))

	)

84 
	#BITMAP_COPY
(
DESTMAP
, 
SRCMAP
, 
SZ
) \

85 { 
i
; i=0; i<(
SZ
); i++Ë(
DESTMAP
)[i] = (
SRCMAP
)[i]; }

	)

88 
	#__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, 
OP
) \

89 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = (
B2
)[i] 
	`OP
 (
B3
)[i]; }

	)

92 
	#BITMAP_IOR
(
B1
, 
B2
, 
B3
, 
SZ
) \

93 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, |)

	)

96 
	#BITMAP_XOR
(
B1
, 
B2
, 
B3
, 
SZ
) \

97 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, ^)

	)

100 
	#BITMAP_AND
(
B1
, 
B2
, 
B3
, 
SZ
) \

101 
	`__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, &)

	)

104 
	#BITMAP_NOT
(
B1
, 
B2
, 
SZ
) \

105 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = ~((
B2
)[i]); }

	)

108 
	#BITMAP_EMPTY_P
(
BMAP
, 
SZ
) \

109 ({ 
i
, 
ªs
=0; i=0; i<(
SZ
); i++Ëª†|(
BMAP
)[i]; !ªs; })

	)

112 
	#BITMAP_DISJOINT_P
(
B1
, 
B2
, 
SZ
) \

113 ({ 
i
, 
ªs
=0; i=0; i<(
SZ
); i++Ëª†|(
B1
)[i] & (
B2
)[i]; !ªs; })

	)

116 
	#BITMAP_SET_P
(
BMAP
, 
SZ
, 
BIT
) \

117 (((
BMAP
)[(
BIT
)/32] & (1 << ((BITË% 32))Ë!0)

	)

120 
	#BITMAP_CLEAR_P
(
BMAP
, 
SZ
, 
BIT
) \

121 (!
	`BMAP_SET_P
((
BMAP
), (
SZ
), (
BIT
)))

	)

124 
	#BITMAP_COUNT_ONES
(
BMAP
, 
SZ
) \

126 
i
, 
j
, 
n
 = 0; \

127 
i
 = 0; i < (
SZ
) ; i++) \

129 
w‹d
 = (
BMAP
)[
i
]; \

130 
j
=0; j < (()*8); j++) \

132 
√w_vÆ
, 
ﬁd_vÆ
 = 
w‹d
; \

133 
w‹d
 >>= 1; \

134 
√w_vÆ
 = 
w‹d
 << 1; \

135 i‡(
ﬁd_vÆ
 !
√w_vÆ
) \

136 
n
++; \

139 
n
; \

140 })

	)

	@bpred.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"b¥ed.h
"

66 
b¥ed_t
 *

67 
	$b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

68 
bimod_size
,

69 
l1size
,

70 
l2size
,

71 
mëa_size
,

72 
shi·_width
,

73 
x‹
,

74 
btb_£ts
,

75 
btb_assoc
,

76 
ªt°ack_size
)

78 
b¥ed_t
 *
¥ed
;

80 i‡(!(
¥ed
 = 
	`ˇŒoc
(1, (
b¥ed_t
))))

81 
	`Áèl
("out of virtual memory");

83 
¥ed
->
˛ass
 = class;

85 
˛ass
) {

86 
BPªdComb
:

88 
¥ed
->
dú¥ed
.
bimod
 =

89 
	`b¥ed_dú_¸óã
(
BPªd2bô
, 
bimod_size
, 0, 0, 0);

92 
¥ed
->
dú¥ed
.
twﬁev
 =

93 
	`b¥ed_dú_¸óã
(
BPªd2Levñ
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

96 
¥ed
->
dú¥ed
.
mëa
 =

97 
	`b¥ed_dú_¸óã
(
BPªd2bô
, 
mëa_size
, 0, 0, 0);

101 
BPªd2Levñ
:

102 
¥ed
->
dú¥ed
.
twﬁev
 =

103 
	`b¥ed_dú_¸óã
(
˛ass
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

107 
BPªd2bô
:

108 
¥ed
->
dú¥ed
.
bimod
 =

109 
	`b¥ed_dú_¸óã
(
˛ass
, 
bimod_size
, 0, 0, 0);

111 
BPªdTakí
:

112 
BPªdNŸTakí
:

117 
	`∑nic
("bogusÖredictor class");

121 
˛ass
) {

122 
BPªdComb
:

123 
BPªd2Levñ
:

124 
BPªd2bô
:

126 
i
;

129 i‡(!
btb_£ts
 || (btb_sets & (btb_sets-1)) != 0)

130 
	`Áèl
("number of BTB sets must beÇon-zeroándáÖower ofÅwo");

131 i‡(!
btb_assoc
 || (btb_assoc & (btb_assoc-1)) != 0)

132 
	`Áèl
("BTBássociativity must beÇon-zeroándáÖower ofÅwo");

134 i‡(!(
¥ed
->
btb
.
btb_d©a
 = 
	`ˇŒoc
(
btb_£ts
 * 
btb_assoc
,

135 (
b¥ed_btb_ít_t
))))

136 
	`Áèl
("cannotállocate BTB");

138 
¥ed
->
btb
.
£ts
 = 
btb_£ts
;

139 
¥ed
->
btb
.
assoc
 = 
btb_assoc
;

141 i‡(
¥ed
->
btb
.
assoc
 > 1)

142 
i
=0; i < (
¥ed
->
btb
.
assoc
*¥ed->btb.
£ts
); i++)

144 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

145 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = &pred->btb.btb_data[i+1];

147 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = 
NULL
;

149 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

150 
¥ed
->
btb
.
btb_d©a
[
i
+1].
¥ev
 = &pred->btb.btb_data[i];

154 i‡((
ªt°ack_size
 & (retstack_size-1)) != 0)

155 
	`Áèl
("Return-address-stack size must be zero oráÖower ofÅwo");

157 
¥ed
->
ªt°ack
.
size
 = 
ªt°ack_size
;

158 i‡(
ªt°ack_size
)

159 i‡(!(
¥ed
->
ªt°ack
.
°ack
 = 
	`ˇŒoc
(
ªt°ack_size
,

160 (
b¥ed_btb_ít_t
))))

161 
	`Áèl
("cannotállocateÑeturn-address-stack");

162 
¥ed
->
ªt°ack
.
tos
 = 
ªt°ack_size
 - 1;

167 
BPªdTakí
:

168 
BPªdNŸTakí
:

173 
	`∑nic
("bogusÖredictor class");

176  
¥ed
;

177 
	}
}

180 
b¥ed_dú_t
 *

181 
	$b¥ed_dú_¸óã
 (

182 
b¥ed_˛ass
 
˛ass
,

183 
l1size
,

184 
l2size
,

185 
shi·_width
,

186 
x‹
)

188 
b¥ed_dú_t
 *
¥ed_dú
;

189 
˙t
;

190 
ÊùÊ›
;

192 i‡(!(
¥ed_dú
 = 
	`ˇŒoc
(1, (
b¥ed_dú_t
))))

193 
	`Áèl
("out of virtual memory");

195 
¥ed_dú
->
˛ass
 = class;

197 
˙t
 = -1;

198 
˛ass
) {

199 
BPªd2Levñ
:

201 i‡(!
l1size
 || (l1size & (l1size-1)) != 0)

202 
	`Áèl
("level-1 size, `%d', must beÇon-zeroándáÖower ofÅwo",

203 
l1size
);

204 
¥ed_dú
->
c⁄fig
.
two
.
l1size
 =Ü1size;

206 i‡(!
l2size
 || (l2size & (l2size-1)) != 0)

207 
	`Áèl
("level-2 size, `%d', must beÇon-zeroándáÖower ofÅwo",

208 
l2size
);

209 
¥ed_dú
->
c⁄fig
.
two
.
l2size
 =Ü2size;

211 i‡(!
shi·_width
 || shift_width > 30)

212 
	`Áèl
("shiftÑegister width, `%d', must beÇon-zeroándÖositive",

213 
shi·_width
);

214 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
 = shift_width;

216 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 = xor;

217 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
 = 
	`ˇŒoc
(
l1size
, ());

218 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
)

219 
	`Áèl
("cannotállocate shiftÑegisterÅable");

221 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
 = 
	`ˇŒoc
(
l2size
, ());

222 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
)

223 
	`Áèl
("cannotállocate secondÜevelÅable");

226 
ÊùÊ›
 = 1;

227 
˙t
 = 0; c¡ < 
l2size
; cnt++)

229 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
˙t
] = 
ÊùÊ›
;

230 
ÊùÊ›
 = 3 - flipflop;

236 
BPªd2bô
:

237 i‡(!
l1size
 || (l1size & (l1size-1)) != 0)

238 
	`Áèl
("2bitÅable size, `%d', must beÇon-zeroándáÖower ofÅwo",

239 
l1size
);

240 
¥ed_dú
->
c⁄fig
.
bimod
.
size
 = 
l1size
;

241 i‡(!(
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
 =

242 
	`ˇŒoc
(
l1size
, ())))

243 
	`Áèl
("cannotállocate 2bit storage");

245 
ÊùÊ›
 = 1;

246 
˙t
 = 0; c¡ < 
l1size
; cnt++)

248 
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
˙t
] = 
ÊùÊ›
;

249 
ÊùÊ›
 = 3 - flipflop;

254 
BPªdTakí
:

255 
BPªdNŸTakí
:

260 
	`∑nic
("bogus branch directionÖredictor class");

263  
¥ed_dú
;

264 
	}
}

268 
	$b¥ed_dú_c⁄fig
(

269 
b¥ed_dú_t
 *
¥ed_dú
,

270 
«me
[],

271 
FILE
 *
°ªam
)

273 
¥ed_dú
->
˛ass
) {

274 
BPªd2Levñ
:

275 
	`Ârötf
(
°ªam
,

277 
«me
, 
¥ed_dú
->
c⁄fig
.
two
.
l1size
,Öªd_dú->c⁄fig.two.
shi·_width
,

278 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 ? "" : "no",Öªd_dú->c⁄fig.two.
l2size
);

281 
BPªd2bô
:

282 
	`Ârötf
(
°ªam
, "pred_dir: %s: 2-bit: %dÉntries, direct-mapped\n",

283 
«me
, 
¥ed_dú
->
c⁄fig
.
bimod
.
size
);

286 
BPªdTakí
:

287 
	`Ârötf
(
°ªam
, "¥ed_dú: %s:Öªdi˘Åakí\n", 
«me
);

290 
BPªdNŸTakí
:

291 
	`Ârötf
(
°ªam
, "¥ed_dú: %s:Öªdi˘ÇŸÅakí\n", 
«me
);

295 
	`∑nic
("bogus branch directionÖredictor class");

297 
	}
}

301 
	$b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

302 
FILE
 *
°ªam
)

304 
¥ed
->
˛ass
) {

305 
BPªdComb
:

306 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

307 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

308 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
mëa
, "mëa", 
°ªam
);

309 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

310 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

311 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

314 
BPªd2Levñ
:

315 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

316 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

317 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

318 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

321 
BPªd2bô
:

322 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

323 
	`Ârötf
(
°ªam
, "btb: %d sets x %dássociativity",

324 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

325 
	`Ârötf
(
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

328 
BPªdTakí
:

329 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "èkí", 
°ªam
);

331 
BPªdNŸTakí
:

332 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "nŸèkí", 
°ªam
);

336 
	`∑nic
("bogus branchÖredictor class");

338 
	}
}

342 
	$b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

343 
FILE
 *
°ªam
)

345 
	`Ârötf
(
°ªam
, "pred:áddr-predictionÑate = %f\n",

346 ()
¥ed
->
addr_hôs
/()’ªd->addr_hôs+¥ed->
mis£s
));

347 
	`Ârötf
(
°ªam
, "pred: dir-predictionÑate = %f\n",

348 ()
¥ed
->
dú_hôs
/()’ªd->dú_hôs+¥ed->
mis£s
));

349 
	}
}

353 
	$b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

354 
°©_sdb_t
 *
sdb
)

356 
buf
[512], 
buf1
[512], *
«me
;

359 
¥ed
->
˛ass
)

361 
BPªdComb
:

362 
«me
 = "bpred_comb";

364 
BPªd2Levñ
:

365 
«me
 = "bpred_2lev";

367 
BPªd2bô
:

368 
«me
 = "bpred_bimod";

370 
BPªdTakí
:

371 
«me
 = "bpred_taken";

373 
BPªdNŸTakí
:

374 
«me
 = "bpred_nottaken";

377 
	`∑nic
("bogus branchÖredictor class");

380 
	`•rötf
(
buf
, "%s.lookups", 
«me
);

381 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of bpredÜookups",

382 &
¥ed
->
lookups
, 0, 
NULL
);

383 
	`•rötf
(
buf
, "%s.upd©es", 
«me
);

384 
	`•rötf
(
buf1
, "%s.dú_hô†+ %s.mis£s", 
«me
,Çame);

385 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "tŸÆÇumbî o‡upd©es", 
buf1
, "%12.0f");

386 
	`•rötf
(
buf
, "%s.addr_hôs", 
«me
);

387 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofáddress-predicted hits",

388 &
¥ed
->
addr_hôs
, 0, 
NULL
);

389 
	`•rötf
(
buf
, "%s.dú_hôs", 
«me
);

390 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

393 &
¥ed
->
dú_hôs
, 0, 
NULL
);

394 i‡(
¥ed
->
˛ass
 =
BPªdComb
)

396 
	`•rötf
(
buf
, "%s.u£d_bimod", 
«me
);

397 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

399 &
¥ed
->
u£d_bimod
, 0, 
NULL
);

400 
	`•rötf
(
buf
, "%s.u£d_2Àv", 
«me
);

401 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

403 &
¥ed
->
u£d_2Àv
, 0, 
NULL
);

405 
	`•rötf
(
buf
, "%s.mis£s", 
«me
);

406 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
¥ed
->
mis£s
, 0, 
NULL
);

407 
	`•rötf
(
buf
, "%s.jr_hôs", 
«me
);

408 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

410 &
¥ed
->
jr_hôs
, 0, 
NULL
);

411 
	`•rötf
(
buf
, "%s.jr_£í", 
«me
);

412 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

414 &
¥ed
->
jr_£í
, 0, 
NULL
);

415 
	`•rötf
(
buf
, "%s.jr_n⁄_øs_hôs.PP", 
«me
);

416 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

418 &
¥ed
->
jr_n⁄_øs_hôs
, 0, 
NULL
);

419 
	`•rötf
(
buf
, "%s.jr_n⁄_øs_£í.PP", 
«me
);

420 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

422 &
¥ed
->
jr_n⁄_øs_£í
, 0, 
NULL
);

423 
	`•rötf
(
buf
, "%s.b¥ed_addr_øã", 
«me
);

424 
	`•rötf
(
buf1
, "%s.addr_hô†/ %s.upd©es", 
«me
,Çame);

425 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

427 
buf1
, "%9.4f");

428 
	`•rötf
(
buf
, "%s.b¥ed_dú_øã", 
«me
);

429 
	`•rötf
(
buf1
, "%s.dú_hô†/ %s.upd©es", 
«me
,Çame);

430 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

432 
buf1
, "%9.4f");

433 
	`•rötf
(
buf
, "%s.b¥ed_jr_øã", 
«me
);

434 
	`•rötf
(
buf1
, "%s.jr_hô†/ %s.jr_£í", 
«me
,Çame);

435 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

437 
buf1
, "%9.4f");

438 
	`•rötf
(
buf
, "%s.b¥ed_jr_n⁄_øs_øã.PP", 
«me
);

439 
	`•rötf
(
buf1
, "%s.jr_n⁄_øs_hôs.PP / %s.jr_n⁄_øs_£í.PP", 
«me
,Çame);

440 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

442 
buf1
, "%9.4f");

443 
	`•rötf
(
buf
, "%s.ªt°ack_pushes", 
«me
);

444 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

446 &
¥ed
->
ªt°ack_pushes
, 0, 
NULL
);

447 
	`•rötf
(
buf
, "%s.ªt°ack_p›s", 
«me
);

448 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

450 &
¥ed
->
ªt°ack_p›s
, 0, 
NULL
);

451 
	`•rötf
(
buf
, "%s.u£d_øs.PP", 
«me
);

452 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

454 &
¥ed
->
u£d_øs
, 0, 
NULL
);

455 
	`•rötf
(
buf
, "%s.øs_hôs.PP", 
«me
);

456 
	`°©_ªg_cou¡î
(
sdb
, 
buf
,

458 &
¥ed
->
øs_hôs
, 0, 
NULL
);

459 
	`•rötf
(
buf
, "%s.øs_øã.PP", 
«me
);

460 
	`•rötf
(
buf1
, "%s.øs_hôs.PP / %s.u£d_øs.PP", 
«me
,Çame);

461 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
,

463 
buf1
, "%9.4f");

464 
	}
}

467 
	$b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
)

469 i‡(
b¥ed
 =
NULL
)

472 
b¥ed
->
lookups
 = 0;

473 
b¥ed
->
addr_hôs
 = 0;

474 
b¥ed
->
dú_hôs
 = 0;

475 
b¥ed
->
u£d_øs
 = 0;

476 
b¥ed
->
u£d_bimod
 = 0;

477 
b¥ed
->
u£d_2Àv
 = 0;

478 
b¥ed
->
jr_hôs
 = 0;

479 
b¥ed
->
jr_£í
 = 0;

480 
b¥ed
->
mis£s
 = 0;

481 
b¥ed
->
ªt°ack_p›s
 = 0;

482 
b¥ed
->
ªt°ack_pushes
 = 0;

483 
b¥ed
->
øs_hôs
 = 0;

484 
	}
}

486 
	#BIMOD_HASH
(
PRED
, 
ADDR
) \

487 ((((
ADDR
Ë>> 19Ë^ ((ADDRË>> 
MD_BR_SHIFT
)Ë& ((
PRED
)->
c⁄fig
.
bimod
.
size
-1))

	)

492 
	$b¥ed_dú_lookup
(
b¥ed_dú_t
 *
¥ed_dú
,

493 
md_addr_t
 
baddr
)

495 *
p
 = 
NULL
;

498 
¥ed_dú
->
˛ass
) {

499 
BPªd2Levñ
:

501 
l1ödex
, 
l2ödex
;

504 
l1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed_dú
->
c⁄fig
.
two
.
l1size
 - 1);

505 
l2ödex
 = 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
];

506 i‡(
¥ed_dú
->
c⁄fig
.
two
.
x‹
)

513 
l2ödex
 = ((÷2ödex ^ (
baddr
 >> 
MD_BR_SHIFT
))

514 & ((1 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
) - 1))

515 | ((
baddr
 >> 
MD_BR_SHIFT
)

516 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
));

518 
l2ödex
 =Ü2ödex ^ (
baddr
 >> 
MD_BR_SHIFT
);

523 
l2ödex
 =

524 
l2ödex


525 | ((
baddr
 >> 
MD_BR_SHIFT
Ë<< 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
);

527 
l2ödex
 =Ü2ödex & (
¥ed_dú
->
c⁄fig
.
two
.
l2size
 - 1);

530 
p
 = &
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
l2ödex
];

533 
BPªd2bô
:

534 
p
 = &
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
	`BIMOD_HASH
’ªd_dú, 
baddr
)];

536 
BPªdTakí
:

537 
BPªdNŸTakí
:

540 
	`∑nic
("bogus branch directionÖredictor class");

543  (*)
p
;

544 
	}
}

553 
md_addr_t


554 
	$b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

555 
md_addr_t
 
baddr
,

556 
md_addr_t
 
bèrgë
,

557 
md_›code
 
›
,

558 
is_ˇŒ
,

559 
is_ªtu∫
,

560 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

561 *
°ack_ªcovî_idx
)

564 
b¥ed_btb_ít_t
 *
pbtb
 = 
NULL
;

565 
ödex
, 
i
;

567 i‡(!
dú_upd©e_±r
)

568 
	`∑nic
("no bpred updateÑecord");

571 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

574 
¥ed
->
lookups
++;

576 
dú_upd©e_±r
->
dú
.
øs
 = 
FALSE
;

577 
dú_upd©e_±r
->
pdú1
 = 
NULL
;

578 
dú_upd©e_±r
->
pdú2
 = 
NULL
;

579 
dú_upd©e_±r
->
pmëa
 = 
NULL
;

581 
¥ed
->
˛ass
) {

582 
BPªdComb
:

583 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

585 *
bimod
, *
twﬁev
, *
mëa
;

586 
bimod
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.bimod, 
baddr
);

587 
twﬁev
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.twﬁev, 
baddr
);

588 
mëa
 = 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.mëa, 
baddr
);

589 
dú_upd©e_±r
->
pmëa
 = 
mëa
;

590 
dú_upd©e_±r
->
dú
.
mëa
 = (*meta >= 2);

591 
dú_upd©e_±r
->
dú
.
bimod
 = (*bimod >= 2);

592 
dú_upd©e_±r
->
dú
.
twﬁev
 = (*twolev >= 2);

593 i‡(*
mëa
 >= 2)

595 
dú_upd©e_±r
->
pdú1
 = 
twﬁev
;

596 
dú_upd©e_±r
->
pdú2
 = 
bimod
;

600 
dú_upd©e_±r
->
pdú1
 = 
bimod
;

601 
dú_upd©e_±r
->
pdú2
 = 
twﬁev
;

605 
BPªd2Levñ
:

606 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

608 
dú_upd©e_±r
->
pdú1
 =

609 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
);

612 
BPªd2bô
:

613 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

615 
dú_upd©e_±r
->
pdú1
 =

616 
	`b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
);

619 
BPªdTakí
:

620  
bèrgë
;

621 
BPªdNŸTakí
:

622 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND))

624  
baddr
 + (
md_ö°_t
);

628  
bèrgë
;

631 
	`∑nic
("bogusÖredictor class");

642 i‡(
¥ed
->
ªt°ack
.
size
)

643 *
°ack_ªcovî_idx
 = 
¥ed
->
ªt°ack
.
tos
;

645 *
°ack_ªcovî_idx
 = 0;

648 i‡(
is_ªtu∫
 && 
¥ed
->
ªt°ack
.
size
)

650 
md_addr_t
 
èrgë
 = 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].target;

651 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+Öªd->ªt°ack.
size
 - 1)

652 % 
¥ed
->
ªt°ack
.
size
;

653 
¥ed
->
ªt°ack_p›s
++;

654 
dú_upd©e_±r
->
dú
.
øs
 = 
TRUE
;

655  
èrgë
;

658 #i‚de‡
RAS_BUG_COMPATIBLE


660 i‡(
is_ˇŒ
 && 
¥ed
->
ªt°ack
.
size
)

662 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+ 1)%Öªd->ªt°ack.
size
;

663 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
 =

664 
baddr
 + (
md_ö°_t
);

665 
¥ed
->
ªt°ack_pushes
++;

670 
ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

672 i‡(
¥ed
->
btb
.
assoc
 > 1)

674 
ödex
 *
¥ed
->
btb
.
assoc
;

677 
i
 = 
ödex
; i < (ödex+
¥ed
->
btb
.
assoc
) ; i++)

678 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

681 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

687 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

688 i‡(
pbtb
->
addr
 !
baddr
)

689 
pbtb
 = 
NULL
;

697 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) == (F_CTRL|F_UNCOND))

699  (
pbtb
 ?Öbtb->
èrgë
 : 1);

703 i‡(
pbtb
 =
NULL
)

706  ((*(
dú_upd©e_±r
->
pdú1
) >= 2)

713  ((*(
dú_upd©e_±r
->
pdú1
) >= 2)

714 ? 
pbtb
->
èrgë


717 
	}
}

724 
	$b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

725 
md_addr_t
 
baddr
,

726 
°ack_ªcovî_idx
)

729 i‡(
¥ed
 =
NULL
)

732 
¥ed
->
ªt°ack
.
tos
 = 
°ack_ªcovî_idx
;

733 
	}
}

744 
	$b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

745 
md_addr_t
 
baddr
,

746 
md_addr_t
 
bèrgë
,

747 
èkí
,

748 
¥ed_èkí
,

749 
c‹ª˘
,

750 
md_›code
 
›
,

751 
b¥ed_upd©e_t
 *
dú_upd©e_±r
)

753 
b¥ed_btb_ít_t
 *
pbtb
 = 
NULL
;

754 
b¥ed_btb_ít_t
 *
Ãuhód
 = 
NULL
, *
Ãuôem
 = NULL;

755 
ödex
, 
i
;

759 i‡(!(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

764 i‡(
c‹ª˘
)

765 
¥ed
->
addr_hôs
++;

767 i‡(!!
¥ed_èkí
 =!!
èkí
)

768 
¥ed
->
dú_hôs
++;

770 
¥ed
->
mis£s
++;

772 i‡(
dú_upd©e_±r
->
dú
.
øs
)

774 
¥ed
->
u£d_øs
++;

775 i‡(
c‹ª˘
)

776 
¥ed
->
øs_hôs
++;

778 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_COND
)) == (F_CTRL|F_COND))

780 i‡(
dú_upd©e_±r
->
dú
.
mëa
)

781 
¥ed
->
u£d_2Àv
++;

783 
¥ed
->
u£d_bimod
++;

788 i‡(
	`MD_IS_INDIR
(
›
))

790 
¥ed
->
jr_£í
++;

791 i‡(
c‹ª˘
)

792 
¥ed
->
jr_hôs
++;

794 i‡(!
dú_upd©e_±r
->
dú
.
øs
)

796 
¥ed
->
jr_n⁄_øs_£í
++;

797 i‡(
c‹ª˘
)

798 
¥ed
->
jr_n⁄_øs_hôs
++;

808 i‡(
¥ed
->
˛ass
 =
BPªdNŸTakí
 ||Öªd->˛as†=
BPªdTakí
)

816 #ifde‡
RAS_BUG_COMPATIBLE


818 i‡(
	`MD_IS_CALL
(
›
Ë&& 
¥ed
->
ªt°ack
.
size
)

820 
¥ed
->
ªt°ack
.
tos
 = (¥ed->ªt°ack.to†+ 1)%Öªd->ªt°ack.
size
;

821 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
 =

822 
baddr
 + (
md_ö°_t
);

823 
¥ed
->
ªt°ack_pushes
++;

829 i‡((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_UNCOND
)) != (F_CTRL|F_UNCOND) &&

830 (
¥ed
->
˛ass
 =
BPªd2Levñ
 ||Öªd->˛as†=
BPªdComb
))

832 
l1ödex
, 
shi·_ªg
;

835 
l1ödex
 =

836 (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
l1size
 - 1);

837 
shi·_ªg
 =

838 (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] << 1Ë| (!!
èkí
);

839 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] =

840 
shi·_ªg
 & ((1 << 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·_width
) - 1);

844 i‡(
èkí
)

846 
ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

848 i‡(
¥ed
->
btb
.
assoc
 > 1)

850 
ödex
 *
¥ed
->
btb
.
assoc
;

854 
i
 = 
ödex
; i < (ödex+
¥ed
->
btb
.
assoc
) ; i++)

856 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

859 
	`as£π
(!
pbtb
);

860 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

863 
	`das£π
(
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev


864 !
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
);

865 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev
 =
NULL
)

868 
	`das£π
(
Ãuhód
 =
NULL
);

869 
Ãuhód
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

871 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 =
NULL
)

874 
	`das£π
(
Ãuôem
 =
NULL
);

875 
Ãuôem
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

878 
	`das£π
(
Ãuhód
 && 
Ãuôem
);

880 i‡(!
pbtb
)

882 
pbtb
 = 
Ãuôem
;

888 i‡(
pbtb
 !
Ãuhód
)

891 i‡(
pbtb
->
¥ev
)

892 
pbtb
->
¥ev
->
√xt
 =Öbtb->next;

893 i‡(
pbtb
->
√xt
)

894 
pbtb
->
√xt
->
¥ev
 =Öbtb->prev;

896 
pbtb
->
√xt
 = 
Ãuhód
;

897 
pbtb
->
¥ev
 = 
NULL
;

898 
Ãuhód
->
¥ev
 = 
pbtb
;

899 
	`das£π
(
pbtb
->
¥ev
 ||Öbtb->
√xt
);

900 
	`das£π
(
pbtb
->
¥ev
 !pbtb->
√xt
);

905 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

915 i‡(
dú_upd©e_±r
->
pdú1
)

917 i‡(
èkí
)

919 i‡(*
dú_upd©e_±r
->
pdú1
 < 3)

920 ++*
dú_upd©e_±r
->
pdú1
;

924 i‡(*
dú_upd©e_±r
->
pdú1
 > 0)

925 --*
dú_upd©e_±r
->
pdú1
;

931 i‡(
dú_upd©e_±r
->
pdú2
)

933 i‡(
èkí
)

935 i‡(*
dú_upd©e_±r
->
pdú2
 < 3)

936 ++*
dú_upd©e_±r
->
pdú2
;

940 i‡(*
dú_upd©e_±r
->
pdú2
 > 0)

941 --*
dú_upd©e_±r
->
pdú2
;

946 i‡(
dú_upd©e_±r
->
pmëa
)

948 i‡(
dú_upd©e_±r
->
dú
.
bimod
 !dú_upd©e_±r->dú.
twﬁev
)

951 i‡(
dú_upd©e_±r
->
dú
.
twﬁev
 =()
èkí
)

954 i‡(*
dú_upd©e_±r
->
pmëa
 < 3)

955 ++*
dú_upd©e_±r
->
pmëa
;

960 i‡(*
dú_upd©e_±r
->
pmëa
 > 0)

961 --*
dú_upd©e_±r
->
pmëa
;

967 i‡(
pbtb
)

970 
	`das£π
(
èkí
);

972 i‡(
pbtb
->
addr
 =
baddr
)

974 i‡(!
c‹ª˘
)

975 
pbtb
->
èrgë
 = 
bèrgë
;

980 
pbtb
->
addr
 = 
baddr
;

981 
pbtb
->
›
 = op;

982 
pbtb
->
èrgë
 = 
bèrgë
;

985 
	}
}

	@bpred.h

52 #i‚de‡
BPRED_H


53 
	#BPRED_H


	)

55 
	#das£π
(
a
Ë
	`as£π
◊)

	)

57 
	~<°dio.h
>

59 
	~"ho°.h
"

60 
	~"misc.h
"

61 
	~"machöe.h
"

62 
	~"°©s.h
"

101 
	eb¥ed_˛ass
 {

102 
	mBPªdComb
,

103 
	mBPªd2Levñ
,

104 
	mBPªd2bô
,

105 
	mBPªdTakí
,

106 
	mBPªdNŸTakí
,

107 
	mBPªd_NUM


111 
	sb¥ed_btb_ít_t
 {

112 
md_addr_t
 
	maddr
;

113 
md_›code
 
	m›
;

114 
md_addr_t
 
	mèrgë
;

115 
b¥ed_btb_ít_t
 *
	m¥ev
, *
	m√xt
;

119 
	sb¥ed_dú_t
 {

120 
b¥ed_˛ass
 
	m˛ass
;

123 
	msize
;

124 *
	mèbÀ
;

125 } 
	mbimod
;

127 
	ml1size
;

128 
	ml2size
;

129 
	mshi·_width
;

130 
	mx‹
;

131 *
	mshi·ªgs
;

132 *
	ml2èbÀ
;

133 } 
	mtwo
;

134 } 
	mc⁄fig
;

138 
	sb¥ed_t
 {

139 
b¥ed_˛ass
 
	m˛ass
;

141 
b¥ed_dú_t
 *
	mbimod
;

142 
b¥ed_dú_t
 *
	mtwﬁev
;

143 
b¥ed_dú_t
 *
	mmëa
;

144 } 
	mdú¥ed
;

147 
	m£ts
;

148 
	massoc
;

149 
b¥ed_btb_ít_t
 *
	mbtb_d©a
;

150 } 
	mbtb
;

153 
	msize
;

154 
	mtos
;

155 
b¥ed_btb_ít_t
 *
	m°ack
;

156 } 
	mªt°ack
;

159 
cou¡î_t
 
	maddr_hôs
;

160 
cou¡î_t
 
	mdú_hôs
;

161 
cou¡î_t
 
	mu£d_øs
;

162 
cou¡î_t
 
	mu£d_bimod
;

163 
cou¡î_t
 
	mu£d_2Àv
;

164 
cou¡î_t
 
	mjr_hôs
;

165 
cou¡î_t
 
	mjr_£í
;

166 
cou¡î_t
 
	mjr_n⁄_øs_hôs
;

167 
cou¡î_t
 
	mjr_n⁄_øs_£í
;

168 
cou¡î_t
 
	mmis£s
;

170 
cou¡î_t
 
	mlookups
;

171 
cou¡î_t
 
	mªt°ack_p›s
;

172 
cou¡î_t
 
	mªt°ack_pushes
;

173 
cou¡î_t
 
	møs_hôs
;

177 
	sb¥ed_upd©e_t
 {

178 *
	mpdú1
;

179 *
	mpdú2
;

180 *
	mpmëa
;

182 
	møs
 : 1;

183 
	mbimod
 : 1;

184 
	mtwﬁev
 : 1;

185 
	mmëa
 : 1;

186 } 
	mdú
;

190 
b¥ed_t
 *

191 
b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

192 
bimod_size
,

193 
l1size
,

194 
l2size
,

195 
mëa_size
,

196 
shi·_width
,

197 
x‹
,

198 
btb_£ts
,

199 
btb_assoc
,

200 
ªt°ack_size
);

203 
b¥ed_dú_t
 *

204 
b¥ed_dú_¸óã
 (

205 
b¥ed_˛ass
 
˛ass
,

206 
l1size
,

207 
l2size
,

208 
shi·_width
,

209 
x‹
);

213 
b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

214 
FILE
 *
°ªam
);

218 
b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

219 
FILE
 *
°ªam
);

223 
b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

224 
°©_sdb_t
 *
sdb
);

227 
b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
);

236 
md_addr_t


237 
b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

238 
md_addr_t
 
baddr
,

239 
md_addr_t
 
bèrgë
,

240 
md_›code
 
›
,

241 
is_ˇŒ
,

242 
is_ªtu∫
,

243 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

244 *
°ack_ªcovî_idx
);

252 
b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

253 
md_addr_t
 
baddr
,

254 
°ack_ªcovî_idx
);

266 
b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

267 
md_addr_t
 
baddr
,

268 
md_addr_t
 
bèrgë
,

269 
èkí
,

270 
¥ed_èkí
,

271 
c‹ª˘
,

272 
md_›code
 
›
,

273 
b¥ed_upd©e_t
 *
dú_upd©e_±r
);

276 #ifde‡
foo0


280 
b¥ed_dump
(
b¥ed_t
 *
¥ed
,

281 
FILE
 *
°ªam
);

	@cache.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<as£π.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ˇche.h
"

62 
	#CACHE_TAG
(
˝
, 
addr
Ë(◊ddrË>> (˝)->
èg_shi·
)

	)

63 
	#CACHE_SET
(
˝
, 
addr
Ë((◊ddrË>> (˝)->
£t_shi·
Ë& (˝)->
£t_mask
)

	)

64 
	#CACHE_BLK
(
˝
, 
addr
Ë(◊ddrË& (˝)->
blk_mask
)

	)

65 
	#CACHE_TAGSET
(
˝
, 
addr
Ë(◊ddrË& (˝)->
èg£t_mask
)

	)

68 
	#CACHE_BADDR
(
˝
, 
addr
Ë(◊ddrË& ~(˝)->
blk_mask
)

	)

69 
	#CACHE_MK_BADDR
(
˝
, 
èg
, 
£t
) \

70 (((
èg
Ë<< (
˝
)->
èg_shi·
)|((
£t
Ë<< (˝)->
£t_shi·
))

	)

73 
	#CACHE_BINDEX
(
˝
, 
blks
, 
i
) \

74 ((
ˇche_blk_t
 *)(((*)(
blks
)) + \

75 (
i
)*((
ˇche_blk_t
) + \

76 ((
˝
)->
bÆloc
 \

77 ? (
˝
)->
bsize
*(
byã_t
Ë: 0))))

	)

80 
	#__CACHE_ACCESS
(
ty≥
, 
d©a
, 
bofs
) \

81 (*((
ty≥
 *)(((*)
d©a
Ë+ (
bofs
))))

	)

84 
	#CACHE_DOUBLE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

85 
	#CACHE_FLOAT
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

86 
	#CACHE_WORD
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

87 
	#CACHE_HALF
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

88 
	#CACHE_BYTE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

93 
	#CACHE_HASH
(
˝
, 
key
) \

94 (((
key
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
˝
)->
hsize
-1))

	)

97 
	#CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
) \

98 i‡(
cmd
 =
Ród
) \

100 
nbyãs
) { \

102 *((
byã_t
 *)
p
Ë
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
); ; \

104 *((
hÆf_t
 *)
p
Ë
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
); ; \

106 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); ; \

109 
w‹ds
 = 
nbyãs
 >> 2; \

110 
w‹ds
-- > 0) \

112 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); \

113 
p
 +4; 
bofs
 += 4; \

120 
nbyãs
) { \

122 
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
Ë*((
byã_t
 *)
p
); ; \

124 
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

126 
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

129 
w‹ds
 = 
nbyãs
 >> 2; \

130 
w‹ds
-- > 0) \

132 
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); \

133 
p
 +4; 
bofs
 += 4; \

137 }

	)

140 
	#BOUND_POS
(
N
Ë(()(
	`MIN
(
	`MAX
(0, (N)), 2147483647)))

	)

144 
	$u∆ök_hèb_ít
(
ˇche_t
 *
˝
,

145 
ˇche_£t_t
 *
£t
,

146 
ˇche_blk_t
 *
blk
)

148 
ˇche_blk_t
 *
¥ev
, *
ít
;

149 
ödex
 = 
	`CACHE_HASH
(
˝
, 
blk
->
èg
);

152 
¥ev
=
NULL
,
ít
=
£t
->
hash
[
ödex
];

153 
ít
;

154 
¥ev
=
ít
,ítÛ¡->
hash_√xt
)

156 i‡(
ít
 =
blk
)

159 
	`as£π
(
ít
);

162 i‡(!
¥ev
)

165 
£t
->
hash
[
ödex
] = 
ít
->
hash_√xt
;

170 
¥ev
->
hash_√xt
 = 
ít
->hash_next;

172 
ít
->
hash_√xt
 = 
NULL
;

173 
	}
}

177 
	$lök_hèb_ít
(
ˇche_t
 *
˝
,

178 
ˇche_£t_t
 *
£t
,

179 
ˇche_blk_t
 *
blk
)

181 
ödex
 = 
	`CACHE_HASH
(
˝
, 
blk
->
èg
);

184 
blk
->
hash_√xt
 = 
£t
->
hash
[
ödex
];

185 
£t
->
hash
[
ödex
] = 
blk
;

186 
	}
}

189 
	eli°_loc_t
 { 
	mHód
, 
	mTaû
 };

193 
	$upd©e_way_li°
(
ˇche_£t_t
 *
£t
,

194 
ˇche_blk_t
 *
blk
,

195 
li°_loc_t
 
whîe
)

198 i‡(!
blk
->
way_¥ev
 && !blk->
way_√xt
)

201 
	`as£π
(
£t
->
way_hód
 =
blk
 && së->
way_èû
 == blk);

206 i‡(!
blk
->
way_¥ev
)

208 
	`as£π
(
£t
->
way_hód
 =
blk
 && së->
way_èû
 != blk);

209 i‡(
whîe
 =
Hód
)

215 
£t
->
way_hód
 = 
blk
->
way_√xt
;

216 
blk
->
way_√xt
->
way_¥ev
 = 
NULL
;

218 i‡(!
blk
->
way_√xt
)

221 
	`as£π
(
£t
->
way_hód
 !
blk
 && së->
way_èû
 == blk);

222 i‡(
whîe
 =
Taû
)

227 
£t
->
way_èû
 = 
blk
->
way_¥ev
;

228 
blk
->
way_¥ev
->
way_√xt
 = 
NULL
;

233 
	`as£π
(
£t
->
way_hód
 !
blk
 && së->
way_èû
 != blk);

234 
blk
->
way_¥ev
->
way_√xt
 = blk->way_next;

235 
blk
->
way_√xt
->
way_¥ev
 = blk->way_prev;

239 i‡(
whîe
 =
Hód
)

242 
blk
->
way_√xt
 = 
£t
->
way_hód
;

243 
blk
->
way_¥ev
 = 
NULL
;

244 
£t
->
way_hód
->
way_¥ev
 = 
blk
;

245 
£t
->
way_hód
 = 
blk
;

247 i‡(
whîe
 =
Taû
)

250 
blk
->
way_¥ev
 = 
£t
->
way_èû
;

251 
blk
->
way_√xt
 = 
NULL
;

252 
£t
->
way_èû
->
way_√xt
 = 
blk
;

253 
£t
->
way_èû
 = 
blk
;

256 
	`∑nic
("bogus WHERE designator");

257 
	}
}

260 
ˇche_t
 *

261 
ˇche_¸óã
(*
«me
,

262 
n£ts
,

263 
bsize
,

264 
bÆloc
,

265 
usize
,

266 
assoc
,

267 
ˇche_pﬁicy
 
pﬁicy
,

269 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

270 
md_addr_t
 
baddr
, 
bsize
,

271 
ˇche_blk_t
 *
blk
,

272 
tick_t
 
now
),

273 
hô_œãncy
)

275 
ˇche_t
 *
˝
;

276 
ˇche_blk_t
 *
blk
;

277 
i
, 
j
, 
bödex
;

280 i‡(
n£ts
 <= 0)

281 
	`Áèl
("ˇchêsizê(ö sësË`%d' mu° bên⁄-zîo", 
n£ts
);

282 i‡((
n£ts
 & (nsets-1)) != 0)

283 
	`Áèl
("ˇchêsizê(ö sësË`%d' i†nŸáÖowî o‡two", 
n£ts
);

285 i‡(
bsize
 < 8)

286 
	`Áèl
("ˇchêblock sizê(ö byãsË`%d' mu° bê8 o∏gª©î", 
bsize
);

287 i‡((
bsize
 & (bsize-1)) != 0)

288 
	`Áèl
("ˇchêblock sizê(ö byãsË`%d' mu° bê®powî o‡two", 
bsize
);

289 i‡(
usize
 < 0)

290 
	`Áèl
("u£∏d©®sizê(ö byãsË`%d' mu° bê®posôivêvÆue", 
usize
);

291 i‡(
assoc
 <= 0)

292 
	`Áèl
("ˇchêassocütivôy `%d' mu° bên⁄-zîÿ™dÖosôive", 
assoc
);

293 i‡((
assoc
 & (assoc-1)) != 0)

294 
	`Áèl
("ˇchêassocütivôy `%d' mu° bê®powî o‡two", 
assoc
);

295 i‡(!
blk_ac˚ss_‚
)

296 
	`Áèl
("must specify miss/replacement functions");

299 
˝
 = (
ˇche_t
 *)

300 
	`ˇŒoc
(1, (
ˇche_t
Ë+ (
n£ts
-1)*(
ˇche_£t_t
));

301 i‡(!
˝
)

302 
	`Áèl
("out of virtual memory");

305 
˝
->
«me
 = 
	`my°rdup
(name);

306 
˝
->
n£ts
 =Çsets;

307 
˝
->
bsize
 = bsize;

308 
˝
->
bÆloc
 = balloc;

309 
˝
->
usize
 = usize;

310 
˝
->
assoc
 =ássoc;

311 
˝
->
pﬁicy
 =Öolicy;

312 
˝
->
hô_œãncy
 = hit_latency;

315 
˝
->
blk_ac˚ss_‚
 = blk_access_fn;

318 
˝
->
hsize
 = 
	`CACHE_HIGHLY_ASSOC
(˝Ë? (
assoc
 >> 2) : 0;

319 
˝
->
blk_mask
 = 
bsize
-1;

320 
˝
->
£t_shi·
 = 
	`log_ba£2
(
bsize
);

321 
˝
->
£t_mask
 = 
n£ts
-1;

322 
˝
->
èg_shi·
 = cp->
£t_shi·
 + 
	`log_ba£2
(
n£ts
);

323 
˝
->
èg_mask
 = (1 << (32 - cp->
èg_shi·
))-1;

324 
˝
->
èg£t_mask
 = ~˝->
blk_mask
;

325 
˝
->
bus_‰ì
 = 0;

328 
	`debug
("%s: cp->hsizê = %d", 
˝
->
«me
, cp->
hsize
);

329 
	`debug
("%s: cp->blk_mask = 0x%08x", 
˝
->
«me
, cp->
blk_mask
);

330 
	`debug
("%s: cp->£t_shi· = %d", 
˝
->
«me
, cp->
£t_shi·
);

331 
	`debug
("%s: cp->£t_mask = 0x%08x", 
˝
->
«me
, cp->
£t_mask
);

332 
	`debug
("%s: cp->èg_shi· = %d", 
˝
->
«me
, cp->
èg_shi·
);

333 
	`debug
("%s: cp->èg_mask = 0x%08x", 
˝
->
«me
, cp->
èg_mask
);

336 
˝
->
hôs
 = 0;

337 
˝
->
mis£s
 = 0;

338 
˝
->
ª∂a˚míts
 = 0;

339 
˝
->
wrôebacks
 = 0;

340 
˝
->
övÆid©i⁄s
 = 0;

343 
˝
->
œ°_èg£t
 = 0;

344 
˝
->
œ°_blk
 = 
NULL
;

347 
˝
->
d©a
 = (
byã_t
 *)
	`ˇŒoc
(
n£ts
 * 
assoc
,

348 (
ˇche_blk_t
) +

349 (
˝
->
bÆloc
 ? (
bsize
*(
byã_t
)) : 0));

350 i‡(!
˝
->
d©a
)

351 
	`Áèl
("out of virtual memory");

354 
bödex
=0,
i
=0; i<
n£ts
; i++)

356 
˝
->
£ts
[
i
].
way_hód
 = 
NULL
;

357 
˝
->
£ts
[
i
].
way_èû
 = 
NULL
;

359 i‡(
˝
->
hsize
)

361 
˝
->
£ts
[
i
].
hash
 =

362 (
ˇche_blk_t
 **)
	`ˇŒoc
(
˝
->
hsize
,

363 (
ˇche_blk_t
 *));

364 i‡(!
˝
->
£ts
[
i
].
hash
)

365 
	`Áèl
("out of virtual memory");

370 
˝
->
£ts
[
i
].
blks
 = 
	`CACHE_BINDEX
(˝, cp->
d©a
, 
bödex
);

374 
j
=0; j<
assoc
; j++)

377 
blk
 = 
	`CACHE_BINDEX
(
˝
, cp->
d©a
, 
bödex
);

378 
bödex
++;

381 
blk
->
°©us
 = 0;

382 
blk
->
èg
 = 0;

383 
blk
->
ªady
 = 0;

384 
blk
->
u£r_d©a
 = (
usize
 != 0

385 ? (
byã_t
 *)
	`ˇŒoc
(
usize
, (byã_t)Ë: 
NULL
);

388 i‡(
˝
->
hsize
)

389 
	`lök_hèb_ít
(
˝
, &˝->
£ts
[
i
], 
blk
);

392 
blk
->
way_√xt
 = 
˝
->
£ts
[
i
].
way_hód
;

393 
blk
->
way_¥ev
 = 
NULL
;

394 i‡(
˝
->
£ts
[
i
].
way_hód
)

395 
˝
->
£ts
[
i
].
way_hód
->
way_¥ev
 = 
blk
;

396 
˝
->
£ts
[
i
].
way_hód
 = 
blk
;

397 i‡(!
˝
->
£ts
[
i
].
way_èû
)

398 
˝
->
£ts
[
i
].
way_èû
 = 
blk
;

401  
˝
;

402 
	}
}

405 
ˇche_pﬁicy


406 
	$ˇche_ch¨2pﬁicy
(
c
)

408 
c
) {

409 'l':  
LRU
;

410 'r':  
R™dom
;

411 'f':  
FIFO
;

412 : 
	`Áèl
("bogu†ª∂a˚míàpﬁicy, `%c'", 
c
);

414 
	}
}

418 
	$ˇche_c⁄fig
(
ˇche_t
 *
˝
,

419 
FILE
 *
°ªam
)

421 
	`Ârötf
(
°ªam
,

423 
˝
->
«me
, cp->
n£ts
, cp->
bsize
, cp->
usize
);

424 
	`Ârötf
(
°ªam
,

426 
˝
->
«me
, cp->
assoc
,

427 
˝
->
pﬁicy
 =
LRU
 ? "LRU"

428 : 
˝
->
pﬁicy
 =
R™dom
 ? "Random"

429 : 
˝
->
pﬁicy
 =
FIFO
 ? "FIFO"

430 : (
	`ab‹t
(), ""));

431 
	}
}

435 
	$ˇche_ªg_°©s
(
ˇche_t
 *
˝
,

436 
°©_sdb_t
 *
sdb
)

438 
buf
[512], 
buf1
[512], *
«me
;

441 i‡(!
˝
->
«me
 || !cp->name[0])

442 
«me
 = "<unknown>";

444 
«me
 = 
˝
->name;

446 
	`•rötf
(
buf
, "%s.ac˚s£s", 
«me
);

447 
	`•rötf
(
buf1
, "%s.hô†+ %s.mis£s", 
«me
,Çame);

448 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "tŸÆÇumbî o‡ac˚s£s", 
buf1
, "%12.0f");

449 
	`•rötf
(
buf
, "%s.hôs", 
«me
);

450 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡hôs", &
˝
->
hôs
, 0, 
NULL
);

451 
	`•rötf
(
buf
, "%s.mis£s", 
«me
);

452 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
˝
->
mis£s
, 0, 
NULL
);

453 
	`•rötf
(
buf
, "%s.ª∂a˚míts", 
«me
);

454 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÑeplacements",

455 &
˝
->
ª∂a˚míts
, 0, 
NULL
);

456 
	`•rötf
(
buf
, "%s.wrôebacks", 
«me
);

457 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of writebacks",

458 &
˝
->
wrôebacks
, 0, 
NULL
);

459 
	`•rötf
(
buf
, "%s.övÆid©i⁄s", 
«me
);

460 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber of invalidations",

461 &
˝
->
övÆid©i⁄s
, 0, 
NULL
);

462 
	`•rötf
(
buf
, "%s.miss_øã", 
«me
);

463 
	`•rötf
(
buf1
, "%s.mis£†/ %s.ac˚s£s", 
«me
,Çame);

464 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "mis†øã (i.e., mis£s/ªf)", 
buf1
, 
NULL
);

465 
	`•rötf
(
buf
, "%s.ª∂_øã", 
«me
);

466 
	`•rötf
(
buf1
, "%s.ª∂a˚mít†/ %s.ac˚s£s", 
«me
,Çame);

467 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "ª∂a˚míàøã (i.e.,Ñïls/ªf)", 
buf1
, 
NULL
);

468 
	`•rötf
(
buf
, "%s.wb_øã", 
«me
);

469 
	`•rötf
(
buf1
, "%s.wrôeback†/ %s.ac˚s£s", 
«me
,Çame);

470 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "wrôebackÑ©ê(i.e., wrbks/ªf)", 
buf1
, 
NULL
);

471 
	`•rötf
(
buf
, "%s.öv_øã", 
«me
);

472 
	`•rötf
(
buf1
, "%s.övÆid©i⁄†/ %s.ac˚s£s", 
«me
,Çame);

473 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "övÆid©i⁄Ñ©ê(i.e., invs/ªf)", 
buf1
, 
NULL
);

474 
	}
}

478 
	$ˇche_°©s
(
ˇche_t
 *
˝
,

479 
FILE
 *
°ªam
)

481 
sum
 = ()(
˝
->
hôs
 + cp->
mis£s
);

483 
	`Ârötf
(
°ªam
,

485 
˝
->
«me
, ()˝->
hôs
, ()˝->
mis£s
,

486 ()
˝
->
ª∂a˚míts
, ()˝->
övÆid©i⁄s
);

487 
	`Ârötf
(
°ªam
,

489 
˝
->
«me
,

490 ()
˝
->
mis£s
/
sum
, ()()˝->
ª∂a˚míts
/sum,

491 ()
˝
->
övÆid©i⁄s
/
sum
);

492 
	}
}

500 
	$ˇche_ac˚ss
(
ˇche_t
 *
˝
,

501 
mem_cmd
 
cmd
,

502 
md_addr_t
 
addr
,

503 *
vp
,

504 
nbyãs
,

505 
tick_t
 
now
,

506 
byã_t
 **
ud©a
,

507 
md_addr_t
 *
ª∂_addr
)

509 
byã_t
 *
p
 = 
vp
;

510 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

511 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

512 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
(
˝
, 
addr
);

513 
ˇche_blk_t
 *
blk
, *
ª∂
;

514 
œt
 = 0;

517 i‡(
ª∂_addr
)

518 *
ª∂_addr
 = 0;

521 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

522 
	`Áèl
("ˇche:ác˚s†îr‹: bad sizê‹álignmít,ádd∏0x%08x", 
addr
);

527 i‡((
addr
 + 
nbyãs
Ë> (◊dd∏& ~
˝
->
blk_mask
Ë+ cp->
bsize
))

528 
	`Áèl
("ˇche:ác˚s†îr‹:ác˚s†•™†block,ádd∏0x%08x", 
addr
);

533 i‡(
	`CACHE_TAGSET
(
˝
, 
addr
Ë=˝->
œ°_èg£t
)

536 
blk
 = 
˝
->
œ°_blk
;

537 
ˇche_Á°_hô
;

540 i‡(
˝
->
hsize
)

543 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

545 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

546 
blk
;

547 
blk
=blk->
hash_√xt
)

549 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

550 
ˇche_hô
;

556 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

557 
blk
;

558 
blk
=blk->
way_√xt
)

560 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

561 
ˇche_hô
;

568 
˝
->
mis£s
++;

572 
˝
->
pﬁicy
) {

573 
LRU
:

574 
FIFO
:

575 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

576 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
);

578 
R™dom
:

580 
bödex
 = 
	`myønd
(Ë& (
˝
->
assoc
 - 1);

581 
ª∂
 = 
	`CACHE_BINDEX
(
˝
, cp->
£ts
[
£t
].
blks
, 
bödex
);

585 
	`∑nic
("bogusÑeplacementÖolicy");

589 i‡(
˝
->
hsize
)

590 
	`u∆ök_hèb_ít
(
˝
, &˝->
£ts
[
£t
], 
ª∂
);

593 
˝
->
œ°_èg£t
 = 0;

594 
˝
->
œ°_blk
 = 
NULL
;

597 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

599 
˝
->
ª∂a˚míts
++;

601 i‡(
ª∂_addr
)

602 *
ª∂_addr
 = 
	`CACHE_MK_BADDR
(
˝
, 
ª∂
->
èg
, 
£t
);

605 
œt
 +
	`BOUND_POS
(
ª∂
->
ªady
 - 
now
);

608 
œt
 +
	`BOUND_POS
(
˝
->
bus_‰ì
 - (
now
 +Üat));

611 
˝
->
bus_‰ì
 = 
	`MAX
(˝->bus_‰ì, (
now
 + 
œt
)) + 1;

613 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

616 
˝
->
wrôebacks
++;

617 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

618 
	`CACHE_MK_BADDR
(
˝
, 
ª∂
->
èg
, 
£t
),

619 
˝
->
bsize
, 
ª∂
, 
now
+
œt
);

624 
ª∂
->
èg
 =Åag;

625 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

628 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Ród
, 
	`CACHE_BADDR
(˝, 
addr
), cp->
bsize
,

629 
ª∂
, 
now
+
œt
);

632 i‡(
˝
->
bÆloc
)

634 
	`CACHE_BCOPY
(
cmd
, 
ª∂
, 
bofs
, 
p
, 
nbyãs
);

638 i‡(
cmd
 =
Wrôe
)

639 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

642 i‡(
ud©a
)

643 *
ud©a
 = 
ª∂
->
u£r_d©a
;

646 
ª∂
->
ªady
 = 
now
+
œt
;

649 i‡(
˝
->
hsize
)

650 
	`lök_hèb_ít
(
˝
, &˝->
£ts
[
£t
], 
ª∂
);

653  
œt
;

656 
ˇche_hô
:

659 
˝
->
hôs
++;

662 i‡(
˝
->
bÆloc
)

664 
	`CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

668 i‡(
cmd
 =
Wrôe
)

669 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

672 i‡(
blk
->
way_¥ev
 && 
˝
->
pﬁicy
 =
LRU
)

675 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

681 
˝
->
œ°_èg£t
 = 
	`CACHE_TAGSET
(˝, 
addr
);

682 
˝
->
œ°_blk
 = 
blk
;

685 i‡(
ud©a
)

686 *
ud©a
 = 
blk
->
u£r_d©a
;

689  (Ë
	`MAX
(
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

691 
ˇche_Á°_hô
:

694 
˝
->
hôs
++;

697 i‡(
˝
->
bÆloc
)

699 
	`CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

703 i‡(
cmd
 =
Wrôe
)

704 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

711 i‡(
ud©a
)

712 *
ud©a
 = 
blk
->
u£r_d©a
;

715 
˝
->
œ°_èg£t
 = 
	`CACHE_TAGSET
(˝, 
addr
);

716 
˝
->
œ°_blk
 = 
blk
;

719  (Ë
	`MAX
(
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

720 
	}
}

726 
	$ˇche_¥obe
(
ˇche_t
 *
˝
,

727 
md_addr_t
 
addr
)

729 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

730 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

731 
ˇche_blk_t
 *
blk
;

735 i‡(
˝
->
hsize
)

738 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

740 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

741 
blk
;

742 
blk
=blk->
hash_√xt
)

744 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

745  
TRUE
;

751 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

752 
blk
;

753 
blk
=blk->
way_√xt
)

755 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

756  
TRUE
;

761  
FALSE
;

762 
	}
}

766 
	$ˇche_Êush
(
ˇche_t
 *
˝
,

767 
tick_t
 
now
)

769 
i
, 
œt
 = 
˝
->
hô_œãncy
;

770 
ˇche_blk_t
 *
blk
;

773 
˝
->
œ°_èg£t
 = 0;

774 
˝
->
œ°_blk
 = 
NULL
;

777 
i
=0; i<
˝
->
n£ts
; i++)

779 
blk
=
˝
->
£ts
[
i
].
way_hód
; blk; blk=blk->
way_√xt
)

781 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

783 
˝
->
övÆid©i⁄s
++;

784 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

786 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

789 
˝
->
wrôebacks
++;

790 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

791 
	`CACHE_MK_BADDR
(
˝
, 
blk
->
èg
, 
i
),

792 
˝
->
bsize
, 
blk
, 
now
+
œt
);

799  
œt
;

800 
	}
}

805 
	$ˇche_Êush_addr
(
ˇche_t
 *
˝
,

806 
md_addr_t
 
addr
,

807 
tick_t
 
now
)

809 
md_addr_t
 
èg
 = 
	`CACHE_TAG
(
˝
, 
addr
);

810 
md_addr_t
 
£t
 = 
	`CACHE_SET
(
˝
, 
addr
);

811 
ˇche_blk_t
 *
blk
;

812 
œt
 = 
˝
->
hô_œãncy
;

814 i‡(
˝
->
hsize
)

817 
hödex
 = 
	`CACHE_HASH
(
˝
, 
èg
);

819 
blk
=
˝
->
£ts
[
£t
].
hash
[
hödex
];

820 
blk
;

821 
blk
=blk->
hash_√xt
)

823 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

830 
blk
=
˝
->
£ts
[
£t
].
way_hód
;

831 
blk
;

832 
blk
=blk->
way_√xt
)

834 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

839 i‡(
blk
)

841 
˝
->
övÆid©i⁄s
++;

842 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

845 
˝
->
œ°_èg£t
 = 0;

846 
˝
->
œ°_blk
 = 
NULL
;

848 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

851 
˝
->
wrôebacks
++;

852 
œt
 +
˝
->
	`blk_ac˚ss_‚
(
Wrôe
,

853 
	`CACHE_MK_BADDR
(
˝
, 
blk
->
èg
, 
£t
),

854 
˝
->
bsize
, 
blk
, 
now
+
œt
);

857 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Taû
);

861  
œt
;

862 
	}
}

	@cache.h

52 #i‚de‡
CACHE_H


53 
	#CACHE_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"mem‹y.h
"

61 
	~"°©s.h
"

99 
	#CACHE_HIGHLY_ASSOC
(
˝
Ë((˝)->
assoc
 > 4)

	)

102 
	eˇche_pﬁicy
 {

103 
	mLRU
,

104 
	mR™dom
,

105 
	mFIFO


109 
	#CACHE_BLK_VALID
 0x00000001

	)

110 
	#CACHE_BLK_DIRTY
 0x00000002

	)

113 
	sˇche_blk_t


115 
ˇche_blk_t
 *
	mway_√xt
;

117 
ˇche_blk_t
 *
	mway_¥ev
;

118 
ˇche_blk_t
 *
	mhash_√xt
;

122 
md_addr_t
 
	mèg
;

123 
	m°©us
;

124 
tick_t
 
	mªady
;

126 
byã_t
 *
	mu£r_d©a
;

131 
byã_t
 
	md©a
[1];

136 
	sˇche_£t_t


138 
ˇche_blk_t
 **
	mhash
;

140 
ˇche_blk_t
 *
	mway_hód
;

141 
ˇche_blk_t
 *
	mway_èû
;

142 
ˇche_blk_t
 *
	mblks
;

148 
	sˇche_t


151 *
	m«me
;

152 
	mn£ts
;

153 
	mbsize
;

154 
	mbÆloc
;

155 
	musize
;

156 
	massoc
;

157 
ˇche_pﬁicy
 
	mpﬁicy
;

158 
	mhô_œãncy
;

170 (*
	mblk_ac˚ss_‚
)(
mem_cmd
 
	mcmd
,

171 
md_addr_t
 
	mbaddr
,

172 
	mbsize
,

173 
ˇche_blk_t
 *
	mblk
,

174 
tick_t
 
	mnow
);

177 
	mhsize
;

178 
md_addr_t
 
	mblk_mask
;

179 
	m£t_shi·
;

180 
md_addr_t
 
	m£t_mask
;

181 
	mèg_shi·
;

182 
md_addr_t
 
	mèg_mask
;

183 
md_addr_t
 
	mèg£t_mask
;

186 
tick_t
 
	mbus_‰ì
;

196 
cou¡î_t
 
	mhôs
;

197 
cou¡î_t
 
	mmis£s
;

198 
cou¡î_t
 
	mª∂a˚míts
;

199 
cou¡î_t
 
	mwrôebacks
;

200 
cou¡î_t
 
	mövÆid©i⁄s
;

203 
md_addr_t
 
	mœ°_èg£t
;

204 
ˇche_blk_t
 *
	mœ°_blk
;

207 
byã_t
 *
	md©a
;

211 
ˇche_£t_t
 
	m£ts
[1];

215 
ˇche_t
 *

216 
ˇche_¸óã
(*
«me
,

217 
n£ts
,

218 
bsize
,

219 
bÆloc
,

220 
usize
,

221 
assoc
,

222 
ˇche_pﬁicy
 
pﬁicy
,

224 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

225 
md_addr_t
 
baddr
, 
bsize
,

226 
ˇche_blk_t
 *
blk
,

227 
tick_t
 
now
),

228 
hô_œãncy
);

231 
ˇche_pﬁicy


232 
	`ˇche_ch¨2pﬁicy
(
c
);

236 
	`ˇche_c⁄fig
(
ˇche_t
 *
˝
,

237 
FILE
 *
°ªam
);

241 
	`ˇche_ªg_°©s
(
ˇche_t
 *
˝
,

242 
°©_sdb_t
 *
sdb
);

246 
	`ˇche_°©s
(
ˇche_t
 *
˝
,

247 
FILE
 *
°ªam
);

250 
	`ˇche_°©s
(
ˇche_t
 *
˝
, 
FILE
 *
°ªam
);

258 
	`ˇche_ac˚ss
(
ˇche_t
 *
˝
,

259 
mem_cmd
 
cmd
,

260 
md_addr_t
 
addr
,

261 *
vp
,

262 
nbyãs
,

263 
tick_t
 
now
,

264 
byã_t
 **
ud©a
,

265 
md_addr_t
 *
ª∂_addr
);

269 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

270 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

271 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

272 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

273 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

274 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

275 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

276 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

277 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

278 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

279 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
) \

280 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

	)

286 
	`ˇche_¥obe
(
ˇche_t
 *
˝
,

287 
md_addr_t
 
addr
);

291 
	`ˇche_Êush
(
ˇche_t
 *
˝
,

292 
tick_t
 
now
);

297 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

298 
md_addr_t
 
addr
,

299 
tick_t
 
now
);

	@config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@dlite.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<˘y≥.h
>

56 
	~<î∫o.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"vîsi⁄.h
"

62 
	~"evÆ.h
"

63 
	~"ªgs.h
"

64 
	~"mem‹y.h
"

65 
	~"sim.h
"

66 
	~"symbﬁ.h
"

67 
	~"lﬂdî.h
"

68 
	~"›ti⁄s.h
"

69 
	~"°©s.h
"

70 
	~"ønge.h
"

71 
	~"dlôe.h
"

74 
dlôe_ªg_obj_t
 
	gf_dlôe_ªg_obj
 = 
NULL
;

75 
dlôe_mem_obj_t
 
	gf_dlôe_mem_obj
 = 
NULL
;

76 
dlôe_m°©e_obj_t
 
	gf_dlôe_m°©e_obj
 = 
NULL
;

79 
	gdlôe_a˘ive
 = 
FALSE
;

82 
	gdlôe_check
 = 
FALSE
;

85 
	gdlôe_ªtu∫
 = 
FALSE
;

88 
	#MOD_BYTE
 0x0001

	)

89 
	#MOD_HALF
 0x0002

	)

90 
	#MOD_WORD
 0x0004

	)

91 
	#MOD_QWORD
 0x0008

	)

92 
	#MOD_FLOAT
 0x0010

	)

93 
	#MOD_DOUBLE
 0x0020

	)

94 
	#MOD_CHAR
 0x0040

	)

95 
	#MOD_STRING
 0x0080

	)

97 
	#MOD_SIZES
 \

98 (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
 \

99 |
MOD_FLOAT
|
MOD_DOUBLE
|
MOD_CHAR
|
MOD_STRING
)

	)

102 
	#MOD_DECIMAL
 0x0100

	)

103 
	#MOD_UNSIGNED
 0x0200

	)

104 
	#MOD_OCTAL
 0x0400

	)

105 
	#MOD_HEX
 0x0800

	)

106 
	#MOD_BINARY
 0x1000

	)

108 
	#MOD_FORMATS
 \

109 (
MOD_DECIMAL
|
MOD_UNSIGNED
|
MOD_OCTAL
|
MOD_HEX
|
MOD_BINARY
)

	)

114 
	$modifõr_∑r£r
(*
p
,

115 **
ídp
,

116 *
pmod
)

118 
modifõrs
 = 0;

121 *
pmod
 = 0;

124 i‡(*
p
 == '/')

126 
p
++;

128 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

130 *
p
)

133 
modifõrs
 |
MOD_BYTE
;

136 
modifõrs
 |
MOD_HALF
;

139 
modifõrs
 |
MOD_WORD
;

142 
modifõrs
 |
MOD_QWORD
;

145 
modifõrs
 |
MOD_DECIMAL
;

148 
modifõrs
 |
MOD_UNSIGNED
;

151 
modifõrs
 |
MOD_OCTAL
;

154 
modifõrs
 |
MOD_HEX
;

157 
modifõrs
 |
MOD_BINARY
;

160 
modifõrs
 |
MOD_FLOAT
;

163 
modifõrs
 |
MOD_DOUBLE
;

166 
modifõrs
 |
MOD_CHAR
;

169 
modifõrs
 |
MOD_STRING
;

174 
p
++;

179 *
ídp
 = 
p
;

180 *
pmod
 = 
modifõrs
;

181  
NULL
;

182 
	}
}

185 
evÆ_°©e_t
 *
	gdlôe_evÆu©‹
 = 
NULL
;

186 
ªgs_t
 *
	gloˇl_ªgs
 = 
NULL
;

191 
evÆ_vÆue_t


192 
	$idít_evÆu©‹
(
evÆ_°©e_t
 *
es
)

194 
i
;

195 *
îr_°r
;

196 
evÆ_vÆue_t
 
vÆ
;

197 
°©_°©_t
 *
°©
;

198 
sym_sym_t
 *
sym
;

199 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

202 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

204 i‡(!
	`my°ricmp
(
es
->
tok_buf
, 
md_ªg_«mes
[
i
].
°r
))

206 
îr_°r
 =

207 
	`f_dlôe_ªg_obj
(
loˇl_ªgs
, 
FALSE
,

208 
md_ªg_«mes
[
i
].
fûe
, md_ªg_«mes[i].
ªg
, &
vÆ
);

209 i‡(
îr_°r
)

211 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

212 
vÆ
 = 
îr_vÆue
;

214  
vÆ
;

219 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
TRUE
);

220 
sym
 = 
	`sym_böd_«me
(
es
->
tok_buf
, 
NULL
, 
sdb_™y
);

221 i‡(
sym
)

224 
vÆ
.
ty≥
 = 
ë_addr
;

225 
vÆ
.
vÆue
.
as_addr
 = 
sym
->
addr
;

226  
vÆ
;

230 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
es
->
tok_buf
);

231 i‡(
°©
)

234 
°©
->
sc
)

236 
sc_öt
:

237 
vÆ
.
ty≥
 = 
ë_öt
;

238 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

240 
sc_uöt
:

241 
vÆ
.
ty≥
 = 
ë_uöt
;

242 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

244 #ifde‡
HOST_HAS_QWORD


245 
sc_qw‹d
:

246 
vÆ
.
ty≥
 = 
ë_qw‹d
;

247 
vÆ
.
vÆue
.
as_qw‹d
 = *
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

250 
sc_Êﬂt
:

251 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

252 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

254 
sc_doubÀ
:

255 
vÆ
.
ty≥
 = 
ë_doubÀ
;

256 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

258 
sc_di°
:

259 
sc_sdi°
:

260 
evÆ_îr‹
 = 
ERR_BADEXPR
;

261 
vÆ
 = 
îr_vÆue
;

263 
sc_f‹muœ
:

266 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
sim_sdb
);

267 *
ídp
;

269 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

270 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

273 
vÆ
 = 
îr_vÆue
;

276 
	`evÆ_dñëe
(
es
);

280 
	`∑nic
("bogus stat class");

282  
vÆ
;

287 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

288 
vÆ
 = 
îr_vÆue
;

289  
vÆ
;

290 
	}
}

293 
	#MAX_ARGS
 4

	)

296 
	#MAX_STR
 128

	)

299 
	u¨g_vÆ_t
 {

300 
	mas_modifõr
;

301 
evÆ_vÆue_t
 
	mas_vÆue
;

302 
	mas_ac˚ss
;

303 
	mas_°r
[
MAX_STR
];

308 (*
	tcmd_‚_t
)(
	t«rgs
,

309 
	t¨g_vÆ_t
 
	t¨gs
[],

310 
	tªgs_t
 *
	tªgs
,

311 
	tmem_t
 *
	tmem
);

315 
	sdlôe_cmd_t
 {

316 *
	mcmd_°r
;

317 *
	m¨g_°rs
[
MAX_ARGS
];

325 
cmd_‚_t
 
	mcmd_‚
;

326 *
	mhñp_°r
;

331 
dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

332 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

334 
dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

335 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

337 
dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

338 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

340 
dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

341 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

343 
dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

344 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

346 
dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

347 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

349 
dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

350 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

352 
dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

353 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

355 
dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

356 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

358 
dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

359 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

361 
dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

362 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

364 
dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

365 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

367 
dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

368 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

370 
dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

371 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

373 
dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

374 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

376 
dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

377 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

379 
dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

380 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

382 
dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

383 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

385 
dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

386 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

388 
dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

389 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

391 
dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

392 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

394 
dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

395 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

397 
dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

398 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

400 
dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

401 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

403 
dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

404 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

406 
dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

407 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

409 
dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

410 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

412 
dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

413 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

415 
dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

416 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

418 
dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

419 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

424 
dlôe_cmd_t
 
	gcmd_db
[] =

426 { "hñp", { "s?", 
NULL
 }, 
dlôe_hñp
,

428 { "vîsi⁄", { 
NULL
 }, 
dlôe_vîsi⁄
,

430 { "ãrmö©e", { 
NULL
 }, 
dlôe_ãrmö©e
,

432 { "quô", { 
NULL
 }, 
dlôe_quô
,

434 { "c⁄t", { "a?", 
NULL
 }, 
dlôe_c⁄t
,

436 { "°ï", { 
NULL
 }, 
dlôe_°ï
,

439 { "√xt", { 
NULL
 }, 
dlôe_√xt
,

442 { "¥öt", { "m?", "e", 
NULL
 }, 
dlôe_¥öt
,

444 { "›ti⁄s", { 
NULL
 }, 
dlôe_›ti⁄s
,

446 { "›ti⁄", { "s", 
NULL
 }, 
dlôe_›ti⁄
,

448 { "°©s", { 
NULL
 }, 
dlôe_°©s
,

450 { "°©", { "s", 
NULL
 }, 
dlôe_°©
,

452 { "wh©is", { "e", 
NULL
 }, 
dlôe_wh©is
,

454 { "---", { 
NULL
 }, NULL, NULL },

455 { "ªgs", { 
NULL
 }, 
dlôe_ªgs
,

457 { "úegs", { 
NULL
 }, 
dlôe_úegs
,

459 { "Âªgs", { 
NULL
 }, 
dlôe_Âªgs
,

461 { "¸egs", { 
NULL
 }, 
dlôe_¸egs
,

463 { "m°©e", { "s?", 
NULL
 }, 
dlôe_m°©e
,

465 { "di•œy", { "m?", "a", 
NULL
 }, 
dlôe_di•œy
,

467 { "dump", { "a?", "c?", 
NULL
 }, 
dlôe_dump
,

469 { "dis", { "a?", "c?", 
NULL
 }, 
dlôe_dis
,

471 { "bªak", { "a", 
NULL
 }, 
dlôe_bªak
,

473 { "dbªak", { "a", "t?", 
NULL
 }, 
dlôe_dbªak
,

476 { "rbªak", { "s", "t?", 
NULL
 }, 
dlôe_rbªak
,

479 { "bªaks", { 
NULL
 }, 
dlôe_bªaks
,

481 { "dñëe", { "i", 
NULL
 }, 
dlôe_dñëe
,

483 { "˛ór", { 
NULL
 }, 
dlôe_˛ór
,

485 { "---", { 
NULL
 }, NULL, NULL },

486 { "symbﬁs", { 
NULL
 }, 
dlôe_symbﬁs
,

488 { "tsymbﬁs", { 
NULL
 }, 
dlôe_tsymbﬁs
,

490 { "dsymbﬁs", { 
NULL
 }, 
dlôe_dsymbﬁs
,

492 { "symbﬁ", { "s", 
NULL
 }, 
dlôe_symbﬁ
,

494 { "---", { 
NULL
 }, NULL, NULL },

496 { 
NULL
, { NULL }, NULL, NULL }

500 *
	gdlôe_hñp_èû
 =

515 #ifde‡
HOST_HAS_QWORD


531 
	$dlôe_exec
(*
cmd_°r
,

532 
ªgs_t
 *
ªgs
,

533 
mem_t
 *
mem
)

535 
i
, 
¨g_˙t
;

536 
dlôe_cmd_t
 *
cmd
;

537 
cmd_buf
[512], *
p
, *
q
, *
ídp
;

538 
¨g_vÆ_t
 
¨gs
[
MAX_ARGS
];

540 
p
 = 
cmd_°r
;

541 
q
 = 
cmd_buf
;

544 *
p
 == ' ' || *p == '\t' || *p == '\n')

545 
p
++;

548 i‡(*
p
 == '\0')

551  
NULL
;

555 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t' && *p != '/')

556 *
q
++ = *
p
++;

557 *
q
 = '\0';

560 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

562 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
cmd_buf
))

565 i‡(
cmd
->
cmd_°r
 =
NULL
)

569 
i
=0, 
¨g_˙t
=0; i<
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++,árg_cnt++)

571 
›ti⁄Æ
, 
ac˚ss
, 
modifõrs
;

572 *
¨g
, 
¨g_ty≥
, *
îr_°r
;

573 
evÆ_vÆue_t
 
vÆ
;

576 *
p
 == ' ' || *p == '\t' || *p == '\n')

577 
p
++;

579 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

580 
¨g_ty≥
 = 
¨g
[0];

581 
›ti⁄Æ
 = (
¨g
[1] == '?');

583 i‡(*
p
 == '\0')

585 i‡(
›ti⁄Æ
)

594 
ídp
 = 
p
;

595 
¨g_ty≥
)

598 
îr_°r
 = 
	`modifõr_∑r£r
(
p
, &
ídp
, &
modifõrs
);

599 i‡(
îr_°r
)

600  
îr_°r
;

601 
¨gs
[
¨g_˙t
].
as_modifõr
 = 
modifõrs
;

604 
loˇl_ªgs
 = 
ªgs
;

605 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

606 i‡(
evÆ_îr‹
)

607  
evÆ_îr_°r
[
evÆ_îr‹
];

608 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

611 
loˇl_ªgs
 = 
ªgs
;

612 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

613 i‡(
evÆ_îr‹
)

614  
evÆ_îr_°r
[
evÆ_îr‹
];

615 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

618 
loˇl_ªgs
 = 
ªgs
;

619 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

620 i‡(
evÆ_îr‹
)

621  
evÆ_îr_°r
[
evÆ_îr‹
];

622 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

625 
ac˚ss
 = 0;

626 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

628 *
p
)

631 
ac˚ss
 |
ACCESS_READ
;

634 
ac˚ss
 |
ACCESS_WRITE
;

637 
ac˚ss
 |
ACCESS_EXEC
;

642 
p
++;

644 
ídp
 = 
p
;

645 
¨gs
[
¨g_˙t
].
as_ac˚ss
 = 
ac˚ss
;

648 
loˇl_ªgs
 = 
ªgs
;

649 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

650 i‡(
evÆ_îr‹
)

651  
evÆ_îr_°r
[
evÆ_îr‹
];

652 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

655 
q
 = 
¨gs
[
¨g_˙t
].
as_°r
;

656 *
p
 != ' ' && *p != '\t' && *p != '\0')

657 *
q
++ = *
p
++;

658 *
q
 = '\0';

659 
ídp
 = 
p
;

662 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

664 
p
 = 
ídp
;

669 *
p
 == ' ' || *p == '\t' || *p == '\n')

670 
p
++;

673 i‡(*
p
 != '\0')

677  
cmd
->
	`cmd_‚
(
¨g_˙t
, 
¨gs
, 
ªgs
, 
mem
);

678 
	}
}

682 
	$¥öt_vÆ
(
modifõrs
,

683 
evÆ_vÆue_t
 
vÆ
)

685 *
f‹m©
 = "", *
¥efix
 = "", 
ødix
, 
buf
[512];

688 i‡((
modifõrs
 & 
MOD_SIZES
) == 0)

691 
vÆ
.
ty≥
)

693 
ë_öt
: 
modifõrs
 |
MOD_WORD
; ;

694 
ë_uöt
: 
modifõrs
 |
MOD_WORD
; ;

695 
ë_addr
:

696 #ifde‡
HOST_HAS_QWORD


697 i‡((
md_addr_t
) > 4)

698 
modifõrs
 |
MOD_QWORD
;

701 
modifõrs
 |
MOD_WORD
;

703 #ifde‡
HOST_HAS_QWORD


704 
ë_qw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

705 
ë_sqw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

707 
ë_Êﬂt
: 
modifõrs
 |
MOD_FLOAT
; ;

708 
ë_doubÀ
: 
modifõrs
 |
MOD_DOUBLE
; ;

709 
ë_symbﬁ
:

713 i‡(((
modifõrs
 & 
MOD_SIZES
) & ((modifiers & MOD_SIZES) - 1)) != 0)

717 i‡((
modifõrs
 & 
MOD_FORMATS
) == 0)

720 
vÆ
.
ty≥
)

722 
ë_öt
: 
modifõrs
 |
MOD_DECIMAL
; ;

723 
ë_uöt
: 
modifõrs
 |
MOD_UNSIGNED
; ;

724 
ë_addr
: 
modifõrs
 |
MOD_HEX
; ;

725 #ifde‡
HOST_HAS_QWORD


726 
ë_qw‹d
: 
modifõrs
 |
MOD_UNSIGNED
; ;

727 
ë_sqw‹d
: 
modifõrs
 |
MOD_DECIMAL
; ;

729 
ë_Êﬂt
: ;

730 
ë_doubÀ
: ;

731 
ë_symbﬁ
:

735 i‡(((
modifõrs
 & 
MOD_FORMATS
) & ((modifiers & MOD_FORMATS) - 1)) != 0)

739 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
))

741 i‡(
modifõrs
 & 
MOD_DECIMAL
)

742 
ødix
 = 'd';

743 i‡(
modifõrs
 & 
MOD_UNSIGNED
)

744 
ødix
 = 'u';

745 i‡(
modifõrs
 & 
MOD_OCTAL
)

746 
ødix
 = 'o';

747 i‡(
modifõrs
 & 
MOD_HEX
)

748 
ødix
 = 'x';

749 i‡(
modifõrs
 & 
MOD_BINARY
)

752 
	`∑nic
("no default integer format");

754 i‡(
modifõrs
 & 
MOD_BYTE
)

756 i‡(
modifõrs
 & 
MOD_OCTAL
)

758 
¥efix
 = "0";

759 
f‹m©
 = "03";

761 i‡(
modifõrs
 & 
MOD_HEX
)

763 
¥efix
 = "0x";

764 
f‹m©
 = "02";

768 
¥efix
 = "";

769 
f‹m©
 = "";

772 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

773 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

775 i‡(
modifõrs
 & 
MOD_HALF
)

777 i‡(
modifõrs
 & 
MOD_OCTAL
)

779 
¥efix
 = "0";

780 
f‹m©
 = "06";

782 i‡(
modifõrs
 & 
MOD_HEX
)

784 
¥efix
 = "0x";

785 
f‹m©
 = "04";

789 
¥efix
 = "";

790 
f‹m©
 = "";

793 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

794 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

796 i‡(
modifõrs
 & 
MOD_WORD
)

798 i‡(
modifõrs
 & 
MOD_OCTAL
)

800 
¥efix
 = "0";

801 
f‹m©
 = "011";

803 i‡(
modifõrs
 & 
MOD_HEX
)

805 
¥efix
 = "0x";

806 
f‹m©
 = "08";

810 
¥efix
 = "";

811 
f‹m©
 = "";

814 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

815 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

817 #ifde‡
HOST_HAS_QWORD


818 i‡(
modifõrs
 & 
MOD_QWORD
)

820 i‡(
modifõrs
 & 
MOD_OCTAL
)

822 
¥efix
 = "0";

823 
f‹m©
 = "022";

825 i‡(
modifõrs
 & 
MOD_HEX
)

827 
¥efix
 = "0x";

828 
f‹m©
 = "016";

832 
¥efix
 = "";

833 
f‹m©
 = "";

836 
	`•rötf
(
buf
, "%s%%%¶%c", 
¥efix
, 
f‹m©
, 
ødix
);

837 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_qw‹d
(
vÆ
));

841 i‡(
modifõrs
 & 
MOD_FLOAT
)

842 
	`Ârötf
(
°dout
, "%f", ()
	`evÆ_as_Êﬂt
(
vÆ
));

843 i‡(
modifõrs
 & 
MOD_DOUBLE
)

844 
	`Ârötf
(
°dout
, "%f", 
	`evÆ_as_doubÀ
(
vÆ
));

845 i‡(
modifõrs
 & 
MOD_CHAR
)

846 
	`Ârötf
(
°dout
, "`%c'", 
	`evÆ_as_uöt
(
vÆ
));

847 i‡(
modifõrs
 & 
MOD_STRING
)

850 
	`∑nic
("no default format");

853  
NULL
;

854 
	}
}

858 
	$dlôe_mem_obj
(
mem_t
 *
mem
,

859 
is_wrôe
,

860 
md_addr_t
 
addr
,

861 *
p
,

862 
nbyãs
)

864 
mem_cmd
 
cmd
;

866 i‡(!
is_wrôe
)

867 
cmd
 = 
Ród
;

869 
cmd
 = 
Wrôe
;

872 *
îr°r
;

873 
îr°r
 = 
	`mem_vÆid
(
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

874 i‡(
îr°r
)

875  
îr°r
;

879 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

882  
NULL
;

883 
	}
}

887 
	$dlôe_m°©e_obj
(
FILE
 *
°ªam
,

888 *
cmd
,

889 
ªgs_t
 *
ªgs
,

890 
mem_t
 *
mem
)

893 
	`Ârötf
(
°ªam
, "No machine state.\n");

896  
NULL
;

897 
	}
}

901 
	$dlôe_∑u£
()

903 
buf
[512];

904 
	`Ârötf
(
°dout
, "Press <return>Åo continue...");

905 
	`fÊush
(
°dout
);

906 
	`fgës
(
buf
, 512, 
°dö
);

907 
	}
}

911 
	$¥öt_hñp
(
dlôe_cmd_t
 *
cmd
)

913 
i
;

916 
	`Ârötf
(
°dout
, " %†", 
cmd
->
cmd_°r
);

919 
i
=0; i < 
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++)

921 
›ti⁄Æ
;

922 *
¨g
, 
¨g_ty≥
;

924 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

925 
¨g_ty≥
 = 
¨g
[0];

926 
›ti⁄Æ
 = (
¨g
[1] == '?');

928 i‡(
›ti⁄Æ
)

929 
	`Ârötf
(
°dout
, "{");

931 
	`Ârötf
(
°dout
, "<");

933 
¨g_ty≥
)

936 
	`Ârötf
(
°dout
, "/modifiers");

939 
	`Ârötf
(
°dout
, "addr");

942 
	`Ârötf
(
°dout
, "count");

945 
	`Ârötf
(
°dout
, "expr");

948 
	`Ârötf
(
°dout
, "r|w|x");

951 
	`Ârötf
(
°dout
, "id");

954 
	`Ârötf
(
°dout
, "string");

957 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

960 i‡(
›ti⁄Æ
)

961 
	`Ârötf
(
°dout
, "}");

963 
	`Ârötf
(
°dout
, ">");

965 
	`Ârötf
(
°dout
, " ");

967 
	`Ârötf
(
°dout
, "\n");

970 
	`Ârötf
(
°dout
, " %s\n", 
cmd
->
hñp_°r
);

971 
	}
}

975 
	$dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

976 
ªgs_t
 *
ªgs
,

977 
mem_t
 *
mem
)

979 
dlôe_cmd_t
 *
cmd
;

981 i‡(
«rgs
 != 0 &&Çargs != 1)

984 i‡(
«rgs
 == 1)

987 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

989 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
¨gs
[0].
as_°r
))

992 i‡(!
cmd
->
cmd_°r
)

995 
	`¥öt_hñp
(
cmd
);

1000 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

1003 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, "---"))

1004 
	`dlôe_∑u£
();

1006 
	`¥öt_hñp
(
cmd
);

1009 
	`Ârötf
 (
°dout
, "\n");

1010 i‡(
dlôe_hñp_èû
)

1011 
	`Ârötf
 (
°dout
, "%s\n", 
dlôe_hñp_èû
);

1015  
NULL
;

1016 
	}
}

1020 
	$dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1021 
ªgs_t
 *
ªgs
,

1022 
mem_t
 *
mem
)

1024 i‡(
«rgs
 != 0)

1028 
	`Ârötf
(
°dout
, "The SimpleScalar/%s Tool Set, version %d.%d of %s.\n",

1029 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

1030 
	`Ârötf
(
°dout
,

1034  
NULL
;

1035 
	}
}

1039 
	$dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1040 
ªgs_t
 *
ªgs
,

1041 
mem_t
 *
mem
)

1043 i‡(
«rgs
 != 0)

1046 
	`Ârötf
(
°dout
, "DLite:Åerminating simulation...\n");

1047 
	`l⁄gjmp
(
sim_exô_buf
, 1);

1050  
NULL
;

1051 
	}
}

1055 
	$dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1056 
ªgs_t
 *
ªgs
,

1057 
mem_t
 *
mem
)

1059 i‡(
«rgs
 != 0)

1062 
	`Ârötf
(
°dout
, "DLite:Éxiting simulator...\n");

1063 
	`exô
(1);

1066  
NULL
;

1067 
	}
}

1071 
	$dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1072 
ªgs_t
 *
ªgs
,

1073 
mem_t
 *
mem
)

1075 
evÆ_vÆue_t
 
vÆ
;

1077 i‡(!
f_dlôe_ªg_obj
 || !
f_dlôe_mem_obj
)

1078 
	`∑nic
("DLite isÇot configured");

1080 i‡(
«rgs
 != 0 &&Çargs != 1)

1083 i‡(
«rgs
 == 1)

1086 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1090 
vÆ
.
ty≥
 = 
ë_addr
;

1091 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1092 
	`f_dlôe_ªg_obj
(
ªgs
, 
TRUE
, 
π_PC
, 0, &
vÆ
);

1094 
	`myÂrötf
(
°dout
, "DLite: continuingÉxecution @ 0x%08p...\n",

1095 
vÆ
.
vÆue
.
as_addr
);

1099 
dlôe_a˘ive
 = 
FALSE
;

1100 
dlôe_ªtu∫
 = 
TRUE
;

1103  
NULL
;

1104 
	}
}

1108 
	$dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1109 
ªgs_t
 *
ªgs
,

1110 
mem_t
 *
mem
)

1112 i‡(
«rgs
 != 0)

1116 
dlôe_a˘ive
 = 
TRUE
;

1117 
dlôe_ªtu∫
 = 
TRUE
;

1120  
NULL
;

1121 
	}
}

1126 
	$dlôe_√xt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[])

1128 i‡(
«rgs
 != 0)

1132 
dlôe_°ï_˙t
 = 1;

1133 
dlôe_°ï_öto
 = 
FALSE
;

1136  
NULL
;

1137 
	}
}

1142 
	$dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1143 
ªgs_t
 *
ªgs
,

1144 
mem_t
 *
mem
)

1146 
modifõrs
 = 0;

1147 *
îr_°r
;

1148 
evÆ_vÆue_t
 
vÆ
;

1150 i‡(
«rgs
 != 1 &&Çargs != 2)

1153 i‡(
«rgs
 == 2)

1156 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1157 
vÆ
 = 
¨gs
[1].
as_vÆue
;

1162 
vÆ
 = 
¨gs
[0].
as_vÆue
;

1166 
îr_°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1167 i‡(
îr_°r
)

1168  
îr_°r
;

1169 
	`Ârötf
(
°dout
, "\n");

1172  
NULL
;

1173 
	}
}

1177 
	$dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1178 
ªgs_t
 *
ªgs
,

1179 
mem_t
 *
mem
)

1181 i‡(
«rgs
 != 0)

1185 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dout
, 
TRUE
, 
FALSE
);

1188  
NULL
;

1189 
	}
}

1193 
	$dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1194 
ªgs_t
 *
ªgs
,

1195 
mem_t
 *
mem
)

1197 
›t_›t_t
 *
›t
;

1199 i‡(
«rgs
 != 1)

1203 
›t
 = 
	`›t_föd_›ti⁄
(
sim_odb
, 
¨gs
[0].
as_°r
);

1204 i‡(!
›t
)

1208 
	`Ârötf
(
°dout
, "%-16† ", 
›t
->
«me
);

1209 
	`›t_¥öt_›ti⁄
(
›t
, 
°dout
);

1210 i‡(
›t
->
desc
)

1211 
	`Ârötf
(
°dout
, " # %s", 
›t
->
desc
);

1212 
	`Ârötf
(
°dout
, "\n");

1215  
NULL
;

1216 
	}
}

1220 
	$dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1221 
ªgs_t
 *
ªgs
,

1222 
mem_t
 *
mem
)

1224 i‡(
«rgs
 != 0)

1228 
	`°©_¥öt_°©s
(
sim_sdb
, 
°dout
);

1229 
	`sim_aux_°©s
(
°dout
);

1232  
NULL
;

1233 
	}
}

1237 
	$dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1238 
ªgs_t
 *
ªgs
,

1239 
mem_t
 *
mem
)

1241 
°©_°©_t
 *
°©
;

1243 i‡(
«rgs
 != 1)

1247 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
¨gs
[0].
as_°r
);

1248 i‡(!
°©
)

1252 
	`°©_¥öt_°©
(
sim_sdb
, 
°©
, 
°dout
);

1255  
NULL
;

1256 
	}
}

1260 
	$dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1261 
ªgs_t
 *
ªgs
,

1262 
mem_t
 *
mem
)

1264 i‡(
«rgs
 != 1)

1267 
	`Ârötf
(
°dout
, "ty≥ =`%s'\n", 
evÆ_ty≥_°r
[
¨gs
[0].
as_vÆue
.
ty≥
]);

1270  
NULL
;

1271 
	}
}

1275 
	$dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1276 
ªgs_t
 *
ªgs
,

1277 
mem_t
 *
mem
)

1279 *
îr_°r
;

1281 i‡(
«rgs
 != 0)

1285 
	`myÂrötf
(
°dout
, "PC: 0x%08p NPC: 0x%08p\n",

1286 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_NPC
);

1287 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1288  
îr_°r
;

1289 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1292  
NULL
;

1293 
	}
}

1297 
	$dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1298 
ªgs_t
 *
ªgs
,

1299 
mem_t
 *
mem
)

1302 
	`md_¥öt_Âªgs
(
ªgs
->
ªgs_F
, 
°dout
);

1305  
NULL
;

1306 
	}
}

1310 
	$dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1311 
ªgs_t
 *
ªgs
,

1312 
mem_t
 *
mem
)

1315 
	`md_¥öt_¸egs
(
ªgs
->
ªgs_C
, 
°dout
);

1318  
NULL
;

1319 
	}
}

1323 
	$dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1324 
ªgs_t
 *
ªgs
,

1325 
mem_t
 *
mem
)

1327 *
îr_°r
;

1329 
	`myÂrötf
(
°dout
, "PC: 0x%08p NPC: 0x%08p\n",

1330 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_NPC
);

1331 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1332  
îr_°r
;

1333 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1334 
	`dlôe_∑u£
();

1335 i‡((
îr_°r
 = 
	`dlôe_Âªgs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1336  
îr_°r
;

1339  
NULL
;

1340 
	}
}

1344 
	$dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1345 
ªgs_t
 *
ªgs
,

1346 
mem_t
 *
mem
)

1348 *
îr°r
;

1350 i‡(
«rgs
 != 0 &&Çargs != 1)

1353 i‡(
f_dlôe_m°©e_obj
)

1355 i‡(
«rgs
 == 0)

1357 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
NULL
, 
ªgs
, 
mem
);

1358 i‡(
îr°r
)

1359  
îr°r
;

1363 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
¨gs
[0].
as_°r
, 
ªgs
, 
mem
);

1364 i‡(
îr°r
)

1365  
îr°r
;

1370  
NULL
;

1371 
	}
}

1375 
	$dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1376 
ªgs_t
 *
ªgs
,

1377 
mem_t
 *
mem
)

1379 
modifõrs
, 
size
;

1380 
md_addr_t
 
addr
;

1381 
buf
[512];

1382 
evÆ_vÆue_t
 
vÆ
;

1383 *
îr°r
;

1385 i‡(
«rgs
 != 1 &&Çargs != 2)

1388 i‡(
«rgs
 == 1)

1391 
modifõrs
 = 0;

1394 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1398 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1400 i‡(
«rgs
 == 2)

1402 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1405 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1409 
addr
 = 
	`evÆ_as_addr
(
¨gs
[1].
as_vÆue
);

1413 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1414 
size
 = 1;

1415 i‡(
modifõrs
 & 
MOD_HALF
)

1416 
size
 = 2;

1417 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1418 
size
 = 8;

1420 
size
 = 4;

1423 
îr°r
 = 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
, 
addr
, (*)
buf
, 
size
);

1424 i‡(
îr°r
)

1425  
îr°r
;

1428 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1431 
vÆ
.
ty≥
 = 
ë_öt
;

1432 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1434 i‡(
modifõrs
 & 
MOD_HALF
)

1437 
vÆ
.
ty≥
 = 
ë_öt
;

1438 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1440 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1443 
vÆ
.
ty≥
 = 
ë_doubÀ
;

1444 
vÆ
.
vÆue
.
as_doubÀ
 = *(*)
buf
;

1449 
vÆ
.
ty≥
 = 
ë_uöt
;

1450 
vÆ
.
vÆue
.
as_uöt
 = *(*)
buf
;

1454 
îr°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1455 i‡(
îr°r
)

1456  
îr°r
;

1457 
	`Ârötf
(
°dout
, "\n");

1460  
NULL
;

1461 
	}
}

1464 
	#BYTES_PER_LINE
 16

	)

1465 
	#LINES_PER_SCREEN
 4

	)

1469 
	$dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1470 
ªgs_t
 *
ªgs
,

1471 
mem_t
 *
mem
)

1473 
i
, 
j
;

1474 
cou¡
 = 
LINES_PER_SCREEN
 * 
BYTES_PER_LINE
, 
i_cou¡
, 
fmt_cou¡
, 
fmt_löes
;

1475 
md_addr_t
 
fmt_addr
, 
i_addr
;

1476 
md_addr_t
 
addr
 = 0;

1477 
byã
;

1478 
buf
[512];

1479 *
îr°r
;

1481 i‡(
«rgs
 < 0 ||Çargs > 2)

1484 i‡(
«rgs
 == 1)

1487 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1491 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1493 i‡(
«rgs
 == 2)

1496 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1500 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1503 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1506 i‡(
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
) > 1024)

1510 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1515 
fmt_addr
 = 
addr
 & ~(
BYTES_PER_LINE
 - 1);

1516 
fmt_cou¡
 = (
cou¡
 + (
BYTES_PER_LINE
 - 1)) & ~(BYTES_PER_LINE - 1);

1517 
fmt_löes
 = 
fmt_cou¡
 / 
BYTES_PER_LINE
;

1519 i‡(
fmt_löes
 < 1)

1520 
	`∑nic
("no outputÜines");

1523 i‡(
fmt_löes
 == 1)

1526 
i_addr
 = 
fmt_addr
;

1527 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1528 
i
=0; i < 
cou¡
; i++)

1530 
îr°r
 =

1531 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1532 
i_addr
, (*)&
byã
, 1);

1533 i‡(
îr°r
)

1534  
îr°r
;

1535 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1536 i‡(
	`i•röt
(
byã
))

1537 
buf
[
i
] = 
byã
;

1539 
buf
[
i
] = '.';

1540 
i_addr
++;

1541 
addr
++;

1543 
buf
[
i
] = '\0';

1546 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1550 
i_cou¡
 = 0;

1551 
i_addr
 = 
fmt_addr
;

1552 
i
=0; i < 
fmt_löes
; i++)

1554 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1557 
j
=0; j < 
BYTES_PER_LINE
; j++)

1559 i‡(
i_addr
 >
addr
 && 
i_cou¡
 <
cou¡
)

1561 
îr°r
 =

1562 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1563 
i_addr
, (*)&
byã
, 1);

1564 i‡(
îr°r
)

1565  
îr°r
;

1566 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1567 i‡(
	`i•röt
(
byã
))

1568 
buf
[
j
] = 
byã
;

1570 
buf
[
j
] = '.';

1571 
i_cou¡
++;

1572 
addr
++;

1576 
	`Ârötf
(
°dout
, " ");

1577 
buf
[
j
] = ' ';

1579 
i_addr
++;

1581 
buf
[
j
] = '\0';

1584 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1589  
NULL
;

1590 
	}
}

1593 
	#INSTS_PER_SCREEN
 16

	)

1597 
	$dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1598 
ªgs_t
 *
ªgs
,

1599 
mem_t
 *
mem
)

1601 
i
;

1602 
cou¡
 = 
INSTS_PER_SCREEN
;

1603 
md_addr_t
 
addr
 = 0;

1604 
md_ö°_t
 
ö°
;

1605 *
îr°r
;

1607 i‡(
«rgs
 < 0 ||Çargs > 2)

1610 i‡(
«rgs
 == 1)

1613 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1617 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1619 i‡(
«rgs
 == 2)

1622 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1626 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1629 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1633 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1635 i‡(
cou¡
 < 0 || count > 1024)

1640 i‡((
addr
 % (
md_ö°_t
)) != 0)

1644 
i
=0; i<
cou¡
; i++)

1647 
	`myÂrötf
(
°dout
, " 0x%08p: ", 
addr
);

1648 
îr°r
 =

1649 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1650 
addr
, (*)&
ö°
, (inst));

1651 
ö°
 = 
	`MD_SWAPI
(inst);

1652 i‡(
îr°r
)

1653  
îr°r
;

1654 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
°dout
);

1655 
	`Ârötf
(
°dout
, "\n");

1658 
addr
 +(
md_ö°_t
);

1662  
NULL
;

1663 
	}
}

1666 
	sdlôe_bªak_t
 {

1667 
dlôe_bªak_t
 *
	m√xt
;

1668 
	mid
;

1669 
	m˛ass
;

1670 
ønge_ønge_t
 
	mønge
;

1674 
dlôe_bªak_t
 *
	gdlôe_bps
 = 
NULL
;

1677 
	gbªak_id
 = 1;

1681 
	$bp_˛ass_°r
(
˛ass
)

1683 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
))

1685 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
))

1687 i‡(
˛ass
 =(
ACCESS_WRITE
|
ACCESS_EXEC
))

1689 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_EXEC
))

1691 i‡(
˛ass
 =
ACCESS_READ
)

1693 i‡(
˛ass
 =
ACCESS_WRITE
)

1695 i‡(
˛ass
 =
ACCESS_EXEC
)

1698 
	`∑nic
("bogusáccess class");

1699 
	}
}

1703 
	$£t_bªak
(
˛ass
,

1704 
ønge_ønge_t
 *
ønge
)

1706 
dlôe_bªak_t
 *
bp
;

1709 
bp
 = 
	`ˇŒoc
(1, (
dlôe_bªak_t
));

1710 i‡(!
bp
)

1711 
	`Áèl
("out of virtual memory");

1713 
bp
->
id
 = 
bªak_id
++;

1714 
bp
->
ønge
 = *range;

1715 
bp
->
˛ass
 = class;

1717 
bp
->
√xt
 = 
dlôe_bps
;

1718 
dlôe_bps
 = 
bp
;

1720 
	`Ârötf
(
°dout
, "bªakpoöà#%d së @ ", 
bp
->
id
);

1721 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1722 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
˛ass
));

1725 
dlôe_check
 = 
TRUE
;

1728  
NULL
;

1729 
	}
}

1733 
	$dñëe_bªak
(
id
)

1735 
dlôe_bªak_t
 *
bp
, *
¥ev
;

1737 i‡(!
dlôe_bps
)

1740 
bp
=
dlôe_bps
,
¥ev
=
NULL
; b∞!NULL;Öªv=bp,bp=bp->
√xt
)

1742 i‡(
bp
->
id
 == id)

1745 i‡(!
bp
)

1748 i‡(!
¥ev
)

1751 
dlôe_bps
 = 
bp
->
√xt
;

1756 
¥ev
->
√xt
 = 
bp
->next;

1759 
	`Ârötf
(
°dout
, "bªakpoöà#%d dñëed @ ", 
bp
->
id
);

1760 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1761 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
bp
->
˛ass
));

1763 
bp
->
√xt
 = 
NULL
;

1764 
	`‰ì
(
bp
);

1766 i‡(!
dlôe_bps
)

1769 
dlôe_check
 = 
FALSE
;

1774 
dlôe_check
 = 
TRUE
;

1778  
NULL
;

1779 
	}
}

1782 
	gbªak_ac˚ss
 = 0;

1786 
	$__check_bªak
(
md_addr_t
 
√xt_PC
,

1787 
ac˚ss
,

1788 
md_addr_t
 
addr
,

1789 
cou¡î_t
 
icou¡
,

1790 
cou¡î_t
 
cy˛e
)

1792 
dlôe_bªak_t
 *
bp
;

1794 i‡(
dlôe_a˘ive
)

1797 
bªak_ac˚ss
 = 0;

1798  
TRUE
;

1802 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

1804 
bp
->
ønge
.
°¨t
.
±y≥
)

1806 
±_addr
:

1807 i‡((
bp
->
˛ass
 & 
ACCESS_EXEC
)

1808 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
√xt_PC
))

1811 
	`myÂrötf
(
°dout
,

1813 
bp
->
id
, 
√xt_PC
);

1814 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1815  
TRUE
;

1817 i‡((
bp
->
˛ass
 & 
ACCESS_READ
)

1818 && ((
ac˚ss
 & 
ACCESS_READ
)

1819 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

1822 
	`myÂrötf
(
°dout
,

1824 
bp
->
id
, 
addr
);

1825 
bªak_ac˚ss
 = 
ACCESS_READ
;

1826  
TRUE
;

1828 i‡((
bp
->
˛ass
 & 
ACCESS_WRITE
)

1829 && ((
ac˚ss
 & 
ACCESS_WRITE
)

1830 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

1833 
	`myÂrötf
(
°dout
,

1835 
bp
->
id
, 
addr
);

1836 
bªak_ac˚ss
 = 
ACCESS_WRITE
;

1837  
TRUE
;

1841 
±_ö°
:

1842 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
icou¡
))

1845 
	`Ârötf
(
°dout
,

1847 
bp
->
id
, ()
icou¡
);

1848 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1849  
TRUE
;

1853 
±_cy˛e
:

1854 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
cy˛e
))

1857 
	`Ârötf
(
°dout
,

1859 
bp
->
id
, ()
cy˛e
);

1860 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1861  
TRUE
;

1866 
	`∑nic
("bogusÑangeÅype");

1873 
bªak_ac˚ss
 = 0;

1874  
FALSE
;

1875 
	}
}

1879 
	$dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1880 
ªgs_t
 *
ªgs
,

1881 
mem_t
 *
mem
)

1883 
md_addr_t
 
addr
;

1884 
ønge_ønge_t
 
ønge
;

1886 i‡(
«rgs
 != 1)

1890 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1894 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1897 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

1898 
ønge
.
°¨t
.
pos
 = 
addr
;

1899 
ønge
.
íd
.
±y≥
 = 
±_addr
;

1900 #ifde‡
TARGET_ALPHA


1903 
ønge
.
íd
.
pos
 = 
addr
 + 9;

1905 
ønge
.
íd
.
pos
 = 
addr
 + 1;

1909  
	`£t_bªak
(
ACCESS_EXEC
, &
ønge
);

1910 
	}
}

1914 
	$dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1915 
ªgs_t
 *
ªgs
,

1916 
mem_t
 *
mem
)

1918 
ac˚ss
;

1919 
md_addr_t
 
addr
;

1920 
ønge_ønge_t
 
ønge
;

1922 i‡(
«rgs
 != 1 &&Çargs != 2)

1925 i‡(
«rgs
 == 1)

1928 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1932 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1935 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
;

1937 i‡(
«rgs
 == 2)

1940 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1944 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1947 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

1951 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

1952 
ønge
.
°¨t
.
pos
 = 
addr
;

1953 
ønge
.
íd
.
±y≥
 = 
±_addr
;

1954 
ønge
.
íd
.
pos
 = 
addr
 + 1;

1957  
	`£t_bªak
(
ac˚ss
, &
ønge
);

1958 
	}
}

1962 
	$dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1963 
ªgs_t
 *
ªgs
,

1964 
mem_t
 *
mem
)

1966 
ac˚ss
;

1967 *
îr°r
;

1968 
ønge_ønge_t
 
ønge
;

1970 i‡(
«rgs
 != 1 &&Çargs != 2)

1973 i‡(
«rgs
 == 2)

1976 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

1981 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
;

1985 
îr°r
 = 
	`ønge_∑r£_ønge
(
¨gs
[0].
as_°r
, &
ønge
);

1986 i‡(
îr°r
)

1987  
îr°r
;

1990 i‡(
ønge
.
°¨t
.
±y≥
 !ønge.
íd
.ptype)

1992 i‡(
ønge
.
°¨t
.
pos
 >Ñ™ge.
íd
.pos)

1996  
	`£t_bªak
(
ac˚ss
, &
ønge
);

1997 
	}
}

2001 
	$dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2002 
ªgs_t
 *
ªgs
,

2003 
mem_t
 *
mem
)

2005 
dlôe_bªak_t
 *
bp
;

2007 i‡(!
dlôe_bps
)

2009 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2012  
NULL
;

2015 
	`Ârötf
(
°dout
, "Active breakpoints:\n");

2016 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

2018 
	`Ârötf
(
°dout
, " bªakpoöà#%d @ ", 
bp
->
id
);

2019 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

2020 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
bp
->
˛ass
));

2024  
NULL
;

2025 
	}
}

2029 
	$dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2030 
ªgs_t
 *
ªgs
,

2031 
mem_t
 *
mem
)

2033 
id
;

2035 i‡(
«rgs
 != 1)

2039 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2042 
id
 = 
	`evÆ_as_uöt
(
¨gs
[0].
as_vÆue
);

2043  
	`dñëe_bªak
(
id
);

2044 
	}
}

2048 
	$dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2049 
ªgs_t
 *
ªgs
,

2050 
mem_t
 *
mem
)

2052 i‡(!
dlôe_bps
)

2054 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2057  
NULL
;

2060 
dlôe_bps
 !
NULL
)

2063 
	`dñëe_bªak
(
dlôe_bps
->
id
);

2065 
	`Ârötf
(
°dout
, "All breakpoints cleared.\n");

2068  
NULL
;

2069 
	}
}

2073 
	$dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2074 
ªgs_t
 *
ªgs
,

2075 
mem_t
 *
mem
)

2077 
i
;

2079 i‡(
«rgs
 != 0)

2083 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2086 
i
=0; i<
sym_nsyms
; i++)

2087 
	`sym_dumpsym
(
sym_syms
[
i
], 
°dout
);

2090  
NULL
;

2091 
	}
}

2095 
	$dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2096 
ªgs_t
 *
ªgs
,

2097 
mem_t
 *
mem
)

2099 
i
;

2101 i‡(
«rgs
 != 0)

2105 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2108 
i
=0; i<
sym_¡extsyms
; i++)

2109 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
°dout
);

2112  
NULL
;

2113 
	}
}

2117 
	$dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2118 
ªgs_t
 *
ªgs
,

2119 
mem_t
 *
mem
)

2121 
i
;

2123 i‡(
«rgs
 != 0)

2127 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2130 
i
=0; i<
sym_nd©asyms
; i++)

2131 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
°dout
);

2134  
NULL
;

2135 
	}
}

2139 
	$dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2140 
ªgs_t
 *
ªgs
,

2141 
mem_t
 *
mem
)

2143 
ödex
;

2144 
sym_sym_t
 *
sym
;

2146 i‡(
«rgs
 != 1)

2150 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2153 
sym
 = 
	`sym_böd_«me
(
¨gs
[0].
as_°r
, &
ödex
, 
sdb_™y
);

2154 i‡(!
sym
)

2158 
	`sym_dumpsym
(
sym_syms_by_«me
[
ödex
], 
°dout
);

2161  
NULL
;

2162 
	}
}

2166 
	$dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

2167 
dlôe_mem_obj_t
 
mem_obj
,

2168 
dlôe_m°©e_obj_t
 
m°©e_obj
)

2171 
f_dlôe_ªg_obj
 = 
ªg_obj
;

2172 
f_dlôe_mem_obj
 = 
mem_obj
;

2173 
f_dlôe_m°©e_obj
 = 
m°©e_obj
;

2176 
dlôe_evÆu©‹
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
NULL
);

2177 
	}
}

2181 
	$dlôe_°©us
(
md_addr_t
 
ªgs_PC
,

2182 
md_addr_t
 
√xt_PC
,

2183 
cou¡î_t
 
cy˛e
,

2184 
dbªak
,

2185 
ªgs_t
 *
ªgs
,

2186 
mem_t
 *
mem
)

2188 
md_ö°_t
 
ö°
;

2189 *
îr°r
;

2191 i‡(
dbªak
)

2193 
	`Ârötf
(
°dout
, "\n");

2194 
	`Ârötf
(
°dout
, "Instruction (now finished)Åhat caused data break:\n");

2195 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
ªgs_PC
);

2196 
îr°r
 =

2197 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2198 
ªgs_PC
, (*)&
ö°
, (inst));

2199 
ö°
 = 
	`MD_SWAPI
(inst);

2200 i‡(
îr°r
)

2201 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2203 
	`md_¥öt_ö¢
(
ö°
, 
ªgs_PC
, 
°dout
);

2204 
	`Ârötf
(
°dout
, "\n");

2205 
	`Ârötf
(
°dout
, "\n");

2209 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
√xt_PC
);

2210 
îr°r
 =

2211 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2212 
√xt_PC
, (*)&
ö°
, (inst));

2213 
ö°
 = 
	`MD_SWAPI
(inst);

2214 i‡(
îr°r
)

2215 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2217 
	`md_¥öt_ö¢
(
ö°
, 
√xt_PC
, 
°dout
);

2218 
	`Ârötf
(
°dout
, "\n");

2219 
	}
}

2222 
	#DLITE_PROMPT
 "DLôe! > "

	)

2226 
	$dlôe_maö
(
md_addr_t
 
ªgs_PC
,

2227 
md_addr_t
 
√xt_PC
,

2228 
cou¡î_t
 
cy˛e
,

2229 
ªgs_t
 *
ªgs
,

2230 
mem_t
 *
mem
)

2232 
buf
[512], *
îr_°r
;

2233 
dbªak
 = (
bªak_ac˚ss
 & (
ACCESS_READ
|
ACCESS_WRITE
)) != 0;

2234 
cmd
[512] = "";

2236 
dlôe_a˘ive
 = 
TRUE
;

2237 
dlôe_ªtu∫
 = 
FALSE
;

2238 
	`dlôe_°©us
(
ªgs_PC
, 
√xt_PC
, 
cy˛e
, 
dbªak
, 
ªgs
, 
mem
);

2240 
dlôe_a˘ive
 && !
dlôe_ªtu∫
)

2242 
	`Ârötf
(
°dout
, 
DLITE_PROMPT
);

2243 
	`fÊush
(
°dout
);

2244 
	`fgës
(
buf
, 512, 
°dö
);

2247 i‡(
buf
[
	`°æí
(buf)-1] == '\n')

2248 
buf
[
	`°æí
(buf)-1] = '\0';

2250 i‡(
buf
[0] != '\0')

2253 
	`°r˝y
(
cmd
, 
buf
);

2257 
îr_°r
 = 
	`dlôe_exec
(
cmd
, 
ªgs
, 
mem
);

2258 i‡(
îr_°r
)

2259 
	`Ârötf
(
°dout
, "Dlôe:Éº‹: %s\n", 
îr_°r
);

2261 
	}
}

	@dlite.h

109 #i‚de‡
DLITE_H


110 
	#DLITE_H


	)

112 
	~<°dio.h
>

114 
	~"ho°.h
"

115 
	~"misc.h
"

116 
	~"machöe.h
"

117 
	~"ªgs.h
"

118 
	~"mem‹y.h
"

119 
	~"evÆ.h
"

124 (*
	tdlôe_ªg_obj_t
)(
	tªgs_t
 *
	tªgs
,

125 
	tis_wrôe
,

126 
	tmd_ªg_ty≥
 
	tπ
,

127 
	tªg
,

128 
	tevÆ_vÆue_t
 *
	tvÆ
);

133 (*
	tdlôe_mem_obj_t
)(
	tmem_t
 *
	tmem
,

134 
	tis_wrôe
,

135 
	tmd_addr_t
 
	taddr
,

136 *
	tp
,

137 
	tnbyãs
);

142 (*
	tdlôe_m°©e_obj_t
)(
	tFILE
 *
	t°ªam
,

143 *
	tcmd
,

144 
	tªgs_t
 *
	tªgs
,

145 
	tmem_t
 *
	tmem
);

149 
dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

150 
dlôe_mem_obj_t
 
mem_obj
,

151 
dlôe_m°©e_obj_t
 
m°©e_obj
);

159 
dlôe_mem_obj
(
mem_t
 *
mem
,

160 
is_wrôe
,

161 
md_addr_t
 
addr
,

162 *
p
,

163 
nbyãs
);

167 
dlôe_m°©e_obj
(
FILE
 *
°ªam
,

168 *
cmd
,

169 
ªgs_t
 *
ªgs
,

170 
mem_t
 *
mem
);

173 
	#ACCESS_READ
 0x01

	)

174 
	#ACCESS_WRITE
 0x02

	)

175 
	#ACCESS_EXEC
 0x04

	)

178 
md_addr_t
 
dlôe_Á°bªak
 ;

181 
dlôe_a˘ive
 ;

184 
dlôe_check
 ;

188 
__check_bªak
(
md_addr_t
 
√xt_PC
,

189 
ac˚ss
,

190 
md_addr_t
 
addr
,

191 
cou¡î_t
 
icou¡
,

192 
cou¡î_t
 
cy˛e
);

195 
	#dlôe_check_bªak
(
NPC
, 
ACCESS
, 
ADDR
, 
ICNT
, 
CYCLE
) \

196 ((
dlôe_check
 || 
dlôe_a˘ive
) \

197 ? 
	`__check_bªak
((
NPC
), (
ACCESS
), (
ADDR
), (
ICNT
), (
CYCLE
)) \

198 : 
FALSE
)

	)

202 
dlôe_maö
(
md_addr_t
 
ªgs_PC
,

203 
md_addr_t
 
√xt_PC
,

204 
cou¡î_t
 
cy˛e
,

205 
ªgs_t
 *
ªgs
,

206 
mem_t
 *
mem
);

	@eio.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #ifde‡
_MSC_VER


55 
	~<io.h
>

57 
	~<uni°d.h
>

60 
	~"ho°.h
"

61 
	~"misc.h
"

62 
	~"machöe.h
"

63 
	~"ªgs.h
"

64 
	~"mem‹y.h
"

65 
	~"lﬂdî.h
"

66 
	~"libexo/libexo.h
"

67 
	~"sysˇŒ.h
"

68 
	~"sim.h
"

69 
	~"ídün.h
"

70 
	~"eio.h
"

72 #ifde‡
_MSC_VER


73 
	#wrôe
 
_wrôe


	)

76 
	#EIO_FILE_HEADER
 \

77 "/* Thi†i†®Sim∂eSˇœ∏EIO fûê- DO NOT MOVE OR EDIT THIS LINE! */\n"

	)

94 
cou¡î_t
 
	geio_å™s_i˙t
 = -1;

96 
FILE
 *

97 
	$eio_¸óã
(*
‚ame
)

99 
FILE
 *
fd
;

100 
exo_ãrm_t
 *
exo
;

101 
èrgë_big_ídün
;

103 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

105 
fd
 = 
	`gz›í
(
‚ame
, "w");

106 i‡(!
fd
)

107 
	`Áèl
("u«bÀÅÿ¸óã EIO fûê`%s'", 
‚ame
);

110 
	`Ârötf
(
fd
, "%s\n", 
EIO_FILE_HEADER
);

111 
	`Ârötf
(
fd
, "/* file_format: %d, file_version: %d, big_endian: %d */\n",

112 
MD_EIO_FILE_FORMAT
, 
EIO_FILE_VERSION
, 
ld_èrgë_big_ídün
);

113 
exo
 = 
	`exo_√w
(
ec_li°
,

114 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
MD_EIO_FILE_FORMAT
),

115 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
EIO_FILE_VERSION
),

116 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
èrgë_big_ídün
),

117 
NULL
);

118 
	`exo_¥öt
(
exo
, 
fd
);

119 
	`exo_dñëe
(
exo
);

120 
	`Ârötf
(
fd
, "\n\n");

122  
fd
;

123 
	}
}

125 
FILE
 *

126 
	$eio_›í
(*
‚ame
)

128 
FILE
 *
fd
;

129 
exo_ãrm_t
 *
exo
;

130 
fûe_f‹m©
, 
fûe_vîsi⁄
, 
big_ídün
, 
èrgë_big_ídün
;

132 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

134 
fd
 = 
	`gz›í
(
‚ame
, "r");

135 i‡(!
fd
)

136 
	`Áèl
("u«bÀÅÿ›í EIO fûê`%s'", 
‚ame
);

139 
exo
 = 
	`exo_ªad
(
fd
);

140 i‡(!
exo


141 || 
exo
->
ec
 !
ec_li°


142 || !
exo
->
as_li°
.
hód


143 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


144 || !
exo
->
as_li°
.
hód
->
√xt


145 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


146 || !
exo
->
as_li°
.
hód
->
√xt
->next

147 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_öãgî


148 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

149 
	`Áèl
("couldÇotÑead EIO file header");

151 
fûe_f‹m©
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

152 
fûe_vîsi⁄
 = 
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

153 
big_ídün
 = 
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
;

154 
	`exo_dñëe
(
exo
);

156 i‡(
fûe_f‹m©
 !
MD_EIO_FILE_FORMAT
)

157 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ f‹m©", 
‚ame
);

159 i‡(
fûe_vîsi⁄
 !
EIO_FILE_VERSION
)

160 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ vîsi⁄", 
‚ame
);

162 i‡(!!
big_ídün
 !!!
èrgë_big_ídün
)

164 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

165 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

166 
	`w¨n
("****************************************");

167 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

168 
	`w¨n
("****************************************");

171  
fd
;

172 
	}
}

176 
	$eio_vÆid
(*
‚ame
)

178 
FILE
 *
fd
;

179 
buf
[512];

182 
fd
 = 
	`gz›í
(
‚ame
, "r");

183 i‡(!
fd
)

184  
FALSE
;

187 
	`fgës
(
buf
, 512, 
fd
);

190 i‡(
	`°rcmp
(
buf
, 
EIO_FILE_HEADER
))

191  
FALSE
;

194 
	`gz˛o£
(
fd
);

197  
TRUE
;

198 
	}
}

201 
	$eio_˛o£
(
FILE
 *
fd
)

203 
	`gz˛o£
(
fd
);

204 
	}
}

208 
cou¡î_t


209 
	$eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

210 
mem_t
 *
mem
,

211 
FILE
 *
fd
)

213 
i
;

214 
exo_ãrm_t
 *
exo
;

215 
mem_±e_t
 *
±e
;

217 
	`myÂrötf
(
fd
, "/* ** sèπ checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

219 
	`myÂrötf
(
fd
, "/* EIO fûêpoöãr: %n... */\n", 
eio_å™s_i˙t
);

220 
exo
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
eio_å™s_i˙t
);

221 
	`exo_¥öt
(
exo
, 
fd
);

222 
	`Ârötf
(
fd
, "\n\n");

223 
	`exo_dñëe
(
exo
);

226 
	`Ârötf
(
fd
, "/* miscÑegs icnt, PC, NPC,Étc... */\n");

227 
exo
 = 
	`MD_MISC_REGS_TO_EXO
(
ªgs
);

228 
	`exo_¥öt
(
exo
, 
fd
);

229 
	`Ârötf
(
fd
, "\n\n");

230 
	`exo_dñëe
(
exo
);

233 
	`Ârötf
(
fd
, "/* integerÑegs */\n");

234 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

235 
i
=0; i < 
MD_NUM_IREGS
; i++)

236 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

237 
	`exo_¥öt
(
exo
, 
fd
);

238 
	`Ârötf
(
fd
, "\n\n");

239 
	`exo_dñëe
(
exo
);

242 
	`Ârötf
(
fd
, "/* FPÑegs (integer format) */\n");

243 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

244 
i
=0; i < 
MD_NUM_FREGS
; i++)

245 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_FREG_TO_EXO
(
ªgs
, 
i
));

246 
	`exo_¥öt
(
exo
, 
fd
);

247 
	`Ârötf
(
fd
, "\n\n");

248 
	`exo_dñëe
(
exo
);

250 
	`Ârötf
(
fd
, "/* wrôög `%d' mem‹yÖages... */\n", ()
mem
->
∑ge_cou¡
);

251 
exo
 = 
	`exo_√w
(
ec_li°
,

252 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
mem
->
∑ge_cou¡
),

253 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
),

254 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_mö
),

255 
NULL
);

256 
	`exo_¥öt
(
exo
, 
fd
);

257 
	`Ârötf
(
fd
, "\n\n");

258 
	`exo_dñëe
(
exo
);

260 
	`Ârötf
(
fd
, "/*Åext segment specifiers (base & size) */\n");

261 
exo
 = 
	`exo_√w
(
ec_li°
,

262 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_ãxt_ba£
),

263 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_ãxt_size
),

264 
NULL
);

265 
	`exo_¥öt
(
exo
, 
fd
);

266 
	`Ârötf
(
fd
, "\n\n");

267 
	`exo_dñëe
(
exo
);

269 
	`Ârötf
(
fd
, "/* data segment specifiers (base & size) */\n");

270 
exo
 = 
	`exo_√w
(
ec_li°
,

271 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_d©a_ba£
),

272 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_d©a_size
),

273 
NULL
);

274 
	`exo_¥öt
(
exo
, 
fd
);

275 
	`Ârötf
(
fd
, "\n\n");

276 
	`exo_dñëe
(
exo
);

278 
	`Ârötf
(
fd
, "/* stack segment specifiers (base & size) */\n");

279 
exo
 = 
	`exo_√w
(
ec_li°
,

280 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_ba£
),

281 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_°ack_size
),

282 
NULL
);

283 
	`exo_¥öt
(
exo
, 
fd
);

284 
	`Ârötf
(
fd
, "\n\n");

285 
	`exo_dñëe
(
exo
);

288 
	`MEM_FORALL
(
mem
, 
i
, 
±e
)

291 
exo
 = 
	`exo_√w
(
ec_li°
,

292 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
	`MEM_PTE_ADDR
(
±e
, 
i
)),

293 
	`exo_√w
(
ec_blob
, 
MD_PAGE_SIZE
, 
±e
->
∑ge
),

294 
NULL
);

295 
	`exo_¥öt
(
exo
, 
fd
);

296 
	`Ârötf
(
fd
, "\n\n");

297 
	`exo_dñëe
(
exo
);

300 
	`myÂrötf
(
fd
, "/* **Énd checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

302  
eio_å™s_i˙t
;

303 
	}
}

307 
cou¡î_t


308 
	$eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

309 
mem_t
 *
mem
,

310 
FILE
 *
fd
)

312 
i
, 
∑ge_cou¡
;

313 
cou¡î_t
 
å™s_i˙t
;

314 
exo_ãrm_t
 *
exo
, *
ñt
;

317 
exo
 = 
	`exo_ªad
(
fd
);

318 i‡(!
exo


319 || 
exo
->
ec
 !
ec_öãgî
)

320 
	`Áèl
("couldÇotÑead EIO fileÖointer");

321 
å™s_i˙t
 = 
exo
->
as_öãgî
.
vÆ
;

322 
	`exo_dñëe
(
exo
);

325 
exo
 = 
	`exo_ªad
(
fd
);

326 
	`MD_EXO_TO_MISC_REGS
(
exo
, 
sim_num_ö¢
, 
ªgs
);

327 
	`exo_dñëe
(
exo
);

330 
exo
 = 
	`exo_ªad
(
fd
);

331 i‡(!
exo


332 || 
exo
->
ec
 !
ec_li°
)

333 
	`Áèl
("couldÇotÑead EIO integerÑegs");

334 
ñt
 = 
exo
->
as_li°
.
hód
;

335 
i
=0; i < 
MD_NUM_IREGS
; i++)

337 i‡(!
ñt
)

338 
	`Áèl
("couldÇotÑead EIO integerÑegs (too few)");

340 i‡(
ñt
->
ec
 !
ec_addªss
)

341 
	`Áèl
("couldÇotÑead EIO integerÑegs (bad value)");

343 
	`MD_EXO_TO_IREG
(
ñt
, 
ªgs
, 
i
);

344 
ñt
 =É…->
√xt
;

346 i‡(
ñt
 !
NULL
)

347 
	`Áèl
("couldÇotÑead EIO integerÑegs (too many)");

348 
	`exo_dñëe
(
exo
);

351 
exo
 = 
	`exo_ªad
(
fd
);

352 i‡(!
exo


353 || 
exo
->
ec
 !
ec_li°
)

354 
	`Áèl
("couldÇotÑead EIO FPÑegs");

355 
ñt
 = 
exo
->
as_li°
.
hód
;

356 
i
=0; i < 
MD_NUM_FREGS
; i++)

358 i‡(!
ñt
)

359 
	`Áèl
("couldÇotÑead EIO FPÑegs (too few)");

361 i‡(
ñt
->
ec
 !
ec_addªss
)

362 
	`Áèl
("couldÇotÑead EIO FPÑegs (bad value)");

364 
	`MD_EXO_TO_FREG
(
ñt
, 
ªgs
, 
i
);

365 
ñt
 =É…->
√xt
;

367 i‡(
ñt
 !
NULL
)

368 
	`Áèl
("couldÇotÑead EIO FPÑegs (too many)");

369 
	`exo_dñëe
(
exo
);

372 
exo
 = 
	`exo_ªad
(
fd
);

373 i‡(!
exo


374 || 
exo
->
ec
 !
ec_li°


375 || !
exo
->
as_li°
.
hód


376 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


377 || !
exo
->
as_li°
.
hód
->
√xt


378 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss


379 || !
exo
->
as_li°
.
hód
->
√xt
->next

380 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss


381 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

382 
	`Áèl
("couldÇotÑead EIO memoryÖage count");

383 
∑ge_cou¡
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

384 
ld_brk_poöt
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
;

385 
ld_°ack_mö
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
;

386 
	`exo_dñëe
(
exo
);

389 
exo
 = 
	`exo_ªad
(
fd
);

390 i‡(!
exo


391 || 
exo
->
ec
 !
ec_li°


392 || !
exo
->
as_li°
.
hód


393 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


394 || !
exo
->
as_li°
.
hód
->
√xt


395 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


396 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

397 
	`Áèl
("countÇotÑead EIOÅext segment specifiers");

398 
ld_ãxt_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

399 
ld_ãxt_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

400 
	`exo_dñëe
(
exo
);

403 
exo
 = 
	`exo_ªad
(
fd
);

404 i‡(!
exo


405 || 
exo
->
ec
 !
ec_li°


406 || !
exo
->
as_li°
.
hód


407 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


408 || !
exo
->
as_li°
.
hód
->
√xt


409 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


410 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

411 
	`Áèl
("countÇotÑead EIO data segment specifiers");

412 
ld_d©a_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

413 
ld_d©a_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

414 
	`exo_dñëe
(
exo
);

417 
exo
 = 
	`exo_ªad
(
fd
);

418 i‡(!
exo


419 || 
exo
->
ec
 !
ec_li°


420 || !
exo
->
as_li°
.
hód


421 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


422 || !
exo
->
as_li°
.
hód
->
√xt


423 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


424 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

425 
	`Áèl
("countÇotÑead EIO stack segment specifiers");

426 
ld_°ack_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

427 
ld_°ack_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

428 
	`exo_dñëe
(
exo
);

430 
i
=0; i < 
∑ge_cou¡
; i++)

432 
j
;

433 
md_addr_t
 
∑ge_addr
;

434 
exo_ãrm_t
 *
blob
;

437 
exo
 = 
	`exo_ªad
(
fd
);

438 i‡(!
exo


439 || 
exo
->
ec
 !
ec_li°


440 || !
exo
->
as_li°
.
hód


441 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


442 || !
exo
->
as_li°
.
hód
->
√xt


443 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_blob


444 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

445 
	`Áèl
("couldÇotÑead EIO memoryÖage");

446 
∑ge_addr
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

447 
blob
 = 
exo
->
as_li°
.
hód
->
√xt
;

450 
j
=0; j < 
blob
->
as_blob
.
size
; j++)

452 
byã_t
 
vÆ
;

454 
vÆ
 = 
blob
->
as_blob
.
d©a
[
j
];

456 
	`MEM_WRITE_BYTE
(
mem
, 
∑ge_addr
, 
vÆ
);

457 
∑ge_addr
++;

459 
	`exo_dñëe
(
exo
);

462  
å™s_i˙t
;

463 
	}
}

465 
	smem_ªc_t
 {

466 
md_addr_t
 
	maddr
;

467 
	msize
, 
	mmaxsize
;

468 
exo_ãrm_t
 *
	mexo
;

469 
exo_ãrm_t
 *
	mblob
;

473 
exo_ãrm_t
 *
	göput_ªgs
;

474 
exo_ãrm_t
 *
	gouçut_ªgs
;

477 
exo_ãrm_t
 *
	göput_mem
;

478 
mem_ªc_t
 
	göput_mem_ªc
;

481 
exo_ãrm_t
 *
	gouçut_mem
;

482 
mem_ªc_t
 
	gouçut_mem_ªc
;

484 
	g£í_wrôe
;

485 
mem_ac˚ss_‚
 
	gloˇl_mem_‚
;

488 
	#BLOB_TAIL_SIZE
 256

	)

491 
md_Áu…_ty≥


492 
	$my_mem_‚
(
mem_t
 *
mem
,

493 
mem_cmd
 
cmd
,

494 
md_addr_t
 
addr
,

495 *
vp
,

496 
nbyãs
)

498 
i
;

499 *
p
 = 
vp
;

500 
mem_ªc_t
 *
mem_ªc
 = 
NULL
;

501 
exo_ãrm_t
 *
mem_li°
 = 
NULL
;

502 
md_Áu…_ty≥
 
Áu…
 = 
md_Áu…_n⁄e
;

504 i‡(
cmd
 =
Ród
 && 
£í_wrôe
)

505 
	`Áèl
("Readáfter Write inÉio_syscall()");

507 i‡(
cmd
 =
Wrôe
)

508 
£í_wrôe
 = 
TRUE
;

511 i‡(
cmd
 =
Ród
)

513 
mem_ªc
 = &
öput_mem_ªc
;

514 
mem_li°
 = 
öput_mem
;

516 i‡(
cmd
 =
Wrôe
)

518 
mem_ªc
 = &
ouçut_mem_ªc
;

519 
mem_li°
 = 
ouçut_mem
;

522 
	`∑nic
("bogus memoryáccess command");

525 i‡(
cmd
 =
Ród
 )

526 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

531 i‡(
mem_ªc
->
exo
 !
NULL


532 && (
mem_ªc
->
addr
 + mem_ªc->
size
 ==áddr)

533 && (
mem_ªc
->
size
 + 
nbyãs
 < mem_ªc->
maxsize
))

536 
i
=0; i < 
nbyãs
; i++)

537 
mem_ªc
->
blob
->
as_blob
.
d©a
[mem_ªc->
size
 + 
i
] = 
p
[i];

538 
mem_ªc
->
size
 +
nbyãs
;

539 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

544 
mem_li°
->
as_li°
.
hód
 =

545 
	`exo_chaö
(
mem_li°
->
as_li°
.
hód
,

546 (
mem_ªc
->
exo
 =

547 
	`exo_√w
(
ec_li°
,

548 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
addr
),

549 (
mem_ªc
->
blob
 =

550 
	`exo_√w
(
ec_blob
, 
nbyãs
 + 
BLOB_TAIL_SIZE
, 
NULL
)),

551 
NULL
)));

552 
i
=0; i < 
nbyãs
; i++)

553 
mem_ªc
->
blob
->
as_blob
.
d©a
[
i
] = 
p
[i];

554 
mem_ªc
->
addr
 =áddr;

555 
mem_ªc
->
size
 = 
nbyãs
;

556 
mem_ªc
->
maxsize
 = 
nbyãs
 + 
BLOB_TAIL_SIZE
;

557 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

561 i‡(
cmd
 =
Wrôe
 )

562 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

564  
Áu…
;

565 
	}
}

571 
	$eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

572 
cou¡î_t
 
i˙t
,

573 
ªgs_t
 *
ªgs
,

574 
mem_ac˚ss_‚
 
mem_‚
,

575 
mem_t
 *
mem
,

576 
md_ö°_t
 
ö°
)

578 
i
;

579 
exo_ãrm_t
 *
exo
;

582 
öput_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

583 
i
=
MD_FIRST_IN_REG
; i <
MD_LAST_IN_REG
; i++)

585 
öput_ªgs
->
as_li°
.
hód
 =

586 
	`exo_chaö
(
öput_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

590 
öput_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
öput_mem_ªc
.
exo
 = NULL;

591 
ouçut_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
ouçut_mem_ªc
.
exo
 = NULL;

594 
£í_wrôe
 = 
FALSE
;

595 
loˇl_mem_‚
 = 
mem_‚
;

597 i‡(
sim_eio_fd
 !
NULL
)

598 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
i˙t
, 
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
);

601 
	`sys_sysˇŒ
(
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
, 
FALSE
);

605 
ouçut_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

606 
ouçut_ªgs
->
as_li°
.
hód
 =

607 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
,

608 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
));

609 
i
=
MD_FIRST_OUT_REG
; i <
MD_LAST_OUT_REG
; i++)

611 
ouçut_ªgs
->
as_li°
.
hód
 =

612 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

616 
exo
 = 
	`exo_√w
(
ec_li°
,

617  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
i˙t
),

618  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ªgs
->
ªgs_PC
),

619 
öput_ªgs
, 
öput_mem
,

620 
ouçut_ªgs
, 
ouçut_mem
,

621 
NULL
);

622 
	`exo_¥öt
(
exo
, 
eio_fd
);

623 
	`Ârötf
(
eio_fd
, "\n\n");

626 
	`exo_dñëe
(
exo
);

629 
eio_å™s_i˙t
 = 
i˙t
;

630 
	}
}

636 
	$eio_ªad_åa˚
(
FILE
 *
eio_fd
,

637 
cou¡î_t
 
i˙t
,

638 
ªgs_t
 *
ªgs
,

639 
mem_ac˚ss_‚
 
mem_‚
,

640 
mem_t
 *
mem
,

641 
md_ö°_t
 
ö°
)

643 
i
;

644 
exo_ãrm_t
 *
exo
, *
exo_i˙t
, *
exo_pc
;

645 
exo_ãrm_t
 *
exo_öªgs
, *
exo_ömem
, *
exo_ouåegs
, *
exo_outmem
;

646 
exo_ãrm_t
 *
brkªc
, *
ªgªc
, *
memªc
;

649 i‡(
	`MD_EXIT_SYSCALL
(
ªgs
))

651 
	`sys_sysˇŒ
(
ªgs
, 
mem_‚
, 
mem
, 
ö°
, 
FALSE
);

652 
	`∑nic
("returned fromÉxit() system call");

656 
exo
 = 
	`exo_ªad
(
eio_fd
);

659 
eio_å™s_i˙t
 = 
i˙t
;

662 i‡(!
exo


663 || 
exo
->
ec
 !
ec_li°


664 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

665 || 
exo_i˙t
->
ec
 !
ec_öãgî


666 || !(
exo_pc
 = 
exo_i˙t
->
√xt
)

667 || 
exo_pc
->
ec
 !
ec_addªss


668 || !(
exo_öªgs
 = 
exo_pc
->
√xt
)

669 || 
exo_öªgs
->
ec
 !
ec_li°


670 || !(
exo_ömem
 = 
exo_öªgs
->
√xt
)

671 || 
exo_ömem
->
ec
 !
ec_li°


672 || !(
exo_ouåegs
 = 
exo_ömem
->
√xt
)

673 || 
exo_ouåegs
->
ec
 !
ec_li°


674 || !(
exo_outmem
 = 
exo_ouåegs
->
√xt
)

675 || 
exo_outmem
->
ec
 !
ec_li°


676 || 
exo_outmem
->
√xt
 !
NULL
)

677 
	`Áèl
("cannotÑead EIOÅransaction");

684 i‡(
i˙t
 !(
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
)

685 
	`Áèl
("EIOÅrace inconsistency: ICNT mismatch");

688 i‡(
ªgs
->
ªgs_PC
 !(
md_addr_t
)
exo_pc
->
as_öãgî
.
vÆ
)

689 
	`Áèl
("EIOÅrace inconsistency: PC mismatch");

692 
i
=
MD_FIRST_IN_REG
, 
ªgªc
=
exo_öªgs
->
as_li°
.
hód
;

693 
i
 <
MD_LAST_IN_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

695 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

696 
	`Áèl
("EIOÅrace inconsistency: missing inputÑeg");

698 i‡(
	`MD_EXO_CMP_IREG
(
ªgªc
, 
ªgs
, 
i
))

699 
	`Áèl
("EIOÅø˚ inc⁄si°ícy: R[%d] i≈uàmism©ch", 
i
);

700 #ifde‡
VERBOSE


701 
	`Ârötf
(
°dîr
, "** R[%d] check†out...\n", 
i
);

704 i‡(
ªgªc
 !
NULL
)

705 
	`Áèl
("EIOÅrace inconsistency:Åoo many inputÑegs");

708 
memªc
=
exo_ömem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

710 
md_addr_t
 
loc
;

711 
exo_ãrm_t
 *
addr
, *
blob
;

714 i‡(!
memªc


715 || 
memªc
->
ec
 !
ec_li°


716 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

717 || 
addr
->
ec
 !
ec_addªss


718 || !(
blob
 = 
addr
->
√xt
)

719 || 
blob
->
ec
 !
ec_blob


720 || 
blob
->
√xt
 !
NULL
)

721 
	`Áèl
("EIOÅrace inconsistency: bad memoryÅransaction");

723 
loc
=
addr
->
as_öãgî
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

725 
vÆ
;

728 (*
mem_‚
)(
mem
, 
Ród
, 
loc
, &
vÆ
, ());

730 i‡(
vÆ
 !
blob
->
as_blob
.
d©a
[
i
])

731 
	`Áèl
("EIOÅø˚ inc⁄si°ícy:ádd∏0x%08∞öpuàmism©ch", 
loc
);

733 #ifde‡
VERBOSE


734 
	`myÂrötf
(
°dîr
, "** 0x%08∞check†out...\n", 
loc
);

739 i‡(
	`MD_OUTPUT_SYSCALL
(
ªgs
))

741 i‡(
sim_¥ogfd
)

744 
	`fwrôe
(
blob
->
as_blob
.
d©a
, 1, blob->as_blob.
size
, 
sim_¥ogfd
);

749 
	`wrôe
(
	`MD_STREAM_FILENO
(
ªgs
),

750 
blob
->
as_blob
.
d©a
, blob->as_blob.
size
);

760 
brkªc
 = 
exo_ouåegs
->
as_li°
.
hód
;

761 i‡(!
brkªc
 || brkªc->
ec
 !
ec_addªss
)

762 
	`Áèl
("EIOÅrace inconsistency: missing memory breakpoint");

763 
ld_brk_poöt
 = (
md_addr_t
)
brkªc
->
as_öãgî
.
vÆ
;

766 
i
=
MD_FIRST_OUT_REG
, 
ªgªc
=
exo_ouåegs
->
as_li°
.
hód
->
√xt
;

767 
i
 <
MD_LAST_OUT_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

769 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

770 
	`Áèl
("EIOÅrace inconsistency: missing outputÑeg");

772 
	`MD_EXO_TO_IREG
(
ªgªc
, 
ªgs
, 
i
);

774 #ifde‡
VERBOSE


775 
	`Ârötf
(
°dîr
, "** R[%d] wrôãn...\n", 
i
);

778 i‡(
ªgªc
 !
NULL
)

779 
	`Áèl
("EIOÅrace inconsistency:Åoo many outputÑegs");

782 
memªc
=
exo_outmem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

784 
md_addr_t
 
loc
;

785 
exo_ãrm_t
 *
addr
, *
blob
;

788 i‡(!
memªc


789 || 
memªc
->
ec
 !
ec_li°


790 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

791 || 
addr
->
ec
 !
ec_addªss


792 || !(
blob
 = 
addr
->
√xt
)

793 || 
blob
->
ec
 !
ec_blob


794 || 
blob
->
√xt
 !
NULL
)

795 
	`Áèl
("EIOÅrace icnonsistency: bad memoryÅransaction");

797 
loc
=
addr
->
as_öãgî
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

800 (*
mem_‚
)(
mem
, 
Wrôe
,

801 
loc
, &
blob
->
as_blob
.
d©a
[
i
], ());

803 #ifde‡
VERBOSE


804 
	`Ârötf
(
°dîr
, "** 0x%08∞wrôãn...\n", 
loc
);

810 
	`exo_dñëe
(
exo
);

811 
	}
}

815 
	$eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
)

817 
exo_ãrm_t
 *
exo
, *
exo_i˙t
;

822 
exo
 = 
	`exo_ªad
(
eio_fd
);

824 i‡(!
exo
)

825 
	`Áèl
("couldÇot fast forwardÅo EIO checkpoint");

828 
eio_å™s_i˙t
 = 
i˙t
;

831 i‡(!
exo


832 || 
exo
->
ec
 !
ec_li°


833 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

834 || 
exo_i˙t
->
ec
 !
ec_öãgî
)

835 
	`Áèl
("cannotÑead EIOÅransaction (during fast forward)");

837 (
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
 !
i˙t
);

840 
	}
}

	@eio.h

52 #i‚de‡
EIO_H


53 
	#EIO_H


	)

55 
	~<°dio.h
>

58 
	#EIO_PISA_FORMAT
 1

	)

59 
	#EIO_ALPHA_FORMAT
 2

	)

62 
	#EIO_FILE_VERSION
 3

	)

64 
FILE
 *
eio_¸óã
(*
‚ame
);

66 
FILE
 *
eio_›í
(*
‚ame
);

69 
eio_vÆid
(*
‚ame
);

71 
eio_˛o£
(
FILE
 *
fd
);

75 
cou¡î_t


76 
eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

77 
mem_t
 *
mem
,

78 
FILE
 *
fd
);

82 
cou¡î_t


83 
eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

84 
mem_t
 *
mem
,

85 
FILE
 *
fd
);

91 
eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

92 
cou¡î_t
 
i˙t
,

93 
ªgs_t
 *
ªgs
,

94 
mem_ac˚ss_‚
 
mem_‚
,

95 
mem_t
 *
mem
,

96 
md_ö°_t
 
ö°
);

102 
eio_ªad_åa˚
(
FILE
 *
eio_fd
,

103 
cou¡î_t
 
i˙t
,

104 
ªgs_t
 *
ªgs
,

105 
mem_ac˚ss_‚
 
mem_‚
,

106 
mem_t
 *
mem
,

107 
md_ö°_t
 
ö°
);

110 
eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
);

	@endian.c

52 
	~"ídün.h
"

53 #i‚de‡
HOST_ONLY


54 
	~"lﬂdî.h
"

58 
ídün_t


59 
	$ídün_ho°_byã_‹dî
()

61 
i
 = 1, *
p
;

63 
p
 = &
i
;

64 i‡(*((*)
p
) == 1)

65  
ídün_lôée
;

66 i‡(*((*)
p
) == 0)

67  
ídün_big
;

69  
ídün_unknown
;

70 
	}
}

73 
ídün_t


74 
	$ídün_ho°_w‹d_‹dî
()

76 *
p
;

77 
x
 = 1.0;

80 
p
 = (*)&
x
;

81 i‡(*
p
 == 0)

82  
ídün_lôée
;

83 i‡(*
p
 == 0x3ff00000)

84  
ídün_big
;

86  
ídün_unknown
;

87 
	}
}

89 #i‚de‡
HOST_ONLY


93 
ídün_t


94 
	$ídün_èrgë_byã_‹dî
()

96  
ld_èrgë_big_ídün
 ? 
ídün_big
 : 
ídün_lôée
;

97 
	}
}

101 
ídün_t


102 
	$ídün_èrgë_w‹d_‹dî
()

105  
	`ídün_èrgë_byã_‹dî
();

106 
	}
}

	@endian.h

52 #i‚de‡
ENDIAN_H


53 
	#ENDIAN_H


	)

56 
	#SWAP_HALF
(
X
) \

57 (((((
hÆf_t
)(
X
)Ë& 0xffË<< 8Ë| ((((hÆf_t)(X)Ë& 0xff00Ë>> 8))

	)

58 
	#SWAP_WORD
(
X
Ë(((
w‹d_t
)(X) << 24) | \

59 (((
w‹d_t
)(
X
) << 8) & 0x00ff0000) | \

60 (((
w‹d_t
)(
X
) >> 8) & 0x0000ff00) | \

61 (((
w‹d_t
)(
X
Ë>> 24Ë& 0x000000ff))

	)

62 
	#SWAP_QWORD
(
X
Ë(((
qw‹d_t
)(X) << 56) | \

63 (((
qw‹d_t
)(
X
Ë<< 40Ë& 
	`ULL
(0x00ff000000000000)) |\

64 (((
qw‹d_t
)(
X
Ë<< 24Ë& 
	`ULL
(0x0000ff0000000000)) |\

65 (((
qw‹d_t
)(
X
Ë<< 8Ë& 
	`ULL
(0x000000ff00000000)) |\

66 (((
qw‹d_t
)(
X
Ë>> 8Ë& 
	`ULL
(0x00000000ff000000)) |\

67 (((
qw‹d_t
)(
X
Ë>> 24Ë& 
	`ULL
(0x0000000000ff0000)) |\

68 (((
qw‹d_t
)(
X
Ë>> 40Ë& 
	`ULL
(0x000000000000ff00)) |\

69 (((
qw‹d_t
)(
X
Ë>> 56Ë& 
	`ULL
(0x00000000000000ff)))

	)

72 
	eídün_t
 { 
	mídün_big
, 
	mídün_lôée
, 
	mídün_unknown
};

74 
ídün_t


75 
ídün_ho°_byã_‹dî
();

78 
ídün_t


79 
ídün_ho°_w‹d_‹dî
();

81 #i‚de‡
HOST_ONLY


85 
ídün_t


86 
ídün_èrgë_byã_‹dî
();

90 
ídün_t


91 
ídün_èrgë_w‹d_‹dî
();

	@eval.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<˘y≥.h
>

55 
	~<î∫o.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"evÆ.h
"

61 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

62 
	#°πoul
 
°πﬁ


	)

66 
evÆ_îr_t
 
	gevÆ_îr‹
 = 
ERR_NOERR
;

69 *
	gevÆ_îr_°r
[
ERR_NUM
] = {

81 
evÆ_tokí_t
 
	gtok_m≠
[256];

82 
	gtok_m≠_öôülized
 = 
FALSE
;

86 
	$öô_tok_m≠
()

88 
i
;

90 
i
=0; i<256; i++)

91 
tok_m≠
[
i
] = 
tok_övÆid
;

94 
i
='a'; i<='z'; i++)

95 
tok_m≠
[
i
] = 
tok_idít
;

96 
i
='A'; i<='Z'; i++)

97 
tok_m≠
[
i
] = 
tok_idít
;

98 
tok_m≠
[()'_'] = 
tok_idít
;

99 
tok_m≠
[()'$'] = 
tok_idít
;

102 
i
='0'; i<='9'; i++)

103 
tok_m≠
[
i
] = 
tok_c⁄°
;

104 
tok_m≠
[()'.'] = 
tok_c⁄°
;

107 
tok_m≠
[()'+'] = 
tok_∂us
;

108 
tok_m≠
[()'-'] = 
tok_möus
;

109 
tok_m≠
[()'*'] = 
tok_mu…
;

110 
tok_m≠
[()'/'] = 
tok_div
;

111 
tok_m≠
[()'('] = 
tok_›¨í
;

112 
tok_m≠
[()')'] = 
tok_˝¨í
;

115 
tok_m≠
[()' '] = 
tok_whôe•a˚
;

116 
tok_m≠
[()'\t'] = 
tok_whôe•a˚
;

117 
	}
}

120 
evÆ_tokí_t


121 
	$gë_√xt_tokí
(
evÆ_°©e_t
 *
es
)

123 
Ælow_hex
;

124 
evÆ_tokí_t
 
tok
;

125 *
±ok_buf
, 
œ°_ch¨
;

128 i‡(!
tok_m≠_öôülized
)

130 
	`öô_tok_m≠
();

131 
tok_m≠_öôülized
 = 
TRUE
;

135 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

137 
tok
 = 
es
->
≥ek_tok
;

138 
es
->
≥ek_tok
 = 
tok_övÆid
;

139  
tok
;

143 
±ok_buf
 = 
es
->
tok_buf
;

144 *
±ok_buf
 = '\0';

147 *
es
->
p
 && 
tok_m≠
[()*es->p] =
tok_whôe•a˚
)

148 
es
->
p
++;

151 i‡(*
es
->
p
 == '\0')

152  
tok_eof
;

154 *
±ok_buf
++ = *
es
->
p
;

155 
tok
 = 
tok_m≠
[()*
es
->
p
++];

156 
tok
)

158 
tok_idít
:

160 *
es
->
p


161 && (
tok_m≠
[()*
es
->
p
] =
tok_idít


162 || 
tok_m≠
[()*
es
->
p
] =
tok_c⁄°
))

164 *
±ok_buf
++ = *
es
->
p
++;

167 
tok_c⁄°
:

169 
œ°_ch¨
 = '\0';

170 
Ælow_hex
 = 
FALSE
;

171 *
es
->
p
 &&

172 (
tok_m≠
[()*
es
->
p
] =
tok_c⁄°


173 || (*
es
->
p
 ='-' && 
œ°_ch¨
 == 'e')

174 || (*
es
->
p
 ='+' && 
œ°_ch¨
 == 'e')

175 || 
	`tﬁowî
(*
es
->
p
) == 'e'

176 || 
	`tﬁowî
(*
es
->
p
) == 'x'

177 || (
	`tﬁowî
(*
es
->
p
Ë='a' && 
Ælow_hex
)

178 || (
	`tﬁowî
(*
es
->
p
Ë='b' && 
Ælow_hex
)

179 || (
	`tﬁowî
(*
es
->
p
Ë='c' && 
Ælow_hex
)

180 || (
	`tﬁowî
(*
es
->
p
Ë='d' && 
Ælow_hex
)

181 || (
	`tﬁowî
(*
es
->
p
Ë='e' && 
Ælow_hex
)

182 || (
	`tﬁowî
(*
es
->
p
Ë='f' && 
Ælow_hex
)))

184 
œ°_ch¨
 = 
	`tﬁowî
(*
es
->
p
);

185 i‡(*
es
->
p
 == 'x' || *es->p == 'X')

186 
Ælow_hex
 = 
TRUE
;

187 *
±ok_buf
++ = *
es
->
p
++;

190 
tok_∂us
:

191 
tok_möus
:

192 
tok_mu…
:

193 
tok_div
:

194 
tok_›¨í
:

195 
tok_˝¨í
:

199 
tok
 = 
tok_övÆid
;

204 *
±ok_buf
 = '\0';

206  
tok
;

207 
	}
}

211 
evÆ_tokí_t


212 
	$≥ek_√xt_tokí
(
evÆ_°©e_t
 *
es
)

215 i‡(
es
->
≥ek_tok
 =
tok_övÆid
)

217 
es
->
œ°p
 =És->
p
;

218 
es
->
≥ek_tok
 = 
	`gë_√xt_tokí
(es);

222  
es
->
≥ek_tok
;

223 
	}
}

226 
evÆ_vÆue_t
 
ex¥
(
evÆ_°©e_t
 *
es
);

229 
evÆ_vÆue_t
 
	gîr_vÆue
 = { 
ë_öt
, { 0 } };

232 *
	gevÆ_ty≥_°r
[
ë_NUM
] = {

236 #ifde‡
HOST_HAS_QWORD


246 
evÆ_ty≥_t


247 
	$ªsu…_ty≥
(
evÆ_ty≥_t
 
t1
,

248 
evÆ_ty≥_t
 
t2
)

251 i‡(
t1
 =
ë_symbﬁ
 || 
t2
 ==Ét_symbol)

252 
	`∑nic
("symbol used inÉxpression");

255 i‡(
t1
 =
ë_doubÀ
 || 
t2
 ==Ét_double)

256  
ë_doubÀ
;

257 i‡(
t1
 =
ë_Êﬂt
 || 
t2
 ==Ét_float)

258  
ë_Êﬂt
;

259 #ifde‡
HOST_HAS_QWORD


260 i‡(
t1
 =
ë_qw‹d
 || 
t2
 ==Ét_qword)

261  
ë_qw‹d
;

262 i‡(
t1
 =
ë_sqw‹d
 || 
t2
 ==Ét_sqword)

263  
ë_sqw‹d
;

265 i‡(
t1
 =
ë_addr
 || 
t2
 ==Ét_addr)

266  
ë_addr
;

267 i‡(
t1
 =
ë_uöt
 || 
t2
 ==Ét_uint)

268  
ë_uöt
;

270  
ë_öt
;

271 
	}
}

279 
	$evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
)

281 
vÆ
.
ty≥
)

283 
ë_doubÀ
:

284  
vÆ
.
vÆue
.
as_doubÀ
;

285 
ë_Êﬂt
:

286  ()
vÆ
.
vÆue
.
as_Êﬂt
;

287 #ifde‡
HOST_HAS_QWORD


288 
ë_qw‹d
:

289 #ifde‡
_MSC_VER


290  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

292  ()
vÆ
.
vÆue
.
as_qw‹d
;

294 
ë_sqw‹d
:

295  ()
vÆ
.
vÆue
.
as_sqw‹d
;

297 
ë_addr
:

298 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

300  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

302  ()
vÆ
.
vÆue
.
as_addr
;

304 
ë_uöt
:

305  ()
vÆ
.
vÆue
.
as_uöt
;

306 
ë_öt
:

307  ()
vÆ
.
vÆue
.
as_öt
;

308 
ë_symbﬁ
:

309 
	`∑nic
("symbol used inÉxpression");

311 
	`∑nic
("illegalárithmeticÉxpression conversion");

313 
	}
}

317 
	$evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
)

319 
vÆ
.
ty≥
)

321 
ë_doubÀ
:

322  ()
vÆ
.
vÆue
.
as_doubÀ
;

323 
ë_Êﬂt
:

324  
vÆ
.
vÆue
.
as_Êﬂt
;

325 #ifde‡
HOST_HAS_QWORD


326 
ë_qw‹d
:

327 #ifde‡
_MSC_VER


328  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

330  ()
vÆ
.
vÆue
.
as_qw‹d
;

332 
ë_sqw‹d
:

333  ()
vÆ
.
vÆue
.
as_sqw‹d
;

335 
ë_addr
:

336 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

338  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

340  ()
vÆ
.
vÆue
.
as_addr
;

342 
ë_uöt
:

343  ()
vÆ
.
vÆue
.
as_uöt
;

344 
ë_öt
:

345  ()
vÆ
.
vÆue
.
as_öt
;

346 
ë_symbﬁ
:

347 
	`∑nic
("symbol used inÉxpression");

349 
	`∑nic
("illegalárithmeticÉxpression conversion");

351 
	}
}

353 #ifde‡
HOST_HAS_QWORD


355 
qw‹d_t


356 
	$evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
)

358 
vÆ
.
ty≥
)

360 
ë_doubÀ
:

361  (
qw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

362 
ë_Êﬂt
:

363  (
qw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

364 
ë_qw‹d
:

365  
vÆ
.
vÆue
.
as_qw‹d
;

366 
ë_sqw‹d
:

367  (
qw‹d_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

368 
ë_addr
:

369  (
qw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

370 
ë_uöt
:

371  (
qw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

372 
ë_öt
:

373  (
qw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

374 
ë_symbﬁ
:

375 
	`∑nic
("symbol used inÉxpression");

377 
	`∑nic
("illegalárithmeticÉxpression conversion");

379 
	}
}

382 
sqw‹d_t


383 
	$evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
)

385 
vÆ
.
ty≥
)

387 
ë_doubÀ
:

388  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

389 
ë_Êﬂt
:

390  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

391 
ë_qw‹d
:

392  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

393 
ë_sqw‹d
:

394  
vÆ
.
vÆue
.
as_sqw‹d
;

395 
ë_addr
:

396  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

397 
ë_uöt
:

398  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

399 
ë_öt
:

400  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

401 
ë_symbﬁ
:

402 
	`∑nic
("symbol used inÉxpression");

404 
	`∑nic
("illegalárithmeticÉxpression conversion");

406 
	}
}

410 
md_addr_t


411 
	$evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
)

413 
vÆ
.
ty≥
)

415 
ë_doubÀ
:

416  (
md_addr_t
)
vÆ
.
vÆue
.
as_doubÀ
;

417 
ë_Êﬂt
:

418  (
md_addr_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

419 #ifde‡
HOST_HAS_QWORD


420 
ë_qw‹d
:

421  (
md_addr_t
)
vÆ
.
vÆue
.
as_qw‹d
;

422 
ë_sqw‹d
:

423  (
md_addr_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

425 
ë_addr
:

426  
vÆ
.
vÆue
.
as_addr
;

427 
ë_uöt
:

428  (
md_addr_t
)
vÆ
.
vÆue
.
as_uöt
;

429 
ë_öt
:

430  (
md_addr_t
)
vÆ
.
vÆue
.
as_öt
;

431 
ë_symbﬁ
:

432 
	`∑nic
("symbol used inÉxpression");

434 
	`∑nic
("illegalárithmeticÉxpression conversion");

436 
	}
}

440 
	$evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
)

442 
vÆ
.
ty≥
)

444 
ë_doubÀ
:

445  ()
vÆ
.
vÆue
.
as_doubÀ
;

446 
ë_Êﬂt
:

447  ()
vÆ
.
vÆue
.
as_Êﬂt
;

448 #ifde‡
HOST_HAS_QWORD


449 
ë_qw‹d
:

450  ()
vÆ
.
vÆue
.
as_qw‹d
;

451 
ë_sqw‹d
:

452  ()
vÆ
.
vÆue
.
as_sqw‹d
;

454 
ë_addr
:

455  ()
vÆ
.
vÆue
.
as_addr
;

456 
ë_uöt
:

457  
vÆ
.
vÆue
.
as_uöt
;

458 
ë_öt
:

459  ()
vÆ
.
vÆue
.
as_öt
;

460 
ë_symbﬁ
:

461 
	`∑nic
("symbol used inÉxpression");

463 
	`∑nic
("illegalárithmeticÉxpression conversion");

465 
	}
}

469 
	$evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
)

471 
vÆ
.
ty≥
)

473 
ë_doubÀ
:

474  ()
vÆ
.
vÆue
.
as_doubÀ
;

475 
ë_Êﬂt
:

476  ()
vÆ
.
vÆue
.
as_Êﬂt
;

477 #ifde‡
HOST_HAS_QWORD


478 
ë_qw‹d
:

479  ()
vÆ
.
vÆue
.
as_qw‹d
;

480 
ë_sqw‹d
:

481  ()
vÆ
.
vÆue
.
as_sqw‹d
;

483 
ë_addr
:

484  ()
vÆ
.
vÆue
.
as_addr
;

485 
ë_uöt
:

486  ()
vÆ
.
vÆue
.
as_uöt
;

487 
ë_öt
:

488  
vÆ
.
vÆue
.
as_öt
;

489 
ë_symbﬁ
:

490 
	`∑nic
("symbol used inÉxpression");

492 
	`∑nic
("illegalárithmeticÉxpression conversion");

494 
	}
}

501 
evÆ_vÆue_t


502 
	$f_add
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

504 
evÆ_ty≥_t
 
ë
;

505 
evÆ_vÆue_t
 
vÆ
;

508 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

510 
evÆ_îr‹
 = 
ERR_BADEXPR
;

511  
îr_vÆue
;

515 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

516 
ë
)

518 
ë_doubÀ
:

519 
vÆ
.
ty≥
 = 
ë_doubÀ
;

520 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë+ÉvÆ_as_doubÀ(
vÆ2
);

522 
ë_Êﬂt
:

523 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

524 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë+ÉvÆ_as_Êﬂt(
vÆ2
);

526 #ifde‡
HOST_HAS_QWORD


527 
ë_qw‹d
:

528 
vÆ
.
ty≥
 = 
ë_qw‹d
;

529 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë+ÉvÆ_as_qw‹d(
vÆ2
);

531 
ë_sqw‹d
:

532 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

533 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë+ÉvÆ_as_sqw‹d(
vÆ2
);

536 
ë_addr
:

537 
vÆ
.
ty≥
 = 
ë_addr
;

538 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë+ÉvÆ_as_addr(
vÆ2
);

540 
ë_uöt
:

541 
vÆ
.
ty≥
 = 
ë_uöt
;

542 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë+ÉvÆ_as_uöt(
vÆ2
);

544 
ë_öt
:

545 
vÆ
.
ty≥
 = 
ë_öt
;

546 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë+ÉvÆ_as_öt(
vÆ2
);

549 
	`∑nic
("bogusÉxpressionÅype");

552  
vÆ
;

553 
	}
}

556 
evÆ_vÆue_t


557 
	$f_sub
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

559 
evÆ_ty≥_t
 
ë
;

560 
evÆ_vÆue_t
 
vÆ
;

563 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

565 
evÆ_îr‹
 = 
ERR_BADEXPR
;

566  
îr_vÆue
;

570 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

571 
ë
)

573 
ë_doubÀ
:

574 
vÆ
.
ty≥
 = 
ë_doubÀ
;

575 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë-ÉvÆ_as_doubÀ(
vÆ2
);

577 
ë_Êﬂt
:

578 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

579 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë-ÉvÆ_as_Êﬂt(
vÆ2
);

581 #ifde‡
HOST_HAS_QWORD


582 
ë_qw‹d
:

583 
vÆ
.
ty≥
 = 
ë_qw‹d
;

584 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë-ÉvÆ_as_qw‹d(
vÆ2
);

586 
ë_sqw‹d
:

587 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

588 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë-ÉvÆ_as_sqw‹d(
vÆ2
);

591 
ë_addr
:

592 
vÆ
.
ty≥
 = 
ë_addr
;

593 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë-ÉvÆ_as_addr(
vÆ2
);

595 
ë_uöt
:

596 
vÆ
.
ty≥
 = 
ë_uöt
;

597 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë-ÉvÆ_as_uöt(
vÆ2
);

599 
ë_öt
:

600 
vÆ
.
ty≥
 = 
ë_öt
;

601 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë-ÉvÆ_as_öt(
vÆ2
);

604 
	`∑nic
("bogusÉxpressionÅype");

607  
vÆ
;

608 
	}
}

611 
evÆ_vÆue_t


612 
	$f_mu…
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

614 
evÆ_ty≥_t
 
ë
;

615 
evÆ_vÆue_t
 
vÆ
;

618 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

620 
evÆ_îr‹
 = 
ERR_BADEXPR
;

621  
îr_vÆue
;

625 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

626 
ë
)

628 
ë_doubÀ
:

629 
vÆ
.
ty≥
 = 
ë_doubÀ
;

630 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë*ÉvÆ_as_doubÀ(
vÆ2
);

632 
ë_Êﬂt
:

633 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

634 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë*ÉvÆ_as_Êﬂt(
vÆ2
);

636 #ifde‡
HOST_HAS_QWORD


637 
ë_qw‹d
:

638 
vÆ
.
ty≥
 = 
ë_qw‹d
;

639 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë*ÉvÆ_as_qw‹d(
vÆ2
);

641 
ë_sqw‹d
:

642 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

643 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë*ÉvÆ_as_sqw‹d(
vÆ2
);

646 
ë_addr
:

647 
vÆ
.
ty≥
 = 
ë_addr
;

648 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë*ÉvÆ_as_addr(
vÆ2
);

650 
ë_uöt
:

651 
vÆ
.
ty≥
 = 
ë_uöt
;

652 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë*ÉvÆ_as_uöt(
vÆ2
);

654 
ë_öt
:

655 
vÆ
.
ty≥
 = 
ë_öt
;

656 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë*ÉvÆ_as_öt(
vÆ2
);

659 
	`∑nic
("bogusÉxpressionÅype");

662  
vÆ
;

663 
	}
}

666 
evÆ_vÆue_t


667 
	$f_div
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

669 
evÆ_ty≥_t
 
ë
;

670 
evÆ_vÆue_t
 
vÆ
;

673 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

675 
evÆ_îr‹
 = 
ERR_BADEXPR
;

676  
îr_vÆue
;

680 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

681 
ë
)

683 
ë_doubÀ
:

684 
vÆ
.
ty≥
 = 
ë_doubÀ
;

685 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë/ÉvÆ_as_doubÀ(
vÆ2
);

687 
ë_Êﬂt
:

688 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

689 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë/ÉvÆ_as_Êﬂt(
vÆ2
);

691 #ifde‡
HOST_HAS_QWORD


692 
ë_qw‹d
:

693 
vÆ
.
ty≥
 = 
ë_qw‹d
;

694 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë/ÉvÆ_as_qw‹d(
vÆ2
);

696 
ë_sqw‹d
:

697 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

698 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë/ÉvÆ_as_sqw‹d(
vÆ2
);

701 
ë_addr
:

702 
vÆ
.
ty≥
 = 
ë_addr
;

703 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë/ÉvÆ_as_addr(
vÆ2
);

705 
ë_uöt
:

706 
vÆ
.
ty≥
 = 
ë_uöt
;

707 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë/ÉvÆ_as_uöt(
vÆ2
);

709 
ë_öt
:

710 
vÆ
.
ty≥
 = 
ë_öt
;

711 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë/ÉvÆ_as_öt(
vÆ2
);

714 
	`∑nic
("bogusÉxpressionÅype");

717  
vÆ
;

718 
	}
}

721 
evÆ_vÆue_t


722 
	$f_√g
(
evÆ_vÆue_t
 
vÆ1
)

724 
evÆ_vÆue_t
 
vÆ
;

727 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

729 
evÆ_îr‹
 = 
ERR_BADEXPR
;

730  
îr_vÆue
;

734 
vÆ1
.
ty≥
)

736 
ë_doubÀ
:

737 
vÆ
.
ty≥
 = 
ë_doubÀ
;

738 
vÆ
.
vÆue
.
as_doubÀ
 = - 
vÆ1
.value.as_double;

740 
ë_Êﬂt
:

741 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

742 
vÆ
.
vÆue
.
as_Êﬂt
 = - 
vÆ1
.value.as_float;

744 #ifde‡
HOST_HAS_QWORD


745 
ë_qw‹d
:

746 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

747 
vÆ
.
vÆue
.
as_qw‹d
 = - (
sqw‹d_t
)
vÆ1
.value.as_qword;

749 
ë_sqw‹d
:

750 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

751 
vÆ
.
vÆue
.
as_sqw‹d
 = - 
vÆ1
.value.as_sqword;

754 
ë_addr
:

755 
vÆ
.
ty≥
 = 
ë_addr
;

756 
vÆ
.
vÆue
.
as_addr
 = - 
vÆ1
.value.as_addr;

758 
ë_uöt
:

759 i‡(()
vÆ1
.
vÆue
.
as_uöt
 > 2147483648U)

762 #ifde‡
HOST_HAS_QWORD


763 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

764 
vÆ
.
vÆue
.
as_sqw‹d
 = - ((
sqw‹d_t
)
vÆ1
.vÆue.
as_uöt
);

766 
vÆ
.
ty≥
 = 
ë_doubÀ
;

767 
vÆ
.
vÆue
.
as_doubÀ
 = - (()
vÆ1
.vÆue.
as_uöt
);

773 
vÆ
.
ty≥
 = 
ë_öt
;

774 
vÆ
.
vÆue
.
as_öt
 = - (()
vÆ1
.vÆue.
as_uöt
);

777 
ë_öt
:

778 i‡(()
vÆ1
.
vÆue
.
as_öt
 == 0x80000000U)

781 
vÆ
.
ty≥
 = 
ë_uöt
;

782 
vÆ
.
vÆue
.
as_uöt
 = 2147483648U;

787 
vÆ
.
ty≥
 = 
ë_öt
;

788 
vÆ
.
vÆue
.
as_öt
 = - 
vÆ1
.value.as_int;

792 
	`∑nic
("bogusÉxpressionÅype");

795  
vÆ
;

796 
	}
}

800 
	$f_eq_zîo
(
evÆ_vÆue_t
 
vÆ1
)

802 
vÆ
;

805 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

807 
evÆ_îr‹
 = 
ERR_BADEXPR
;

808  
FALSE
;

811 
vÆ1
.
ty≥
)

813 
ë_doubÀ
:

814 
vÆ
 = 
vÆ1
.
vÆue
.
as_doubÀ
 == 0.0;

816 
ë_Êﬂt
:

817 
vÆ
 = 
vÆ1
.
vÆue
.
as_Êﬂt
 == 0.0;

819 #ifde‡
HOST_HAS_QWORD


820 
ë_qw‹d
:

821 
vÆ
 = 
vÆ1
.
vÆue
.
as_qw‹d
 == 0;

823 
ë_sqw‹d
:

824 
vÆ
 = 
vÆ1
.
vÆue
.
as_sqw‹d
 == 0;

827 
ë_addr
:

828 
vÆ
 = 
vÆ1
.
vÆue
.
as_addr
 == 0;

830 
ë_uöt
:

831 
vÆ
 = 
vÆ1
.
vÆue
.
as_uöt
 == 0;

833 
ë_öt
:

834 
vÆ
 = 
vÆ1
.
vÆue
.
as_öt
 == 0;

837 
	`∑nic
("bogusÉxpressionÅype");

840  
vÆ
;

841 
	}
}

846 
evÆ_vÆue_t


847 
	$c⁄°™t
(
evÆ_°©e_t
 *
es
)

849 
evÆ_vÆue_t
 
vÆ
;

850 
öt_vÆ
;

851 
uöt_vÆ
;

852 
doubÀ_vÆ
;

853 *
ídp
;

854 #ifde‡
HOST_HAS_QWORD


855 
sqw‹d_t
 
sqw‹d_vÆ
;

856 
qw‹d_t
 
qw‹d_vÆ
;

860 #i‡
	`deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

861 
	`°πﬁ
(*, **, );

862 
	`°πod
(*, **);

872 
î∫o
 = 0;

873 
öt_vÆ
 = 
	`°πﬁ
(
es
->
tok_buf
, &
ídp
, 0);

874 i‡(!
î∫o
 && !*
ídp
)

877 
vÆ
.
ty≥
 = 
ë_öt
;

878 
vÆ
.
vÆue
.
as_öt
 = 
öt_vÆ
;

879  
vÆ
;

883 
î∫o
 = 0;

884 
uöt_vÆ
 = 
	`°πoul
(
es
->
tok_buf
, &
ídp
, 0);

885 i‡(!
î∫o
 && !*
ídp
)

888 
vÆ
.
ty≥
 = 
ë_uöt
;

889 
vÆ
.
vÆue
.
as_uöt
 = 
uöt_vÆ
;

890  
vÆ
;

893 #ifde‡
HOST_HAS_QWORD


895 
î∫o
 = 0;

896 
sqw‹d_vÆ
 = 
	`my©osq
(
es
->
tok_buf
, &
ídp
, 0);

897 i‡(!
î∫o
 && !*
ídp
)

900 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

901 
vÆ
.
vÆue
.
as_sqw‹d
 = 
sqw‹d_vÆ
;

902  
vÆ
;

906 
î∫o
 = 0;

907 
qw‹d_vÆ
 = 
	`my©oq
(
es
->
tok_buf
, &
ídp
, 0);

908 i‡(!
î∫o
 && !*
ídp
)

911 
vÆ
.
ty≥
 = 
ë_qw‹d
;

912 
vÆ
.
vÆue
.
as_qw‹d
 = 
qw‹d_vÆ
;

913  
vÆ
;

919 
î∫o
 = 0;

920 
doubÀ_vÆ
 = 
	`°πod
(
es
->
tok_buf
, &
ídp
);

921 i‡(!
î∫o
 && !*
ídp
)

924 
vÆ
.
ty≥
 = 
ë_doubÀ
;

925 
vÆ
.
vÆue
.
as_doubÀ
 = 
doubÀ_vÆ
;

926  
vÆ
;

931 
evÆ_îr‹
 = 
ERR_BADCONST
;

932  
îr_vÆue
;

933 
	}
}

937 
evÆ_vÆue_t


938 
	$Á˘‹
(
evÆ_°©e_t
 *
es
)

940 
evÆ_tokí_t
 
tok
;

941 
evÆ_vÆue_t
 
vÆ
;

943 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

944 
tok
)

946 
tok_›¨í
:

947 ()
	`gë_√xt_tokí
(
es
);

948 
vÆ
 = 
	`ex¥
(
es
);

949 i‡(
evÆ_îr‹
)

950  
îr_vÆue
;

952 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

953 i‡(
tok
 !
tok_˝¨í
)

955 
evÆ_îr‹
 = 
ERR_UPAREN
;

956  
îr_vÆue
;

958 ()
	`gë_√xt_tokí
(
es
);

961 
tok_möus
:

963 ()
	`gë_√xt_tokí
(
es
);

964 
vÆ
 = 
	`Á˘‹
(
es
);

965 i‡(
evÆ_îr‹
)

966  
îr_vÆue
;

967 
vÆ
 = 
	`f_√g
(val);

970 
tok_idít
:

971 ()
	`gë_√xt_tokí
(
es
);

973 
vÆ
 = 
es
->
	`f_evÆ_idít
(es);

974 i‡(
evÆ_îr‹
)

975  
îr_vÆue
;

978 
tok_c⁄°
:

979 ()
	`gë_√xt_tokí
(
es
);

980 
vÆ
 = 
	`c⁄°™t
(
es
);

981 i‡(
evÆ_îr‹
)

982  
îr_vÆue
;

986 
evÆ_îr‹
 = 
ERR_NOTERM
;

987  
îr_vÆue
;

990  
vÆ
;

991 
	}
}

995 
evÆ_vÆue_t


996 
	$ãrm
(
evÆ_°©e_t
 *
es
)

998 
evÆ_tokí_t
 
tok
;

999 
evÆ_vÆue_t
 
vÆ
, 
vÆ1
;

1001 
vÆ
 = 
	`Á˘‹
(
es
);

1002 i‡(
evÆ_îr‹
)

1003  
îr_vÆue
;

1005 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1006 
tok
)

1008 
tok_mu…
:

1009 ()
	`gë_√xt_tokí
(
es
);

1010 
vÆ
 = 
	`f_mu…
(vÆ, 
	`ãrm
(
es
));

1011 i‡(
evÆ_îr‹
)

1012  
îr_vÆue
;

1015 
tok_div
:

1016 ()
	`gë_√xt_tokí
(
es
);

1017 
vÆ1
 = 
	`ãrm
(
es
);

1018 i‡(
evÆ_îr‹
)

1019  
îr_vÆue
;

1020 i‡(
	`f_eq_zîo
(
vÆ1
))

1022 
evÆ_îr‹
 = 
ERR_DIV0
;

1023  
îr_vÆue
;

1025 
vÆ
 = 
	`f_div
(vÆ, 
vÆ1
);

1031  
vÆ
;

1032 
	}
}

1036 
evÆ_vÆue_t


1037 
	$ex¥
(
evÆ_°©e_t
 *
es
)

1039 
evÆ_tokí_t
 
tok
;

1040 
evÆ_vÆue_t
 
vÆ
;

1042 
vÆ
 = 
	`ãrm
(
es
);

1043 i‡(
evÆ_îr‹
)

1044  
îr_vÆue
;

1046 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1047 
tok
)

1049 
tok_∂us
:

1050 ()
	`gë_√xt_tokí
(
es
);

1051 
vÆ
 = 
	`f_add
(vÆ, 
	`ex¥
(
es
));

1052 i‡(
evÆ_îr‹
)

1053  
îr_vÆue
;

1056 
tok_möus
:

1057 ()
	`gë_√xt_tokí
(
es
);

1058 
vÆ
 = 
	`f_sub
(vÆ, 
	`ex¥
(
es
));

1059 i‡(
evÆ_îr‹
)

1060  
îr_vÆue
;

1066  
vÆ
;

1067 
	}
}

1070 
evÆ_°©e_t
 *

1071 
	$evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

1072 *
u£r_±r
)

1074 
evÆ_°©e_t
 *
es
;

1076 
es
 = 
	`ˇŒoc
(1, (
evÆ_°©e_t
));

1077 i‡(!
es
)

1078 
	`Áèl
("out of virtual memory");

1080 
es
->
f_evÆ_idít
 = f_eval_ident;

1081 
es
->
u£r_±r
 = user_ptr;

1083  
es
;

1084 
	}
}

1088 
	$evÆ_dñëe
(
evÆ_°©e_t
 *
es
)

1090 
	`‰ì
(
es
);

1091 
	}
}

1095 
evÆ_vÆue_t


1096 
	$evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

1097 *
p
,

1098 **
ídp
)

1100 
evÆ_vÆue_t
 
vÆ
;

1103 
evÆ_îr‹
 = 
ERR_NOERR
;

1104 
es
->
p
 =Ö;

1105 *
es
->
tok_buf
 = '\0';

1106 
es
->
≥ek_tok
 = 
tok_övÆid
;

1109 
vÆ
 = 
	`ex¥
(
es
);

1112 i‡(
ídp
)

1114 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

1117 *
ídp
 = 
es
->
œ°p
;

1120 *
ídp
 = 
es
->
p
;

1123  
vÆ
;

1124 
	}
}

1128 
	$evÆ_¥öt
(
FILE
 *
°ªam
,

1129 
evÆ_vÆue_t
 
vÆ
)

1131 
vÆ
.
ty≥
)

1133 
ë_doubÀ
:

1134 
	`Ârötf
(
°ªam
, "%‡[doubÀ]", 
vÆ
.
vÆue
.
as_doubÀ
);

1136 
ë_Êﬂt
:

1137 
	`Ârötf
(
°ªam
, "%‡[Êﬂt]", ()
vÆ
.
vÆue
.
as_Êﬂt
);

1139 #ifde‡
HOST_HAS_QWORD


1140 
ë_qw‹d
:

1141 
	`myÂrötf
(
°ªam
, "%lu [qw‹d_t]", 
vÆ
.
vÆue
.
as_qw‹d
);

1143 
ë_sqw‹d
:

1144 
	`myÂrötf
(
°ªam
, "%ld [sqw‹d_t]", 
vÆ
.
vÆue
.
as_sqw‹d
);

1147 
ë_addr
:

1148 
	`myÂrötf
(
°ªam
, "0x%∞[md_addr_t]", 
vÆ
.
vÆue
.
as_addr
);

1150 
ë_uöt
:

1151 
	`Ârötf
(
°ªam
, "%u [uöt]", 
vÆ
.
vÆue
.
as_uöt
);

1153 
ë_öt
:

1154 
	`Ârötf
(
°ªam
, "%d [öt]", 
vÆ
.
vÆue
.
as_öt
);

1156 
ë_symbﬁ
:

1157 
	`Ârötf
(
°ªam
, "\"%s\" [symbﬁ]", 
vÆ
.
vÆue
.
as_symbﬁ
);

1160 
	`∑nic
("bogusÉxpressionÅype");

1162 
	}
}

1165 #ifde‡
TEST


1167 
evÆ_vÆue_t
 
	g™_öt
;

1168 
evÆ_vÆue_t
 
	ga_uöt
;

1169 
evÆ_vÆue_t
 
	ga_Êﬂt
;

1170 
evÆ_vÆue_t
 
	ga_doubÀ
;

1171 
evÆ_vÆue_t
 
	ga_symbﬁ
;

1173 
	ssym_m≠_t
 {

1174 *
	msymbﬁ
;

1175 
evÆ_vÆue_t
 *
	mvÆue
;

1178 
sym_m≠_t
 
	gsym_m≠
[] = {

1179 { "™_öt", &
™_öt
 },

1180 { "a_uöt", &
a_uöt
 },

1181 { "a_Êﬂt", &
a_Êﬂt
 },

1182 { "a_doubÀ", &
a_doubÀ
 },

1183 { "a_symbﬁ", &
a_symbﬁ
 },

1184 { 
NULL
, NULL },

1187 
evÆ_vÆue_t


1188 
	$my_evÆ_idít
(
evÆ_°©e_t
 *
es
)

1190 
sym_m≠_t
 *
sym
;

1192 
sym
=
sym_m≠
; sym->
symbﬁ
 !
NULL
; sym++)

1194 i‡(!
	`°rcmp
(
sym
->
symbﬁ
, 
es
->
tok_buf
))

1195  *
sym
->
vÆue
;

1198 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

1199  
îr_vÆue
;

1200 
	}
}

1203 
	$maö
()

1205 
evÆ_°©e_t
 *
es
;

1208 
™_öt
.
ty≥
 = 
ë_öt
;án_öt.
vÆue
.
as_öt
 = 1;

1209 
a_uöt
.
ty≥
 = 
ë_uöt
;á_uöt.
vÆue
.
as_uöt
 = 2;

1210 
a_Êﬂt
.
ty≥
 = 
ë_Êﬂt
;á_Êﬂt.
vÆue
.
as_Êﬂt
 = 3.0f;

1211 
a_doubÀ
.
ty≥
 = 
ë_doubÀ
;á_doubÀ.
vÆue
.
as_doubÀ
 = 4.0;

1212 
a_symbﬁ
.
ty≥
 = 
ë_symbﬁ
;á_symbﬁ.
vÆue
.
as_symbﬁ
 = "testing 1 2 3...";

1215 
es
 = 
	`evÆ_√w
(
my_evÆ_idít
, 
NULL
);

1219 
evÆ_vÆue_t
 
vÆ
;

1220 
ex¥_buf
[1024];

1222 
	`fgës
(
ex¥_buf
, 1024, 
°dö
);

1225 i‡(
ex¥_buf
[
	`°æí
(expr_buf)-1] == '\n')

1226 
ex¥_buf
[
	`°æí
(expr_buf)-1] = '\0';

1228 i‡(
ex¥_buf
[0] == '\0')

1229 
	`exô
(0);

1231 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
ex¥_buf
, 
NULL
);

1232 i‡(
evÆ_îr‹
)

1233 
	`Ârötf
(
°dout
, "evÆÉº‹: %s\n", 
evÆ_îr_°r
[
evÆ_îr‹
]);

1236 
	`Ârötf
(
°dout
, "%†=", 
ex¥_buf
);

1237 
	`evÆ_¥öt
(
°dout
, 
vÆ
);

1238 
	`Ârötf
(
°dout
, "\n");

1241 
	}
}

	@eval.h

52 #i‚de‡
EVAL_H


53 
	#EVAL_H


	)

55 
	~<°dio.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

61 
	gevÆ_°©e_t
;

62 
	gevÆ_vÆue_t
;

67 
	gevÆ_vÆue_t


68 (*
	tevÆ_idít_t
)(
	tevÆ_°©e_t
 *
	tes
);

71 
	eevÆ_tokí_t
 {

72 
	mtok_idít
,

73 
	mtok_c⁄°
,

74 
	mtok_∂us
,

75 
	mtok_möus
,

76 
	mtok_mu…
,

77 
	mtok_div
,

78 
	mtok_›¨í
,

79 
	mtok_˝¨í
,

80 
	mtok_eof
,

81 
	mtok_whôe•a˚
,

82 
	mtok_övÆid


86 
	sevÆ_°©e_t
 {

87 *
	mp
;

88 *
	mœ°p
;

89 
evÆ_idít_t
 
	mf_evÆ_idít
;

90 *
	mu£r_±r
;

91 
	mtok_buf
[512];

92 
evÆ_tokí_t
 
	m≥ek_tok
;

96 
	eevÆ_îr_t
 {

97 
	mERR_NOERR
,

98 
	mERR_UPAREN
,

99 
	mERR_NOTERM
,

100 
	mERR_DIV0
,

101 
	mERR_BADCONST
,

102 
	mERR_BADEXPR
,

103 
	mERR_UNDEFVAR
,

104 
	mERR_EXTRA
,

105 
	mERR_NUM


109 
evÆ_îr_t
 
evÆ_îr‹
 ;

112 *
evÆ_îr_°r
[
ERR_NUM
];

115 
	eevÆ_ty≥_t
 {

116 
	më_öt
,

117 
	më_uöt
,

118 
	më_addr
,

119 #ifde‡
HOST_HAS_QWORD


120 
	më_qw‹d
,

121 
	më_sqw‹d
,

123 
	më_Êﬂt
,

124 
	më_doubÀ
,

125 
	më_symbﬁ
,

126 
	më_NUM


130 #ifde‡
HOST_HAS_QWORD


131 
	#EVAL_INTEGRAL
(
TYPE
) \

132 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
 \

133 || (
TYPE
Ë=
ë_qw‹d
 || (TYPEË=
ë_sqw‹d
)

	)

135 
	#EVAL_INTEGRAL
(
TYPE
) \

136 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
)

	)

140 *
evÆ_ty≥_°r
[
ë_NUM
];

143 
	sevÆ_vÆue_t
 {

144 
evÆ_ty≥_t
 
	mty≥
;

146 
	mas_öt
;

147 
	mas_uöt
;

148 
md_addr_t
 
	mas_addr
;

149 #ifde‡
HOST_HAS_QWORD


150 
qw‹d_t
 
	mas_qw‹d
;

151 
sqw‹d_t
 
	mas_sqw‹d
;

153 
	mas_Êﬂt
;

154 
	mas_doubÀ
;

155 *
	mas_symbﬁ
;

156 } 
	mvÆue
;

164 
evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
);

167 
evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
);

169 #ifde‡
HOST_HAS_QWORD


171 
qw‹d_t
 
evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
);

174 
sqw‹d_t
 
evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
);

178 
md_addr_t
 
evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
);

181 
evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
);

184 
evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
);

187 
evÆ_°©e_t
 *

188 
evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

189 *
u£r_±r
);

193 
evÆ_dñëe
(
evÆ_°©e_t
 *
es
);

197 
evÆ_vÆue_t


198 
evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

199 *
p
,

200 **
ídp
);

204 
evÆ_¥öt
(
FILE
 *
°ªam
,

205 
evÆ_vÆue_t
 
vÆ
);

	@eventq.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evítq.h
"

60 
	gevítq_max_evíts
;

61 
	gevítq_evít_cou¡
;

62 
evítq_desc
 *
	gevítq_≥ndög
;

63 
evítq_desc
 *
	gevítq_‰ì
;

65 
EVENTQ_ID_TYPE
 
	g√xt_ID
 = 1;

68 
	$evítq_öô
(
max_evíts
)

70 
evítq_max_evíts
 = 
max_evíts
;

71 
evítq_evít_cou¡
 = 0;

72 
evítq_≥ndög
 = 
NULL
;

73 
evítq_‰ì
 = 
NULL
;

74 
	}
}

76 
	#__QUEUE_EVENT
(
WHEN
, 
ID
, 
ACTION
) \

77 
evítq_desc
 *
¥ev
, *
ev
, *
√w
; \

79 i‡(!
evítq_‰ì
) \

81 i‡(
evítq_max_evíts
 && 
evítq_evít_cou¡
 >=Éventq_max_events) \

82 
	`∑nic
("too manyÉvents"); \

83 
evítq_‰ì
 = 
	`ˇŒoc
(1, (
evítq_desc
)); \

85 
√w
 = 
evítq_‰ì
; \

86 
evítq_‰ì
 =Évítq_‰ì->
√xt
; \

88 
√w
->
whí
 = (
WHEN
); (
ID
Ë√w->
id
 = 
√xt_ID
++; 
ACTION
; \

90 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
; \

91 
ev
 &&Év->
whí
 < when; \

92 
¥ev
=
ev
,ÉvÛv->
√xt
); \

94 i‡(
¥ev
) \

97 
√w
->
√xt
 = 
¥ev
->next; \

98 
¥ev
->
√xt
 = 
√w
; \

103 
√w
->
√xt
 = 
evítq_≥ndög
; \

104 
evítq_≥ndög
 = 
√w
; \

105 }

	)

107 
EVENTQ_ID_TYPE


108 
	$evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

109 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

111 
EVENTQ_ID_TYPE
 
id
;

112 
	`__QUEUE_EVENT
(
whí
, 
id
, \

113 
√w
->
a˘i⁄
 = 
EvítSëBô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

114 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

115  
id
;

116 
	}
}

118 
EVENTQ_ID_TYPE


119 
	$evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
,

120 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

122 
EVENTQ_ID_TYPE
 
id
;

123 
	`__QUEUE_EVENT
(
whí
, 
id
, \

124 
√w
->
a˘i⁄
 = 
EvítCÀ¨Bô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

125 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

126  
id
;

127 
	}
}

129 
EVENTQ_ID_TYPE


130 
	$evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
, *
pÊag
, 
vÆue
)

132 
EVENTQ_ID_TYPE
 
id
;

133 
	`__QUEUE_EVENT
(
whí
, 
id
, \

134 
√w
->
a˘i⁄
 = 
EvítSëFœg
; \

135 
√w
->
d©a
.
Êag
.
pÊag
 =ÖÊag;Çew->d©a.Êag.
vÆue
 = value);

136  
id
;

137 
	}
}

139 
EVENTQ_ID_TYPE


140 
	$evítq_queue_add›
(
SS_TIME_TYPE
 
whí
, *
summ™d
, 
addíd
)

142 
EVENTQ_ID_TYPE
 
id
;

143 
	`__QUEUE_EVENT
(
whí
, 
id
, \

144 
√w
->
a˘i⁄
 = 
EvítAddOp
; \

145 
√w
->
d©a
.
add›
.
summ™d
 = summand; \

146 
√w
->
d©a
.
add›
.
addíd
 =áddend);

147  
id
;

148 
	}
}

150 
EVENTQ_ID_TYPE


151 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

152 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
), arg)

154 
EVENTQ_ID_TYPE
 
id
;

155 
	`__QUEUE_EVENT
(
whí
, 
id
, \

156 
√w
->
a˘i⁄
 = 
EvítCÆlback
;Çew->
d©a
.
ˇŒback
.
‚
 = fn;\

157 
√w
->
d©a
.
ˇŒback
.
¨g
 =árg);

158  
id
;

159 
	}
}

161 
	#EXECUTE_ACTION
(
ev
, 
now
) \

163 
ev
->
a˘i⁄
) { \

164 
EvítSëBô
: \

165 
	`BITMAP_SET
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

167 
EvítCÀ¨Bô
: \

168 
	`BITMAP_CLEAR
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

170 
EvítSëFœg
: \

171 *
ev
->
d©a
.
Êag
.
pÊag
 =Év->d©a.Êag.
vÆue
; \

173 
EvítAddOp
: \

174 *
ev
->
d©a
.
add›
.
summ™d
 +ev->d©a.add›.
addíd
; \

176 
EvítCÆlback
: \

177 (*
ev
->
d©a
.
ˇŒback
.
‚
)(
now
,Év->d©a.ˇŒback.
¨g
); \

180 
	`∑nic
("bogusÉventáction"); \

181 }

	)

186 
	$evítq_execuã
(
EVENTQ_ID_TYPE
 
id
)

188 
evítq_desc
 *
¥ev
, *
ev
;

190 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

192 i‡(
ev
->
id
 == id)

194 i‡(
¥ev
)

197 
¥ev
->
√xt
 = 
ev
->next;

202 
evítq_≥ndög
 = 
ev
->
√xt
;

206 
	`EXECUTE_ACTION
(
ev
, 0);

209 
ev
->
√xt
 = 
evítq_‰ì
;

210 
evítq_‰ì
 = 
ev
;

213  
TRUE
;

217  
FALSE
;

218 
	}
}

223 
	$evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
)

225 
evítq_desc
 *
¥ev
, *
ev
;

227 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

229 i‡(
ev
->
id
 == id)

231 i‡(
¥ev
)

234 
¥ev
->
√xt
 = 
ev
->next;

239 
evítq_≥ndög
 = 
ev
->
√xt
;

243 
ev
->
√xt
 = 
evítq_‰ì
;

244 
evítq_‰ì
 = 
ev
;

247  
TRUE
;

251  
FALSE
;

252 
	}
}

255 
	$evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
)

257 
evítq_≥ndög
 &&Évítq_≥ndög->
whí
 <
now
)

259 
evítq_desc
 *
ev
 = 
evítq_≥ndög
;

262 
	`EXECUTE_ACTION
(
ev
, 
now
);

265 
evítq_≥ndög
 = 
ev
->
√xt
;

266 
ev
->
√xt
 = 
evítq_‰ì
;

267 
evítq_‰ì
 = 
ev
;

269 
	}
}

272 
	$evítq_dump
(
FILE
 *
°ªam
)

274 
evítq_desc
 *
ev
;

276 i‡(!
°ªam
)

277 
°ªam
 = 
°dîr
;

279 
	`Ârötf
(
°ªam
, "Pending Events: ");

280 
ev
=
evítq_≥ndög
;Év;ÉvÛv->
√xt
)

282 
	`Ârötf
(
°ªam
, "@ %.0f:%s:",

283 ()
ev
->
whí
,

284 
ev
->
a˘i⁄
 =
EvítSëBô
 ? "set bit"

285 : 
ev
->
a˘i⁄
 =
EvítCÀ¨Bô
 ? "clear bit"

286 : 
ev
->
a˘i⁄
 =
EvítSëFœg
 ? "set flag"

287 : 
ev
->
a˘i⁄
 =
EvítAddOp
 ? "add operation"

288 : 
ev
->
a˘i⁄
 =
EvítCÆlback
 ? "call back"

289 : (
	`ab‹t
(), ""));

290 
ev
->
a˘i⁄
) {

291 
EvítSëBô
:

292 
EvítCÀ¨Bô
:

293 
	`Ârötf
(
°ªam
, "0x%p, %d, %d",

294 
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);

296 
EvítSëFœg
:

297 
	`Ârötf
(
°ªam
, "0x%p, %d", 
ev
->
d©a
.
Êag
.
pÊag
,Év->d©a.Êag.
vÆue
);

299 
EvítAddOp
:

300 
	`Ârötf
(
°ªam
, "0x%p, %d",

301 
ev
->
d©a
.
add›
.
summ™d
,Év->d©a.add›.
addíd
);

303 
EvítCÆlback
:

304 
	`Ârötf
(
°ªam
, "0x%p, %d",

305 
ev
->
d©a
.
ˇŒback
.
‚
,Év->d©a.ˇŒback.
¨g
);

308 
	`∑nic
("bogusÉventáction");

310 
	`Ârötf
(
°ªam
, " ");

312 
	}
}

	@eventq.h

52 #i‚de‡
EVENTQ_H


53 
	#EVENTQ_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"bôm≠.h
"

66 
	eevítq_a˘i⁄
 {

67 
	mEvítSëBô
,

68 
	mEvítCÀ¨Bô
,

69 
	mEvítSëFœg
,

70 
	mEvítAddOp
,

71 
	mEvítCÆlback
,

75 
	tEVENTQ_ID_TYPE
;

78 
	sevítq_desc
 {

79 
evítq_desc
 *
	m√xt
;

80 
SS_TIME_TYPE
 
	mwhí
;

81 
EVENTQ_ID_TYPE
 
	mid
;

82 
evítq_a˘i⁄
 
	ma˘i⁄
;

83 
	uevítq_d©a
 {

85 
BITMAP_ENT_TYPE
 *
	mbm≠
;

86 
	msz
;

87 
	mbônum
;

88 } 
	mbô
;

90 *
	mpÊag
;

91 
	mvÆue
;

92 } 
	mÊag
;

94 *
	msumm™d
;

95 
	maddíd
;

96 } 
	madd›
;

98 (*
	m‚
)(
SS_TIME_TYPE
 
	mtime
, 
	m¨g
);

99 
	m¨g
;

100 } 
	mˇŒback
;

101 } 
	md©a
;

106 
evítq_öô
(
max_evíts
);

110 
EVENTQ_ID_TYPE
 
evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

111 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
);

112 
EVENTQ_ID_TYPE
 
evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
, 
BITMAP_ENT_TYPE
 *
bm≠
,

113 
sz
, 
bônum
);

114 
EVENTQ_ID_TYPE
 
evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
,

115 *
pÊag
, 
vÆue
);

116 
EVENTQ_ID_TYPE
 
evítq_queue_add›
(
SS_TIME_TYPE
 
whí
,

117 *
summ™d
, 
addíd
);

118 
EVENTQ_ID_TYPE
 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

119 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
),

120 
¨g
);

124 
	`evítq_execuã
(
EVENTQ_ID_TYPE
 
id
);

128 
	`evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
);

131 
	`evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
);

133 
	`evítq_dump
(
FILE
 *
°ªam
);

	@host.h

52 #i‚de‡
HOST_H


53 
	#HOST_H


	)

56 #i‚de‡
__STDC__


57 #îr‹ 
The
 
Sim∂eSˇœr
 
simuœt‹s
 
mu°
 
be
 
compûed
 
wôh
 
™
 
ANSI
 
C
 
compûî
.

61 #unde‡
INLINE


62 #i‡
deföed
(
__GNUC__
)

63 
	#INLINE
 
ölöe


	)

65 
	#INLINE


	)

69 #ifde‡
__GNUC__


71 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

72 
	#ANSI_SYMCAT


	)

74 #ifde‡
OLD_SYMCAT


75 
	#SYMCAT
(
X
,
Y
ËX 
	)
Y

77 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

78 
	#ANSI_SYMCAT


	)

83 
	tboﬁ_t
;

84 
	tbyã_t
;

85 sig√d 
	tsbyã_t
;

86 
	thÆf_t
;

87 sig√d 
	tshÆf_t
;

88 
	tw‹d_t
;

89 sig√d 
	tsw‹d_t
;

90 
	tsÊﬂt_t
;

91 
	tdÊﬂt_t
;

94 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__SUNPRO_C
Ë|| deföed(
__CC_C89
Ë|| deföed(
__CC_XLC
)

95 
	#HOST_HAS_QWORD


	)

96 
	tqw‹d_t
;

97 sig√d 
	tsqw‹d_t
;

98 #ifde‡
ANSI_SYMCAT


99 
	#ULL
(
N
ËN##
ULL


	)

100 
	#LL
(
N
ËN##
LL


	)

102 
	#ULL
(
N
ËN 
ULL


	)

103 
	#LL
(
N
ËN 
LL


	)

105 #ñi‡
deföed
(
__Æpha
)

106 
	#HOST_HAS_QWORD


	)

107 
	tqw‹d_t
;

108 sig√d 
	tsqw‹d_t
;

109 #ifde‡
ANSI_SYMCAT


110 
	#ULL
(
N
ËN##
UL


	)

111 
	#LL
(
N
ËN##
L


	)

113 
	#ULL
(
N
ËN 
UL


	)

114 
	#LL
(
N
ËN 
L


	)

116 #ñi‡
deföed
(
_MSC_VER
)

117 
	#HOST_HAS_QWORD


	)

118 
	t__öt64
 
	tqw‹d_t
;

119 sig√d 
	t__öt64
 
	tsqw‹d_t
;

120 
	#ULL
(
N
Ë((
qw‹d_t
)(N))

	)

121 
	#LL
(
N
Ë((
sqw‹d_t
)(N))

	)

123 #unde‡
HOST_HAS_QWORD


127 #ifde‡
HOST_HAS_QWORD


128 
sqw‹d_t
 
	tcou¡î_t
;

129 
sqw‹d_t
 
	ttick_t
;

131 
dÊﬂt_t
 
	tcou¡î_t
;

132 
dÊﬂt_t
 
	ttick_t
;

135 #ifde‡
__svr4__


136 
	#£tjmp
 
_£tjmp


	)

137 
	#l⁄gjmp
 
_l⁄gjmp


	)

	@libexo/exo-test.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~"misc.h
"

55 
	~"›ti⁄s.h
"

56 
	~"libexo.h
"

59 
›t_odb_t
 *
	godb
;

62 
	ghñp_me
;

65 
	gmake_defs
;

68 *
	glﬂd_fûe
;

71 *
	gßve_fûe
;

74 
	g¥öt_db
;

77 
exo_ãrm_t
 *
	gexo_db
 = 
NULL
;

80 
	$ußge
(
FILE
 *
°ªam
, 
¨gc
, **
¨gv
)

82 
	`Ârötf
(
°ªam
, "Ußge: %†{-›ti⁄s}\n", 
¨gv
[0]);

83 
	`›t_¥öt_hñp
(
odb
, 
°ªam
);

84 
	}
}

87 
	$maö
(
¨gc
, **
¨gv
)

90 
odb
 = 
	`›t_√w
–
NULL
);

91 
	`›t_ªg_Êag
(
odb
, "-h", "print help message",

92 &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

93 
	`›t_ªg_Êag
(
odb
, "-defs", "make internal defs",

94 &
make_defs
, 
FALSE
, 
TRUE
, 
NULL
);

95 
	`›t_ªg_°rög
(
odb
, "-load", "loadán EXO file",

96 &
lﬂd_fûe
, 
NULL
,

97  
TRUE
, 
NULL
);

98 
	`›t_ªg_°rög
(
odb
, "-save", "saveán EXO file",

99 &
ßve_fûe
, 
NULL
,

100  
TRUE
, 
NULL
);

101 
	`›t_ªg_Êag
(
odb
, "-print", "printÅhe EXO DBÅo stdout",

102 &
¥öt_db
, 
FALSE
,

103  
TRUE
, 
NULL
);

106 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

108 i‡(
hñp_me
)

111 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

112 
	`exô
(1);

116 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dîr
, 
TRUE
, TRUE);

118 i‡(
lﬂd_fûe
)

120 
ZFILE
 *
exo_°ªam
;

121 
exo_ãrm_t
 *
exo
;

123 
exo_°ªam
 = 
	`myzf›í
(
lﬂd_fûe
, "r");

124 i‡(!
exo_°ªam
)

125 
	`Áèl
("couldÇŸ o≥¿EXO fûê`%s'", 
lﬂd_fûe
);

127 (
exo
 = 
	`exo_ªad
(
exo_°ªam
->
fd
)Ë!
NULL
)

128 
exo_db
 = 
	`exo_chaö
”xo_db, 
exo
);

130 
	`myzf˛o£
(
exo_°ªam
);

133 i‡(
make_defs
)

135 
exo_ãrm_t
 *
li°
, *
¨øy
, *
a
, *
b
, *
c
, *
d
, *
e
, *
f
, *
g
, *
h
, *
i
;

136 *
d©a
 = "This isáÅestÅo see if blobsÑeally work...";

137 *
d©a1
 = "This isáÅestÅo see if blobsÑeally work..."

145 
d©a2
[16] =

148 
exo_db
 =

149 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_°rög
, "** basicÅypesÅests **"));

150 
exo_db
 = 
	`exo_chaö
”xo_db, 
a
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)42));

151 
exo_db
 = 
	`exo_chaö
(
b
 = 
	`exo_√w
(
ec_Êﬂt
, (
exo_Êﬂt_t
)42.0),Éxo_db);

152 
exo_db
 = 
	`exo_chaö
”xo_db, 
c
 = 
	`exo_√w
(
ec_ch¨
, ()'x'));

153 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\n'));

154 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\b'));

155 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\x02'));

156 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_ch¨
, ()'\xab'));

157 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "this isáÅest..."));

158 
exo_db
 =

159 
	`exo_chaö
(
exo_db
, 
d
 = 
	`exo_√w
(
ec_°rög
, "this is\naÅest...\n"));

160 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "aÅest... <<\\\b>>\n"));

162 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "** deep copyÅests **"));

163 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
d
));

164 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
c
));

165 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
b
));

166 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_dìpc›y
(
a
));

168 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**ÜistÅests **"));

169 
exo_db
 =

170 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_li°
,

171 
	`exo_dìpc›y
(
d
),Éxo_dìpc›y(
c
),

172 
	`exo_dìpc›y
(
b
),Éxo_dìpc›y(
a
), 
NULL
));

173 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_li°
, 
NULL
));

174 
exo_db
 =

175 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_li°
,

176 
	`exo_√w
(
ec_li°
, 
NULL
),

177 
	`exo_√w
(
ec_li°
, 
NULL
),

178 
	`exo_√w
(
ec_li°
, 
	`exo_dìpc›y
(
a
), 
NULL
),

179 
NULL
));

180 
li°
 = 
	`exo_dìpc›y
(
a
);

181 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
b
));

182 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
a
));

183 
li°
 = 
	`exo_chaö
÷i°, 
	`exo_dìpc›y
(
b
));

184 
li°
 = 
	`exo_chaö
(
	`exo_dìpc›y
(
c
),Üist);

185 
exo_db
 = 
	`exo_chaö
”xo_db, 
e
 = 
	`exo_√w
(
ec_li°
, 
li°
, 
NULL
));

186 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_li°
,

187 
	`exo_dìpc›y
(
e
),

188 
	`exo_√w
(
ec_li°
, 
NULL
),

189 
	`exo_dìpc›y
(
e
),

190 
	`exo_dìpc›y
(
a
), 
NULL
));

192 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**árrayÅests **"));

193 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_¨øy
, 16, 
NULL
));

194 
f
 = 
¨øy
 = 
	`exo_√w
(
ec_¨øy
, 16, 
NULL
);

195 
	`EXO_ARR
(
¨øy
, 2Ë
	`exo_dìpc›y
(
e
);

196 
	`EXO_ARR
(
¨øy
, 3Ë
	`exo_dìpc›y
(
a
);

197 
	`EXO_ARR
(
¨øy
, 4Ë
	`exo_dìpc›y
(
c
);

198 
	`EXO_ARR
(
¨øy
, 6Ë
	`exo_dìpc›y
(EXO_ARR(array, 2));

199 
	`EXO_ARR
(
¨øy
, 7Ë
	`exo_dìpc›y
(EXO_ARR(array, 1));

200 
exo_db
 = 
	`exo_chaö
”xo_db, 
¨øy
);

201 
exo_db
 =

202 
	`exo_chaö
(
exo_db
, 
	`exo_√w
(
ec_¨øy
, 4,

203 
	`exo_dìpc›y
(
a
),

204 
	`exo_dìpc›y
(
e
),

205 
	`exo_dìpc›y
(
c
),

206 
	`exo_dìpc›y
(
f
),

207 
NULL
));

209 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_°rög
, "**ÅokenÅests **"));

210 
	#SYM1
 1

	)

211 
	#SYM2
 2

	)

212 
	`exo_öã∫_as
("sym1", 
SYM1
);

213 
	`exo_öã∫_as
("sym2", 
SYM2
);

214 
g
 = 
	`exo_√w
(
ec_tokí
, "sym1"),

215 
exo_db
 = 
	`exo_chaö
(exo_db,

216 
	`exo_√w
(
ec_li°
,

217 
g
,

218 
	`exo_√w
(
ec_öãgî
,

219 (
exo_öãgî_t
)

220 
g
->
as_tokí
.
ít
->
tokí
),

221 
NULL
));

222 
h
 = 
	`exo_√w
(
ec_tokí
, "sym2"),

223 
exo_db
 = 
	`exo_chaö
(exo_db,

224 
	`exo_√w
(
ec_li°
,

225 
h
,

226 
	`exo_√w
(
ec_öãgî
,

227 (
exo_öãgî_t
)

228 
h
->
as_tokí
.
ít
->
tokí
),

229 
NULL
));

230 
i
 = 
	`exo_√w
(
ec_tokí
, "sym3"),

231 
exo_db
 = 
	`exo_chaö
(exo_db,

232 
	`exo_√w
(
ec_li°
,

233 
i
,

234 
	`exo_√w
(
ec_öãgî
,

235 (
exo_öãgî_t
)

236 
i
->
as_tokí
.
ít
->
tokí
),

237 
NULL
));

240 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, 
	`°æí
(
d©a
), data));

241 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, 
	`°æí
(
d©a1
), data1));

242 
exo_db
 = 
	`exo_chaö
”xo_db, 
	`exo_√w
(
ec_blob
, (
d©a2
), data2));

245 i‡(
¥öt_db
)

247 
exo_ãrm_t
 *
exo
;

250 
	`Ârötf
(
°dout
, "\n/* EXO DB */\n\n");

251 
	`Ârötf
(
°dout
,

253 
EXO_FMT_MAJOR
, 
EXO_FMT_MINOR
);

256 
exo
=
exo_db
;Éxÿ!
NULL
;ÉxoÛxo->
√xt
)

258 
	`exo_¥öt
(
exo
, 
°dout
);

259 
	`Ârötf
(
°dout
, "\n\n");

263 i‡(
ßve_fûe
)

265 
ZFILE
 *
exo_°ªam
;

266 
exo_ãrm_t
 *
exo
;

268 
exo_°ªam
 = 
	`myzf›í
(
ßve_fûe
, "w");

269 i‡(!
exo_°ªam
)

270 
	`Áèl
("couldÇŸ o≥¿EXO fûê`%s'", 
ßve_fûe
);

273 
	`Ârötf
(
exo_°ªam
->
fd
,

275 
EXO_FMT_MAJOR
, 
EXO_FMT_MINOR
);

278 
exo
=
exo_db
;Éxÿ!
NULL
;ÉxoÛxo->
√xt
)

280 
	`exo_¥öt
(
exo
, 
exo_°ªam
->
fd
);

281 
	`Ârötf
(
exo_°ªam
->
fd
, "\n\n");

283 
	`myzf˛o£
(
exo_°ªam
);

285 
	}
}

	@libexo/exolex.c

7 
	#FLEX_SCANNER


	)

8 
	#YY_FLEX_MAJOR_VERSION
 2

	)

9 
	#YY_FLEX_MINOR_VERSION
 5

	)

11 
	~<°dio.h
>

12 
	~<uni°d.h
>

16 #ifde‡
c_∂u•lus


17 #i‚de‡
__˝lu•lus


18 
	#__˝lu•lus


	)

23 #ifde‡
__˝lu•lus


25 
	~<°dlib.h
>

28 
	#YY_USE_PROTOS


	)

31 
	#YY_USE_CONST


	)

35 #i‡
__STDC__


37 
	#YY_USE_PROTOS


	)

38 
	#YY_USE_CONST


	)

43 #ifde‡
__TURBOC__


44 #¥agm®
w¨n
 -
rch


45 #¥agm®
w¨n
 -
u£


46 
	~<io.h
>

47 
	~<°dlib.h
>

48 
	#YY_USE_CONST


	)

49 
	#YY_USE_PROTOS


	)

52 #ifde‡
YY_USE_CONST


53 
	#yyc⁄°
 c⁄°

	)

55 
	#yyc⁄°


	)

59 #ifde‡
YY_USE_PROTOS


60 
	#YY_PROTO
(
¥Ÿo
Ë
	)
proto

62 
	#YY_PROTO
(
¥Ÿo
Ë()

	)

66 
	#YY_NULL
 0

	)

73 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

79 
	#BEGIN
 
yy_°¨t
 = 1 + 2 *

	)

85 
	#YY_START
 ((
yy_°¨t
 - 1Ë/ 2)

	)

86 
	#YYSTATE
 
YY_START


	)

89 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

92 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

94 
	#YY_END_OF_BUFFER_CHAR
 0

	)

97 
	#YY_BUF_SIZE
 16384

	)

99 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

101 
yyÀng
;

102 
FILE
 *
yyö
, *
yyout
;

104 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

105 
	#EOB_ACT_END_OF_FILE
 1

	)

106 
	#EOB_ACT_LAST_MATCH
 2

	)

124 
	#yyÀss
(
n
) \

128 *
yy_˝
 = 
yy_hﬁd_ch¨
; \

129 
YY_RESTORE_YY_MORE_OFFSET
 \

130 
yy_c_buf_p
 = 
yy_˝
 = 
yy_bp
 + 
n
 - 
YY_MORE_ADJ
; \

131 
YY_DO_BEFORE_ACTION
; \

133  0 )

	)

135 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, 
yyãxt_±r
 )

	)

141 
	tyy_size_t
;

144 
	syy_buf„r_°©e


146 
FILE
 *
	myy_öput_fûe
;

148 *
	myy_ch_buf
;

149 *
	myy_buf_pos
;

154 
yy_size_t
 
	myy_buf_size
;

159 
	myy_n_ch¨s
;

165 
	myy_is_our_buf„r
;

172 
	myy_is_öãø˘ive
;

178 
	myy_©_bﬁ
;

183 
	myy_fûl_buf„r
;

185 
	myy_buf„r_°©us
;

186 
	#YY_BUFFER_NEW
 0

	)

187 
	#YY_BUFFER_NORMAL
 1

	)

198 
	#YY_BUFFER_EOF_PENDING
 2

	)

201 
YY_BUFFER_STATE
 
	gyy_cuºít_buf„r
 = 0;

207 
	#YY_CURRENT_BUFFER
 
yy_cuºít_buf„r


	)

211 
	gyy_hﬁd_ch¨
;

213 
	gyy_n_ch¨s
;

216 
	gyyÀng
;

219 *
	gyy_c_buf_p
 = (*) 0;

220 
	gyy_öô
 = 1;

221 
	gyy_°¨t
 = 0;

226 
	gyy_did_buf„r_swôch_⁄_eof
;

228 
yyª°¨t
 
YY_PROTO
(–
FILE
 *
öput_fûe
 ));

230 
yy_swôch_to_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
√w_buf„r
 ));

231 
yy_lﬂd_buf„r_°©e
 
YY_PROTO
(( ));

232 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 
YY_PROTO
(–
FILE
 *
fûe
, 
size
 ));

233 
yy_dñëe_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
 ));

234 
yy_öô_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 ));

235 
yy_Êush_buf„r
 
YY_PROTO
(–
YY_BUFFER_STATE
 
b
 ));

236 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
yy_cuºít_buf„r
 )

	)

238 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 
YY_PROTO
(–*
ba£
, 
yy_size_t
 
size
 ));

239 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 
YY_PROTO
(–
yyc⁄°
 *
yy_°r
 ));

240 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 
YY_PROTO
(–
yyc⁄°
 *
byãs
, 
Àn
 ));

242 *
yy_Êex_Æloc
 
YY_PROTO
(–
yy_size_t
 ));

243 *
yy_Êex_ªÆloc
 
YY_PROTO
(–*, 
yy_size_t
 ));

244 
yy_Êex_‰ì
 
YY_PROTO
(( * ));

246 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

248 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

250 i‡–! 
yy_cuºít_buf„r
 ) \

251 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

252 
yy_cuºít_buf„r
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

253 }

	)

255 
	#yy_£t_bﬁ
(
©_bﬁ
) \

257 i‡–! 
yy_cuºít_buf„r
 ) \

258 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

259 
yy_cuºít_buf„r
->
yy_©_bﬁ
 = 
©_bﬁ
; \

260 }

	)

262 
	#YY_AT_BOL
(Ë(
yy_cuºít_buf„r
->
yy_©_bﬁ
)

	)

264 
	tYY_CHAR
;

265 
FILE
 *
	gyyö
 = (FILE *Ë0, *
	gyyout
 = (FILE *) 0;

266 
	tyy_°©e_ty≥
;

267 *
yyãxt
;

268 
	#yyãxt_±r
 
yyãxt


	)

270 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 
YY_PROTO
(( ));

271 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 
YY_PROTO
(–yy_°©e_ty≥ 
cuºít_°©e
 ));

272 
yy_gë_√xt_buf„r
 
YY_PROTO
(( ));

273 
yy_Áèl_îr‹
 
YY_PROTO
(–
yyc⁄°
 
msg
[] ));

278 
	#YY_DO_BEFORE_ACTION
 \

279 
yyãxt_±r
 = 
yy_bp
; \

280 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

281 
yy_hﬁd_ch¨
 = *
yy_˝
; \

282 *
yy_˝
 = '\0'; \

283 
yy_c_buf_p
 = 
yy_˝
;

	)

285 
	#YY_NUM_RULES
 25

	)

286 
	#YY_END_OF_BUFFER
 26

	)

287 
yyc⁄°
 
	gyy_ac˚±
[60] =

297 
yyc⁄°
 
	gyy_ec
[256] =

329 
yyc⁄°
 
	gyy_mëa
[37] =

337 
yyc⁄°
 
	gyy_ba£
[64] =

348 
yyc⁄°
 
	gyy_def
[64] =

359 
yyc⁄°
 
	gyy_nxt
[215] =

387 
yyc⁄°
 
	gyy_chk
[215] =

415 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

416 *
	gyy_œ°_ac˚±ög_˝os
;

421 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

422 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

423 
	#YY_MORE_ADJ
 0

	)

424 
	#YY_RESTORE_YY_MORE_OFFSET


	)

425 *
	gyyãxt
;

427 
	#INITIAL
 0

	)

479 
	~<°dio.h
>

480 
	~<°dlib.h
>

482 
	~"../ho°.h
"

483 
	~"../misc.h
"

484 
	~"libexo.h
"

487 #unde‡
YYLMAX


488 
	#YYLMAX
 (16*1024)

	)

491 
	#YY_NEVER_INTERACTIVE
 1

	)

493 
	glöe
 = 1;

495 
yywøp
();

496 
Àx_ót_commít
();

498 
	#BLOB_MODE
 1

	)

506 #i‚de‡
YY_SKIP_YYWRAP


507 #ifde‡
__˝lu•lus


508 "C" 
yywøp
 
YY_PROTO
(( ));

510 
yywøp
 
YY_PROTO
(( ));

514 #i‚de‡
YY_NO_UNPUT


515 
yyu≈ut
 
YY_PROTO
(–
c
, *
buf_±r
 ));

518 #i‚de‡
yyãxt_±r


519 
yy_Êex_°∫˝y
 
YY_PROTO
(–*, 
yyc⁄°
 *, ));

522 #ifde‡
YY_NEED_STRLEN


523 
yy_Êex_°æí
 
YY_PROTO
(–
yyc⁄°
 * ));

526 #i‚de‡
YY_NO_INPUT


527 #ifde‡
__˝lu•lus


528 
yyöput
 
YY_PROTO
(( ));

530 
öput
 
YY_PROTO
(( ));

534 #i‡
YY_STACK_USED


535 
	gyy_°¨t_°ack_±r
 = 0;

536 
	gyy_°¨t_°ack_dïth
 = 0;

537 *
	gyy_°¨t_°ack
 = 0;

538 #i‚de‡
YY_NO_PUSH_STATE


539 
yy_push_°©e
 
YY_PROTO
(–
√w_°©e
 ));

541 #i‚de‡
YY_NO_POP_STATE


542 
yy_p›_°©e
 
YY_PROTO
(( ));

544 #i‚de‡
YY_NO_TOP_STATE


545 
yy_t›_°©e
 
YY_PROTO
(( ));

549 
	#YY_NO_PUSH_STATE
 1

	)

550 
	#YY_NO_POP_STATE
 1

	)

551 
	#YY_NO_TOP_STATE
 1

	)

554 #ifde‡
YY_MALLOC_DECL


555 
	gYY_MALLOC_DECL


557 #i‡
__STDC__


558 #i‚de‡
__˝lu•lus


559 
	~<°dlib.h
>

570 #i‚de‡
YY_READ_BUF_SIZE


571 
	#YY_READ_BUF_SIZE
 8192

	)

576 #i‚de‡
ECHO


580 
	#ECHO
 (Ë
	`fwrôe
–
yyãxt
, 
yyÀng
, 1, 
yyout
 )

	)

586 #i‚de‡
YY_INPUT


587 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

588 i‡–
yy_cuºít_buf„r
->
yy_is_öãø˘ive
 ) \

590 
c
 = '*', 
n
; \

591  
n
 = 0;Ç < 
max_size
 && \

592 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

593 
buf
[
n
] = (Ë
c
; \

594 i‡–
c
 == '\n' ) \

595 
buf
[
n
++] = (Ë
c
; \

596 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

597 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

598 
ªsu…
 = 
n
; \

600 i‡–((
ªsu…
 = 
	`‰ód
–
buf
, 1, 
max_size
, 
yyö
 )) == 0) \

601 && 
	`„º‹
–
yyö
 ) ) \

602 
	`YY_FATAL_ERROR
–"öpuàö fÀx sˇ¬î faûed" );

	)

609 #i‚de‡
yyãrmö©e


610 
	#yyãrmö©e
(Ë 
YY_NULL


	)

614 #i‚de‡
YY_START_STACK_INCR


615 
	#YY_START_STACK_INCR
 25

	)

619 #i‚de‡
YY_FATAL_ERROR


620 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

626 #i‚de‡
YY_DECL


627 
	#YY_DECL
 
yyÀx
 
	`YY_PROTO
(–))

	)

633 #i‚de‡
YY_USER_ACTION


634 
	#YY_USER_ACTION


	)

638 #i‚de‡
YY_BREAK


639 
	#YY_BREAK
 ;

	)

642 
	#YY_RULE_SETUP
 \

643 
YY_USER_ACTION


	)

645 
	gYY_DECL


647 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

648 *
	gyy_˝
 = 
NULL
, *
	gyy_bp
 = NULL;

649 
	gyy_a˘
;

656 i‡–
	gyy_öô
 )

658 
	gyy_öô
 = 0;

660 #ifde‡
YY_USER_INIT


661 
	gYY_USER_INIT
;

664 i‡–! 
	gyy_°¨t
 )

665 
	gyy_°¨t
 = 1;

667 i‡–! 
	gyyö
 )

668 
	gyyö
 = 
°dö
;

670 i‡–! 
	gyyout
 )

671 
	gyyout
 = 
°dout
;

673 i‡–! 
	gyy_cuºít_buf„r
 )

674 
	gyy_cuºít_buf„r
 =

675 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

677 
yy_lﬂd_buf„r_°©e
();

682 
	gyy_˝
 = 
yy_c_buf_p
;

685 *
	gyy_˝
 = 
yy_hﬁd_ch¨
;

690 
	gyy_bp
 = 
yy_˝
;

692 
	gyy_cuºít_°©e
 = 
yy_°¨t
;

693 
	gyy_m©ch
:

696 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

697 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

699 
	gyy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

700 
	gyy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

702  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

704 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

705 i‡–
	gyy_cuºít_°©e
 >= 60 )

706 
yy_c
 = 
yy_mëa
[() yy_c];

708 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

709 ++
	gyy_˝
;

711  
	gyy_ba£
[
yy_cuºít_°©e
] != 178 );

713 
	gyy_föd_a˘i⁄
:

714 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

715 i‡–
	gyy_a˘
 == 0 )

717 
yy_˝
 = 
yy_œ°_ac˚±ög_˝os
;

718 
	gyy_cuºít_°©e
 = 
yy_œ°_ac˚±ög_°©e
;

719 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

722 
	gYY_DO_BEFORE_ACTION
;

725 
	gdo_a˘i⁄
:

728  
yy_a˘
 )

732 *
yy_˝
 = 
yy_hﬁd_ch¨
;

733 
	gyy_˝
 = 
yy_œ°_ac˚±ög_˝os
;

734 
	gyy_cuºít_°©e
 = 
yy_œ°_ac˚±ög_°©e
;

735 
	gyy_föd_a˘i⁄
;

738 
YY_RULE_SETUP


740 {  
Àx_byã
; }

741 
YY_BREAK


743 
YY_RULE_SETUP


745 { 
Àx_ót_commít
(); }

746 
YY_BREAK


748 
YY_RULE_SETUP


750 {  
Àx_addªss
; }

751 
YY_BREAK


753 
YY_RULE_SETUP


755 {  
Àx_öãgî
; }

756 
YY_BREAK


758 
YY_RULE_SETUP


760 {  
Àx_öãgî
; }

761 
YY_BREAK


763 
YY_RULE_SETUP


765 {  
Àx_Êﬂt
; }

766 
YY_BREAK


768 
YY_RULE_SETUP


770 {  
Àx_Êﬂt
; }

771 
YY_BREAK


773 
YY_RULE_SETUP


775 {  
Àx_Êﬂt
; }

776 
YY_BREAK


778 
YY_RULE_SETUP


780 {  
Àx_ch¨
; }

781 
YY_BREAK


783 
YY_RULE_SETUP


785  {  
Àx_°rög
; }

786 
YY_BREAK


788 
YY_RULE_SETUP


790 {  
Àx_tokí
; }

791 
YY_BREAK


793 
YY_RULE_SETUP


795 {  
Àx_tokí
; }

796 
YY_BREAK


798 
YY_RULE_SETUP


801 
YY_BREAK


803 
YY_RULE_SETUP


806 
YY_BREAK


808 
YY_RULE_SETUP


811 
YY_BREAK


813 
YY_RULE_SETUP


816 
YY_BREAK


818 
YY_RULE_SETUP


821 
YY_BREAK


823 
YY_RULE_SETUP


826 
YY_BREAK


828 
YY_RULE_SETUP


831 
YY_BREAK


833 
YY_RULE_SETUP


835 { 
BEGIN
(
BLOB_MODE
);  '<'; }

836 
YY_BREAK


838 
YY_RULE_SETUP


840 { 
BEGIN
(
INITIAL
);  '>'; }

841 
YY_BREAK


843 
YY_RULE_SETUP


846 
YY_BREAK


848 
YY_RULE_SETUP


850 { 
löe
++; }

851 
YY_BREAK


852 
YY_STATE_EOF
(
INITIAL
):

853 
YY_STATE_EOF
(
BLOB_MODE
):

855 {  
Àx_eof
; }

856 
YY_BREAK


858 
YY_RULE_SETUP


861 
Áèl
("bogus character in input"); }

862 
YY_BREAK


864 
YY_RULE_SETUP


866 
ECHO
;

867 
	gYY_BREAK


870 
	gYY_END_OF_BUFFER
:

873 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - 
yyãxt_±r
) - 1;

876 *
	gyy_˝
 = 
yy_hﬁd_ch¨
;

877 
YY_RESTORE_YY_MORE_OFFSET


879 i‡–
	gyy_cuºít_buf„r
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

890 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->yy_n_chars;

891 
	gyy_cuºít_buf„r
->
	gyy_öput_fûe
 = 
yyö
;

892 
	gyy_cuºít_buf„r
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

902 i‡–
	gyy_c_buf_p
 <&
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] )

904 
yy_°©e_ty≥
 
yy_√xt_°©e
;

906 
	gyy_c_buf_p
 = 
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

908 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

919 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

921 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

923 i‡–
	gyy_√xt_°©e
 )

926 
	gyy_˝
 = ++
yy_c_buf_p
;

927 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

928 
	gyy_m©ch
;

933 
	gyy_˝
 = 
yy_c_buf_p
;

934 
	gyy_föd_a˘i⁄
;

938  
yy_gë_√xt_buf„r
() )

940 
	gEOB_ACT_END_OF_FILE
:

942 
yy_did_buf„r_swôch_⁄_eof
 = 0;

944 i‡–
yywøp
() )

955 
	gyy_c_buf_p
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

957 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

958 
	gdo_a˘i⁄
;

963 i‡–! 
	gyy_did_buf„r_swôch_⁄_eof
 )

964 
	gYY_NEW_FILE
;

969 
	gEOB_ACT_CONTINUE_SCAN
:

970 
yy_c_buf_p
 =

971 
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

973 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

975 
	gyy_˝
 = 
yy_c_buf_p
;

976 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

977 
	gyy_m©ch
;

979 
	gEOB_ACT_LAST_MATCH
:

980 
yy_c_buf_p
 =

981 &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
];

983 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
();

985 
	gyy_˝
 = 
yy_c_buf_p
;

986 
	gyy_bp
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
;

987 
	gyy_föd_a˘i⁄
;

993 
YY_FATAL_ERROR
(

1008 
	$yy_gë_√xt_buf„r
()

1010 *
de°
 = 
yy_cuºít_buf„r
->
yy_ch_buf
;

1011 *
sour˚
 = 
yyãxt_±r
;

1012 
numbî_to_move
, 
i
;

1013 
ªt_vÆ
;

1015 i‡–
yy_c_buf_p
 > &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
 + 1] )

1016 
	`YY_FATAL_ERROR
(

1019 i‡–
yy_cuºít_buf„r
->
yy_fûl_buf„r
 == 0 )

1021 i‡–
yy_c_buf_p
 - 
yyãxt_±r
 - 
YY_MORE_ADJ
 == 1 )

1026  
EOB_ACT_END_OF_FILE
;

1034  
EOB_ACT_LAST_MATCH
;

1041 
numbî_to_move
 = (Ë(
yy_c_buf_p
 - 
yyãxt_±r
) - 1;

1043  
i
 = 0; i < 
numbî_to_move
; ++i )

1044 *(
de°
++Ë*(
sour˚
++);

1046 i‡–
yy_cuºít_buf„r
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1050 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars = 0;

1054 
num_to_ªad
 =

1055 
yy_cuºít_buf„r
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1057  
num_to_ªad
 <= 0 )

1059 #ifde‡
YY_USES_REJECT


1060 
	`YY_FATAL_ERROR
(

1065 
YY_BUFFER_STATE
 
b
 = 
yy_cuºít_buf„r
;

1067 
yy_c_buf_p_off£t
 =

1068 (Ë(
yy_c_buf_p
 - 
b
->
yy_ch_buf
);

1070 i‡–
b
->
yy_is_our_buf„r
 )

1072 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1074 i‡–
√w_size
 <= 0 )

1075 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1077 
b
->
yy_buf_size
 *= 2;

1079 
b
->
yy_ch_buf
 = (*)

1081 
	`yy_Êex_ªÆloc
–(*Ë
b
->
yy_ch_buf
,

1082 
b
->
yy_buf_size
 + 2 );

1086 
b
->
yy_ch_buf
 = 0;

1088 i‡–! 
b
->
yy_ch_buf
 )

1089 
	`YY_FATAL_ERROR
(

1092 
yy_c_buf_p
 = &
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1094 
num_to_ªad
 = 
yy_cuºít_buf„r
->
yy_buf_size
 -

1095 
numbî_to_move
 - 1;

1099 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1100 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1103 
	`YY_INPUT
–(&
yy_cuºít_buf„r
->
yy_ch_buf
[
numbî_to_move
]),

1104 
yy_n_ch¨s
, 
num_to_ªad
 );

1106 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars;

1109 i‡–
yy_n_ch¨s
 == 0 )

1111 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1113 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1114 
	`yyª°¨t
–
yyö
 );

1119 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1120 
yy_cuºít_buf„r
->
yy_buf„r_°©us
 =

1121 
YY_BUFFER_EOF_PENDING
;

1126 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1128 
yy_n_ch¨s
 +
numbî_to_move
;

1129 
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] = 
YY_END_OF_BUFFER_CHAR
;

1130 
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
 + 1] = 
YY_END_OF_BUFFER_CHAR
;

1132 
yyãxt_±r
 = &
yy_cuºít_buf„r
->
yy_ch_buf
[0];

1134  
ªt_vÆ
;

1135 
	}
}

1140 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
()

1142 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1143 *
yy_˝
;

1145 
yy_cuºít_°©e
 = 
yy_°¨t
;

1147  
yy_˝
 = 
yyãxt_±r
 + 
YY_MORE_ADJ
; yy_˝ < 
yy_c_buf_p
; ++yy_cp )

1149 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1150 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1152 
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1153 
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1155  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1157 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1158 i‡–
yy_cuºít_°©e
 >= 60 )

1159 
yy_c
 = 
yy_mëa
[() yy_c];

1161 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1164  
yy_cuºít_°©e
;

1165 
	}
}

1174 #ifde‡
YY_USE_PROTOS


1175 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
–
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1177 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
–
yy_cuºít_°©e
 )

1178 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1181 
yy_is_jam
;

1182 *
yy_˝
 = 
yy_c_buf_p
;

1184 
YY_CHAR
 
yy_c
 = 1;

1185 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1187 
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1188 
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1190  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1192 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1193 i‡–
yy_cuºít_°©e
 >= 60 )

1194 
yy_c
 = 
yy_mëa
[() yy_c];

1196 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1197 
yy_is_jam
 = (
yy_cuºít_°©e
 == 59);

1199  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1200 
	}
}

1203 #i‚de‡
YY_NO_UNPUT


1204 #ifde‡
YY_USE_PROTOS


1205 
	$yyu≈ut
–
c
, *
yy_bp
 )

1207 
	$yyu≈ut
–
c
, 
yy_bp
 )

1208 
c
;

1209 *
yy_bp
;

1212 *
yy_˝
 = 
yy_c_buf_p
;

1215 *
yy_˝
 = 
yy_hﬁd_ch¨
;

1217 i‡–
yy_˝
 < 
yy_cuºít_buf„r
->
yy_ch_buf
 + 2 )

1220 
numbî_to_move
 = 
yy_n_ch¨s
 + 2;

1221 *
de°
 = &
yy_cuºít_buf„r
->
yy_ch_buf
[

1222 
yy_cuºít_buf„r
->
yy_buf_size
 + 2];

1223 *
sour˚
 =

1224 &
yy_cuºít_buf„r
->
yy_ch_buf
[
numbî_to_move
];

1226  
sour˚
 > 
yy_cuºít_buf„r
->
yy_ch_buf
 )

1227 *--
de°
 = *--
sour˚
;

1229 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1230 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1231 
yy_cuºít_buf„r
->
yy_n_ch¨s
 =

1232 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->
yy_buf_size
;

1234 i‡–
yy_˝
 < 
yy_cuºít_buf„r
->
yy_ch_buf
 + 2 )

1235 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1238 *--
yy_˝
 = (Ë
c
;

1241 
yyãxt_±r
 = 
yy_bp
;

1242 
yy_hﬁd_ch¨
 = *
yy_˝
;

1243 
yy_c_buf_p
 = 
yy_˝
;

1244 
	}
}

1248 #i‚de‡
YY_NO_INPUT


1249 #ifde‡
__˝lu•lus


1250 
	$yyöput
()

1252 
	$öput
()

1255 
c
;

1257 *
yy_c_buf_p
 = 
yy_hﬁd_ch¨
;

1259 i‡–*
yy_c_buf_p
 =
YY_END_OF_BUFFER_CHAR
 )

1265 i‡–
yy_c_buf_p
 < &
yy_cuºít_buf„r
->
yy_ch_buf
[
yy_n_ch¨s
] )

1267 *
yy_c_buf_p
 = '\0';

1271 
off£t
 = 
yy_c_buf_p
 - 
yyãxt_±r
;

1272 ++
yy_c_buf_p
;

1274  
	`yy_gë_√xt_buf„r
() )

1276 
EOB_ACT_LAST_MATCH
:

1288 
	`yyª°¨t
–
yyö
 );

1292 
EOB_ACT_END_OF_FILE
:

1294 i‡–
	`yywøp
() )

1295  
EOF
;

1297 i‡–! 
yy_did_buf„r_swôch_⁄_eof
 )

1298 
YY_NEW_FILE
;

1299 #ifde‡
__˝lu•lus


1300  
	`yyöput
();

1302  
	`öput
();

1306 
EOB_ACT_CONTINUE_SCAN
:

1307 
yy_c_buf_p
 = 
yyãxt_±r
 + 
off£t
;

1313 
c
 = *(*Ë
yy_c_buf_p
;

1314 *
yy_c_buf_p
 = '\0';

1315 
yy_hﬁd_ch¨
 = *++
yy_c_buf_p
;

1318  
c
;

1319 
	}
}

1322 #ifde‡
YY_USE_PROTOS


1323 
	$yyª°¨t
–
FILE
 *
öput_fûe
 )

1325 
	$yyª°¨t
–
öput_fûe
 )

1326 
FILE
 *
öput_fûe
;

1329 i‡–! 
yy_cuºít_buf„r
 )

1330 
yy_cuºít_buf„r
 = 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1332 
	`yy_öô_buf„r
–
yy_cuºít_buf„r
, 
öput_fûe
 );

1333 
	`yy_lﬂd_buf„r_°©e
();

1334 
	}
}

1337 #ifde‡
YY_USE_PROTOS


1338 
	$yy_swôch_to_buf„r
–
YY_BUFFER_STATE
 
√w_buf„r
 )

1340 
	$yy_swôch_to_buf„r
–
√w_buf„r
 )

1341 
YY_BUFFER_STATE
 
√w_buf„r
;

1344 i‡–
yy_cuºít_buf„r
 =
√w_buf„r
 )

1347 i‡–
yy_cuºít_buf„r
 )

1350 *
yy_c_buf_p
 = 
yy_hﬁd_ch¨
;

1351 
yy_cuºít_buf„r
->
yy_buf_pos
 = 
yy_c_buf_p
;

1352 
yy_cuºít_buf„r
->
yy_n_ch¨s
 = yy_n_chars;

1355 
yy_cuºít_buf„r
 = 
√w_buf„r
;

1356 
	`yy_lﬂd_buf„r_°©e
();

1363 
yy_did_buf„r_swôch_⁄_eof
 = 1;

1364 
	}
}

1367 #ifde‡
YY_USE_PROTOS


1368 
	$yy_lﬂd_buf„r_°©e
( )

1370 
	$yy_lﬂd_buf„r_°©e
()

1373 
yy_n_ch¨s
 = 
yy_cuºít_buf„r
->yy_n_chars;

1374 
yyãxt_±r
 = 
yy_c_buf_p
 = 
yy_cuºít_buf„r
->
yy_buf_pos
;

1375 
yyö
 = 
yy_cuºít_buf„r
->
yy_öput_fûe
;

1376 
yy_hﬁd_ch¨
 = *
yy_c_buf_p
;

1377 
	}
}

1380 #ifde‡
YY_USE_PROTOS


1381 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
–
FILE
 *
fûe
, 
size
 )

1383 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
–
fûe
, 
size
 )

1384 
FILE
 *
fûe
;

1385 
size
;

1388 
YY_BUFFER_STATE
 
b
;

1390 
b
 = (
YY_BUFFER_STATE
Ë
	`yy_Êex_Æloc
––
yy_buf„r_°©e
 ) );

1391 i‡–! 
b
 )

1392 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1394 
b
->
yy_buf_size
 = 
size
;

1399 
b
->
yy_ch_buf
 = (*Ë
	`yy_Êex_Æloc
–b->
yy_buf_size
 + 2 );

1400 i‡–! 
b
->
yy_ch_buf
 )

1401 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1403 
b
->
yy_is_our_buf„r
 = 1;

1405 
	`yy_öô_buf„r
–
b
, 
fûe
 );

1407  
b
;

1408 
	}
}

1411 #ifde‡
YY_USE_PROTOS


1412 
	$yy_dñëe_buf„r
–
YY_BUFFER_STATE
 
b
 )

1414 
	$yy_dñëe_buf„r
–
b
 )

1415 
YY_BUFFER_STATE
 
b
;

1418 i‡–! 
b
 )

1421 i‡–
b
 =
yy_cuºít_buf„r
 )

1422 
yy_cuºít_buf„r
 = (
YY_BUFFER_STATE
) 0;

1424 i‡–
b
->
yy_is_our_buf„r
 )

1425 
	`yy_Êex_‰ì
–(*Ë
b
->
yy_ch_buf
 );

1427 
	`yy_Êex_‰ì
–(*Ë
b
 );

1428 
	}
}

1432 #ifde‡
YY_USE_PROTOS


1433 
	$yy_öô_buf„r
–
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 )

1435 
	$yy_öô_buf„r
–
b
, 
fûe
 )

1436 
YY_BUFFER_STATE
 
b
;

1437 
FILE
 *
fûe
;

1442 
	`yy_Êush_buf„r
–
b
 );

1444 
b
->
yy_öput_fûe
 = 
fûe
;

1445 
b
->
yy_fûl_buf„r
 = 1;

1447 #i‡
YY_ALWAYS_INTERACTIVE


1448 
b
->
yy_is_öãø˘ive
 = 1;

1450 #i‡
YY_NEVER_INTERACTIVE


1451 
b
->
yy_is_öãø˘ive
 = 0;

1453 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1456 
	}
}

1459 #ifde‡
YY_USE_PROTOS


1460 
	$yy_Êush_buf„r
–
YY_BUFFER_STATE
 
b
 )

1462 
	$yy_Êush_buf„r
–
b
 )

1463 
YY_BUFFER_STATE
 
b
;

1467 i‡–! 
b
 )

1470 
b
->
yy_n_ch¨s
 = 0;

1476 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1477 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1479 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1481 
b
->
yy_©_bﬁ
 = 1;

1482 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1484 i‡–
b
 =
yy_cuºít_buf„r
 )

1485 
	`yy_lﬂd_buf„r_°©e
();

1486 
	}
}

1489 #i‚de‡
YY_NO_SCAN_BUFFER


1490 #ifde‡
YY_USE_PROTOS


1491 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
–*
ba£
, 
yy_size_t
 
size
 )

1493 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
–
ba£
, 
size
 )

1494 *
ba£
;

1495 
yy_size_t
 
size
;

1498 
YY_BUFFER_STATE
 
b
;

1500 i‡–
size
 < 2 ||

1501 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1502 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1506 
b
 = (
YY_BUFFER_STATE
Ë
	`yy_Êex_Æloc
––
yy_buf„r_°©e
 ) );

1507 i‡–! 
b
 )

1508 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1510 
b
->
yy_buf_size
 = 
size
 - 2;

1511 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1512 
b
->
yy_is_our_buf„r
 = 0;

1513 
b
->
yy_öput_fûe
 = 0;

1514 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1515 
b
->
yy_is_öãø˘ive
 = 0;

1516 
b
->
yy_©_bﬁ
 = 1;

1517 
b
->
yy_fûl_buf„r
 = 0;

1518 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1520 
	`yy_swôch_to_buf„r
–
b
 );

1522  
b
;

1523 
	}
}

1527 #i‚de‡
YY_NO_SCAN_STRING


1528 #ifde‡
YY_USE_PROTOS


1529 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
–
yyc⁄°
 *
yy_°r
 )

1531 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
–
yy_°r
 )

1532 
yyc⁄°
 *
yy_°r
;

1535 
Àn
;

1536  
Àn
 = 0; 
yy_°r
[len]; ++len )

1539  
	`yy_sˇn_byãs
–
yy_°r
, 
Àn
 );

1540 
	}
}

1544 #i‚de‡
YY_NO_SCAN_BYTES


1545 #ifde‡
YY_USE_PROTOS


1546 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
–
yyc⁄°
 *
byãs
, 
Àn
 )

1548 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
–
byãs
, 
Àn
 )

1549 
yyc⁄°
 *
byãs
;

1550 
Àn
;

1553 
YY_BUFFER_STATE
 
b
;

1554 *
buf
;

1555 
yy_size_t
 
n
;

1556 
i
;

1559 
n
 = 
Àn
 + 2;

1560 
buf
 = (*Ë
	`yy_Êex_Æloc
–
n
 );

1561 i‡–! 
buf
 )

1562 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1564  
i
 = 0; i < 
Àn
; ++i )

1565 
buf
[
i
] = 
byãs
[i];

1567 
buf
[
Àn
] = buf[Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1569 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

1570 i‡–! 
b
 )

1571 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1576 
b
->
yy_is_our_buf„r
 = 1;

1578  
b
;

1579 
	}
}

1583 #i‚de‡
YY_NO_PUSH_STATE


1584 #ifde‡
YY_USE_PROTOS


1585 
	$yy_push_°©e
–
√w_°©e
 )

1587 
	$yy_push_°©e
–
√w_°©e
 )

1588 
√w_°©e
;

1591 i‡–
yy_°¨t_°ack_±r
 >
yy_°¨t_°ack_dïth
 )

1593 
yy_size_t
 
√w_size
;

1595 
yy_°¨t_°ack_dïth
 +
YY_START_STACK_INCR
;

1596 
√w_size
 = 
yy_°¨t_°ack_dïth
 * ( );

1598 i‡–! 
yy_°¨t_°ack
 )

1599 
yy_°¨t_°ack
 = (*Ë
	`yy_Êex_Æloc
–
√w_size
 );

1602 
yy_°¨t_°ack
 = (*Ë
	`yy_Êex_ªÆloc
(

1603 (*Ë
yy_°¨t_°ack
, 
√w_size
 );

1605 i‡–! 
yy_°¨t_°ack
 )

1606 
	`YY_FATAL_ERROR
(

1610 
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
++] = 
YY_START
;

1612 
	`BEGIN
(
√w_°©e
);

1613 
	}
}

1617 #i‚de‡
YY_NO_POP_STATE


1618 
	$yy_p›_°©e
()

1620 i‡–--
yy_°¨t_°ack_±r
 < 0 )

1621 
	`YY_FATAL_ERROR
( "start-condition stack underflow" );

1623 
	`BEGIN
(
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
]);

1624 
	}
}

1628 #i‚de‡
YY_NO_TOP_STATE


1629 
	$yy_t›_°©e
()

1631  
yy_°¨t_°ack
[
yy_°¨t_°ack_±r
 - 1];

1632 
	}
}

1635 #i‚de‡
YY_EXIT_FAILURE


1636 
	#YY_EXIT_FAILURE
 2

	)

1639 #ifde‡
YY_USE_PROTOS


1640 
	$yy_Áèl_îr‹
–
yyc⁄°
 
msg
[] )

1642 
	$yy_Áèl_îr‹
–
msg
 )

1643 
msg
[];

1646 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1647 
	`exô
–
YY_EXIT_FAILURE
 );

1648 
	}
}

1654 #unde‡
yyÀss


1655 
	#yyÀss
(
n
) \

1659 
yyãxt
[
yyÀng
] = 
yy_hﬁd_ch¨
; \

1660 
yy_c_buf_p
 = 
yyãxt
 + 
n
; \

1661 
yy_hﬁd_ch¨
 = *
yy_c_buf_p
; \

1662 *
yy_c_buf_p
 = '\0'; \

1663 
yyÀng
 = 
n
; \

1665  0 )

	)

1670 #i‚de‡
yyãxt_±r


1671 #ifde‡
YY_USE_PROTOS


1672 
	$yy_Êex_°∫˝y
–*
s1
, 
yyc⁄°
 *
s2
, 
n
 )

1674 
	$yy_Êex_°∫˝y
–
s1
, 
s2
, 
n
 )

1675 *
s1
;

1676 
yyc⁄°
 *
s2
;

1677 
n
;

1680 
i
;

1681  
i
 = 0; i < 
n
; ++i )

1682 
s1
[
i
] = 
s2
[i];

1683 
	}
}

1686 #ifde‡
YY_NEED_STRLEN


1687 #ifde‡
YY_USE_PROTOS


1688 
	$yy_Êex_°æí
–
yyc⁄°
 *
s
 )

1690 
	$yy_Êex_°æí
–
s
 )

1691 
yyc⁄°
 *
s
;

1694 
n
;

1695  
n
 = 0; 
s
[n]; ++n )

1698  
n
;

1699 
	}
}

1703 #ifde‡
YY_USE_PROTOS


1704 *
	$yy_Êex_Æloc
–
yy_size_t
 
size
 )

1706 *
	$yy_Êex_Æloc
–
size
 )

1707 
yy_size_t
 
size
;

1710  (*Ë
	`mÆloc
–
size
 );

1711 
	}
}

1713 #ifde‡
YY_USE_PROTOS


1714 *
	$yy_Êex_ªÆloc
–*
±r
, 
yy_size_t
 
size
 )

1716 *
	$yy_Êex_ªÆloc
–
±r
, 
size
 )

1717 *
±r
;

1718 
yy_size_t
 
size
;

1728  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1729 
	}
}

1731 #ifde‡
YY_USE_PROTOS


1732 
	$yy_Êex_‰ì
–*
±r
 )

1734 
	$yy_Êex_‰ì
–
±r
 )

1735 *
±r
;

1738 
	`‰ì
–
±r
 );

1739 
	}
}

1741 #i‡
YY_MAIN


1742 
	$maö
()

1744 
	`yyÀx
();

1746 
	}
}

1752 
	$yywøp
()

1755 
	}
}

1758 
	$Àx_ót_commít
()

1760 
c
, 
c1
;

1762 
lo›
:

1763 (
c
 = 
	`öput
()) != '*' && c != 0)

1765 i‡(
c
 == '\n')

1766 
löe
++;

1769 i‡((
c1
 = 
	`öput
()) != '/' && c1 != 0)

1771 
	`u≈ut
(
c1
);

1772 
lo›
;

1774 
	}
}

1777 
	$yy_√xtch¨
()

1779 
c
;

1782 
c
 = 
	`öput
();

1783 } 
c
 == ' ' || c == '\t' || c == '\v' || c == '\f' || c == '\n');

1784 
	`u≈ut
(
c
);

1786  
c
;

1787 
	}
}

1792 
	$yy_£t°ªam
(
FILE
 *
°ªam
)

1794 
i
;

1795 
	#MAX_STREAMS
 16

	)

1797 
FILE
 *
°ªam
;

1798 
YY_BUFFER_STATE
 
buf„r
;

1799 } 
°ªams
[
MAX_STREAMS
] = { {
NULL
, NULL}, };

1800 
num_°ªams
 = 0;

1801 
FILE
 *
œ°_°ªam
 = 
NULL
;

1804 i‡(
°ªam
 =
œ°_°ªam
)

1808 
i
=0; i < 
num_°ªams
; i++)

1810 i‡(
°ªams
[
i
].
°ªam
 == stream)

1812 
	`yy_swôch_to_buf„r
(
°ªams
[
i
].
buf„r
);

1818 i‡(
num_°ªams
 =
MAX_STREAMS
)

1819 
	`Áèl
("out ofÜex buffer streams, increase MAX_STREAMS");

1821 
°ªams
[
num_°ªams
].
°ªam
 = stream;

1822 
°ªams
[
num_°ªams
].
buf„r
 = 
	`yy_¸óã_buf„r
(
°ªam
, 
YY_BUF_SIZE
);

1823 
	`yy_swôch_to_buf„r
(
°ªams
[
num_°ªams
].
buf„r
);

1824 
num_°ªams
++;

1825 
	}
}

	@libexo/libexo.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°d¨g.h
>

55 
	~<˘y≥.h
>

56 
	~<limôs.h
>

57 
	~<î∫o.h
>

58 
	~<as£π.h
>

60 
	~"../ho°.h
"

61 
	~"../misc.h
"

62 
	~"../machöe.h
"

63 
	~"libexo.h
"

66 *
	gexo_˛ass_°r
[
ec_NUM
] = {

82 
	$öã∫_esˇ≥
(*
esc
, **
√xt
)

84 
c
, 
vÆue
, 
em±y
, 
cou¡
;

86 
c
 = *
esc
++) {

89 
vÆue
 = 0;

90 
em±y
 = 
TRUE
;

93 
c
 = *
esc
++;

94 i‡(!(
c
 >= 'a' && c <= 'f')

95 && !(
c
 >= 'A' && c <= 'F')

96 && !(
c
 >= '0' && c <= '9'))

98 
esc
--;

101 
vÆue
 *=16;

102 i‡(
c
 >= 'a' && c <= 'f')

103 
vÆue
 +
c
 - 'a' + 10;

104 i‡(
c
 >= 'A' && c <= 'F')

105 
vÆue
 +
c
 - 'A' + 10;

106 i‡(
c
 >= '0' && c <= '9')

107 
vÆue
 +
c
 - '0';

108 
em±y
 = 
FALSE
;

110 i‡(
em±y
)

111 
	`Áèl
("\\x used withÇoÅrailing hex digits");

117 
vÆue
 = 0;

118 
cou¡
 = 0;

119 (
c
 <'7'Ë&& (¯>'0'Ë&& (
cou¡
++ < 3))

121 
vÆue
 = (vÆuê* 8Ë+ (
c
 - '0');

122 
c
 = *
esc
++;

124 
esc
--;

130 
vÆue
 = 
c
;

134 
vÆue
 = '\n';

138 
vÆue
 = '\t';

142 
vÆue
 = '\r';

146 
vÆue
 = '\f';

150 
vÆue
 = '\b';

154 
vÆue
 = '\a';

158 
vÆue
 = '\v';

162 
vÆue
 = 
c
;

169 
vÆue
 = 
c
;

170 
	`w¨n
("n⁄-ANSIÉsˇ≥ sequí˚ `\\%c'", 
c
);

174 
	`Áèl
("unknow¿esˇ≥, '\\' fﬁlowed by ch¨ %x (`%c')", ()
c
, c);

177 i‡(*
√xt
)

178 *
√xt
 = 
esc
;

180  
vÆue
;

181 
	}
}

186 
	$öã∫_ch¨
(*
s
, **
√xt
)

188 
vÆue
;

190 i‡(
s
[0] !'\'' || s[
	`°æí
(s)-1] != '\'')

191 
	`∑nic
("mal-formed string constant");

193 i‡(
s
[1] != '\\')

195 
vÆue
 = ()
s
[1];

196 i‡(
s
[2] != '\'')

197 
	`∑nic
("mal-formed string constant");

198 i‡(
√xt
)

199 *
√xt
 = 
s
 + 2;

204 
vÆue
 = 
	`öã∫_esˇ≥
(
s
+2, 
√xt
);

208 
vÆue
 = (signed )(()(()(()value)));

210 i‡(
UCHAR_MAX
 < 
vÆue
)

211 
	`Áèl
("character constant out ofÑange");

213  
vÆue
;

214 
	}
}

217 
	$¥öt_ch¨
(
c
, 
FILE
 *
°ªam
)

219 
c
)

222 
	`Ârötf
(
°ªam
, "\\n");

226 
	`Ârötf
(
°ªam
, "\\\\");

230 
	`Ârötf
(
°ªam
, "\\'");

234 
	`Ârötf
(
°ªam
, "\\t");

238 
	`Ârötf
(
°ªam
, "\\r");

242 
	`Ârötf
(
°ªam
, "\\f");

246 
	`Ârötf
(
°ªam
, "\\b");

250 
	`Ârötf
(
°ªam
, "\\a");

254 
	`Ârötf
(
°ªam
, "\\v");

258 i‡(
	`i•röt
(
c
))

259 
	`Ârötf
(
°ªam
, "%c", 
c
);

261 
	`Ârötf
(
°ªam
, "\\x%02x", 
c
);

263 
	}
}

267 
	$öã∫_°rög
(*
°r
)

269 *
s
, *
i°r
;

272 
s
 = 
i°r
 = 
	`mÆloc
(
	`°æí
(
°r
)+1);

274 i‡(!
°r
 || !*str || *str != '\"')

275 
	`∑nic
("mal-formed string constant");

278 
°r
++;

280 *
°r
)

282 i‡(*
°r
 == '\\')

283 *
s
++ = 
	`öã∫_esˇ≥
(
°r
+1, &str);

287 i‡(*
°r
 == '\n')

288 
	`w¨n
("ANSI C forbidsÇewline in character constant");

290 i‡(*
°r
 == '"' && str[1] != '\0')

291 
	`∑nic
("encountered `\"'Émbedded in string constant");

293 i‡(*
°r
 != '\"')

294 *
s
++ = *
°r
;

295 
°r
++;

298 *
s
 = '\0';

299  
i°r
;

300 
	}
}

303 
	$¥öt_°rög
(*
s
, 
FILE
 *
°ªam
)

305 *
s
)

307 
	`¥öt_ch¨
(*
s
, 
°ªam
);

308 
s
++;

310 
	}
}

313 
	#TOKEN_BOGON
 0

	)

315 
	gtokí_id
 = 
TOKEN_BOGON
 + 1;

317 
	#TOKEN_HASH_SIZE
 1024

	)

318 
exo_tokí_t
 *
	gtokí_hash
[
TOKEN_HASH_SIZE
];

322 
	$hash_°r
(*
s
)

324 
h
 = 0;

325 *
s
)

326 
h
 = (h << 1Ë+ *
s
++;

327  (
h
 % 
TOKEN_HASH_SIZE
);

328 
	}
}

331 
exo_tokí_t
 *

332 
	$exo_öã∫
(*
tokí_°r
)

334 
ödex
;

335 
exo_tokí_t
 *
ít
;

337 
ödex
 = 
	`hash_°r
(
tokí_°r
);

339 
ít
=
tokí_hash
[
ödex
];É¡ !
NULL
;É¡Û¡->
√xt
)

341 i‡(!
	`°rcmp
(
tokí_°r
, 
ít
->
°r
))

344  
ít
;

349 
ít
 = (
exo_tokí_t
 *)
	`ˇŒoc
(1, (exo_token_t));

350 i‡(!
ít
)

351 
	`Áèl
("out of virtual memory");

353 
ít
->
°r
 = 
	`my°rdup
(
tokí_°r
);

354 
ít
->
tokí
 = 
tokí_id
++;

355 
ít
->
√xt
 = 
tokí_hash
[
ödex
];

356 
tokí_hash
[
ödex
] = 
ít
;

358  
ít
;

359 
	}
}

362 
exo_tokí_t
 *

363 
	$exo_öã∫_as
(*
tokí_°r
,

364 
tokí
)

366 
exo_tokí_t
 *
ít
;

369 i‡(
tokí_id
 > 
tokí
)

370 
	`Áèl
("token value isálready in use");

373 
ít
 = 
	`exo_öã∫
(
tokí_°r
);

375 
ít
->
tokí
 =Åoken;

378 i‡(
ít
->
tokí
 !=Åoken)

379 
	`Áèl
("symbﬁ `%s' wa†¥eviou¶y i¡î√d", 
tokí_°r
);

382  
ít
;

383 
	}
}

386 
exo_ãrm_t
 *

387 
	$exo_Æloc
(
exo_˛ass_t
 
ec
)

389 
exo_ãrm_t
 *
exo
;

391 
exo
 = (
exo_ãrm_t
 *)
	`ˇŒoc
(1, (exo_term_t));

392 i‡(!
exo
)

393 
	`Áèl
("out of virtual memory");

394 
exo
->
√xt
 = 
NULL
;

395 
exo
->
ec
 =Éc;

397  
exo
;

398 
	}
}

413 
exo_ãrm_t
 *

414 
	$exo_√w
(
exo_˛ass_t
 
ec
, ...)

416 
exo_ãrm_t
 *
exo
;

417 
va_li°
 
v
;

418 
	`va_°¨t
(
v
, 
ec
);

420 
exo
 = 
	`exo_Æloc
(
ec
);

421 
ec
)

423 
ec_öãgî
:

424 
exo
->
as_öãgî
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_öãgî_t
);

427 
ec_addªss
:

428 
exo
->
as_addªss
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_addªss_t
);

431 
ec_Êﬂt
:

432 
exo
->
as_Êﬂt
.
vÆ
 = 
	`va_¨g
(
v
, 
exo_Êﬂt_t
);

435 
ec_ch¨
:

436 
exo
->
as_ch¨
.
vÆ
 = 
	`va_¨g
(
v
, );

439 
ec_°rög
:

441 *
°r
;

443 
°r
 = 
	`va_¨g
(
v
, *);

444 
exo
->
as_°rög
.
°r
 = (*)
	`my°rdup
(str);

448 
ec_li°
:

450 
exo_ãrm_t
 *
ít
;

452 
exo
->
as_li°
.
hód
 = 
NULL
;

454 
ít
 = 
	`va_¨g
(
v
, 
exo_ãrm_t
 *);

455 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
ít
);

456 } 
ít
 !
NULL
);

460 
ec_¨øy
:

462 
i
;

463 
exo_ãrm_t
 *
ít
;

465 
exo
->
as_¨øy
.
size
 = 
	`va_¨g
(
v
, );

466 
exo
->
as_¨øy
.
¨øy
 = (
exo_ãrm_t
 **)

467 
	`ˇŒoc
(
exo
->
as_¨øy
.
size
, (
exo_ãrm_t
 *));

468 i‡(!
exo
->
as_¨øy
.
¨øy
)

469 
	`Áèl
("out of virtual memory");

470 
i
 = 0;

472 
ít
 = 
	`va_¨g
(
v
, 
exo_ãrm_t
 *);

473 i‡(
ít
 !
NULL
)

475 i‡(
i
 =
exo
->
as_¨øy
.
size
)

476 
	`Áèl
("array constructor overflow");

477 
	`SET_EXO_ARR
(
exo
, 
i
, 
ít
);

479 
i
++;

480 } 
ít
 !
NULL
);

484 
ec_tokí
:

486 *
°r
;

488 
°r
 = 
	`va_¨g
(
v
, *);

489 
exo
->
as_tokí
.
ít
 = 
	`exo_öã∫
(
°r
);

493 
ec_blob
:

495 
size
;

496 *
d©a
;

498 
size
 = 
	`va_¨g
(
v
, );

499 
d©a
 = 
	`va_¨g
(
v
, *);

501 
exo
->
as_blob
.
size
 = size;

502 
exo
->
as_blob
.
d©a
 = 
	`mÆloc
(
size
);

503 i‡(
d©a
 !
NULL
)

504 
	`mem˝y
(
exo
->
as_blob
.
d©a
, d©a, 
size
);

506 
	`mem£t
(
exo
->
as_blob
.
d©a
, 0, 
size
);

510 
ec_nuŒ
:

514 
	`∑nic
("bogus EXO class");

517 
	`va_íd
(
v
);

518  
exo
;

519 
	}
}

523 
	$exo_dñëe
(
exo_ãrm_t
 *
exo
)

525 
exo
->
√xt
 = 
NULL
;

527 
exo
->
ec
)

529 
ec_öãgî
:

531 
exo
->
as_öãgî
.
vÆ
 = 0;

534 
ec_addªss
:

536 
exo
->
as_addªss
.
vÆ
 = 0;

539 
ec_Êﬂt
:

541 
exo
->
as_Êﬂt
.
vÆ
 = 0.0;

544 
ec_ch¨
:

546 
exo
->
as_ch¨
.
vÆ
 = '\0';

549 
ec_°rög
:

550 
	`‰ì
(
exo
->
as_°rög
.
°r
);

551 
exo
->
as_°rög
.
°r
 = 
NULL
;

554 
ec_li°
:

556 
exo_ãrm_t
 *
ít
, *
√xt_ít
;

558 
ít
=
exo
->
as_li°
.
hód
;É¡ !
NULL
;É¡ = 
√xt_ít
)

560 
√xt_ít
 = 
ít
->
√xt
;

561 
	`exo_dñëe
(
ít
);

563 
exo
->
as_li°
.
hód
 = 
NULL
;

567 
ec_¨øy
:

569 
i
;

571 
i
=0; i < 
exo
->
as_¨øy
.
size
; i++)

573 i‡(
exo
->
as_¨øy
.
¨øy
[
i
] !
NULL
)

574 
	`exo_dñëe
(
exo
->
as_¨øy
.
¨øy
[
i
]);

576 
	`‰ì
(
exo
->
as_¨øy
.
¨øy
);

577 
exo
->
as_¨øy
.
¨øy
 = 
NULL
;

578 
exo
->
as_¨øy
.
size
 = 0;

582 
ec_tokí
:

584 
exo
->
as_tokí
.
ít
 = 
NULL
;

587 
ec_blob
:

589 
	`‰ì
(
exo
->
as_blob
.
d©a
);

590 
exo
->
as_blob
.
d©a
 = 
NULL
;

593 
ec_nuŒ
:

598 
	`∑nic
("bogus EXO class");

600 
exo
->
ec
 = (
exo_˛ass_t
)0;

603 
	`‰ì
(
exo
);

604 
	}
}

607 
exo_ãrm_t
 *

608 
	$exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
)

610 
exo_ãrm_t
 *
exo
, *
¥ev
;

612 i‡(!
f‹e
 && !
a·
)

613  
NULL
;

615 i‡(!
f‹e
)

616  
a·
;

619 
¥ev
=
NULL
,
exo
=
f‹e
;Éxÿ!NULL;ÖªvÛxo,exoÛxo->
√xt
)

621 
	`as£π
(
¥ev
);

624 
¥ev
->
√xt
 = 
a·
;

626  
f‹e
;

627 
	}
}

630 
exo_ãrm_t
 *

631 
	$exo_c›y
(
exo_ãrm_t
 *
exo
)

633 
exo_ãrm_t
 *
√w_exo
;

636 i‡(!
exo
)

637  
NULL
;

639 
√w_exo
 = 
	`exo_Æloc
(
exo
->
ec
);

640 *
√w_exo
 = *
exo
;

643 
√w_exo
->
√xt
 = 
NULL
;

645 
√w_exo
->
ec
)

647 
ec_öãgî
:

648 
ec_addªss
:

649 
ec_Êﬂt
:

650 
ec_ch¨
:

651 
ec_°rög
:

652 
ec_li°
:

653 
ec_tokí
:

657 
ec_¨øy
:

659 
i
;

662 
√w_exo
->
as_¨øy
.
¨øy
 = (
exo_ãrm_t
 **)

663 
	`ˇŒoc
(
√w_exo
->
as_¨øy
.
size
, (
exo_ãrm_t
 *));

665 
i
=0; i<
√w_exo
->
as_¨øy
.
size
; i++)

667 
	`SET_EXO_ARR
(
√w_exo
, 
i
, 
	`EXO_ARR
(
exo
, i));

672 
ec_blob
:

673 
√w_exo
->
as_blob
.
d©a
 = 
	`mÆloc
“ew_exo->
as_¨øy
.
size
);

674 
	`mem˝y
(
√w_exo
->
as_blob
.
d©a
, 
exo
->as_blob.d©a,Çew_exo->
as_¨øy
.
size
);

678 
	`∑nic
("bogus EXO class");

681  
√w_exo
;

682 
	}
}

685 
exo_ãrm_t
 *

686 
	$exo_dìpc›y
(
exo_ãrm_t
 *
exo
)

688 
exo_ãrm_t
 *
√w_exo
;

691 i‡(!
exo
)

692  
NULL
;

694 
√w_exo
 = 
	`exo_c›y
(
exo
);

695 
√w_exo
->
ec
)

697 
ec_öãgî
:

698 
ec_addªss
:

699 
ec_Êﬂt
:

700 
ec_ch¨
:

701 
ec_tokí
:

705 
ec_°rög
:

707 
√w_exo
->
as_°rög
.
°r
 =

708 (*)
	`my°rdup
((*)
exo
->
as_°rög
.
°r
);

711 
ec_li°
:

714 
exo_ãrm_t
 *
ñt
, *
√w_ñt
, *
√w_li°
;

716 
√w_li°
 = 
NULL
;

717 
ñt
=
√w_exo
->
as_li°
.
hód
;É… !
NULL
;É…Û…->
√xt
)

719 
√w_ñt
 = 
	`exo_dìpc›y
(
ñt
);

720 
√w_li°
 = 
	`exo_chaö
“ew_li°, 
√w_ñt
);

722 
√w_exo
->
as_li°
.
hód
 = 
√w_li°
;

726 
ec_¨øy
:

729 
i
;

731 
i
=0; i<
√w_exo
->
as_¨øy
.
size
; i++)

733 
	`SET_EXO_ARR
(
√w_exo
, 
i
, 
	`exo_dìpc›y
(
	`EXO_ARR
(
exo
, i)));

738 
ec_blob
:

739 
√w_exo
->
as_blob
.
d©a
 = 
	`mÆloc
“ew_exo->
as_¨øy
.
size
);

740 
	`mem˝y
(
√w_exo
->
as_blob
.
d©a
, 
exo
->as_blob.d©a,Çew_exo->
as_¨øy
.
size
);

744 
	`∑nic
("bogus EXO class");

747  
√w_exo
;

748 
	}
}

752 
	$exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
)

754 i‡(!
°ªam
)

755 
°ªam
 = 
°dîr
;

757 
exo
->
ec
)

759 
ec_öãgî
:

760 i‡((
exo_öãgî_t
) == 4)

761 
	`myÂrötf
(
°ªam
, "%u", 
exo
->
as_öãgî
.
vÆ
);

763 
	`myÂrötf
(
°ªam
, "%lu", 
exo
->
as_öãgî
.
vÆ
);

766 
ec_addªss
:

767 i‡((
exo_addªss_t
) == 4)

768 
	`myÂrötf
(
°ªam
, "0x%x", 
exo
->
as_öãgî
.
vÆ
);

770 
	`myÂrötf
(
°ªam
, "0x%lx", 
exo
->
as_öãgî
.
vÆ
);

773 
ec_Êﬂt
:

774 
	`Ârötf
(
°ªam
, "%f", 
exo
->
as_Êﬂt
.
vÆ
);

777 
ec_ch¨
:

778 
	`Ârötf
(
°ªam
, "'");

779 
	`¥öt_ch¨
(
exo
->
as_ch¨
.
vÆ
, 
°ªam
);

780 
	`Ârötf
(
°ªam
, "'");

783 
ec_°rög
:

784 
	`Ârötf
(
°ªam
, "\"");

785 
	`¥öt_°rög
(
exo
->
as_°rög
.
°r
, 
°ªam
);

786 
	`Ârötf
(
°ªam
, "\"");

789 
ec_li°
:

791 
exo_ãrm_t
 *
ít
;

793 
	`Ârötf
(
°ªam
, "(");

794 
ít
=
exo
->
as_li°
.
hód
;É¡ !
NULL
;É¡Û¡->
√xt
)

796 
	`exo_¥öt
(
ít
, 
°ªam
);

797 i‡(
ít
->
√xt
)

798 
	`Ârötf
(
°ªam
, ", ");

800 
	`Ârötf
(
°ªam
, ")");

804 
ec_¨øy
:

806 
i
, 
œ°
;

809 
œ°
=
exo
->
as_¨øy
.
size
-1;Üast >= 0;Üast--)

811 i‡(
	`EXO_ARR
(
exo
, 
œ°
Ë!
NULL
)

816 
	`Ârötf
(
°ªam
, "{%d}[", 
exo
->
as_¨øy
.
size
);

817 
i
=0; i<
exo
->
as_¨øy
.
size
 && i <
œ°
; i++)

819 i‡(
exo
->
as_¨øy
.
¨øy
[
i
] !
NULL
)

820 
	`exo_¥öt
(
exo
->
as_¨øy
.
¨øy
[
i
], 
°ªam
);

822 
	`Ârötf
(
°ªam
, " ");

823 i‡(
i
 !
exo
->
as_¨øy
.
size
-1 && i !
œ°
)

824 
	`Ârötf
(
°ªam
, ", ");

826 
	`Ârötf
(
°ªam
, "]");

830 
ec_tokí
:

831 
	`Ârötf
(
°ªam
, "%s", 
exo
->
as_tokí
.
ít
->
°r
);

834 
ec_blob
:

836 
i
, 
¸
;

838 
	`Ârötf
(
°ªam
, "{%d}<\n", 
exo
->
as_blob
.
size
);

839 
i
=0; i < 
exo
->
as_blob
.
size
; i++)

841 
¸
 = 
FALSE
;

842 i‡(
i
 != 0 && (i % 38) == 0)

844 
	`Ârötf
(
°ªam
, "\n");

845 
¸
 = 
TRUE
;

847 
	`Ârötf
(
°ªam
, "%02x", 
exo
->
as_blob
.
d©a
[
i
]);

849 i‡(!
¸
)

850 
	`Ârötf
(
°ªam
, "\n");

851 
	`Ârötf
(
°ªam
, ">");

856 
	`∑nic
("bogus EXO class");

858 
	}
}

861 
yyÀx
();

862 
yy_√xtch¨
();

863 *
yyãxt
;

864 
FILE
 *
yyö
;

867 
	$exo_îr
(*
îr
)

869 
löe
;

871 
	`Ârötf
(
°dîr
, "EXOÖ¨£Éº‹:Üöê%d: %s\n", 
löe
, 
îr
);

872 
	`exô
(1);

873 
	}
}

876 
exo_ãrm_t
 *

877 
	$exo_ªad
(
FILE
 *
°ªam
)

879 
tok
;

880 
tok_buf
[1024], *
ídp
;

881 
exo_ãrm_t
 *
ít
 = 
NULL
;

882 
î∫o
;

883 
	`yy_£t°ªam
(
FILE
 *);

886 i‡(!
°ªam
)

887 
°ªam
 = 
°dö
;

888 
	`yy_£t°ªam
(
°ªam
);

891 
tok
 = 
	`yyÀx
();

892 
	`°r˝y
(
tok_buf
, 
yyãxt
);

894 
tok
)

896 
Àx_öãgî
:

898 
exo_öãgî_t
 
öt_vÆ
;

901 
î∫o
 = 0;

902 #ifde‡
HOST_HAS_QWORD


903 
öt_vÆ
 = 
	`my©oq
(
tok_buf
, &
ídp
, 10);

905 
öt_vÆ
 = 
	`°πoul
(
tok_buf
, &
ídp
, 10);

907 i‡(!
î∫o
 && !*
ídp
)

910 
ít
 = 
	`exo_√w
(
ec_öãgî
, 
öt_vÆ
);

913 
	`exo_îr
("cannotÖarse integerÜiteral");

917 
Àx_addªss
:

919 
exo_addªss_t
 
addr_vÆ
;

922 
î∫o
 = 0;

923 #ifde‡
HOST_HAS_QWORD


924 
addr_vÆ
 = 
	`my©oq
(
tok_buf
, &
ídp
, 16);

926 
addr_vÆ
 = 
	`°πoul
(
tok_buf
, &
ídp
, 16);

928 i‡(!
î∫o
 && !*
ídp
)

931 
ít
 = 
	`exo_√w
(
ec_addªss
, 
addr_vÆ
);

934 
	`exo_îr
("cannotÖarseáddressÜiteral");

938 
Àx_Êﬂt
:

940 
exo_Êﬂt_t
 
Êﬂt_vÆ
;

943 
î∫o
 = 0;

944 
Êﬂt_vÆ
 = 
	`°πod
(
tok_buf
, &
ídp
);

945 i‡(!
î∫o
 && !*
ídp
)

948 
ít
 = 
	`exo_√w
(
ec_Êﬂt
, 
Êﬂt_vÆ
);

951 
	`exo_îr
("cannotÖarse floatingÖointÜiteral");

955 
Àx_ch¨
:

957 
c
;

959 
c
 = 
	`öã∫_ch¨
(
tok_buf
, &
ídp
);

960 i‡(!
ídp
)

961 
	`exo_îr
("cannot convert characterÜiteral");

962 
ít
 = 
	`exo_√w
(
ec_ch¨
, 
c
);

966 
Àx_°rög
:

968 *
s
;

970 
s
 = 
	`öã∫_°rög
(
tok_buf
);

971 
ít
 = 
	`exo_√w
(
ec_°rög
, 
s
);

972 
	`‰ì
(
s
);

976 
Àx_tokí
:

977 
ít
 = 
	`exo_√w
(
ec_tokí
, 
tok_buf
);

980 
Àx_byã
:

981 
	`exo_îr
("unexpected blob byteÉncountered");

986 
exo_ãrm_t
 *
ñt
;

988 
ít
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

990 i‡(
	`yy_√xtch¨
() != ')')

994 
ñt
 = 
	`exo_ªad
(
°ªam
);

995 i‡(!
ñt
)

996 
	`exo_îr
("unexpectedÉnd-of-file");

997 
ít
->
as_li°
.
hód
 =

998 
	`exo_chaö
(
ít
->
as_li°
.
hód
, 
ñt
);

1001 i‡(
	`yy_√xtch¨
() == ',')

1002 
	`yyÀx
();

1003 } 
	`yy_√xtch¨
() != ')');

1007 
tok
 = 
	`yyÀx
();

1008 i‡(
tok
 != ')')

1009 
	`exo_îr
("expected ')'");

1014 
	`exo_îr
("unexpected ')'Éncountered");

1018 
	`exo_îr
("unexpected '<'Éncountered");

1022 
	`exo_îr
("unexpected '>'Éncountered");

1027 
˙t
, 
size
;

1028 
exo_ãrm_t
 *
ñt
;

1031 
ñt
 = 
	`exo_ªad
(
°ªam
);

1032 i‡(!
ñt
 ||É…->
ec
 !
ec_öãgî
)

1033 
	`exo_îr
("badly formedárray size");

1036 
size
 = ()
ñt
->
as_öãgî
.
vÆ
;

1039 
	`exo_dñëe
(
ñt
);

1042 
tok
 = 
	`yyÀx
();

1043 i‡(
tok
 != '}')

1044 
	`exo_îr
("expected '}'");

1046 
tok
 = 
	`yyÀx
();

1047 
tok
)

1051 
ít
 = 
	`exo_√w
(
ec_¨øy
, 
size
, 
NULL
);

1054 i‡(
	`yy_√xtch¨
() != ']')

1057 
˙t
 = 0;

1059 i‡(
˙t
 =
ít
->
as_¨øy
.
size
)

1060 
	`exo_îr
("too many initializers forárray");

1063 i‡(
	`yy_√xtch¨
() == ',')

1065 
ñt
 = 
NULL
;

1069 
ñt
 = 
	`exo_ªad
(
°ªam
);

1070 i‡(!
ñt
)

1071 
	`exo_îr
("unexpectedÉnd-of-file");

1073 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
ñt
);

1074 
˙t
++;

1077 i‡(
	`yy_√xtch¨
() == ',')

1078 
	`yyÀx
();

1079 } 
	`yy_√xtch¨
() != ']');

1083 
tok
 = 
	`yyÀx
();

1084 i‡(
tok
 != ']')

1085 
	`exo_îr
("expected ']'");

1090 
ít
 = 
	`exo_√w
(
ec_blob
, 
size
, 
NULL
);

1093 i‡(
	`yy_√xtch¨
() != '>')

1095 
byã_vÆ
;

1098 
˙t
 = 0;

1101 
tok
 = 
	`yyÀx
();

1103 i‡(
tok
 =
Àx_byã
)

1105 i‡(
˙t
 =
ít
->
as_blob
.
size
)

1106 
	`exo_îr
("too many initializers for blob");

1109 
î∫o
 = 0;

1110 
byã_vÆ
 = 
	`°πoul
(
yyãxt
, &
ídp
, 16);

1111 i‡(
î∫o
 !0 || *
ídp
 != '\0')

1112 
	`exo_îr
("cannotÖarse blob byteÜiteral");

1113 i‡(
byã_vÆ
 > 255)

1114 
	`∑nic
("bogus byte value");

1115 
ít
->
as_blob
.
d©a
[
˙t
] = 
byã_vÆ
;

1116 
˙t
++;

1118 i‡(
tok
 == '>')

1121 
	`exo_îr
("unexpected character in blob");

1126 i‡(
˙t
 !
ít
->
as_blob
.
size
)

1127 
	`exo_îr
("notÉnough initializers for blob");

1132 
	`exo_îr
("expected '[' or '<'");

1138 
	`exo_îr
("unexpected '}'Éncountered");

1142 
	`exo_îr
("unexpected ','Éncountered");

1147 
i
, 
˙t
;

1148 
exo_ãrm_t
 *
li°
, *
ñt
, *
√xt_ñt
;

1151 
li°
 = 
NULL
;

1152 i‡(
	`yy_√xtch¨
() == ']')

1153 
	`exo_îr
("unsizedárray hasÇo initializers");

1155 
˙t
 = 0;

1158 i‡(
	`yy_√xtch¨
() == ',')

1160 
ñt
 = 
	`exo_√w
(
ec_nuŒ
);

1164 
ñt
 = 
	`exo_ªad
(
°ªam
);

1165 i‡(!
ñt
)

1166 
	`exo_îr
("unexpectedÉnd-of-file");

1168 
˙t
++;

1169 
li°
 = 
	`exo_chaö
÷i°, 
ñt
);

1172 i‡(
	`yy_√xtch¨
() == ',')

1173 
	`yyÀx
();

1174 } 
	`yy_√xtch¨
() != ']');

1177 
tok
 = 
	`yyÀx
();

1178 i‡(
tok
 != ']')

1179 
	`exo_îr
("expected ']'");

1182 
	`as£π
(
˙t
 > 0);

1183 
ít
 = 
	`exo_√w
(
ec_¨øy
, 
˙t
, 
NULL
);

1186 
i
=0,
ñt
=
li°
; i<
˙t
; i++,ñt=
√xt_ñt
)

1188 
	`as£π
(
ñt
 !
NULL
);

1189 
√xt_ñt
 = 
ñt
->
√xt
;

1190 i‡(
ñt
->
ec
 =
ec_nuŒ
)

1192 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
NULL
);

1193 
	`exo_dñëe
(
ít
);

1197 
	`SET_EXO_ARR
(
ít
, 
˙t
, 
ñt
);

1198 
ñt
->
√xt
 = 
NULL
;

1205 
	`exo_îr
("unexpected ']'Éncountered");

1208 
Àx_eof
:

1210 
ít
 = 
NULL
;

1214 
	`∑nic
("bogusÅoken");

1217  
ít
;

1218 
	}
}

	@libexo/libexo.h

70 #i‚de‡
EXO_H


71 
	#EXO_H


	)

73 
	~"../ho°.h
"

74 
	~"../misc.h
"

75 
	~"../machöe.h
"

78 
	#EXO_FMT_MAJOR
 1

	)

79 
	#EXO_FMT_MINOR
 0

	)

82 
	eexo_˛ass_t
 {

83 
	mec_öãgî
,

84 
	mec_addªss
,

85 
	mec_Êﬂt
,

86 
	mec_ch¨
,

87 
	mec_°rög
,

88 
	mec_li°
,

89 
	mec_¨øy
,

90 
	mec_tokí
,

91 
	mec_blob
,

92 
	mec_nuŒ
,

93 
	mec_NUM


97 *
exo_˛ass_°r
[
ec_NUM
];

100 
	sexo_tokí_t
 {

101 
exo_tokí_t
 *
	m√xt
;

102 *
	m°r
;

103 
	mtokí
;

106 
	sexo_ãrm_t
 {

107 
exo_ãrm_t
 *
	m√xt
;

108 
exo_˛ass_t
 
	mec
;

110 
	sas_öãgî_t
 {

111 
exo_öãgî_t
 
	mvÆ
;

112 } 
	mas_öãgî
;

113 
	sas_addªss_t
 {

114 
exo_addªss_t
 
	mvÆ
;

115 } 
	mas_addªss
;

116 
	sas_Êﬂt_t
 {

117 
exo_Êﬂt_t
 
	mvÆ
;

118 } 
	mas_Êﬂt
;

119 
	sas_ch¨_t
 {

120 
	mvÆ
;

121 } 
	mas_ch¨
;

122 
	sas_°rög_t
 {

123 *
	m°r
;

124 } 
	mas_°rög
;

125 
	sas_li°_t
 {

126 
exo_ãrm_t
 *
	mhód
;

127 } 
	mas_li°
;

128 
	sas_¨øy_t
 {

129 
	msize
;

130 
exo_ãrm_t
 **
	m¨øy
;

131 } 
	mas_¨øy
;

132 
	sas_tokí_t
 {

133 
exo_tokí_t
 *
	mít
;

134 } 
	mas_tokí
;

135 
	sas_blob_t
 {

136 
	msize
;

137 *
	md©a
;

138 } 
	mas_blob
;

139 } 
	mv¨ü¡
;

142 
	#as_öãgî
 
v¨ü¡
.
as_öãgî


	)

143 
	#as_addªss
 
v¨ü¡
.
as_addªss


	)

144 
	#as_Êﬂt
 
v¨ü¡
.
as_Êﬂt


	)

145 
	#as_ch¨
 
v¨ü¡
.
as_ch¨


	)

146 
	#as_°rög
 
v¨ü¡
.
as_°rög


	)

147 
	#as_li°
 
v¨ü¡
.
as_li°


	)

148 
	#as_¨øy
 
v¨ü¡
.
as_¨øy


	)

149 
	#as_tokí
 
v¨ü¡
.
as_tokí


	)

150 
	#as_blob
 
v¨ü¡
.
as_blob


	)

154 
	#EXO_ARR
(
E
,
N
) \

155 ((
E
)->
ec
 !
ec_¨øy
 \

156 ? (
	`Áèl
("nŸá¿¨øy"), *(
exo_ãrm_t
 **)(
NULL
)) \

157 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

158 ? (
	`Áèl
("¨øy bound†îr‹"), *(
exo_ãrm_t
 **)(
NULL
)) \

159 : (
E
)->
as_¨øy
.
¨øy
[(
N
)]))

	)

160 
	#SET_EXO_ARR
(
E
,
N
,
V
) \

161 ((
E
)->
ec
 !
ec_¨øy
 \

162 ? ()
	`Áèl
("notánárray") \

163 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

164 ? ()
	`Áèl
("array boundsÉrror") \

165 : ()((
E
)->
as_¨øy
.
¨øy
[(
N
)] = (
V
))))

	)

168 
exo_tokí_t
 *

169 
exo_öã∫
(*
tokí_°r
);

172 
exo_tokí_t
 *

173 
exo_öã∫_as
(*
tokí_°r
,

174 
tokí
);

189 
exo_ãrm_t
 *

190 
exo_√w
(
exo_˛ass_t
 
ec
, ...);

194 
exo_dñëe
(
exo_ãrm_t
 *
exo
);

197 
exo_ãrm_t
 *

198 
exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
);

201 
exo_ãrm_t
 *

202 
exo_c›y
(
exo_ãrm_t
 *
exo
);

205 
exo_ãrm_t
 *

206 
exo_dìpc›y
(
exo_ãrm_t
 *
exo
);

210 
exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
);

213 
exo_ãrm_t
 *

214 
exo_ªad
(
FILE
 *
°ªam
);

217 
	eÀx_t
 {

218 
	mÀx_öãgî
 = 256,

219 
	mÀx_addªss
,

220 
	mÀx_Êﬂt
,

221 
	mÀx_ch¨
,

222 
	mÀx_°rög
,

223 
	mÀx_tokí
,

224 
	mÀx_byã
,

225 
	mÀx_eof


	@loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-Æpha/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 0

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
md_addr_t
 
	gld_brk_poöt
 = 0;

87 
	gld_d©a_size
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 0;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = -1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, "0x%010p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, "0x%010p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, "0x%010p");

130 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

132 &
ld_°ack_mö
,Üd_stack_min, "0x%010p");

134 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

136 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, "0x%010p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, "0x%010p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
qw‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

219 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

220 
	`w¨n
("****************************************");

221 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

222 
	`w¨n
("****************************************");

224 
	`Áèl
("SimpleScalar/Alpha only supports binaryÉxecution on\n"

230 i‡(
sim_chk±_‚ame
 !
NULL
)

231 
	`Áèl
("checkpoints only supported while EIOÅracing");

233 #ifde‡
BFD_LOADER


236 
bfd
 *
abfd
;

237 
a£˘i⁄
 *
£˘
;

241 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

242 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

243 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

246 
ld_ívú⁄_ba£
 = 
•
;

249 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

250 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

251 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

256 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

258 
	`bfd_˛o£
(
abfd
);

259 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

263 
ld_¥og_‚ame
 = 
¨gv
[0];

266 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

268 
	`debug
("processing %d sections in `%s'...",

269 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

272 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

274 *
p
;

276 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

277 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

278 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

281 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

282 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

283 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

284 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

287 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

288 i‡(!
p
)

289 
	`Áèl
("cannotállocate %d bytes for section `%s'",

290 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

291 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

294 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

295 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

296 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

299 
	`mem_bc›y
(
mem_‚
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

300 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

303 
	`‰ì
(
p
);

306 i‡(
zîo_bss_£gs


307 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

308 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

309 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

312 
	`mem_bzîo
(
mem_‚
,

313 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

314 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

319 
	`debug
("ignoring section `%s' duringÜoad...",

320 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

324 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

327 
ld_ãxt_size
 =

328 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

329 - 
MD_TEXT_BASE
)

330 + 
TEXT_TAIL_PADDING
;

334 
	`mem_bzîo
(
mem_‚
,

335 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

336 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

337 
TEXT_TAIL_PADDING
);

341 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

342 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

343 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

344 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

345 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

348 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

349 
d©a_bªak
)

350 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

351 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

356 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

357 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

358 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

363 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

364 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

365 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

366 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

369 i‡(!
	`bfd_˛o£
(
abfd
))

370 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

376 
FILE
 *
fobj
;

377 
Êoc
;

378 
ecoff_fûehdr
 
fhdr
;

379 
ecoff_aouthdr
 
ahdr
;

380 
ecoff_s˙hdr
 
shdr
;

383 
ld_¥og_‚ame
 = 
¨gv
[0];

386 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

387 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

389 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

391 i‡(!
fobj
)

392 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

394 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

395 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

398 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_ALPHAMAGIC
))

399 
ld_èrgë_big_ídün
 = 
FALSE
;

400 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_MAGIC
)

401 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_MAGIC
)

402 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_OTHER
)

403 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_OTHER
))

404 
	`Áèl
("AÕh®simuœt‹ c™nŸÑu¿PISA bö¨y `%s'", 
¨gv
[0]);

406 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable)",

407 
¨gv
[0]);

409 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

410 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

412 
ld_ãxt_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
ãxt_°¨t
);

413 
ld_ãxt_size
 = 
	`MD_SWAPQ
(
ahdr
.
tsize
);

414 
ld_¥og_íåy
 = 
	`MD_SWAPQ
(
ahdr
.
íåy
);

415 
ld_d©a_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
d©a_°¨t
);

416 
ld_d©a_size
 = 
	`MD_SWAPQ
(
ahdr
.
dsize
Ë+ MD_SWAPQ◊hdr.
bsize
);

417 
ªgs
->
ªgs_R
[
MD_REG_GP
] = 
	`MD_SWAPQ
(
ahdr
.
gp_vÆue
);

420 
d©a_bªak
 = 
ld_d©a_ba£
 + 
ld_d©a_size
;

425 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
	`MD_SWAPH
(
fhdr
.
f_›thdr
), 0);

427 
	`debug
("processing %d sections in `%s'...",

428 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
), 
¨gv
[0]);

431 
Êoc
 = 
	`·ñl
(
fobj
);

432 
i
 = 0; i < 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
); i++)

434 *
p
;

436 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

437 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

438 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

439 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

440 
Êoc
 = 
	`·ñl
(
fobj
);

442 
	`MD_SWAPW
(
shdr
.
s_Êags
))

444 
ECOFF_STYP_TEXT
:

445 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

446 i‡(!
p
)

447 
	`Áèl
("out of virtual memory");

449 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

450 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

451 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

452 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

455 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

456 
	`MD_SWAPQ
(
shdr
.
s_vaddr
), 
p
, MD_SWAPQ(shdr.
s_size
));

460 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

461 
	`MD_SWAPQ
(
shdr
.
s_vaddr
Ë+ MD_SWAPQ(shdr.
s_size
),

462 
TEXT_TAIL_PADDING
);

466 
	`‰ì
(
p
);

469 
Text_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

470 
Text_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

471 
Text_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
) / 4;

473 
Text_size
 += 10;

474 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

479 
ECOFF_STYP_INIT
:

480 
ECOFF_STYP_FINI
:

481 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

483 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

484 i‡(!
p
)

485 
	`Áèl
("out of virtual memory");

487 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

488 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

489 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

490 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

493 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

494 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

495 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

498 
	`‰ì
(
p
);

501 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

504 
ECOFF_STYP_LITA
:

505 
ECOFF_STYP_LIT8
:

506 
ECOFF_STYP_LIT4
:

507 
ECOFF_STYP_XDATA
:

508 
ECOFF_STYP_PDATA
:

509 
ECOFF_STYP_RCONST
:

512 
ECOFF_STYP_RDATA
:

517 
Rd©a_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

518 
Rd©a_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
);

519 
Rd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

522 
ECOFF_STYP_DATA
:

524 
D©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

527 
ECOFF_STYP_SDATA
:

529 
Sd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

531 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

533 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

534 i‡(!
p
)

535 
	`Áèl
("out of virtual memory");

537 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

538 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

539 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

540 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

543 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

544 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

545 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

548 
	`‰ì
(
p
);

551 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

554 
ECOFF_STYP_BSS
:

555 
ECOFF_STYP_SBSS
:

560 
	`w¨n
("£˘i⁄ `%s' ign‹ed...", 
shdr
.
s_«me
);

565 i‡(
	`f˛o£
(
fobj
))

566 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

572 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

573 
	`Áèl
("executable is missingá `.text' section");

574 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

575 
	`Áèl
("executable is missingá `.data' section");

576 i‡(!
ld_¥og_íåy
)

577 
	`Áèl
("programÉntryÖointÇot specified");

580 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

581 i‡(
sim_sw≠_byãs
)

586 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

587 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

589 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

592 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

593 i‡(
sim_sw≠_w‹ds
)

598 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

599 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

601 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

607 
ld_°ack_ba£
 = 
ld_ãxt_ba£
 - (409600+4096);

609 
•
 = 
	`ROUND_DOWN
(
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

611 
•
 = 
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
;

612 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

615 
ld_ívú⁄_ba£
 = 
•
;

618 
ãmp
 = 
	`MD_SWAPQ
(
¨gc
);

619 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
qw‹d_t
));

620 
ªgs
->
ªgs_R
[
MD_REG_A0
] = 
ãmp
;

621 
•
 +(
qw‹d_t
);

624 
¨gv_addr
 = 
•
;

625 
ªgs
->
ªgs_R
[
MD_REG_A1
] = 
¨gv_addr
;

626 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

629 
ívp_addr
 = 
•
;

630 
i
=0; 
ívp
[i]; i++)

631 
•
 +(
md_addr_t
);

632 
•
 +(
md_addr_t
);

635 
i
=0; i<
¨gc
; i++)

638 
ãmp
 = 
	`MD_SWAPQ
(
•
);

639 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

640 &
ãmp
, (
md_addr_t
));

642 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

643 
•
 +
	`°æí
(
¨gv
[
i
])+1;

646 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

647 &
nuŒ_±r
, (
md_addr_t
));

650 
i
 = 0; 
ívp
[i]; i++)

653 
ãmp
 = 
	`MD_SWAPQ
(
•
);

654 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

655 &
ãmp
, (
md_addr_t
));

657 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

658 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

661 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

662 &
nuŒ_±r
, (
md_addr_t
));

665 i‡(
•
 > 
ld_°ack_ba£
)

670 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON inálpha.h");

674 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

677 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

679 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

680 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

682 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

683 
ld_ãxt_ba£
, 
ld_ãxt_size
);

684 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

685 
ld_d©a_ba£
, 
ld_d©a_size
);

686 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

687 
ld_°ack_ba£
, 
ld_°ack_size
);

688 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

689 
	}
}

	@loader.h

52 #i‚de‡
LOADER_H


53 
	#LOADER_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"ªgs.h
"

61 
	~"mem‹y.h
"

101 
md_addr_t
 
ld_ãxt_ba£
;

104 
ld_ãxt_size
;

107 
md_addr_t
 
ld_d©a_ba£
;

110 
ld_d©a_size
;

113 
md_addr_t
 
ld_brk_poöt
;

116 
md_addr_t
 
ld_°ack_ba£
;

119 
ld_°ack_size
;

122 
md_addr_t
 
ld_°ack_mö
;

125 *
ld_¥og_‚ame
;

128 
md_addr_t
 
ld_¥og_íåy
;

131 
md_addr_t
 
ld_ívú⁄_ba£
;

134 
ld_èrgë_big_ídün
;

138 
ld_ªg_°©s
(
°©_sdb_t
 *
sdb
);

143 
ld_lﬂd_¥og
(*
‚ame
,

144 
¨gc
, **
¨gv
,

145 **
ívp
,

146 
ªgs_t
 *
ªgs
,

147 
mem_t
 *
mem
,

148 
zîo_bss_£gs
);

	@machine.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

63 #i‡!
deföed
(
BYTES_LITTLE_ENDIAN
Ë|| !deföed(
WORDS_LITTLE_ENDIAN
)

64 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
lôée
-
ídün
 
machöes
...

69 #i‡!
deföed
(
HOST_HAS_QWORD
)

70 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
ho°s
 
wôh
 
buûtö
 
qw‹d
 
suµ‹t
...

71 #îr‹ 
Try
 
buûdög
 
wôh
 
GNU
 
GCC
, 
as
 
ô
 
suµ‹ts
 
qw‹ds
 
⁄
 
mo°
 
machöes
.

75 
md_ö°_t
 
	gMD_NOP_INST
 = 0x43ff041f;

78 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

79 
	gmd_›off£t
[
OP_MAX
];

82 
	gmd_›mask
[
OP_MAX
] = {

84 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

85 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËMASK,

	)

86 
	#CONNECT
(
OP
)

	)

87 
	~"machöe.def
"

91 
	gmd_›shi·
[
OP_MAX
] = {

93 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

94 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËSHIFT,

	)

95 
	#CONNECT
(
OP
)

	)

96 
	~"machöe.def
"

100 *
	gmd_›2«me
[
OP_MAX
] = {

101 
NULL
,

102 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

103 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

104 
	#CONNECT
(
OP
)

	)

105 
	~"machöe.def
"

109 *
	gmd_›2f‹m©
[
OP_MAX
] = {

110 
NULL
,

111 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

112 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

113 
	#CONNECT
(
OP
)

	)

114 
	~"machöe.def
"

118 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

119 
FUCœmd_NA
,

120 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

121 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœmd_NA
,

	)

122 
	#CONNECT
(
OP
)

	)

123 
	~"machöe.def
"

127 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

128 
NULL
,

142 *
	gmd_amode_°r
[
md_amode_NUM
] =

153 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

158 { "$r0", 
π_g¥
, 0 },

159 { "$v0", 
π_g¥
, 0 },

160 { "$r1", 
π_g¥
, 1 },

161 { "$r2", 
π_g¥
, 2 },

162 { "$r3", 
π_g¥
, 3 },

163 { "$r4", 
π_g¥
, 4 },

164 { "$r5", 
π_g¥
, 5 },

165 { "$r6", 
π_g¥
, 6 },

166 { "$r7", 
π_g¥
, 7 },

167 { "$îr", 
π_g¥
, 7 },

168 { "$r8", 
π_g¥
, 8 },

169 { "$r9", 
π_g¥
, 9 },

170 { "$r10", 
π_g¥
, 10 },

171 { "$r11", 
π_g¥
, 11 },

172 { "$r12", 
π_g¥
, 12 },

173 { "$r13", 
π_g¥
, 13 },

174 { "$r14", 
π_g¥
, 14 },

175 { "$r15", 
π_g¥
, 15 },

176 { "$Â", 
π_g¥
, 15 },

177 { "$r16", 
π_g¥
, 16 },

178 { "$a0", 
π_g¥
, 16 },

179 { "$r17", 
π_g¥
, 17 },

180 { "$a1", 
π_g¥
, 17 },

181 { "$r18", 
π_g¥
, 18 },

182 { "$a2", 
π_g¥
, 18 },

183 { "$r19", 
π_g¥
, 19 },

184 { "$a3", 
π_g¥
, 19 },

185 { "$r20", 
π_g¥
, 20 },

186 { "$a4", 
π_g¥
, 20 },

187 { "$r21", 
π_g¥
, 21 },

188 { "$a5", 
π_g¥
, 21 },

189 { "$r22", 
π_g¥
, 22 },

190 { "$r23", 
π_g¥
, 23 },

191 { "$r24", 
π_g¥
, 24 },

192 { "$r25", 
π_g¥
, 25 },

193 { "$r26", 
π_g¥
, 26 },

194 { "$ø", 
π_g¥
, 26 },

195 { "$r27", 
π_g¥
, 27 },

196 { "$r28", 
π_g¥
, 28 },

197 { "$r29", 
π_g¥
, 29 },

198 { "$gp", 
π_g¥
, 29 },

199 { "$r30", 
π_g¥
, 30 },

200 { "$•", 
π_g¥
, 30 },

201 { "$r31", 
π_g¥
, 31 },

202 { "$zîo", 
π_g¥
, 31 },

205 { "$f0", 
π_Âr
, 0 },

206 { "$f1", 
π_Âr
, 1 },

207 { "$f2", 
π_Âr
, 2 },

208 { "$f3", 
π_Âr
, 3 },

209 { "$f4", 
π_Âr
, 4 },

210 { "$f5", 
π_Âr
, 5 },

211 { "$f6", 
π_Âr
, 6 },

212 { "$f7", 
π_Âr
, 7 },

213 { "$f8", 
π_Âr
, 8 },

214 { "$f9", 
π_Âr
, 9 },

215 { "$f10", 
π_Âr
, 10 },

216 { "$f11", 
π_Âr
, 11 },

217 { "$f12", 
π_Âr
, 12 },

218 { "$f13", 
π_Âr
, 13 },

219 { "$f14", 
π_Âr
, 14 },

220 { "$f15", 
π_Âr
, 15 },

221 { "$f16", 
π_Âr
, 16 },

222 { "$f17", 
π_Âr
, 17 },

223 { "$f18", 
π_Âr
, 18 },

224 { "$f19", 
π_Âr
, 19 },

225 { "$f20", 
π_Âr
, 20 },

226 { "$f21", 
π_Âr
, 21 },

227 { "$f22", 
π_Âr
, 22 },

228 { "$f23", 
π_Âr
, 23 },

229 { "$f24", 
π_Âr
, 24 },

230 { "$f25", 
π_Âr
, 25 },

231 { "$f26", 
π_Âr
, 26 },

232 { "$f27", 
π_Âr
, 27 },

233 { "$f28", 
π_Âr
, 28 },

234 { "$f29", 
π_Âr
, 29 },

235 { "$f30", 
π_Âr
, 30 },

236 { "$f31", 
π_Âr
, 31 },

239 { "$l0", 
π_Õr
, 0 },

240 { "$l1", 
π_Õr
, 1 },

241 { "$l2", 
π_Õr
, 2 },

242 { "$l3", 
π_Õr
, 3 },

243 { "$l4", 
π_Õr
, 4 },

244 { "$l5", 
π_Õr
, 5 },

245 { "$l6", 
π_Õr
, 6 },

246 { "$l7", 
π_Õr
, 7 },

247 { "$l8", 
π_Õr
, 8 },

248 { "$l9", 
π_Õr
, 9 },

249 { "$l10", 
π_Õr
, 10 },

250 { "$l11", 
π_Õr
, 11 },

251 { "$l12", 
π_Õr
, 12 },

252 { "$l13", 
π_Õr
, 13 },

253 { "$l14", 
π_Õr
, 14 },

254 { "$l15", 
π_Õr
, 15 },

255 { "$l16", 
π_Õr
, 16 },

256 { "$l17", 
π_Õr
, 17 },

257 { "$l18", 
π_Õr
, 18 },

258 { "$l19", 
π_Õr
, 19 },

259 { "$l20", 
π_Õr
, 20 },

260 { "$l21", 
π_Õr
, 21 },

261 { "$l22", 
π_Õr
, 22 },

262 { "$l23", 
π_Õr
, 23 },

263 { "$l24", 
π_Õr
, 24 },

264 { "$l25", 
π_Õr
, 25 },

265 { "$l26", 
π_Õr
, 26 },

266 { "$l27", 
π_Õr
, 27 },

267 { "$l28", 
π_Õr
, 28 },

268 { "$l29", 
π_Õr
, 29 },

269 { "$l30", 
π_Õr
, 30 },

270 { "$l31", 
π_Õr
, 31 },

273 { "$Â¸", 
π_˘æ
, 0 },

274 { "$uniq", 
π_˘æ
, 1 },

277 { "$pc", 
π_PC
, 0 },

278 { "$≈c", 
π_NPC
, 0 },

281 { 
NULL
, 
π_g¥
, 0 }

286 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

288 
i
;

290 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

292 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

293  
md_ªg_«mes
[
i
].
°r
;

297  
NULL
;

298 
	}
}

301 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

302 
is_wrôe
,

303 
md_ªg_ty≥
 
π
,

304 
ªg
,

305 
evÆ_vÆue_t
 *
vÆ
)

307 
π
)

309 
π_g¥
:

310 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

313 i‡(!
is_wrôe
)

315 
vÆ
->
ty≥
 = 
ë_qw‹d
;

316 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_R
[
ªg
];

319 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

322 
π_Õr
:

323 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

326 i‡(!
is_wrôe
)

328 
vÆ
->
ty≥
 = 
ë_qw‹d
;

329 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

332 
ªgs
->
ªgs_F
.
q
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

335 
π_Âr
:

336 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

339 i‡(!
is_wrôe
)

341 
vÆ
->
ty≥
 = 
ë_doubÀ
;

342 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

345 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

348 
π_˘æ
:

349 
ªg
)

352 i‡(!
is_wrôe
)

354 
vÆ
->
ty≥
 = 
ë_qw‹d
;

355 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
Â¸
;

358 
ªgs
->
ªgs_C
.
Â¸
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

362 i‡(!
is_wrôe
)

364 
vÆ
->
ty≥
 = 
ë_qw‹d
;

365 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
uniq
;

368 
ªgs
->
ªgs_C
.
uniq
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

376 
π_PC
:

377 i‡(!
is_wrôe
)

379 
vÆ
->
ty≥
 = 
ë_addr
;

380 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

383 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

386 
π_NPC
:

387 i‡(!
is_wrôe
)

389 
vÆ
->
ty≥
 = 
ë_addr
;

390 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

393 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

397 
	`∑nic
("bogusÑegister bank");

401  
NULL
;

402 
	}
}

406 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

408 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx",

409 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

410 
	}
}

413 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

415 
i
;

417 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

419 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

420 
	`Ârötf
(
°ªam
, " ");

421 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

422 
	`Ârötf
(
°ªam
, "\n");

424 
	}
}

428 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

430 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx/%f",

431 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
q
[ªg],Ñegs.q[ªg],Ñegs.
d
[reg]);

432 
	}
}

435 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

437 
i
;

440 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

442 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

443 
	`Ârötf
(
°ªam
, "\n");

445 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

446 
	`Ârötf
(
°ªam
, "\n");

448 
	}
}

451 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

454 
ªg
)

457 
	`myÂrötf
(
°ªam
, "FPCR: 0x%012lx", 
ªgs
.
Â¸
);

461 
	`myÂrötf
(
°ªam
, "UNIQ: 0x%012lx", 
ªgs
.
uniq
);

465 
	`∑nic
("bogus controlÑegister index");

467 
	}
}

470 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

472 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

473 
	`Ârötf
(
°ªam
, " ");

474 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

476 
	}
}

479 
w‹d_t


480 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

482 
i
;

483 
qw‹d_t
 
checksum
 = 0;

485 
i
=0; i < (
MD_NUM_IREGS
-1); i++)

486 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

488 
i
=0; i < (
MD_NUM_FREGS
-1); i++)

489 
checksum
 ^
ªgs
->
ªgs_F
.
q
[
i
];

491 
checksum
 ^
ªgs
->
ªgs_C
.
Â¸
;

492 
checksum
 ^
ªgs
->
ªgs_C
.
uniq
;

493 
checksum
 ^
ªgs
->
ªgs_PC
;

494 
checksum
 ^
ªgs
->
ªgs_NPC
;

496  (
w‹d_t
)((
checksum
 >> 32) ^ checksum);

497 
	}
}

501 
	gmd_›2Êags
[
OP_MAX
] = {

502 
NA
,

503 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

504 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

505 
	#CONNECT
(
OP
)

	)

506 
	~"machöe.def
"

512 
	$md_öô_decodî
()

514 
max_off£t
 = 0;

515 
off£t
 = 0;

517 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

518 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

519 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

520 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

521 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

522 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

524 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

525 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

526 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

527 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

528 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

529 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

531 
	#CONNECT
(
OP
) \

532 
off£t
 = 
max_off£t
+1; 
md_›off£t
[
OP
] = off£t;

	)

534 
	~"machöe.def
"

536 i‡(
max_off£t
 >
MD_MAX_MASK
)

537 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", 
max_off£t
);

538 
	}
}

542 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

543 
md_addr_t
 
pc
,

544 
FILE
 *
°ªam
)

546 
md_›code
 
›
;

549 i‡(!
°ªam
)

550 
°ªam
 = 
°dîr
;

553 
	`MD_SET_OPCODE
(
›
, 
ö°
);

556 i‡(
›
 <
OP_NA
 || o∞>
OP_MAX
)

559 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x>", 
ö°
);

563 *
s
;

566 
	`Ârötf
(
°ªam
, "%†", 
	`MD_OP_NAME
(
›
));

568 
s
 = 
	`MD_OP_FORMAT
(
›
);

569 *
s
) {

570 *
s
) {

572 
	`Ârötf
(
°ªam
, "r%d", 
RA
);

575 
	`Ârötf
(
°ªam
, "r%d", 
RB
);

578 
	`Ârötf
(
°ªam
, "r%d", 
RC
);

581 
	`Ârötf
(
°ªam
, "f%d", 
RA
);

584 
	`Ârötf
(
°ªam
, "f%d", 
RB
);

587 
	`Ârötf
(
°ªam
, "f%d", 
RC
);

590 
	`Ârötf
(
°ªam
, "%d", (
sw‹d_t
)
	`SEXT
(
OFS
));

593 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT
(
OFS
) << 2) + 4);

596 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT21
(
TARG
) << 2) + 4);

599 
	`Ârötf
(
°ªam
, "%d", (
w‹d_t
)
IMM
);

603 
	`Âutc
(*
s
, 
°ªam
);

605 
s
++;

608 
	}
}

	@machine.h

52 #i‚de‡
ALPHA_H


53 
	#ALPHA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

69 
	#TARGET_ALPHA


	)

72 #i‡
deföed
(
BYTES_BIG_ENDIAN
)

73 
	#MD_CROSS_ENDIAN


	)

77 
	#NA
 0

	)

84 
	#MD_QWORD_ADDRS


	)

87 
qw‹d_t
 
	tmd_addr_t
;

95 
	#MD_PAGE_SIZE
 8192

	)

96 
	#MD_LOG_PAGE_SIZE
 13

	)

103 
	emd_Áu…_ty≥
 {

104 
	mmd_Áu…_n⁄e
 = 0,

105 
	mmd_Áu…_ac˚ss
,

106 
	mmd_Áu…_Æignmít
,

107 
	mmd_Áu…_ovîÊow
,

108 
	mmd_Áu…_div0
,

109 
	mmd_Áu…_övÆid
,

111 
	mmd_Áu…_bªak
,

112 
	mmd_Áu…_unim∂
,

113 
	mmd_Áu…_öã∫Æ


122 
	#MD_NUM_IREGS
 32

	)

125 
	#MD_NUM_FREGS
 32

	)

128 
	#MD_NUM_CREGS
 2

	)

131 
	#MD_TOTAL_REGS
 \

132 –32 + 32 + 2 + 1 + 1 + 1)

	)

135 
qw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

139 
qw‹d_t
 
	mq
[
MD_NUM_FREGS
];

140 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
];

141 } 
	tmd_Âr_t
;

145 
qw‹d_t
 
	mÂ¸
;

146 
qw‹d_t
 
	muniq
;

147 } 
	tmd_˘æ_t
;

150 
	emd_ªg_«mes
 {

151 
	mMD_REG_V0
 = 0,

152 
	mMD_REG_ERR
 = 7,

153 
	mMD_REG_FP
 = 15,

154 
	mMD_REG_A0
 = 16,

155 
	mMD_REG_A1
 = 17,

156 
	mMD_REG_A2
 = 18,

157 
	mMD_REG_A3
 = 19,

158 
	mMD_REG_A4
 = 20,

159 
	mMD_REG_A5
 = 21,

160 
	mMD_REG_RA
 = 26,

161 
	mMD_REG_GP
 = 29,

162 
	mMD_REG_SP
 = 30,

163 
	mMD_REG_ZERO
 = 31

172 
w‹d_t
 
	tmd_ö°_t
;

175 
md_ö°_t
 
MD_NOP_INST
;

178 #ifde‡
MD_CROSS_ENDIAN


180 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

181 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

182 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

183 
	#MD_SWAPI
(
X
Ë
	`SWAP_WORD
(X)

	)

187 
	#MD_SWAPH
(
X
Ë(X)

	)

188 
	#MD_SWAPW
(
X
Ë(X)

	)

189 
	#MD_SWAPQ
(
X
Ë(X)

	)

190 
	#MD_SWAPD
(
X
Ë(X)

	)

191 
	#MD_SWAPI
(
X
Ë(X)

	)

196 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

197 { (
INST
Ë
	`MEM_READ_WORD
((
MEM
), (
PC
)); }

	)

204 
	#MD_MAX_ENVIRON
 16384

	)

212 
	#MD_TOP_OP
(
INST
Ë(((INSTË>> 26Ë& 0x3f)

	)

213 
	#MD_SET_OPCODE
(
OP
, 
INST
) \

214 { 
OP
 = 
md_mask2›
[
	`MD_TOP_OP
(
INST
)]; \

215 
md_›mask
[
OP
]) \

216 
OP
 = 
md_mask2›
[((
INST
 >> 
md_›shi·
[OP]Ë& 
md_›mask
[OP]) \

217 + 
md_›off£t
[
OP
]]; }

	)

221 
	#MD_MAX_MASK
 2048

	)

224 
	emd_›code
 {

225 
	mOP_NA
 = 0,

226 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

227 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

228 
	#CONNECT
(
OP
)

	)

229 
	~"machöe.def
"

230 
	mOP_MAX


234 
md_›code
 
md_mask2›
[];

235 
md_›off£t
[];

236 
md_›mask
[];

237 
md_›shi·
[];

240 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

241 *
md_›2«me
[];

244 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

245 *
md_›2f‹m©
[];

248 
	emd_fu_˛ass
 {

249 
	mFUCœmd_NA
 = 0,

250 
	mI¡ALU
,

251 
	mI¡MULT
,

252 
	mI¡DIV
,

253 
	mFlﬂtADD
,

254 
	mFlﬂtCMP
,

255 
	mFlﬂtCVT
,

256 
	mFlﬂtMULT
,

257 
	mFlﬂtDIV
,

258 
	mFlﬂtSQRT
,

259 
	mRdP‹t
,

260 
	mWrP‹t
,

261 
	mNUM_FU_CLASSES


265 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

266 
md_fu_˛ass
 
md_›2fu
[];

269 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

270 *
md_fu2«me
[];

273 
	#F_ICOMP
 0x00000001

	)

274 
	#F_FCOMP
 0x00000002

	)

275 
	#F_CTRL
 0x00000004

	)

276 
	#F_UNCOND
 0x00000008

	)

277 
	#F_COND
 0x00000010

	)

278 
	#F_MEM
 0x00000020

	)

279 
	#F_LOAD
 0x00000040

	)

280 
	#F_STORE
 0x00000080

	)

281 
	#F_DISP
 0x00000100

	)

282 
	#F_RR
 0x00000200

	)

283 
	#F_DIRECT
 0x00000400

	)

284 
	#F_TRAP
 0x00000800

	)

285 
	#F_LONGLAT
 0x00001000

	)

286 
	#F_DIRJMP
 0x00002000

	)

287 
	#F_INDIRJMP
 0x00004000

	)

288 
	#F_CALL
 0x00008000

	)

289 
	#F_FPCOND
 0x00010000

	)

290 
	#F_IMM
 0x00020000

	)

293 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

294 
md_›2Êags
[];

298 
	#RA
 ((
ö°
 >> 21Ë& 0x1fË

	)

299 
	#RB
 ((
ö°
 >> 16Ë& 0x1fË

	)

300 
	#RC
 (
ö°
 & 0x1fË

	)

303 
	#IMM
 ((
qw‹d_t
)((
ö°
 >> 13Ë& 0xff))

	)

306 
	#TARG
 (
ö°
 & 0x1fffff)

	)

309 
	#OFS
 (
ö°
 & 0xffff)

	)

312 
	#SEXT
(
X
) \

313 (((
X
Ë& 0x8000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xffffffffffff0000)Ë: (sqw‹d_t)(X))

	)

315 
	#SEXT21
(
X
) \

316 (((
X
Ë& 0x100000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xfffffffff„00000)Ë: (sqw‹d_t)(X))

	)

318 
	#SEXT32
(
X
) \

319 (((
X
Ë& 0x80000000Ë? ((
sqw‹d_t
)(X)|
	`LL
(0xffffffff00000000)Ë: (sqw‹d_t)(X))

	)

322 
	#ARITH_OVFL
(
RESULT
, 
OP1
, 
OP2
Ë((RESULTË< (OP1Ë|| (RESULTË< (OP2))

	)

325 
	#IEEEFP_DBL_SIGN
(
Q
Ë((QË>> 63)

	)

326 
	#IEEEFP_DBL_EXPONENT
(
Q
Ë(((QË>> 52Ë& 0x7ff)

	)

327 
	#IEEEFP_DBL_FRACTION
(
Q
Ë((QË& 
	`ULL
(0xfffffffffffff))

	)

328 
	#IS_IEEEFP_DBL_NAN
(
Q
) \

329 ((
	`IEEEFP_DBL_EXPONENT
(
Q
Ë=0x7ffË&& (
	`IEEEFP_DBL_FRACTION
(Q)))

	)

332 #i‚de‡
SET_TPC


333 
	#SET_TPC
(
PC
Ë()0

	)

342 
	#OSF_SYS_exô
 1

	)

343 
	#MD_EXIT_SYSCALL
(
REGS
) \

344 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_exô
)

	)

347 
	#OSF_SYS_wrôe
 4

	)

348 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

349 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_wrôe
 \

350 && ((
REGS
)->
ªgs_R
[
MD_REG_A0
] == 1 \

351 || (
REGS
)->
ªgs_R
[
MD_REG_A0
] = 2))

	)

354 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[
MD_REG_A0
])

	)

357 
	#MD_IS_CALL
(
OP
Ë((OPË=
JSR
 || (OPË=
BSR
)

	)

360 
	#MD_IS_RETURN
(
OP
Ë((OPË=
RETN
)

	)

363 
	#MD_IS_INDIR
(
OP
) \

364 ((
OP
Ë=
JMP
 || (OPË=
JSR
 || (OPË=
RETN
 || (OPË=
JSR_COROUTINE
)

	)

367 
	emd_amode_ty≥
 {

368 
	mmd_amode_imm
,

369 
	mmd_amode_gp
,

370 
	mmd_amode_•
,

371 
	mmd_amode_Â
,

372 
	mmd_amode_di•
,

373 
	mmd_amode_º
,

374 
	mmd_amode_NUM


376 *
md_amode_°r
[
md_amode_NUM
];

379 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë{ (FSMË0; }

	)

382 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

384 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

386 i‡((
RB
Ë=
MD_REG_GP
) \

387 (
AM
Ë
md_amode_gp
; \

388 i‡((
RB
Ë=
MD_REG_SP
) \

389 (
AM
Ë
md_amode_•
; \

390 i‡((
RB
Ë=
MD_REG_FP
) \

391 (
AM
Ë
md_amode_Â
; \

393 (
AM
Ë
md_amode_di•
; \

395 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

396 (
AM
Ë
md_amode_º
; \

398 
	`∑nic
("cannot decodeáddressing mode"); \

399 }

	)

402 
	#MD_AMODE_POSTPROBE
(
FSM
Ë

	)

410 
	#MD_EIO_FILE_FORMAT
 
EIO_ALPHA_FORMAT


	)

412 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

413 
	`exo_√w
(
ec_li°
, \

414  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

415  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

416  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

417  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
Â¸
),\

418  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
uniq
),\

419 
NULL
)

	)

421 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

422 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

424 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

425 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
q
[
IDX
])

	)

427 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

429 i‡(!
exo
 \

430 || 
exo
->
ec
 !
ec_li°
 \

431 || !
exo
->
as_li°
.
hód
 \

432 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

433 || !
exo
->
as_li°
.
hód
->
√xt
 \

434 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

435 || !
exo
->
as_li°
.
hód
->
√xt
->next \

436 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

437 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

438 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

439 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

440 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

441 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xà!
NULL
) \

442 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

443 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

444 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
; \

445 (
REGS
)->
ªgs_NPC
 = \

446 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
; \

447 (
REGS
)->
ªgs_C
.
Â¸
 = \

448 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

449 (
REGS
)->
ªgs_C
.
uniq
 = \

450 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

452 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

453 ((
REGS
)->
ªgs_R
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

455 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

456 ((
REGS
)->
ªgs_F
.
q
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

458 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

459 ((
REGS
)->
ªgs_R
[
IDX
] !(
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

461 
	#MD_FIRST_IN_REG
 0

	)

462 
	#MD_LAST_IN_REG
 21

	)

464 
	#MD_FIRST_OUT_REG
 0

	)

465 
	#MD_LAST_OUT_REG
 21

	)

473 
qw‹d_t
 
	texo_addªss_t
;

476 
qw‹d_t
 
	texo_öãgî_t
;

479 
	texo_Êﬂt_t
;

487 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

488 
	#sc_cou¡î
 
sc_sqw‹d


	)

489 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

492 
	#°©_ªg_addr
 
°©_ªg_qw‹d


	)

500 
	emd_ªg_ty≥
 {

501 
	mπ_g¥
,

502 
	mπ_Õr
,

503 
	mπ_Âr
,

504 
	mπ_d¥
,

505 
	mπ_˘æ
,

506 
	mπ_PC
,

507 
	mπ_NPC
,

508 
	mπ_NUM


512 
	smd_ªg_«mes_t
 {

513 *
	m°r
;

514 
md_ªg_ty≥
 
	mfûe
;

515 
	mªg
;

519 
md_ªg_«mes_t
 
md_ªg_«mes
[];

522 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

525 
	gevÆ_vÆue_t
;

526 
	gªgs_t
;

528 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

529 
is_wrôe
,

530 
md_ªg_ty≥
 
π
,

531 
ªg
,

532 
evÆ_vÆue_t
 *
vÆ
);

535 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

536 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

539 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

540 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

543 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

544 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

547 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

555 
	#MD_AGEN_OP
 
ADDQ


	)

558 
	#MD_NOP_OP
 
OP_NA


	)

562 
	#MD_VALID_ADDR
(
ADDR
) \

563 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

564 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_brk_poöt
) \

565 || ((
ADDR
Ë>(
ld_°ack_ba£
 - 16*1024*1024Ë&& (ADDRË<Üd_°ack_ba£))

	)

573 
	#MD_BR_SHIFT
 2

	)

581 
md_öô_decodî
();

585 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

586 
md_addr_t
 
pc
,

587 
FILE
 *
°ªam
);

600 
qw‹d_t
 
	tMD_ADDR_TYPE
;

601 
qw‹d_t
 
	tMD_PTR_TYPE
;

602 
w‹d_t
 
	tMD_INST_TYPE
;

603 
	#MD_INST_SIZE
 (
MD_INST_TYPE
)

	)

606 
	#MD_TEXT_BASE
 0x20000000ULL

	)

607 
	#MD_STACK_BASE
 (
MD_TEXT_BASE
 - (409600+4096))

	)

610 íum { 
	mREG_V0
, 
	mREG_A0
=16, 
	mREG_A1
, 
	mREG_A2
, 
	mREG_A3
, 
	mREG_A4
, 
	mREG_A5
, 
	mREG_ERR
=7,

611 
	mREG_GP
=29, 
	mREG_SP
, 
	mREG_ZERO
, 
	mREG_RA
=26 };

614 
	#MD_TOTAL_REGS
 \

615 (
MD_NUM_REGS
+MD_NUM_REGS+ 1+ 1+ 1+ 1)

	)

618 #i‚de‡
NO_ICHECKS


624 #i‚de‡
IFAIL


625 
	#IFAIL
(
S
Ë
	`Áèl
(S)

	)

629 
	#OVER
(
X
,
Y
) (((((X) > 0) && ((Y) > 0) \

630 && (
MAXINT_VAL
 - (
X
Ë< (
Y
))) \

631 ? 
	`IFAIL
("+ overflow") : ()0), \

632 ((((
X
Ë< 0Ë&& ((
Y
) < 0) \

633 && (-
MAXINT_VAL
 - (
X
Ë> (
Y
))) \

634 ? 
	`IFAIL
("+ undîÊow"Ë: ()0))

	)

637 
	#UNDER
(
X
,
Y
) (((((X) > 0) && ((Y) < 0) \

638 && (
MAXINT_VAL
 + (
Y
Ë< (
X
))) \

639 ? 
	`IFAIL
("- overflow") : ()0), \

640 ((((
X
Ë< 0Ë&& ((
Y
) > 0) \

641 && (-
MAXINT_VAL
 + (
Y
Ë> (
X
))) \

642 ? 
	`IFAIL
("- undîÊow"Ë: ()0))

	)

645 
	#DIV0
(
N
Ë(((NË=0Ë? 
	`IFAIL
("dividêby 0"Ë: ()0)

	)

648 
	#INTALIGN
(
N
) (((N) & 01) \

649 ? 
	`IFAIL
("bad INTÑegi°îálignmít"Ë: ()0)

	)

652 
	#FPALIGN
(
N
) (((N) & 01) \

653 ? 
	`IFAIL
("bad FPÑegi°îálignmít"Ë: ()0)

	)

656 
	#TALIGN
(
TARG
) (((TARG) & 0x7) \

657 ? 
	`IFAIL
("bad jum∞Æignmít"Ë: ()0)

	)

662 
	#OVER
(
X
,
Y
Ë(()0)

	)

663 
	#UNDER
(
X
,
Y
Ë(()0)

	)

664 
	#DIV0
(
N
Ë(()0)

	)

665 
	#INTALIGN
(
N
Ë(()0)

	)

666 
	#FPALIGN
(
N
Ë(()0)

	)

667 
	#TALIGN
(
TARG
Ë(()0)

	)

674 
	#IDIV
(
A
, 
B
Ë((AË/ (B))

	)

675 
	#IMOD
(
A
, 
B
Ë((AË% (B))

	)

676 
	#FDIV
(
A
, 
B
Ë((AË/ (B))

	)

677 
	#FINT
(
A
Ë(()A)

	)

	@main.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<time.h
>

56 
	~<£tjmp.h
>

57 
	~<sig«l.h
>

58 
	~<sys/ty≥s.h
>

59 #i‚de‡
_MSC_VER


60 
	~<uni°d.h
>

61 
	~<sys/time.h
>

63 #ifde‡
BFD_LOADER


64 
	~<bfd.h
>

67 
	~"ho°.h
"

68 
	~"misc.h
"

69 
	~"machöe.h
"

70 
	~"ídün.h
"

71 
	~"vîsi⁄.h
"

72 
	~"dlôe.h
"

73 
	~"›ti⁄s.h
"

74 
	~"°©s.h
"

75 
	~"lﬂdî.h
"

76 
	~"sim.h
"

80 
	$sig«l_sim_°©s
(
sigty≥
)

82 
sim_dump_°©s
 = 
TRUE
;

83 
	}
}

87 
	$sig«l_exô_now
(
sigty≥
)

89 
sim_exô_now
 = 
TRUE
;

90 
	}
}

93 
cou¡î_t
 
	gsim_num_ö¢
 = 0;

97 
	gsim_mem_ußge
 = 0;

101 
time_t
 
	gsim_°¨t_time
;

102 
time_t
 
	gsim_íd_time
;

103 
	gsim_ñ≠£d_time
;

106 
	gsim_sw≠_byãs
;

107 
	gsim_sw≠_w‹ds
;

110 
	gsim_exô_now
 = 
FALSE
;

113 
jmp_buf
 
	gsim_exô_buf
;

116 
	gsim_dump_°©s
 = 
FALSE
;

119 
›t_odb_t
 *
	gsim_odb
;

122 
°©_sdb_t
 *
	gsim_sdb
;

125 *
	gsim_eio_‚ame
 = 
NULL
;

126 *
	gsim_chk±_‚ame
 = 
NULL
;

127 
FILE
 *
	gsim_eio_fd
 = 
NULL
;

130 *
	gsim_simout
 = 
NULL
;

131 *
	gsim_¥ogout
 = 
NULL
;

132 
FILE
 *
	gsim_¥ogfd
 = 
NULL
;

135 
	gexec_ödex
 = -1;

138 
	ghñp_me
;

141 
	gønd_£ed
;

144 
	göô_quô
;

146 #i‚de‡
_MSC_VER


148 
	gni˚_¥i‹ôy
;

152 
	#NICE_DEFAULT_VALUE
 0

	)

155 
	$‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

157 
exec_ödex
 = 
i
;

158  
FALSE
;

159 
	}
}

162 
	$b™√r
(
FILE
 *
fd
, 
¨gc
, **
¨gv
)

164 *
s
;

166 
	`Ârötf
(
fd
,

174 ((
s
 = 
	`°ºchr
(
¨gv
[0], '/')) ? s+1 :árgv[0]),

175 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

176 
	}
}

179 
	$ußge
(
FILE
 *
fd
, 
¨gc
, **
¨gv
)

181 
	`Ârötf
(
fd
, "Ußge: %†{-›ti⁄s}ÉxecuèbÀ {¨gumíts}\n", 
¨gv
[0]);

182 
	`›t_¥öt_hñp
(
sim_odb
, 
fd
);

183 
	}
}

185 
	gru¬ög
 = 
FALSE
;

189 
	$sim_¥öt_°©s
(
FILE
 *
fd
)

192 
ëext
, *
	`sbrk
();

195 i‡(!
ru¬ög
)

199 
sim_íd_time
 = 
	`time
((
time_t
 *)
NULL
);

200 
sim_ñ≠£d_time
 = 
	`MAX
(
sim_íd_time
 - 
sim_°¨t_time
, 1);

204 
sim_mem_ußge
 = (
	`sbrk
(0Ë- &
ëext
) / 1024;

208 
	`Ârötf
(
fd
, "\nsim: ** simulation statistics **\n");

209 
	`°©_¥öt_°©s
(
sim_sdb
, 
fd
);

210 
	`sim_aux_°©s
(
fd
);

211 
	`Ârötf
(
fd
, "\n");

212 
	}
}

216 
	$exô_now
(
exô_code
)

219 
	`sim_¥öt_°©s
(
°dîr
);

222 
	`sim_unöô
();

225 
	`exô
(
exô_code
);

226 
	}
}

229 
	$maö
(
¨gc
, **
¨gv
, **
ívp
)

231 *
s
;

232 
i
, 
exô_code
;

234 #i‚de‡
_MSC_VER


236 
	`sig«l
(
SIGUSR1
, 
sig«l_sim_°©s
);

239 
	`sig«l
(
SIGUSR2
, 
sig«l_exô_now
);

243 
	`Áèl_hook
(
sim_¥öt_°©s
);

246 i‡((
exô_code
 = 
	`£tjmp
(
sim_exô_buf
)) != 0)

249 
	`exô_now
(
exô_code
-1);

253 
sim_odb
 = 
	`›t_√w
(
‹ph™_‚
);

254 
	`›t_ªg_Êag
(
sim_odb
, "-h", "print help message",

255 &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

256 
	`›t_ªg_Êag
(
sim_odb
, "-v", "verbose operation",

257 &
vîbo£
, 
FALSE
, FALSE, 
NULL
);

258 #ifde‡
DEBUG


259 
	`›t_ªg_Êag
(
sim_odb
, "-d", "enable debug message",

260 &
debuggög
, 
FALSE
, FALSE, 
NULL
);

262 
	`›t_ªg_Êag
(
sim_odb
, "-i", "start in Dlite debugger",

263 &
dlôe_a˘ive
, 
FALSE
, FALSE, 
NULL
);

264 
	`›t_ªg_öt
(
sim_odb
, "-seed",

266 &
ønd_£ed
, 1, 
TRUE
, 
NULL
);

267 
	`›t_ªg_Êag
(
sim_odb
, "-q", "initializeándÅerminate immediately",

268 &
öô_quô
, 
FALSE
, FALSE, 
NULL
);

269 
	`›t_ªg_°rög
(
sim_odb
, "-chkpt", "restore EIOÅraceÉxecution from <fname>",

270 &
sim_chk±_‚ame
, 
NULL
, 
FALSE
, NULL);

273 
	`›t_ªg_°rög
(
sim_odb
, "-redir:sim",

275 &
sim_simout
,

276  
NULL
, 
FALSE
, NULL);

277 
	`›t_ªg_°rög
(
sim_odb
, "-redir:prog",

279 &
sim_¥ogout
, 
NULL
, 
FALSE
, NULL);

281 #i‚de‡
_MSC_VER


283 
	`›t_ªg_öt
(
sim_odb
, "-nice",

284 "simuœt‹ schedulögÖri‹ôy", &
ni˚_¥i‹ôy
,

285  
NICE_DEFAULT_VALUE
, 
TRUE
, 
NULL
);

291 
	`sim_ªg_›ti⁄s
(
sim_odb
);

294 
exec_ödex
 = -1;

295 
	`›t_¥o˚ss_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

298 i‡(
sim_simout
 !
NULL
)

301 
	`fÊush
(
°dîr
);

302 i‡(!
	`‰e›í
(
sim_simout
, "w", 
°dîr
))

303 
	`Áèl
("u«bÀÅÿªdúe˘ simuœt‹ ouçuàtÿfûê`%s'", 
sim_simout
);

306 i‡(
sim_¥ogout
 !
NULL
)

309 
sim_¥ogfd
 = 
	`f›í
(
sim_¥ogout
, "w");

310 i‡(!
sim_¥ogfd
)

311 
	`Áèl
("u«bÀÅÿªdúe˘Örogøm ouçuàtÿfûê`%s'", 
sim_¥ogout
);

315 i‡(
¨gc
 < 2)

317 
	`b™√r
(
°dîr
, 
¨gc
, 
¨gv
);

318 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

319 
	`exô
(1);

323 
	`b™√r
(
°dîr
, 
¨gc
, 
¨gv
);

325 i‡(
hñp_me
)

328 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

329 
	`exô
(1);

333 i‡(
ønd_£ed
 == 0)

336 
	`my§™d
(
	`time
((
time_t
 *)
NULL
));

341 
	`my§™d
(
ønd_£ed
);

345 i‡(
exec_ödex
 == -1)

348 
	`Ârötf
(
°dîr
, "error:ÇoÉxecutable specified\n");

349 
	`ußge
(
°dîr
, 
¨gc
, 
¨gv
);

350 
	`exô
(1);

355 
	`sim_check_›ti⁄s
(
sim_odb
, 
¨gc
, 
¨gv
);

357 #i‚de‡
_MSC_VER


359 i‡(
	`ni˚
(0Ë< 
ni˚_¥i‹ôy
)

361 i‡(
	`ni˚
(
ni˚_¥i‹ôy
 -Çice(0)) < 0)

362 
	`Áèl
("couldÇotÑenice simulatorÖrocess");

367 
sim_num_ö¢
 = 0;

369 #ifde‡
BFD_LOADER


371 
	`bfd_öô
();

375 
	`md_öô_decodî
();

378 
	`sim_öô
();

381 
	`sim_lﬂd_¥og
(
¨gv
[
exec_ödex
], 
¨gc
-exec_ödex,árgv+exec_ödex, 
ívp
);

384 
sim_sdb
 = 
	`°©_√w
();

385 
	`sim_ªg_°©s
(
sim_sdb
);

387 
	`°©_ªg_uöt
(
sim_sdb
, "sim_mem_usage",

389 &
sim_mem_ußge
, sim_mem_usage, "%11dk");

393 
sim_°¨t_time
 = 
	`time
((
time_t
 *)
NULL
);

396 
	`Ârötf
(
°dîr
, "sim: commandÜine: ");

397 
i
=0; i < 
¨gc
; i++)

398 
	`Ârötf
(
°dîr
, "%†", 
¨gv
[
i
]);

399 
	`Ârötf
(
°dîr
, "\n");

402 
s
 = 
	`˘ime
(&
sim_°¨t_time
);

403 i‡(
s
[
	`°æí
(s)-1] == '\n')

404 
s
[
	`°æí
(s)-1] = '\0';

405 
	`Ârötf
(
°dîr
, "\nsim: simuœti⁄ sèπed @ %s, o±i⁄†fﬁlow:\n", 
s
);

406 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dîr
, 
TRUE
, TRUE);

407 
	`sim_aux_c⁄fig
(
°dîr
);

408 
	`Ârötf
(
°dîr
, "\n");

411 
sim_°¨t_time
 = 
	`time
((
time_t
 *)
NULL
);

413 i‡(
öô_quô
)

414 
	`exô_now
(0);

416 
ru¬ög
 = 
TRUE
;

417 
	`sim_maö
();

420 
	`exô_now
(0);

423 
	}
}

	@memory.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"›ti⁄s.h
"

59 
	~"°©s.h
"

60 
	~"mem‹y.h
"

64 
mem_t
 *

65 
	$mem_¸óã
(*
«me
)

67 
mem_t
 *
mem
;

69 
mem
 = 
	`ˇŒoc
(1, (
mem_t
));

70 i‡(!
mem
)

71 
	`Áèl
("out of virtual memory");

73 
mem
->
«me
 = 
	`my°rdup
(name);

74  
mem
;

75 
	}
}

78 
byã_t
 *

79 
	$mem_å™¶©e
(
mem_t
 *
mem
,

80 
md_addr_t
 
addr
)

82 
mem_±e_t
 *
±e
, *
¥ev
;

85 
mem
->
±ab_mis£s
++; mem->
±ab_ac˚s£s
++;

88 
¥ev
=
NULL
, 
±e
=
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

89 
±e
 !
NULL
;

90 
¥ev
=
±e
,Öãıã->
√xt
)

92 i‡(
±e
->
èg
 =
	`MEM_PTAB_TAG
(
addr
))

95 i‡(
¥ev
)

97 
¥ev
->
√xt
 = 
±e
->next;

98 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

99 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

101  
±e
->
∑ge
;

106  
NULL
;

107 
	}
}

111 
	$mem_√w∑ge
(
mem_t
 *
mem
,

112 
md_addr_t
 
addr
)

114 
byã_t
 *
∑ge
;

115 
mem_±e_t
 *
±e
;

118 
∑ge
 = 
	`gëc‹e
(
MD_PAGE_SIZE
);

119 i‡(!
∑ge
)

120 
	`Áèl
("out of virtual memory");

123 
±e
 = 
	`ˇŒoc
(1, (
mem_±e_t
));

124 i‡(!
±e
)

125 
	`Áèl
("out of virtual memory");

126 
±e
->
èg
 = 
	`MEM_PTAB_TAG
(
addr
);

127 
±e
->
∑ge
 =Öage;

130 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

131 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

134 
mem
->
∑ge_cou¡
++;

135 
	}
}

140 
md_Áu…_ty≥


141 
	$mem_ac˚ss
(
mem_t
 *
mem
,

142 
mem_cmd
 
cmd
,

143 
md_addr_t
 
addr
,

144 *
vp
,

145 
nbyãs
)

147 
byã_t
 *
p
 = 
vp
;

150 i‡–(
nbyãs
 & (nbytes-1)) != 0

151 || 
nbyãs
 > 
MD_PAGE_SIZE
)

152  
md_Áu…_ac˚ss
;

154 i‡–(
addr
 & (
nbyãs
-1)) != 0)

155  
md_Áu…_Æignmít
;

159 i‡(
cmd
 =
Ród
)

161 
nbyãs
-- > 0)

163 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

164 
p
 +(
byã_t
);

165 
addr
 +(
byã_t
);

170 
nbyãs
-- > 0)

172 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, *((
byã_t
 *)
p
));

173 
p
 +(
byã_t
);

174 
addr
 +(
byã_t
);

180 
nbyãs
)

183 i‡(
cmd
 =
Ród
)

184 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

186 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, *((
byã_t
 *)
p
));

190 i‡(
cmd
 =
Ród
)

191 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

193 
	`MEM_WRITE_HALF
(
mem
, 
addr
, *((
hÆf_t
 *)
p
));

197 i‡(
cmd
 =
Ród
)

198 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

200 
	`MEM_WRITE_WORD
(
mem
, 
addr
, *((
w‹d_t
 *)
p
));

203 #ifde‡
HOST_HAS_QWORD


205 i‡(
cmd
 =
Ród
)

206 *((
qw‹d_t
 *)
p
Ë
	`MEM_READ_QWORD
(
mem
, 
addr
);

208 
	`MEM_WRITE_QWORD
(
mem
, 
addr
, *((
qw‹d_t
 *)
p
));

218  
md_Áu…_n⁄e
;

219 
	}
}

223 
	$mem_ªg_°©s
(
mem_t
 *
mem
,

224 
°©_sdb_t
 *
sdb
)

226 
buf
[512], 
buf1
[512];

228 
	`•rötf
(
buf
, "%s.∑ge_cou¡", 
mem
->
«me
);

229 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÖagesállocated",

230 &
mem
->
∑ge_cou¡
, mem->∑ge_cou¡, 
NULL
);

232 
	`•rötf
(
buf
, "%s.∑ge_mem", 
mem
->
«me
);

233 
	`•rötf
(
buf1
, "%s.∑ge_cou¡ * %d / 1024", 
mem
->
«me
, 
MD_PAGE_SIZE
);

234 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "total size of memoryÖagesállocated",

235 
buf1
, "%11.0fk");

237 
	`•rötf
(
buf
, "%s.±ab_mis£s", 
mem
->
«me
);

238 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "total firstÜevelÖageÅable misses",

239 &
mem
->
±ab_mis£s
, mem->±ab_mis£s, 
NULL
);

241 
	`•rötf
(
buf
, "%s.±ab_ac˚s£s", 
mem
->
«me
);

242 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÖageÅableáccesses",

243 &
mem
->
±ab_ac˚s£s
, mem->±ab_ac˚s£s, 
NULL
);

245 
	`•rötf
(
buf
, "%s.±ab_miss_øã", 
mem
->
«me
);

246 
	`•rötf
(
buf1
, "%s.±ab_mis£†/ %s.±ab_ac˚s£s", 
mem
->
«me
, mem->name);

247 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "fú°ÜevñÖagêèbÀ mis†øã", 
buf1
, 
NULL
);

248 
	}
}

252 
	$mem_öô
(
mem_t
 *
mem
)

254 
i
;

257 
i
=0; i < 
MEM_PTAB_SIZE
; i++)

258 
mem
->
±ab
[
i
] = 
NULL
;

260 
mem
->
∑ge_cou¡
 = 0;

261 
mem
->
±ab_mis£s
 = 0;

262 
mem
->
±ab_ac˚s£s
 = 0;

263 
	}
}

266 
md_Áu…_ty≥


267 
	$mem_dump
(
mem_t
 *
mem
,

268 
md_addr_t
 
addr
,

269 
Àn
,

270 
FILE
 *
°ªam
)

272 
d©a
;

273 
md_Áu…_ty≥
 
Áu…
;

275 i‡(!
°ªam
)

276 
°ªam
 = 
°dîr
;

278 
addr
 &~(
w‹d_t
);

279 
Àn
 = (À¿+ ((
w‹d_t
) - 1)) & ~(word_t);

280 
Àn
-- > 0)

282 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
d©a
, (
w‹d_t
));

283 i‡(
Áu…
 !
md_Áu…_n⁄e
)

284  
Áu…
;

286 
	`myÂrötf
(
°ªam
, "0x%08p: %08x\n", 
addr
, 
d©a
);

287 
addr
 +(
w‹d_t
);

291  
md_Áu…_n⁄e
;

292 
	}
}

296 
md_Áu…_ty≥


297 
	$mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

298 
mem_t
 *
mem
,

299 
mem_cmd
 
cmd
,

300 
md_addr_t
 
addr
,

301 *
s
)

303 
n
 = 0;

304 
c
;

305 
md_Áu…_ty≥
 
Áu…
;

307 
cmd
)

309 
Ród
:

312 
Áu…
 = 
	`mem_‚
(
mem
, 
Ród
, 
addr
++, &
c
, 1);

313 i‡(
Áu…
 !
md_Áu…_n⁄e
)

314  
Áu…
;

315 *
s
++ = 
c
;

316 
n
++;

317 } 
c
);

320 
Wrôe
:

323 
c
 = *
s
++;

324 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1);

325 i‡(
Áu…
 !
md_Áu…_n⁄e
)

326  
Áu…
;

327 
n
++;

328 } 
c
);

332  
md_Áu…_öã∫Æ
;

336  
md_Áu…_n⁄e
;

337 
	}
}

340 
md_Áu…_ty≥


341 
	$mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

342 
mem_t
 *
mem
,

343 
mem_cmd
 
cmd
,

344 
md_addr_t
 
addr
,

345 *
vp
,

346 
nbyãs
)

348 
byã_t
 *
p
 = 
vp
;

349 
md_Áu…_ty≥
 
Áu…
;

352 
nbyãs
-- > 0)

354 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
++, 
p
++, 1);

355 i‡(
Áu…
 !
md_Áu…_n⁄e
)

356  
Áu…
;

360  
md_Áu…_n⁄e
;

361 
	}
}

366 
md_Áu…_ty≥


367 
	$mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

368 
mem_t
 *
mem
,

369 
mem_cmd
 
cmd
,

370 
md_addr_t
 
addr
,

371 *
vp
,

372 
nbyãs
)

374 
byã_t
 *
p
 = 
vp
;

375 
w‹ds
 = 
nbyãs
 >> 2;

376 
md_Áu…_ty≥
 
Áu…
;

378 
w‹ds
-- > 0)

380 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
, 
p
, (
w‹d_t
));

381 i‡(
Áu…
 !
md_Áu…_n⁄e
)

382  
Áu…
;

384 
addr
 +(
w‹d_t
);

385 
p
 +(
w‹d_t
);

389  
md_Áu…_n⁄e
;

390 
	}
}

393 
md_Áu…_ty≥


394 
	$mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

395 
mem_t
 *
mem
,

396 
md_addr_t
 
addr
,

397 
nbyãs
)

399 
byã_t
 
c
 = 0;

400 
md_Áu…_ty≥
 
Áu…
;

403 
nbyãs
-- > 0)

405 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1);

406 i‡(
Áu…
 !
md_Áu…_n⁄e
)

407  
Áu…
;

411  
md_Áu…_n⁄e
;

412 
	}
}

478 
SS_ADDR_TYPE
 
mem_brk_poöt
;

481 
SS_ADDR_TYPE
 
mem_°ack_mö
;

488 
	#MEM_TABLE_SIZE
 0x8000

	)

490 #i‚de‡
HIDE_MEM_TABLE_DEF


492 *
mem_èbÀ
[
MEM_TABLE_SIZE
];

496 
	#MEM_BLOCK_SIZE
 0x10000

	)

500 (
	gaddr
 >
ld_ãxt_ba£
 && 
addr
 < (ld_ãxt_ba£+
ld_ãxt_size
)

501 && 
cmd
 =
Ród
)

503 || (
addr
 >
ld_d©a_ba£
 &&ádd∏< 
ld_°ack_ba£
)))

504 
Áèl
("ac˚s†îr‹: segmíèti⁄ viﬁ©i⁄,ádd∏0x%08p", 
addr
);

507 i‡(
	gaddr
 > 
	gmem_brk_poöt
 &&ádd∏< 
	gmem_°ack_mö
)

508 
	gmem_°ack_mö
 = 
addr
;

512 
mem_vÆid
(
mem_t
 *
mem
,

513 
mem_cmd
 
cmd
,

514 
md_addr_t
 
addr
,

515 
nbyãs
,

516 
de˛¨e
);

520 
	$mem_vÆid
(
mem_cmd
 
cmd
,

521 
SS_ADDR_TYPE
 
addr
,

522 
nbyãs
,

523 
de˛¨e
)

525 *
îr_°r
 = 
NULL
;

528 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

530 
îr_°r
 = "bad size orálignment";

534 (
addr
 >
ld_ãxt_ba£
 &&ádd∏< (ld_ãxt_ba£+
ld_ãxt_size
)

535 && 
cmd
 =
Ród
)

537 || (
addr
 >
ld_d©a_ba£
 &&ádd∏< 
ld_°ack_ba£
)))

539 
îr_°r
 = "segmentation violation";

543 i‡(
addr
 > 
mem_brk_poöt
 &&ádd∏< 
mem_°ack_mö
)

544 
mem_°ack_mö
 = 
addr
;

546 i‡(!
de˛¨e
)

547  
îr_°r
;

548 i‡(
îr_°r
 !
NULL
)

549 
	`Áèl
(
îr_°r
);

551  
NULL
;

552 
	}
}

556 
	$mem_öô1
()

560 
mem_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
SS_PAGE_SIZE
);

563 
mem_°ack_mö
 = 
ªgs_R
[
SS_STACK_REGNO
];

564 
	}
}

	@memory.h

52 #i‚de‡
MEMORY_H


53 
	#MEMORY_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"›ti⁄s.h
"

61 
	~"°©s.h
"

64 
	#MEM_PTAB_SIZE
 (32*1024)

	)

65 
	#MEM_LOG_PTAB_SIZE
 15

	)

68 
	smem_±e_t
 {

69 
mem_±e_t
 *
	m√xt
;

70 
md_addr_t
 
	mèg
;

71 
byã_t
 *
	m∑ge
;

75 
	smem_t
 {

77 *
	m«me
;

78 
mem_±e_t
 *
	m±ab
[
MEM_PTAB_SIZE
];

81 
cou¡î_t
 
	m∑ge_cou¡
;

82 
cou¡î_t
 
	m±ab_mis£s
;

83 
cou¡î_t
 
	m±ab_ac˚s£s
;

87 
	emem_cmd
 {

88 
	mRód
,

89 
	mWrôe


94 
	gmd_Áu…_ty≥


95 (*
	tmem_ac˚ss_‚
)(
	tmem_t
 *
	tmem
,

96 
	tmem_cmd
 
	tcmd
,

97 
	tmd_addr_t
 
	taddr
,

98 *
	tp
,

99 
	tnbyãs
);

106 
	#MEM_PTAB_SET
(
ADDR
) \

107 (((
ADDR
Ë>> 
MD_LOG_PAGE_SIZE
Ë& (
MEM_PTAB_SIZE
 - 1))

	)

110 
	#MEM_PTAB_TAG
(
ADDR
) \

111 ((
ADDR
Ë>> (
MD_LOG_PAGE_SIZE
 + 
MEM_LOG_PTAB_SIZE
))

	)

114 
	#MEM_PTE_ADDR
(
PTE
, 
IDX
) \

115 (((
PTE
)->
èg
 << (
MD_LOG_PAGE_SIZE
 + 
MEM_LOG_PTAB_SIZE
)) \

116 | ((
IDX
Ë<< 
MD_LOG_PAGE_SIZE
))

	)

119 
	#MEM_PAGE
(
MEM
, 
ADDR
) \

121 ((
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)] \

122 && (
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)]->
èg
 =
	`MEM_PTAB_TAG
(ADDR)) \

124 (
MEM
)->
±ab_ac˚s£s
++, \

125 (
MEM
)->
±ab
[
	`MEM_PTAB_SET
(
ADDR
)]->
∑ge
) \

127 
	`mem_å™¶©e
((
MEM
), (
ADDR
))))

	)

130 
	#MEM_OFFSET
(
ADDR
Ë((ADDRË& (
MD_PAGE_SIZE
 - 1))

	)

133 
	#MEM_TICKLE
(
MEM
, 
ADDR
) \

134 (!
	`MEM_PAGE
(
MEM
, 
ADDR
) \

136 
	`mem_√w∑ge
(
MEM
, 
ADDR
)) \

137 : ( ()0))

	)

140 
	#MEM_FORALL
(
MEM
, 
ITER
, 
PTE
) \

141 (
ITER
)=0; (ITERË< 
MEM_PTAB_SIZE
; (ITER)++) \

142 (
PTE
)=(
MEM
)->
±ab
[
i
]; (PTEË!
NULL
; (PTE)=(PTE)->
√xt
)

	)

151 
	#MEM_READ
(
MEM
, 
ADDR
, 
TYPE
) \

152 (
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)) \

153 ? *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))) \

154 : 0)

	)

157 
	#__UNCHK_MEM_READ
(
MEM
, 
ADDR
, 
TYPE
) \

158 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))))

	)

162 
	#MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
) \

163 (
	`MEM_TICKLE
(
MEM
, (
md_addr_t
)(
ADDR
)), \

164 *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

	)

167 
	#__UNCHK_MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
) \

168 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

	)

172 
	#MEM_READ_BYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
byã_t
)

	)

173 
	#MEM_READ_SBYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
sbyã_t
)

	)

174 
	#MEM_READ_HALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
hÆf_t
))

	)

175 
	#MEM_READ_SHALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
shÆf_t
))

	)

176 
	#MEM_READ_WORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
w‹d_t
))

	)

177 
	#MEM_READ_SWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
sw‹d_t
))

	)

179 #ifde‡
HOST_HAS_QWORD


180 
	#MEM_READ_QWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
qw‹d_t
))

	)

181 
	#MEM_READ_SQWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
sqw‹d_t
))

	)

184 
	#MEM_WRITE_BYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
byã_t
, VAL)

	)

185 
	#MEM_WRITE_SBYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
sbyã_t
, VAL)

	)

186 
	#MEM_WRITE_HALF
(
MEM
, 
ADDR
, 
VAL
) \

187 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
hÆf_t
, 
	`MD_SWAPH
(
VAL
))

	)

188 
	#MEM_WRITE_SHALF
(
MEM
, 
ADDR
, 
VAL
) \

189 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
shÆf_t
, 
	`MD_SWAPH
(
VAL
))

	)

190 
	#MEM_WRITE_WORD
(
MEM
, 
ADDR
, 
VAL
) \

191 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
w‹d_t
, 
	`MD_SWAPW
(
VAL
))

	)

192 
	#MEM_WRITE_SWORD
(
MEM
, 
ADDR
, 
VAL
) \

193 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sw‹d_t
, 
	`MD_SWAPW
(
VAL
))

	)

194 
	#MEM_WRITE_SFLOAT
(
MEM
, 
ADDR
, 
VAL
) \

195 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sÊﬂt_t
, 
	`MD_SWAPW
(
VAL
))

	)

196 
	#MEM_WRITE_DFLOAT
(
MEM
, 
ADDR
, 
VAL
) \

197 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
dÊﬂt_t
, 
	`MD_SWAPQ
(
VAL
))

	)

199 #ifde‡
HOST_HAS_QWORD


200 
	#MEM_WRITE_QWORD
(
MEM
, 
ADDR
, 
VAL
) \

201 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
qw‹d_t
, 
	`MD_SWAPQ
(
VAL
))

	)

202 
	#MEM_WRITE_SQWORD
(
MEM
, 
ADDR
, 
VAL
) \

203 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sqw‹d_t
, 
	`MD_SWAPQ
(
VAL
))

	)

208 
mem_t
 *

209 
mem_¸óã
(*
«me
);

212 
byã_t
 *

213 
mem_å™¶©e
(
mem_t
 *
mem
,

214 
md_addr_t
 
addr
);

218 
mem_√w∑ge
(
mem_t
 *
mem
,

219 
md_addr_t
 
addr
);

224 
md_Áu…_ty≥


225 
mem_ac˚ss
(
mem_t
 *
mem
,

226 
mem_cmd
 
cmd
,

227 
md_addr_t
 
addr
,

228 *
vp
,

229 
nbyãs
);

233 
mem_ªg_°©s
(
mem_t
 *
mem
,

234 
°©_sdb_t
 *
sdb
);

238 
mem_öô
(
mem_t
 *
mem
);

241 
md_Áu…_ty≥


242 
mem_dump
(
mem_t
 *
mem
,

243 
md_addr_t
 
addr
,

244 
Àn
,

245 
FILE
 *
°ªam
);

258 
md_Áu…_ty≥


259 
mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

260 
mem_t
 *
mem
,

261 
mem_cmd
 
cmd
,

262 
md_addr_t
 
addr
,

263 *
s
);

266 
md_Áu…_ty≥


267 
mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

268 
mem_t
 *
mem
,

269 
mem_cmd
 
cmd
,

270 
md_addr_t
 
addr
,

271 *
vp
,

272 
nbyãs
);

277 
md_Áu…_ty≥


278 
mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

279 
mem_t
 *
mem
,

280 
mem_cmd
 
cmd
,

281 
md_addr_t
 
addr
,

282 *
vp
,

283 
nbyãs
);

286 
md_Áu…_ty≥


287 
mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

288 
mem_t
 *
mem
,

289 
md_addr_t
 
addr
,

290 
nbyãs
);

	@misc.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°d¨g.h
>

55 
	~<°rög.h
>

56 
	~<˘y≥.h
>

57 
	~<î∫o.h
>

59 #i‡
deföed
(
__Æpha
Ë|| deföed(
löux
)

60 
	~<uni°d.h
>

63 
	~"ho°.h
"

64 
	~"misc.h
"

65 
	~"machöe.h
"

68 
	gvîbo£
 = 
FALSE
;

70 #ifde‡
DEBUG


72 
	gdebuggög
 = 
FALSE
;

77 (*
hook_‚
)(
FILE
 *
°ªam
Ë
NULL
;

81 
	`Áèl_hook
((*
‚
)(
FILE
 *
°ªam
))

83 
hook_‚
 = 
‚
;

84 
	}
}

87 #ifde‡
__GNUC__


89 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

92 
	$Áèl
(*
fmt
, ...)

95 
va_li°
 
v
;

96 
	`va_°¨t
(
v
, 
fmt
);

98 
	`Ârötf
(
°dîr
, "fatal: ");

99 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

100 #ifde‡
__GNUC__


101 i‡(
vîbo£
)

102 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

104 
	`Ârötf
(
°dîr
, "\n");

105 i‡(
hook_‚
)

106 (*
hook_‚
)(
°dîr
);

107 
	`exô
(1);

108 
	}
}

111 #ifde‡
__GNUC__


113 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

116 
	$∑nic
(*
fmt
, ...)

119 
va_li°
 
v
;

120 
	`va_°¨t
(
v
, 
fmt
);

122 
	`Ârötf
(
°dîr
, "panic: ");

123 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

124 #ifde‡
__GNUC__


125 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

127 
	`Ârötf
(
°dîr
, "\n");

128 i‡(
hook_‚
)

129 (*
hook_‚
)(
°dîr
);

130 
	`ab‹t
();

131 
	}
}

134 #ifde‡
__GNUC__


136 
	$_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

139 
	$w¨n
(*
fmt
, ...)

142 
va_li°
 
v
;

143 
	`va_°¨t
(
v
, 
fmt
);

145 
	`Ârötf
(
°dîr
, "warning: ");

146 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

147 #ifde‡
__GNUC__


148 i‡(
vîbo£
)

149 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

151 
	`Ârötf
(
°dîr
, "\n");

152 
	}
}

155 #ifde‡
__GNUC__


157 
	$_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

160 
	$öfo
(*
fmt
, ...)

163 
va_li°
 
v
;

164 
	`va_°¨t
(
v
, 
fmt
);

166 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

167 #ifde‡
__GNUC__


168 i‡(
vîbo£
)

169 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

171 
	`Ârötf
(
°dîr
, "\n");

172 
	}
}

174 #ifde‡
DEBUG


176 #ifde‡
__GNUC__


178 
	$_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

181 
	$debug
(*
fmt
, ...)

184 
va_li°
 
v
;

185 
	`va_°¨t
(
v
, 
fmt
);

187 i‡(
debuggög
)

189 
	`Ârötf
(
°dîr
, "debug: ");

190 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

191 #ifde‡
__GNUC__


192 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

194 
	`Ârötf
(
°dîr
, "\n");

196 
	}
}

202 
	$my§™d
(
£ed
)

204 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

205 
	`§™d
(
£ed
);

207 
	`§™dom
(
£ed
);

209 
	}
}

213 
	$myønd
()

215 #i‡!
	`deföed
(
__Æpha
Ë&& !deföed(
unix
)

216 
	`øndom
();

219 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

220  
	`ønd
();

222  
	`øndom
();

224 
	}
}

229 
	$my°rdup
(*
s
)

231 *
buf
;

233 i‡(!(
buf
 = (*)
	`mÆloc
(
	`°æí
(
s
)+1)))

234  
NULL
;

235 
	`°r˝y
(
buf
, 
s
);

236  
buf
;

237 
	}
}

241 
	$my°ºchr
(*
s
, 
c
)

243 *
πnvÆ
 = 0;

246 i‡(*
s
 =
c
)

247 
πnvÆ
 = 
s
;

248 } *
s
++);

250  
πnvÆ
;

251 
	}
}

256 
	$my°ricmp
(*
s1
, *
s2
)

258 
u1
, 
u2
;

262 
u1
 = ()*
s1
++; u1 = 
	`tﬁowî
(u1);

263 
u2
 = ()*
s2
++; u2 = 
	`tﬁowî
(u2);

265 i‡(
u1
 !
u2
)

266  
u1
 - 
u2
;

267 i‡(
u1
 == '\0')

270 
	}
}

275 
	$gëc‹e
(
nbyãs
)

277  
	`ˇŒoc
(
nbyãs
, 1);

280 #i‡!
	`deföed
(
PURIFY
Ë&& !deföed(
_MSC_VER
)

281 *
p
 = (*)
	`sbrk
(
nbyãs
);

283 i‡(
p
 == (*)-1)

284  
NULL
;

287 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
_MSC_VER
)

288 
	`mem£t
(
p
, '\0', 
nbyãs
);

290 
	`bzîo
(
p
, 
nbyãs
);

292  
p
;

294  
	`ˇŒoc
(
nbyãs
, 1);

297 
	}
}

301 
	$log_ba£2
(
n
)

303 
powî
 = 0;

305 i‡(
n
 <= 0 || (n & (n-1)) != 0)

306 
	`∑nic
("log2() only works forÖositiveÖower ofÅwo values");

308 
n
 >>= 1)

309 
powî
++;

311  
powî
;

312 
	}
}

316 
	$ñ≠£d_time
(
£c
)

318 
t°r
[256];

319 
ãmp
[256];

321 i‡(
£c
 <= 0)

324 
t°r
[0] = '\0';

327 i‡(
£c
 >= 86400)

329 
	`•rötf
(
ãmp
, "%ldD ", 
£c
/86400);

330 
	`°rˇt
(
t°r
, 
ãmp
);

331 
£c
 = sec % 86400;

334 i‡(
£c
 >= 3600)

336 
	`•rötf
(
ãmp
, "%ldh ", 
£c
/3600);

337 
	`°rˇt
(
t°r
, 
ãmp
);

338 
£c
 = sec % 3600;

341 i‡(
£c
 >= 60)

343 
	`•rötf
(
ãmp
, "%ldm ", 
£c
/60);

344 
	`°rˇt
(
t°r
, 
ãmp
);

345 
£c
 = sec % 60;

348 i‡(
£c
 >= 1)

350 
	`•rötf
(
ãmp
, "%ld†", 
£c
);

351 
	`°rˇt
(
t°r
, 
ãmp
);

353 
t°r
[
	`°æí
(tstr)-1] = '\0';

354  
t°r
;

355 
	}
}

363 
	$exåa˘l
(
w‹d
,

364 
pos
,

365 
num
)

367 (((Ë
w‹d
 >> (
pos
 + 1 - 
num
)) & ~(~0 <<Çum));

368 
	}
}

370 
	#PUT
(
p
, 
n
) \

372 
¬
, 
cc
; \

374 
¬
 = 0;Ç¿< 
n
;Çn++) \

376 
cc
 = *(
p
+
¬
); \

377 *
obuf
++ = 
cc
; \

379 }

	)

381 
	#PAD
(
s
, 
n
) \

383 
¬
, 
cc
; \

385 
cc
 = *
s
; \

386 
¬
 = 
n
;Çn > 0;Çn--) \

387 *
obuf
++ = 
cc
; \

388 }

	)

390 #ifde‡
HOST_HAS_QWORD


391 
	#HIBITL
 
	`LL
(0x8000000000000000)

	)

392 
sqw‹d_t
 
	t¶¨geöt_t
;

393 
qw‹d_t
 
	tœrgeöt_t
;

395 
	#HIBITL
 0x80000000L

	)

396 
sw‹d_t
 
	t¶¨geöt_t
;

397 
w‹d_t
 
	tœrgeöt_t
;

401 
	$_lowdigô
(
¶¨geöt_t
 *
vÆ±r
)

408 
lowbô
 = ()(*
vÆ±r
 & 1);

409 
¶¨geöt_t
 
vÆue
 = (*
vÆ±r
 >> 1Ë& ~
HIBITL
;

411 *
vÆ±r
 = 
vÆue
 / 5;

412  ()(
vÆue
 % 5 * 2 + 
lowbô
 + '0');

413 
	}
}

417 
	$myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
)

419 
_bœnks
[] = " ";

420 
_zî€s
[] = "00000000000000000000";

423 
cou¡
 = 0;

426 
fcode
;

429 
width
, 
¥ec
;

432 
lzîo
;

435 
¥efixÀngth
;

438 
ŸhîÀngth
;

441 
	#PADZERO
 0x0001

	)

442 
	#RZERO
 0x0002

	)

443 
	#LZERO
 0x0004

	)

444 
	#DOTSEEN
 0x0008

	)

445 
	#LENGTH
 0x0010

	)

446 
Êagw‹d
;

449 
	#MAXDIGS
 22

	)

452 *
bp
, *
p
;

455 
k
, 
Ãadix
, 
mødix
;

458 *
¥efix
;

461 
buf
[
MAXDIGS
*4], 
buf1
[MAXDIGS*4];

464 *
èb
;

467 
¶¨geöt_t
 
vÆ
;

470 
dÊﬂt_t
 
fvÆ
;

474 
n
;

476 (
fcode
 = *
f‹m©
) != '\0' && fcode != '%')

478 *
obuf
++ = 
fcode
;

479 
f‹m©
++;

480 
cou¡
++;

483 i‡(
fcode
 == '\0')

486 *
obuf
 = '\0';

487  
obuf
;

496 
width
 = 
¥efixÀngth
 = 
ŸhîÀngth
 = 
Êagw‹d
 = 0;

497 
f‹m©
++;

499 
ch¨swôch
:

500 
fcode
 = *
f‹m©
++)

503 
Êagw‹d
 |
PADZERO
;

514 
num
 = 
fcode
 - '0';

515 
	`isdigô
(
fcode
 = *
f‹m©
))

517 
num
 =Çum * 10 + 
fcode
 - '0';

518 
f‹m©
++;

520 i‡(
Êagw‹d
 & 
DOTSEEN
)

521 
¥ec
 = 
num
;

523 
width
 = 
num
;

524 
ch¨swôch
;

528 
Êagw‹d
 |
DOTSEEN
;

529 
ch¨swôch
;

532 
Êagw‹d
 |
LENGTH
;

533 
ch¨swôch
;

536 #ifde‡
HOST_HAS_QWORD


537 
Êagw‹d
 |
LENGTH
;

540 
Êagw‹d
 |
DOTSEEN
;

541 i‡(!
width
)

542 
width
 = 12;

543 
¥ec
 = 0;

544 
¥o˚ss_Êﬂt
;

549 i‡(
Êagw‹d
 & 
LENGTH
)

550 
vÆ
 = 
	`va_¨g
(
v
, 
¶¨geöt_t
);

552 
vÆ
 = (
¶¨geöt_t
)
	`va_¨g
(
v
, 
sw‹d_t
);

555 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

558 i‡(
vÆ
 < 0)

560 
¥efix
 = "-";

561 
¥efixÀngth
 = 1;

563 i‡(
vÆ
 !(
¶¨geöt_t
)
HIBITL
)

564 
vÆ
 = -val;

568 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

572 
decimÆ
:

574 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

576 i‡(
qvÆ
 <= 9)

577 *--
bp
 = ()
qvÆ
 + '0';

581 
n
 = ()
qvÆ
;

582 
qvÆ
 /= 10;

583 *--
bp
 = 
n
 - ()
qvÆ
 * 10 + '0';

585 
qvÆ
 > 9);

586 *--
bp
 = ()
qvÆ
 + '0';

593 i‡(
Êagw‹d
 & 
LENGTH
)

594 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

596 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

599 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

601 i‡(
vÆ
 & 
HIBITL
)

602 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

603 
decimÆ
;

606 
mødix
 = 7;

607 
Ãadix
 = 2;

608 
fixed
;

611 i‡((
md_addr_t
) > 4)

612 
Êagw‹d
 |
LENGTH
;

617 
mødix
 = 15;

618 
Ãadix
 = 3;

620 
fixed
:

622 i‡(
Êagw‹d
 & 
LENGTH
)

623 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

625 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

628 
èb
 = (
fcode
 == 'X') ? "0123456789ABCDEF" : "0123456789abcdef";

631 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

634 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

636 i‡(
qvÆ
 == 0)

638 
ŸhîÀngth
 = 
lzîo
 = 1;

639 
Êagw‹d
 |
LZERO
;

643 *--
bp
 = 
èb
[
qvÆ
 & 
mødix
];

644 
qvÆ
 = ((qvÆ >> 1Ë& ~
HIBITL
Ë>> 
Ãadix
;

645 } 
qvÆ
 != 0);

649 #i‚de‡
HOST_HAS_QWORD


650 
¥o˚ss_Êﬂt
:

654 i‡(
Êagw‹d
 & 
DOTSEEN
)

655 
	`•rötf
(
buf1
, "%%%d.%df", 
width
, 
¥ec
);

656 i‡(
width
)

657 
	`•rötf
(
buf1
, "%%%df", 
width
);

659 
	`•rötf
(
buf1
, "%%f");

662 
fvÆ
 = 
	`va_¨g
(
v
, 
dÊﬂt_t
);

665 
	`•rötf
(
buf
, 
buf1
, 
fvÆ
);

666 
bp
 = 
buf
;

667 
p
 = 
bp
 + 
	`°æí
(bp);

671 
bp
 = 
	`va_¨g
(
v
, *);

672 i‡(
bp
 =
NULL
)

673 
bp
 = "(null)";

674 
p
 = 
bp
 + 
	`°æí
(bp);

678 
buf
[0] = 
fcode
;

679 
c_mîge
;

682 
buf
[0] = 
	`va_¨g
(
v
, );

683 
c_mîge
:

684 
p
 = (
bp
 = &
buf
[0]) + 1;

690 
f‹m©
--;

695 
k
 = (
n
 = 
p
 - 
bp
Ë+ 
¥efixÀngth
 + 
ŸhîÀngth
;

696 i‡(
width
 <
k
)

697 
cou¡
 +
k
;

700 
cou¡
 +
width
;

704 i‡(
Êagw‹d
 & 
PADZERO
)

706 i‡(!(
Êagw‹d
 & 
LZERO
))

708 
Êagw‹d
 |
LZERO
;

709 
lzîo
 = 
width
 - 
k
;

712 
lzîo
 +
width
 - 
k
;

715 
k
 = 
width
;

720 
	`PAD
(
_bœnks
, 
width
 - 
k
);

725 i‡(
¥efixÀngth
 != 0)

727 
	`PUT
(
¥efix
, 
¥efixÀngth
);

731 i‡(
Êagw‹d
 & 
LZERO
)

733 
	`PAD
(
_zî€s
, 
lzîo
);

737 i‡(
n
 > 0)

739 
	`PUT
(
bp
, 
n
);

742 
	}
}

746 
	$my•rötf
(*
obuf
, *
f‹m©
, ...)

749 
va_li°
 
v
;

750 
	`va_°¨t
(
v
, 
f‹m©
);

752  
	`myv•rötf
(
obuf
, 
f‹m©
, 
v
);

753 
	}
}

757 
	$myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
)

760 
buf
[2048];

762 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

763 
	`Âuts
(
buf
, 
°ªam
);

764 
	}
}

768 
	$myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...)

771 
buf
[2048];

774 
va_li°
 
v
;

775 
	`va_°¨t
(
v
, 
f‹m©
);

777 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

778 
	`Âuts
(
buf
, 
°ªam
);

779 
	}
}

781 #ifde‡
HOST_HAS_QWORD


783 
	#LL_MAX
 
	`LL
(9223372036854775807)

	)

784 
	#LL_MIN
 (-
LL_MAX
 - 1)

	)

785 
	#ULL_MAX
 (
	`ULL
(9223372036854775807Ë* ULL(2Ë+ 1)

	)

788 
sqw‹d_t


789 
	$my©osq
(*
≈å
, **
ídp
, 
ba£
)

791 *
s
, *
ßve
;

792 
√g©ive
, 
ovîÊow
;

793 
sqw‹d_t
 
cutoff
, 
cuéim
, 
i
;

794 
c
;

795 
î∫o
;

797 i‡(!
≈å
 || !*nptr)

798 
	`∑nic
("strtoll()Öassedá NULL string");

800 
s
 = 
≈å
;

803 
	`is•a˚
(()(*
s
)))

804 ++
s
;

805 i‡(*
s
 == '\0')

806 
noc⁄v
;

808 i‡(
ba£
 == 0)

810 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

811 
ba£
 = 16;

813 
ba£
 = 10;

816 i‡(
ba£
 <= 1 || base > 36)

817 
	`∑nic
("bogu†ba£: %d", 
ba£
);

820 i‡(*
s
 == '-')

822 
√g©ive
 = 1;

823 ++
s
;

825 i‡(*
s
 == '+')

827 
√g©ive
 = 0;

828 ++
s
;

831 
√g©ive
 = 0;

833 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

834 
s
 += 2;

837 
ßve
 = 
s
;

839 
cutoff
 = 
LL_MAX
 / (Ë
ba£
;

840 
cuéim
 = 
LL_MAX
 % (Ë
ba£
;

842 
ovîÊow
 = 0;

843 
i
 = 0;

844 
c
 = *
s
; c != '\0'; c = *++s)

846 i‡(
	`isdigô
 (
c
))

847 
c
 -= '0';

848 i‡(
	`ißÕha
 (
c
))

849 
c
 = 
	`touµî
(c) - 'A' + 10;

852 i‡(
c
 >
ba£
)

856 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

857 
ovîÊow
 = 1;

860 
i
 *(Ë
ba£
;

861 
i
 +
c
;

866 i‡(
s
 =
ßve
)

867 
noc⁄v
;

871 i‡(
ídp
 !
NULL
)

872 *
ídp
 = (*Ë
s
;

874 i‡(
ovîÊow
)

876 
î∫o
 = 
ERANGE
;

877  
√g©ive
 ? 
LL_MIN
 : 
LL_MAX
;

881 
î∫o
 = 0;

884  (
√g©ive
 ? -
i
 : i);

887 
noc⁄v
:

889 i‡(
ídp
 !
NULL
)

890 *
ídp
 = (*Ë
≈å
;

892 
	}
}

895 
qw‹d_t


896 
	$my©oq
(*
≈å
, **
ídp
, 
ba£
)

898 *
s
, *
ßve
;

899 
ovîÊow
;

900 
qw‹d_t
 
cutoff
, 
cuéim
, 
i
;

901 
c
;

902 
î∫o
;

904 i‡(!
≈å
 || !*nptr)

905 
	`∑nic
("strtoll()Öassedá NULL string");

907 
s
 = 
≈å
;

910 
	`is•a˚
(()(*
s
)))

911 ++
s
;

912 i‡(*
s
 == '\0')

913 
noc⁄v
;

915 i‡(
ba£
 == 0)

917 i‡(
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

918 
ba£
 = 16;

920 
ba£
 = 10;

923 i‡(
ba£
 <= 1 || base > 36)

924 
	`∑nic
("bogu†ba£: %d", 
ba£
);

926 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(s[1]) == 'X')

927 
s
 += 2;

930 
ßve
 = 
s
;

932 
cutoff
 = 
ULL_MAX
 / (Ë
ba£
;

933 
cuéim
 = 
ULL_MAX
 % (Ë
ba£
;

935 
ovîÊow
 = 0;

936 
i
 = 0;

937 
c
 = *
s
; c != '\0'; c = *++s)

939 i‡(
	`isdigô
 (
c
))

940 
c
 -= '0';

941 i‡(
	`ißÕha
 (
c
))

942 
c
 = 
	`touµî
(c) - 'A' + 10;

945 i‡(
c
 >
ba£
)

949 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

950 
ovîÊow
 = 1;

953 
i
 *(Ë
ba£
;

954 
i
 +
c
;

959 i‡(
s
 =
ßve
)

960 
noc⁄v
;

964 i‡(
ídp
 !
NULL
)

965 *
ídp
 = (*Ë
s
;

967 i‡(
ovîÊow
)

969 
î∫o
 = 
ERANGE
;

970  
ULL_MAX
;

974 
î∫o
 = 0;

977  
i
;

980 
noc⁄v
:

982 i‡(
ídp
 !
NULL
)

983 *
ídp
 = (*Ë
≈å
;

985 
	}
}

987 #ifde‡
TESTIT


989 
	$ã°ô
(*
s
)

991 
buf
[128];

992 
qw‹d_t
 
qvÆ
;

994 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 10);

996 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

997 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

998 
	`myqtﬂ
(
qvÆ
, "%16x", 
buf
, 
NULL
);

999 
	`Ârötf
(
°dîr
, "16x: %s\n", 
buf
);

1000 
	`myqtﬂ
(
qvÆ
, "%016x", 
buf
, 
NULL
);

1001 
	`Ârötf
(
°dîr
, "016x: %s\n", 
buf
);

1002 
	`myqtﬂ
(
qvÆ
, "0x%016x", 
buf
, 
NULL
);

1003 
	`Ârötf
(
°dîr
, "0x016x: %s\n", 
buf
);

1004 
	`myqtﬂ
(
qvÆ
, "0x%08x", 
buf
, 
NULL
);

1005 
	`Ârötf
(
°dîr
, "0x08x: %s\n", 
buf
);

1007 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1008 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1009 
	`myqtﬂ
(
qvÆ
, "%22d", 
buf
, 
NULL
);

1010 
	`Ârötf
(
°dîr
, "22d: %s\n", 
buf
);

1011 
	`myqtﬂ
(
qvÆ
, "%022d", 
buf
, 
NULL
);

1012 
	`Ârötf
(
°dîr
, "022d: %s\n", 
buf
);

1014 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1015 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1017 
	`myqtﬂ
(
qvÆ
, "%o", 
buf
, 
NULL
);

1018 
	`Ârötf
(
°dîr
, "o: %s\n", 
buf
);

1019 
	}
}

1022 
	$°e°ô
(*
s
)

1024 
buf
[128];

1025 
sqw‹d_t
 
sqvÆ
;

1027 
sqvÆ
 = 
	`my©osq
(
s
, 
NULL
, 10);

1029 
	`myqtﬂ
(
sqvÆ
, "%x", 
buf
, 
NULL
);

1030 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1032 
	`myqtﬂ
(
sqvÆ
, "%d", 
buf
, 
NULL
);

1033 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1035 
	`myqtﬂ
(
sqvÆ
, "%u", 
buf
, 
NULL
);

1036 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1037 
	}
}

1040 
	$xã°ô
(*
s
)

1042 
buf
[128];

1043 
qw‹d_t
 
qvÆ
;

1045 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 16);

1047 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

1048 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1050 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1051 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1053 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1054 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1055 
	}
}

1060 #ifde‡
GZIP_PATH


1063 *
	mty≥
;

1064 *
	mext
;

1065 *
	mcmd
;

1066 } 
	ggzcmds
[] = {

1078 
FILE
 *

1079 
	$gz›í
(*
‚ame
, *
ty≥
)

1081 
i
;

1082 *
cmd
 = 
NULL
, *
ext
;

1083 
FILE
 *
fd
;

1084 
°r
[2048];

1087 
ext
 = 
	`my°ºchr
(
‚ame
, '.');

1090 i‡(
ext
 !
NULL
 && *ext != '\0')

1092 
i
=0; i < 
	`N_ELT
(
gzcmds
); i++)

1094 i‡(!
	`°rcmp
(
gzcmds
[
i
].
ty≥
,Åy≥Ë&& !°rcmp(gzcmds[i].
ext
,Éxt))

1096 
cmd
 = 
gzcmds
[
i
].cmd;

1102 i‡(!
cmd
)

1105 
fd
 = 
	`f›í
(
‚ame
, 
ty≥
);

1110 
	`•rötf
(
°r
, 
cmd
, 
GZIP_PATH
, 
‚ame
);

1111 
fd
 = 
	`p›í
(
°r
, 
ty≥
);

1114  
fd
;

1115 
	}
}

1119 
	$gz˛o£
(
FILE
 *
fd
)

1122 i‡(
	`p˛o£
(
fd
) == -1)

1123 
	`f˛o£
(
fd
);

1124 
	}
}

1128 
FILE
 *

1129 
	$gz›í
(*
‚ame
, *
ty≥
)

1131  
	`f›í
(
‚ame
, 
ty≥
);

1132 
	}
}

1135 
	$gz˛o£
(
FILE
 *
fd
)

1137 
	`f˛o£
(
fd
);

1138 
	}
}

1144 
	#POLYNOMIAL
 0x04c11db7L

	)

1146 
	g¸c_öô
 = 
FALSE
;

1147 
	g¸c_èbÀ
[256];

1151 
	$¸c_gíèb
()

1153 
i
, 
j
;

1154 
w‹d_t
 
¸c_accum
;

1156 
i
=0; i < 256; i++)

1158 
¸c_accum
 = (()
i
 << 24);

1159 
j
=0; j < 8; j++)

1161 i‡(
¸c_accum
 & 0x80000000L)

1162 
¸c_accum
 = (¸c_accum << 1Ë^ 
POLYNOMIAL
;

1164 
¸c_accum
 = (crc_accum << 1);

1166 
¸c_èbÀ
[
i
] = 
¸c_accum
;

1169 
	}
}

1172 
w‹d_t


1173 
	$¸c
(
w‹d_t
 
¸c_accum
, w‹d_à
d©a
)

1175 
i
, 
j
;

1177 i‡(!
¸c_öô
)

1179 
	`¸c_gíèb
();

1180 
¸c_öô
 = 
TRUE
;

1183 
j
=0; j < (
w‹d_t
); j++)

1185 
i
 = (()(
¸c_accum
 >> 24Ë^ (
d©a
 >> (
j
*8))) & 0xff;

1186 
¸c_accum
 = (¸c_accum << 8Ë^ 
¸c_èbÀ
[
i
];

1188  
¸c_accum
;

1189 
	}
}

	@misc.h

52 #i‚de‡
MISC_H


53 
	#MISC_H


	)

55 
	~<°dio.h
>

56 
	~<°dlib.h
>

57 
	~<°d¨g.h
>

58 
	~<°rög.h
>

59 
	~<sys/ty≥s.h
>

62 #i‚de‡
TRUE


63 
	#TRUE
 1

	)

65 #i‚de‡
FALSE


66 
	#FALSE
 0

	)

70 #i‚de‡
MAX


71 
	#MAX
(
a
, 
b
Ë((◊Ë< (b)Ë? (bË: (a))

	)

73 #i‚de‡
MIN


74 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

78 
	#LLHIGH
(
L
Ë(()(((L)>>32Ë& 0xffffffff))

	)

79 
	#LLLOW
(
L
Ë(()((LË& 0xffffffff))

	)

82 
	#N_ELT
(
ARR
Ë((ARR)/((ARR)[0]))

	)

85 
	#ROUND_UP
(
N
,
ALIGN
Ë(((NË+ ((ALIGN)-1)Ë& ~((ALIGN)-1))

	)

86 
	#ROUND_DOWN
(
N
,
ALIGN
Ë((NË& ~((ALIGN)-1))

	)

89 
vîbo£
;

91 #ifde‡
DEBUG


93 
debuggög
;

98 
Áèl_hook
((*
hook_‚
)(
FILE
 *
°ªam
));

100 #ifde‡
__GNUC__


102 
	#Áèl
(
fmt
, 
¨gs
...) \

103 
	`_Áèl
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

106 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

107 
	`__©åibuã__
 ((
n‹ëu∫
));

110 
	`Áèl
(*
fmt
, ...);

113 #ifde‡
__GNUC__


115 
	#∑nic
(
fmt
, 
¨gs
...) \

116 
	`_∑nic
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

119 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

120 
	`__©åibuã__
 ((
n‹ëu∫
));

123 
	`∑nic
(*
fmt
, ...);

126 #ifde‡
__GNUC__


128 
	#w¨n
(
fmt
, 
¨gs
...) \

129 
	`_w¨n
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

132 
	`_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

135 
	`w¨n
(*
fmt
, ...);

138 #ifde‡
__GNUC__


140 
	#öfo
(
fmt
, 
¨gs
...) \

141 
	`_öfo
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

	)

144 
	`_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

147 
	`öfo
(*
fmt
, ...);

150 #ifde‡
DEBUG


152 #ifde‡
__GNUC__


154 
	#debug
(
fmt
, 
¨gs
...) \

156 i‡(
debuggög
) \

157 
	`_debug
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
); \

158 
	}
} 0)

	)

161 
_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

164 
debug
(*
fmt
, ...);

169 #ifde‡
__GNUC__


170 
	#debug
(
fmt
, 
¨gs
...)

	)

173 
	$debug
(*
fmt
, ...Ë{
	}
}

180 
my§™d
(
£ed
);

183 
myønd
();

188 
my°rdup
(*
s
);

192 
my°ºchr
(*
s
, 
c
);

197 
my°ricmp
(*
s1
, *
s2
);

201 *
gëc‹e
(
nbyãs
);

204 
log_ba£2
(
n
);

207 *
ñ≠£d_time
(
£c
);

215 
exåa˘l
(
w‹d
,

216 
pos
,

217 
num
);

219 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

220 
	#°πoul
 
°πﬁ


	)

226 *
myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
);

229 *
my•rötf
(*
obuf
, *
f‹m©
, ...);

232 
myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
);

235 
myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...);

237 #ifde‡
HOST_HAS_QWORD


240 
sqw‹d_t
 
my©osq
(*
≈å
, **
ídp
, 
ba£
);

243 
qw‹d_t
 
my©oq
(*
≈å
, **
ídp
, 
ba£
);

249 
FILE
 *
gz›í
(*
‚ame
, *
ty≥
);

252 
gz˛o£
(
FILE
 *
fd
);

255 
w‹d_t
 
¸c
(w‹d_à
¸c_accum
, w‹d_à
d©a
);

	@options.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#chdú
 
_chdú


	)

58 
	#gëcwd
 
_gëcwd


	)

60 
	~<°rög.h
>

61 
	~<˘y≥.h
>

62 
	~<Êﬂt.h
>

64 
	~"ho°.h
"

65 
	~"misc.h
"

66 
	~"›ti⁄s.h
"

69 
›t_odb_t
 *

70 
	$›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
)

72 
›t_odb_t
 *
odb
;

74 
odb
 = (
›t_odb_t
 *)
	`ˇŒoc
(1, (opt_odb_t));

75 i‡(!
odb
)

76 
	`Áèl
("out of virtual memory");

78 
odb
->
›ti⁄s
 = 
NULL
;

79 
odb
->
‹ph™_‚
 = orphan_fn;

80 
odb
->
hódî
 = 
NULL
;

81 
odb
->
nŸes
 = 
NULL
;

83  
odb
;

84 
	}
}

88 
	$›t_dñëe
(
›t_odb_t
 *
odb
)

90 
›t_›t_t
 *
›t
, *
›t_√xt
;

91 
›t_nŸe_t
 *
nŸe
, *
nŸe_√xt
;

94 
›t
=
odb
->
›ti⁄s
; o±; o±=
›t_√xt
)

96 
›t_√xt
 = 
›t
->
√xt
;

97 
›t
->
√xt
 = 
NULL
;

98 
	`‰ì
(
›t
);

102 
nŸe
 = 
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸê
nŸe_√xt
)

104 
nŸe_√xt
 = 
nŸe
->
√xt
;

105 
nŸe
->
√xt
 = 
NULL
;

106 
	`‰ì
(
nŸe
);

108 
odb
->
nŸes
 = 
NULL
;

110 
	`‰ì
(
odb
);

111 
	}
}

115 
	$add_›ti⁄
(
›t_odb_t
 *
odb
,

116 
›t_›t_t
 *
›t
)

118 
›t_›t_t
 *
ñt
, *
¥ev
;

121 i‡(
›t
->
«me
[0] != '-')

122 
	`∑nic
("›ti⁄ `%s' mu° sèπ wôhá `-'", 
›t
->
«me
);

125 
¥ev
=
NULL
, 
ñt
=
odb
->
›ti⁄s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

128 i‡(
ñt
->
«me
[0] =
›t
->«me[0] && !
	`°rcmp
(elt->name, opt->name))

129 
	`∑nic
("›ti⁄ `%s' i†mu…ùly deföed", 
›t
->
«me
);

132 i‡(
¥ev
 !
NULL
)

133 
¥ev
->
√xt
 = 
›t
;

135 
odb
->
›ti⁄s
 = 
›t
;

136 
›t
->
√xt
 = 
NULL
;

137 
	}
}

141 
	$›t_ªg_öt
(
›t_odb_t
 *
odb
,

142 *
«me
,

143 *
desc
,

144 *
v¨
,

145 
def_vÆ
,

146 
¥öt
,

147 *
f‹m©
)

149 
›t_›t_t
 *
›t
;

151 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

152 i‡(!
›t
)

153 
	`Áèl
("out of virtual memory");

155 
›t
->
«me
 =Çame;

156 
›t
->
desc
 = desc;

157 
›t
->
nv¨s
 = 1;

158 
›t
->
√…
 = 
NULL
;

159 
›t
->
f‹m©
 = format ? format : "%12d";

160 
›t
->
oc
 = 
oc_öt
;

161 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

162 
›t
->
¥öt
 =Örint;

163 
›t
->
ac¸ue
 = 
FALSE
;

166 
›t
->
√xt
 = 
NULL
;

167 
	`add_›ti⁄
(
odb
, 
›t
);

170 *
v¨
 = 
def_vÆ
;

171 
	}
}

175 
	$›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨s
,

179 
nv¨s
,

180 *
√…
,

181 *
def_vÆ
,

182 
¥öt
,

183 *
f‹m©
,

184 
ac¸ue
)

186 
i
;

187 
›t_›t_t
 *
›t
;

189 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

190 i‡(!
›t
)

191 
	`Áèl
("out of virtual memory");

193 
›t
->
«me
 =Çame;

194 
›t
->
desc
 = desc;

195 
›t
->
nv¨s
 =Çvars;

196 
›t
->
√…
 =Çelt;

197 
›t
->
f‹m©
 = format ? format : "%d";

198 
›t
->
oc
 = 
oc_öt
;

199 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = 
v¨s
;

200 
›t
->
¥öt
 =Örint;

201 
›t
->
ac¸ue
 =áccrue;

204 
›t
->
√xt
 = 
NULL
;

205 
	`add_›ti⁄
(
odb
, 
›t
);

208 
i
=0; i < *
√…
; i++)

209 
v¨s
[
i
] = 
def_vÆ
[i];

210 
	}
}

214 
	$›t_ªg_uöt
(
›t_odb_t
 *
odb
,

215 *
«me
,

216 *
desc
,

217 *
v¨
,

218 
def_vÆ
,

219 
¥öt
,

220 *
f‹m©
)

222 
›t_›t_t
 *
›t
;

224 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

225 i‡(!
›t
)

226 
	`Áèl
("out of virtual memory");

228 
›t
->
«me
 =Çame;

229 
›t
->
desc
 = desc;

230 
›t
->
nv¨s
 = 1;

231 
›t
->
√…
 = 
NULL
;

232 
›t
->
f‹m©
 = format ? format : "%12u";

233 
›t
->
oc
 = 
oc_uöt
;

234 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

235 
›t
->
¥öt
 =Örint;

236 
›t
->
ac¸ue
 = 
FALSE
;

239 
›t
->
√xt
 = 
NULL
;

240 
	`add_›ti⁄
(
odb
, 
›t
);

243 *
v¨
 = 
def_vÆ
;

244 
	}
}

248 
	$›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

249 *
«me
,

250 *
desc
,

251 *
v¨s
,

252 
nv¨s
,

253 *
√…
,

254 *
def_vÆ
,

255 
¥öt
,

256 *
f‹m©
,

257 
ac¸ue
)

259 
i
;

260 
›t_›t_t
 *
›t
;

262 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

263 i‡(!
›t
)

264 
	`Áèl
("out of virtual memory");

266 
›t
->
«me
 =Çame;

267 
›t
->
desc
 = desc;

268 
›t
->
nv¨s
 =Çvars;

269 
›t
->
√…
 =Çelt;

270 
›t
->
f‹m©
 = format ? format : "%u";

271 
›t
->
oc
 = 
oc_uöt
;

272 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = 
v¨s
;

273 
›t
->
¥öt
 =Örint;

274 
›t
->
ac¸ue
 =áccrue;

277 
›t
->
√xt
 = 
NULL
;

278 
	`add_›ti⁄
(
odb
, 
›t
);

281 
i
=0; i < *
√…
; i++)

282 
v¨s
[
i
] = 
def_vÆ
[i];

283 
	}
}

287 
	$›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨
,

291 
def_vÆ
,

292 
¥öt
,

293 *
f‹m©
)

295 
›t_›t_t
 *
›t
;

297 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

298 i‡(!
›t
)

299 
	`Áèl
("out of virtual memory");

301 
›t
->
«me
 =Çame;

302 
›t
->
desc
 = desc;

303 
›t
->
nv¨s
 = 1;

304 
›t
->
√…
 = 
NULL
;

305 
›t
->
f‹m©
 = format ? format : "%12.4f";

306 
›t
->
oc
 = 
oc_Êﬂt
;

307 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

308 
›t
->
¥öt
 =Örint;

309 
›t
->
ac¸ue
 = 
FALSE
;

312 
›t
->
√xt
 = 
NULL
;

313 
	`add_›ti⁄
(
odb
, 
›t
);

316 *
v¨
 = 
def_vÆ
;

317 
	}
}

321 
	$›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

322 *
«me
,

323 *
desc
,

324 *
v¨s
,

325 
nv¨s
,

326 *
√…
,

327 *
def_vÆ
,

328 
¥öt
,

329 *
f‹m©
,

330 
ac¸ue
)

332 
i
;

333 
›t_›t_t
 *
›t
;

335 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

336 i‡(!
›t
)

337 
	`Áèl
("out of virtual memory");

339 
›t
->
«me
 =Çame;

340 
›t
->
desc
 = desc;

341 
›t
->
nv¨s
 =Çvars;

342 
›t
->
√…
 =Çelt;

343 
›t
->
f‹m©
 = format ? format : "%.4f";

344 
›t
->
oc
 = 
oc_Êﬂt
;

345 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = 
v¨s
;

346 
›t
->
¥öt
 =Örint;

347 
›t
->
ac¸ue
 =áccrue;

350 
›t
->
√xt
 = 
NULL
;

351 
	`add_›ti⁄
(
odb
, 
›t
);

354 
i
=0; i < *
√…
; i++)

355 
v¨s
[
i
] = 
def_vÆ
[i];

356 
	}
}

360 
	$›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

361 *
«me
,

362 *
desc
,

363 *
v¨
,

364 
def_vÆ
,

365 
¥öt
,

366 *
f‹m©
)

368 
›t_›t_t
 *
›t
;

370 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

371 i‡(!
›t
)

372 
	`Áèl
("out of virtual memory");

374 
›t
->
«me
 =Çame;

375 
›t
->
desc
 = desc;

376 
›t
->
nv¨s
 = 1;

377 
›t
->
√…
 = 
NULL
;

378 
›t
->
f‹m©
 = format ? format : "%12.4f";

379 
›t
->
oc
 = 
oc_doubÀ
;

380 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

381 
›t
->
¥öt
 =Örint;

382 
›t
->
ac¸ue
 = 
FALSE
;

385 
›t
->
√xt
 = 
NULL
;

386 
	`add_›ti⁄
(
odb
, 
›t
);

389 *
v¨
 = 
def_vÆ
;

390 
	}
}

394 
	$›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

395 *
«me
,

396 *
desc
,

397 *
v¨s
,

398 
nv¨s
,

399 *
√…
,

400 *
def_vÆ
,

401 
¥öt
,

402 *
f‹m©
,

403 
ac¸ue
)

405 
i
;

406 
›t_›t_t
 *
›t
;

408 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

409 i‡(!
›t
)

410 
	`Áèl
("out of virtual memory");

412 
›t
->
«me
 =Çame;

413 
›t
->
desc
 = desc;

414 
›t
->
nv¨s
 =Çvars;

415 
›t
->
√…
 =Çelt;

416 
›t
->
f‹m©
 = format ? format : "%.4f";

417 
›t
->
oc
 = 
oc_doubÀ
;

418 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = 
v¨s
;

419 
›t
->
¥öt
 =Örint;

420 
›t
->
ac¸ue
 =áccrue;

423 
›t
->
√xt
 = 
NULL
;

424 
	`add_›ti⁄
(
odb
, 
›t
);

427 
i
=0; i < *
√…
; i++)

428 
v¨s
[
i
] = 
def_vÆ
[i];

429 
	}
}

433 
	$böd_to_íum
(*
°r
,

434 **
em≠
,

435 *
evÆ
,

436 
em≠_sz
,

437 *
ªs
)

439 
i
;

442 
i
=0; i<
em≠_sz
; i++)

444 i‡(!
	`°rcmp
(
°r
, 
em≠
[
i
]))

446 i‡(
evÆ
)

449 *
ªs
 = 
evÆ
[
i
];

454 *
ªs
 = 
i
;

456  
TRUE
;

461 *
ªs
 = -1;

462  
FALSE
;

463 
	}
}

467 
	$böd_to_°r
(
vÆ
,

468 **
em≠
,

469 *
evÆ
,

470 
em≠_sz
)

472 
i
;

474 i‡(
evÆ
)

477 
i
=0; i<
em≠_sz
; i++)

479 i‡(
evÆ
[
i
] =
vÆ
)

482  
em≠
[
i
];

486  
NULL
;

491 i‡(
vÆ
 >
em≠_sz
)

494  
NULL
;

497  
em≠
[
vÆ
];

499 
	}
}

505 
	$›t_ªg_íum
(
›t_odb_t
 *
odb
,

506 *
«me
,

507 *
desc
,

508 *
v¨
,

509 *
def_vÆ
,

510 **
em≠
,

511 *
evÆ
,

512 
em≠_sz
,

513 
¥öt
,

514 *
f‹m©
)

516 
íum_vÆ
;

517 
›t_›t_t
 *
›t
;

519 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

520 i‡(!
›t
)

521 
	`Áèl
("out of virtual memory");

523 
›t
->
«me
 =Çame;

524 
›t
->
desc
 = desc;

525 
›t
->
nv¨s
 = 1;

526 
›t
->
√…
 = 
NULL
;

527 
›t
->
f‹m©
 = format ? format : "%12s";

528 
›t
->
oc
 = 
oc_íum
;

529 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

530 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

531 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

532 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

533 i‡(
def_vÆ
)

535 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

536 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

539 
íum_vÆ
 = 0;

540 
›t
->
¥öt
 =Örint;

541 
›t
->
ac¸ue
 = 
FALSE
;

544 
›t
->
√xt
 = 
NULL
;

545 
	`add_›ti⁄
(
odb
, 
›t
);

548 *
v¨
 = 
íum_vÆ
;

549 
	}
}

555 
	$›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

556 *
«me
,

557 *
desc
,

558 *
v¨s
,

559 
nv¨s
,

560 *
√…
,

561 *
def_vÆ
,

562 **
em≠
,

563 *
evÆ
,

564 
em≠_sz
,

565 
¥öt
,

566 *
f‹m©
,

567 
ac¸ue
)

569 
i
, 
íum_vÆ
;

570 
›t_›t_t
 *
›t
;

572 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

573 i‡(!
›t
)

574 
	`Áèl
("out of virtual memory");

576 
›t
->
«me
 =Çame;

577 
›t
->
desc
 = desc;

578 
›t
->
nv¨s
 =Çvars;

579 
›t
->
√…
 =Çelt;

580 
›t
->
f‹m©
 = format ? format : "%s";

581 
›t
->
oc
 = 
oc_íum
;

582 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

583 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

584 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

585 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

586 i‡(
def_vÆ
)

588 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

589 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

592 
íum_vÆ
 = 0;

593 
›t
->
¥öt
 =Örint;

594 
›t
->
ac¸ue
 =áccrue;

597 
›t
->
√xt
 = 
NULL
;

598 
	`add_›ti⁄
(
odb
, 
›t
);

601 
i
=0; i < *
√…
; i++)

602 
v¨s
[
i
] = 
íum_vÆ
;

603 
	}
}

606 
	#NUM_FLAGS
 28

	)

607 *
	gÊag_em≠
[
NUM_FLAGS
] = {

613 
	gÊag_evÆ
[
NUM_FLAGS
] = {

620 
	$›t_ªg_Êag
(
›t_odb_t
 *
odb
,

621 *
«me
,

622 *
desc
,

623 *
v¨
,

624 
def_vÆ
,

625 
¥öt
,

626 *
f‹m©
)

628 
›t_›t_t
 *
›t
;

630 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

631 i‡(!
›t
)

632 
	`Áèl
("out of virtual memory");

634 
›t
->
«me
 =Çame;

635 
›t
->
desc
 = desc;

636 
›t
->
nv¨s
 = 1;

637 
›t
->
√…
 = 
NULL
;

638 
›t
->
f‹m©
 = format ? format : "%12s";

639 
›t
->
oc
 = 
oc_Êag
;

640 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

641 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

642 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

643 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

644 
›t
->
¥öt
 =Örint;

645 
›t
->
ac¸ue
 = 
FALSE
;

648 
›t
->
√xt
 = 
NULL
;

649 
	`add_›ti⁄
(
odb
, 
›t
);

652 *
v¨
 = 
def_vÆ
;

653 
	}
}

657 
	$›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

658 *
«me
,

659 *
desc
,

660 *
v¨s
,

661 
nv¨s
,

662 *
√…
,

663 *
def_vÆ
,

664 
¥öt
,

665 *
f‹m©
,

666 
ac¸ue
)

668 
i
;

669 
›t_›t_t
 *
›t
;

671 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

672 i‡(!
›t
)

673 
	`Áèl
("out of virtual memory");

675 
›t
->
«me
 =Çame;

676 
›t
->
desc
 = desc;

677 
›t
->
nv¨s
 =Çvars;

678 
›t
->
√…
 =Çelt;

679 
›t
->
f‹m©
 = format ? format : "%s";

680 
›t
->
oc
 = 
oc_Êag
;

681 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

682 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

683 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

684 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

685 
›t
->
¥öt
 =Örint;

686 
›t
->
ac¸ue
 =áccrue;

689 
›t
->
√xt
 = 
NULL
;

690 
	`add_›ti⁄
(
odb
, 
›t
);

693 
i
=0; i < *
√…
; i++)

694 
v¨s
[
i
] = 
def_vÆ
[i];

695 
	}
}

699 
	$›t_ªg_°rög
(
›t_odb_t
 *
odb
,

700 *
«me
,

701 *
desc
,

702 **
v¨
,

703 *
def_vÆ
,

704 
¥öt
,

705 *
f‹m©
)

707 
›t_›t_t
 *
›t
;

709 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

710 i‡(!
›t
)

711 
	`Áèl
("out of virtual memory");

713 
›t
->
«me
 =Çame;

714 
›t
->
desc
 = desc;

715 
›t
->
nv¨s
 = 1;

716 
›t
->
√…
 = 
NULL
;

717 
›t
->
f‹m©
 = format ? format : "%12s";

718 
›t
->
oc
 = 
oc_°rög
;

719 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = var;

720 
›t
->
¥öt
 =Örint;

721 
›t
->
ac¸ue
 = 
FALSE
;

724 
›t
->
√xt
 = 
NULL
;

725 
	`add_›ti⁄
(
odb
, 
›t
);

728 *
v¨
 = 
def_vÆ
;

729 
	}
}

733 
	$›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

734 *
«me
,

735 *
desc
,

736 **
v¨s
,

737 
nv¨s
,

738 *
√…
,

739 **
def_vÆ
,

740 
¥öt
,

741 *
f‹m©
,

742 
ac¸ue
)

744 
i
;

745 
›t_›t_t
 *
›t
;

747 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

748 i‡(!
›t
)

749 
	`Áèl
("out of virtual memory");

751 
›t
->
«me
 =Çame;

752 
›t
->
desc
 = desc;

753 
›t
->
nv¨s
 =Çvars;

754 
›t
->
√…
 =Çelt;

755 
›t
->
f‹m©
 = format ? format : "%s";

756 
›t
->
oc
 = 
oc_°rög
;

757 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = 
v¨s
;

758 
›t
->
¥öt
 =Örint;

759 
›t
->
ac¸ue
 =áccrue;

762 
›t
->
√xt
 = 
NULL
;

763 
	`add_›ti⁄
(
odb
, 
›t
);

766 
i
=0; i < *
√…
; i++)

767 
v¨s
[
i
] = 
def_vÆ
[i];

768 
	}
}

772 
	$¥o˚ss_›ti⁄
(
›t_odb_t
 *
odb
,

773 
ödex
,

774 
¨gc
,

775 **
¨gv
)

777 
˙t
, 
ít
, 
nv¨s
;

778 *
ídp
;

779 
tmp
;

780 
›t_›t_t
 *
›t
;

783 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

785 i‡(!
	`°rcmp
(
›t
->
«me
, 
¨gv
[
ödex
]))

788 i‡(!
›t
)

791 
	`Áèl
("›ti⁄ `%s' i†undeföed", 
¨gv
[
ödex
]);

793 
ödex
++;

796 
›t
->
oc
)

798 
oc_öt
:

800 i‡(
ödex
 >
¨gc


801 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

804 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

806 
˙t
 = 0;

807 i‡(
›t
->
ac¸ue
)

809 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

810 
nv¨s
 = 1;

811 i‡(
ít
 >
›t
->
nv¨s
)

812 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

816 
ít
 = 0;

817 i‡(
›t
->
√…
)

818 *
›t
->
√…
 = 0;

819 
nv¨s
 = 
›t
->nvars;

822 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

823 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

825 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
[
ít
] = 
	`°πﬁ
(
¨gv
[
ödex
], &
ídp
, 0);

826 i‡(*
ídp
)

829 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

830 
¨gv
[
ödex
], 
›t
->
«me
);

833 i‡(
›t
->
√…
)

834 (*
›t
->
√…
)++;

835 
˙t
++; 
ödex
++; 
ít
++;

838 
oc_uöt
:

840 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

843 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

845 
˙t
 = 0;

846 i‡(
›t
->
ac¸ue
)

848 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

849 
nv¨s
 = 1;

850 i‡(
ít
 >
›t
->
nv¨s
)

851 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

855 
ít
 = 0;

856 i‡(
›t
->
√…
)

857 *
›t
->
√…
 = 0;

858 
nv¨s
 = 
›t
->nvars;

861 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

863 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
[
ít
] = 
	`°πoul
(
¨gv
[
ödex
], &
ídp
, 0);

864 i‡(*
ídp
)

867 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

868 
¨gv
[
ödex
], 
›t
->
«me
);

871 i‡(
›t
->
√…
)

872 (*
›t
->
√…
)++;

873 
˙t
++; 
ödex
++; 
ít
++;

876 
oc_Êﬂt
:

878 i‡(
ödex
 >
¨gc


879 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

882 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

884 
˙t
 = 0;

885 i‡(
›t
->
ac¸ue
)

887 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

888 
nv¨s
 = 1;

889 i‡(
ít
 >
›t
->
nv¨s
)

890 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

894 
ít
 = 0;

895 i‡(
›t
->
√…
)

896 *
›t
->
√…
 = 0;

897 
nv¨s
 = 
›t
->nvars;

900 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

901 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

903 
tmp
 = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

904 i‡(*
ídp
)

907 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

908 
¨gv
[
ödex
], 
›t
->
«me
);

910 i‡(
tmp
 < 
FLT_MIN
 ||Åm∞> 
FLT_MAX
)

913 
	`Áèl
("FP over/underflow forárgument `%s' of option `%s'",

914 
¨gv
[
ödex
], 
›t
->
«me
);

917 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
ít
] = ()
tmp
;

918 i‡(
›t
->
√…
)

919 (*
›t
->
√…
)++;

920 
˙t
++; 
ödex
++; 
ít
++;

923 
oc_doubÀ
:

925 i‡(
ödex
 >
¨gc


926 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

929 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

931 
˙t
 = 0;

932 i‡(
›t
->
ac¸ue
)

934 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

935 
nv¨s
 = 1;

936 i‡(
ít
 >
›t
->
nv¨s
)

937 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

941 
ít
 = 0;

942 i‡(
›t
->
√…
)

943 *
›t
->
√…
 = 0;

944 
nv¨s
 = 
›t
->nvars;

947 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

948 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

950 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
ít
] = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

951 i‡(*
ídp
)

954 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

955 
¨gv
[
ödex
], 
›t
->
«me
);

958 i‡(
›t
->
√…
)

959 (*
›t
->
√…
)++;

960 
˙t
++; 
ödex
++; 
ít
++;

963 
oc_íum
:

965 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

968 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

970 
˙t
 = 0;

971 i‡(
›t
->
ac¸ue
)

973 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

974 
nv¨s
 = 1;

975 i‡(
ít
 >
›t
->
nv¨s
)

976 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

980 
ít
 = 0;

981 i‡(
›t
->
√…
)

982 *
›t
->
√…
 = 0;

983 
nv¨s
 = 
›t
->nvars;

986 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

988 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

989 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

990 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

991 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

992 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

995 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

996 
¨gv
[
ödex
], 
›t
->
«me
);

999 i‡(
›t
->
√…
)

1000 (*
›t
->
√…
)++;

1001 
˙t
++; 
ödex
++; 
ít
++;

1004 
oc_Êag
:

1006 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1009 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[0] = 
TRUE
;

1013 
˙t
 = 0;

1014 i‡(
›t
->
ac¸ue
)

1016 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1017 
nv¨s
 = 1;

1018 i‡(
ít
 >
›t
->
nv¨s
)

1019 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1023 
ít
 = 0;

1024 i‡(
›t
->
√…
)

1025 *
›t
->
√…
 = 0;

1026 
nv¨s
 = 
›t
->nvars;

1028 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1030 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

1031 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1032 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1033 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

1034 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

1037 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
] = 
TRUE
;

1043 i‡(
›t
->
√…
)

1044 (*
›t
->
√…
)++;

1045 
˙t
++; 
ödex
++; 
ít
++;

1049 
oc_°rög
:

1051 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1054 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1056 
˙t
 = 0;

1057 i‡(
›t
->
ac¸ue
)

1059 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1060 
nv¨s
 = 1;

1061 i‡(
ít
 >
›t
->
nv¨s
)

1062 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1066 
ít
 = 0;

1067 i‡(
›t
->
√…
)

1068 *
›t
->
√…
 = 0;

1069 
nv¨s
 = 
›t
->nvars;

1072 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1074 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
ít
] = 
¨gv
[
ödex
];

1075 i‡(
›t
->
√…
)

1076 (*
›t
->
√…
)++;

1077 
˙t
++; 
ödex
++; 
ít
++;

1081 
	`∑nic
("bogus option class");

1084  
ödex
;

1085 
	}
}

1088 
¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
);

1089 
dump_c⁄fig
(
›t_odb_t
 *
odb
, *
‚ame
);

1093 
	$__›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1094 
¨gc
,

1095 **
¨gv
,

1096 
dïth
)

1098 
ödex
, 
do_dumpc⁄fig
;

1099 *
dumpc⁄fig_«me
;

1101 
ödex
 = 0;

1102 
do_dumpc⁄fig
 = 
FALSE
;

1103 
dumpc⁄fig_«me
 = 
NULL
;

1105 
ödex
 < 
¨gc
)

1108 
ödex
 < 
¨gc
 && 
¨gv
[index][0] != '-')

1110 i‡(
dïth
 > 0)

1113 
	`Áèl
("orphan `%s'Éncountered during config fileÖrocessing",

1114 
¨gv
[
ödex
]);

1117 i‡(
odb
->
‹ph™_‚
)

1119 i‡(!
odb
->
	`‹ph™_‚
(
ödex
+1, 
¨gc
, 
¨gv
))

1122 
d⁄e_¥o˚ssög
;

1128 
	`Áèl
("‹ph™árgumíà`%s' wa†un˛aimed", 
¨gv
[
ödex
]);

1134 i‡(
ödex
 =
¨gc
)

1137 
d⁄e_¥o˚ssög
;

1142 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-config"))

1145 
ödex
++;

1146 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1149 
	`Áèl
("option `-config'Ñequiresánárgument");

1151 
	`¥o˚ss_fûe
(
odb
, 
¨gv
[
ödex
], 
dïth
);

1152 
ödex
++;

1154 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-dumpconfig"))

1157 
do_dumpc⁄fig
 = 
TRUE
;

1159 
ödex
++;

1160 i‡(
ödex
 >
¨gc


1161 || (
¨gv
[
ödex
][0] == '-' &&árgv[index][1] != '\0'))

1164 
	`Áèl
("option `-dumpconfig'Ñequiresánárgument");

1166 
dumpc⁄fig_«me
 = 
¨gv
[
ödex
];

1167 
ödex
++;

1172 
ödex
 = 
	`¥o˚ss_›ti⁄
(
odb
, index, 
¨gc
, 
¨gv
);

1175 
d⁄e_¥o˚ssög
:

1177 i‡(
do_dumpc⁄fig
)

1178 
	`dump_c⁄fig
(
odb
, 
dumpc⁄fig_«me
);

1179 
	}
}

1183 
	$›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1184 
¨gc
,

1185 **
¨gv
)

1188 i‡(
¨gc
 < 2)

1192 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
-1, 
¨gv
+1, 0);

1193 
	}
}

1196 
	#MAX_LINE_ARGS
 256

	)

1197 
	#MAX_FILENAME_LEN
 1024

	)

1199 
	$¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
)

1201 
œrgc
;

1202 *
œrgv
[
MAX_LINE_ARGS
];

1203 
löe
[1024], *
p
, *
q
;

1204 
cwd
[
MAX_FILENAME_LEN
];

1205 *
hódî
;

1206 
FILE
 *
fd
;

1208 
fd
 = 
	`f›í
(
‚ame
, "r");

1209 i‡(!
fd
)

1210 
	`Áèl
("couldÇŸ o≥¿c⁄figuøti⁄ fûê`%s'", 
‚ame
);

1212 i‡(!
	`gëcwd
(
cwd
, 
MAX_FILENAME_LEN
))

1213 
	`Áèl
("can't get cwd");

1215 
hódî
 = 
	`°ºchr
(
‚ame
, '/');

1216 i‡(
hódî
 !
NULL
)

1219 *
hódî
 = '\0';

1220 i‡(
	`chdú
(
‚ame
) == -1)

1221 
	`Áèl
("ˇn'àchdúÅÿ%s\n", 
‚ame
);

1222 *
hódî
 = '/';

1225 !
	`„of
(
fd
))

1228 
	`Ârötf
(
°dîr
, "!feof(fd): %d, strlen(line): %d,Üine: %s\n",

1229 !
	`„of
(
fd
), 
	`°æí
(
löe
),Üine);

1232 
löe
[0] = '\n';

1234 
	`fgës
(
löe
, 1024, 
fd
);

1235 i‡(
löe
[0] == '\0' ||Üine[0] == '\n')

1237 i‡(
löe
[
	`°æí
(line)-1] == '\n')

1238 
löe
[
	`°æí
(line)-1] = '\0';

1241 
œrgc
 = 0; 
p
 = 
löe
;

1242 *
p
)

1245 *
p
 != '\0' && (*p == ' ' || *p == '\t'))

1246 
p
++;

1249 i‡(*
p
 == '\0' || *p == '#')

1253 
q
 = 
p
;

1254 *
q
 != '\0' && *q != ' ' && *q != '\t')

1255 
q
++;

1256 i‡(*
q
)

1258 *
q
 = '\0';

1259 
q
++;

1263 
œrgv
[
œrgc
++] = 
	`my°rdup
(
p
);

1265 i‡(
œrgc
 =
MAX_LINE_ARGS
)

1267 i‡(
	`chdú
(
cwd
) == -1)

1268 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1269 
	`Áèl
("›ti⁄Üöêtoÿcom∂ex i¿fûê`%s'", 
‚ame
);

1273 
p
 = 
q
;

1277 i‡(
œrgc
 > 0)

1278 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
œrgc
, 
œrgv
, 
dïth
+1);

1282 
	`f˛o£
(
fd
);

1284 i‡(
	`chdú
(
cwd
) == -1)

1285 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1286 
	}
}

1290 
	$›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

1291 
FILE
 *
fd
)

1293 
i
, 
√…
;

1295 
›t
->
oc
)

1297 
oc_öt
:

1298 i‡(
›t
->
√…
)

1299 
√…
 = *(
›t
->nelt);

1301 
√…
 = 1;

1302 
i
=0; i<
√…
; i++)

1304 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_öt
.
v¨
[
i
]);

1305 
	`Ârötf
(
fd
, " ");

1308 
oc_uöt
:

1309 i‡(
›t
->
√…
)

1310 
√…
 = *(
›t
->nelt);

1312 
√…
 = 1;

1313 
i
=0; i<
√…
; i++)

1315 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_uöt
.
v¨
[
i
]);

1316 
	`Ârötf
(
fd
, " ");

1319 
oc_Êﬂt
:

1320 i‡(
›t
->
√…
)

1321 
√…
 = *(
›t
->nelt);

1323 
√…
 = 1;

1324 
i
=0; i<
√…
; i++)

1326 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, ()›t->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
i
]);

1327 
	`Ârötf
(
fd
, " ");

1330 
oc_doubÀ
:

1331 i‡(
›t
->
√…
)

1332 
√…
 = *(
›t
->nelt);

1334 
√…
 = 1;

1335 
i
=0; i<
√…
; i++)

1337 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
i
]);

1338 
	`Ârötf
(
fd
, " ");

1341 
oc_íum
:

1342 i‡(
›t
->
√…
)

1343 
√…
 = *(
›t
->nelt);

1345 
√…
 = 1;

1346 
i
=0; i<
√…
; i++)

1348 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1349 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1350 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1351 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1352 i‡(!
e°r
)

1353 
	`∑nic
("couldÇot bindÉnum `%d' for option `%s'",

1354 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1356 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1357 
	`Ârötf
(
fd
, " ");

1360 
oc_Êag
:

1361 i‡(
›t
->
√…
)

1362 
√…
 = *(
›t
->nelt);

1364 
√…
 = 1;

1365 
i
=0; i<
√…
; i++)

1367 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1368 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1369 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1370 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1371 i‡(!
e°r
)

1372 
	`∑nic
("couldÇot bind boolean `%d' for option `%s'",

1373 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1375 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1376 
	`Ârötf
(
fd
, " ");

1379 
oc_°rög
:

1380 i‡(!
›t
->
nv¨s
)

1382 
	`Ârötf
(
fd
, "%12s ", "<null>");

1385 i‡(
›t
->
√…
)

1386 
√…
 = *(
›t
->nelt);

1388 
√…
 = 1;

1389 i‡(
√…
 == 0)

1391 
	`Ârötf
(
fd
, "%12s ", "<null>");

1396 
i
=0; i<
√…
; i++)

1398 
	`Ârötf
(
fd
, 
›t
->
f‹m©
,

1399 (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1400 ? 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1402 
	`Ârötf
(
fd
, " ");

1407 
	`∑nic
("bogus option class");

1409 
	}
}

1413 
	$¥öt_›ti⁄_hódî
(
›t_odb_t
 *
odb
,

1414 
FILE
 *
fd
)

1416 i‡(!
odb
->
hódî
)

1419 
	`Ârötf
(
fd
, "\n%s\n", 
odb
->
hódî
);

1420 
	}
}

1424 
	$¥öt_›ti⁄_nŸes
(
›t_odb_t
 *
odb
,

1425 
FILE
 *
fd
)

1427 
›t_nŸe_t
 *
nŸe
;

1429 i‡(!
odb
->
nŸes
)

1432 
	`Ârötf
(
fd
, "\n");

1433 
nŸe
=
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸeÚŸe->
√xt
)

1434 
	`Ârötf
(
fd
, "%s\n", 
nŸe
->note);

1435 
	`Ârötf
(
fd
, "\n");

1436 
	}
}

1439 
›t_›t_t
 
	gdumpc⁄fig_›t
 =

1440 { 
NULL
, "-dumpconfig", "dump configurationÅoá file",

1441 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1442 
›t_›t_t
 
	gc⁄fig_›t
 =

1443 { &
dumpc⁄fig_›t
, "-config", "load configuration fromá file",

1444 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1445 
›t_›t_t
 *
	gbuûtö_›ti⁄s
 = &
c⁄fig_›t
;

1449 
	$›t_nuŒ_°rög
(
›t_›t_t
 *
›t
)

1451  (
›t
 !
NULL


1452 && 
›t
->
oc
 =
oc_°rög


1453 && (
›t
->
nv¨s
 == 0

1454 || (
›t
->
√…
 !
NULL
 && *opt->nelt == 0)

1455 || (
›t
->
√…
 =
NULL


1456 && (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 =
NULL


1457 || 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[0] =
NULL
))));

1458 
	}
}

1462 
	$›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

1463 
FILE
 *
fd
,

1464 
ãr£
,

1465 
nŸes
)

1467 
›t_›t_t
 *
›t
;

1469 i‡(!
odb
)

1476 i‡(
nŸes
)

1477 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1480 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1482 i‡(
ãr£
)

1483 
	`Ârötf
(
fd
, "# %-27†# %s\n", 
›t
->
«me
, o±->
desc
);

1486 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1487 
	`Ârötf
(
fd
, "# %-22s\n\n", 
›t
->
«me
);

1492 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1494 i‡(
ãr£
)

1496 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1497 
	`Ârötf
(
fd
, "# %-14†", 
›t
->
«me
);

1499 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1500 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1501 i‡(
›t
->
desc
)

1502 
	`Ârötf
(
fd
, "# %-22s", 
›t
->
desc
);

1503 
	`Ârötf
(
fd
, "\n");

1507 i‡(
›t
->
desc
)

1508 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1509 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1510 
	`Ârötf
(
fd
, "# %-20†", 
›t
->
«me
);

1512 
	`Ârötf
(
fd
, "%-22†", 
›t
->
«me
);

1513 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1514 
	`Ârötf
(
fd
, "\n\n");

1519 i‡(
nŸes
)

1520 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1521 
	}
}

1525 
	$¥öt_hñp
(
›t_›t_t
 *
›t
,

1526 
FILE
 *
fd
)

1528 *
s
 = 
NULL
;

1530 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1531 
›t
->
oc
)

1533 
oc_öt
:

1534 i‡(
›t
->
nv¨s
 == 1)

1535 
s
 = "<int>";

1537 
s
 = "<intÜist...>";

1539 
oc_uöt
:

1540 i‡(
›t
->
nv¨s
 == 1)

1541 
s
 = "<uint>";

1543 
s
 = "<uintÜist...>";

1545 
oc_Êﬂt
:

1546 i‡(
›t
->
nv¨s
 == 1)

1547 
s
 = "<float>";

1549 
s
 = "<floatÜist...>";

1551 
oc_doubÀ
:

1552 i‡(
›t
->
nv¨s
 == 1)

1553 
s
 = "<double>";

1555 
s
 = "<doubleÜist...>";

1557 
oc_íum
:

1558 i‡(
›t
->
nv¨s
 == 1)

1559 
s
 = "<enum>";

1561 
s
 = "<enumÜist...>";

1563 
oc_Êag
:

1564 i‡(
›t
->
nv¨s
 == 1)

1565 
s
 = "<true|false>";

1567 
s
 = "<true|falseÜist...>";

1569 
oc_°rög
:

1570 i‡(
›t
->
nv¨s
 == 0 || opt->nvars == 1)

1571 
s
 = "<string>";

1573 
s
 = "<stringÜist...>";

1576 
	`∑nic
("bogus option class");

1578 
	`Ârötf
(
fd
, "%-16†# ", 
s
);

1579 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1580 
	`Ârötf
(
fd
, "# %-22s\n", 
›t
->
desc
);

1581 
	}
}

1585 
	$›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

1586 
FILE
 *
fd
)

1588 
›t_›t_t
 *
›t
;

1591 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1593 
	`Ârötf
(
fd
, "#\n");

1594 
	`Ârötf
(
fd
, "%-16s %-16s # %12s # %-22s\n",

1596 
	`Ârötf
(
fd
, "#\n");

1599 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1600 
	`¥öt_hñp
(
›t
, 
fd
);

1603 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1604 
	`¥öt_hñp
(
›t
, 
fd
);

1607 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1608 
	}
}

1612 
	$dump_c⁄fig
(
›t_odb_t
 *
odb
,

1613 *
‚ame
)

1615 
FILE
 *
fd
;

1618 i‡(!
	`°rcmp
(
‚ame
, "-"))

1619 
fd
 = 
°dîr
;

1622 
fd
 = 
	`f›í
(
‚ame
, "w");

1623 i‡(!
fd
)

1624 
	`Áèl
("couldÇŸ o≥¿fûê`%s'", 
‚ame
);

1628 
	`›t_¥öt_›ti⁄s
(
odb
, 
fd
, 
FALSE
, FALSE);

1631 i‡(
fd
 !
°dout
 && fd !
°dîr
)

1632 
	`f˛o£
(
fd
);

1633 
	}
}

1636 
›t_›t_t
 *

1637 
	$›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

1638 *
›t_«me
)

1640 
›t_›t_t
 *
›t
;

1643 
›t
 = 
buûtö_›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1645 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1648  
›t
;

1653 
›t
 = 
odb
->
›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1655 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1658  
›t
;

1662  
NULL
;

1663 
	}
}

1667 
	$›t_ªg_hódî
(
›t_odb_t
 *
odb
,

1668 *
hódî
)

1670 
odb
->
hódî
 = header;

1671 
	}
}

1675 
	$›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

1676 *
nŸe_°r
)

1678 
›t_nŸe_t
 *
nŸe
, *
ñt
, *
¥ev
;

1680 
nŸe
 = (
›t_nŸe_t
 *)
	`ˇŒoc
(1, (opt_note_t));

1681 i‡(!
nŸe
)

1682 
	`Áèl
("out of virtual memory");

1685 
nŸe
->
√xt
 = 
NULL
;

1686 
nŸe
->nŸê
nŸe_°r
;

1689 
¥ev
=
NULL
, 
ñt
=
odb
->
nŸes
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

1692 i‡(
¥ev
 !
NULL
)

1693 
¥ev
->
√xt
 = 
nŸe
;

1695 
odb
->
nŸes
 = 
nŸe
;

1696 
nŸe
->
√xt
 = 
NULL
;

1697 
	}
}

1700 #ifde‡
TEST


1703 
	$f_‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

1705 
	`Ârötf
(
°dout
, "‹ph™†dëe˘edáàödex %d,árg = `%s'...\n", 
i
, 
¨gv
[i]);

1708  
FALSE
;

1709 
	}
}

1711 
	#MAX_VARS
 4

	)

1713 
	$maö
(
¨gc
, **
¨gv
)

1715 
›t_odb_t
 *
odb
;

1717 
n_öt_v¨s
, 
n_uöt_v¨s
, 
n_Êﬂt_v¨s
, 
n_doubÀ_v¨s
;

1718 
n_íum_v¨s
, 
n_íum_evÆ_v¨s
, 
n_Êag_v¨s
, 
n_°rög_v¨s
;

1719 
öt_v¨
, 
öt_v¨s
[
MAX_VARS
];

1720 
uöt_v¨
, 
uöt_v¨s
[
MAX_VARS
];

1721 
Êﬂt_v¨
, 
Êﬂt_v¨s
[
MAX_VARS
];

1722 
doubÀ_v¨
, 
doubÀ_v¨s
[
MAX_VARS
];

1723 
Êag_v¨
, 
Êag_v¨s
[
MAX_VARS
];

1724 *
°rög_v¨
, *
°rög_v¨s
[
MAX_VARS
];

1726 
	eëe°_t
 { 
íum_a
, 
íum_b
, 
íum_c
, 
íum_d
, 
íum_NUM
 };

1727 *
íum_em≠
[
íum_NUM
] =

1729 
íum_evÆ
[
íum_NUM
] =

1730 { 
íum_d
, 
íum_c
, 
íum_b
, 
íum_a
 };

1731 
íum_v¨
, 
íum_v¨s
[
MAX_VARS
];

1732 
íum_evÆ_v¨
, 
íum_evÆ_v¨s
[
MAX_VARS
];

1735 
odb
 = 
	`›t_√w
(
f_‹ph™_‚
);

1738 
	`›t_ªg_öt
(
odb
, "-opt:int", "This isán integer option.",

1739 &
öt_v¨
, 1, 
TRUE
, 
NULL
);

1740 
	`›t_ªg_öt_li°
(
odb
, "-opt:int:list", "This isán integerÜist option.",

1741 
öt_v¨s
, 
MAX_VARS
, &
n_öt_v¨s
, 2,

1742  
TRUE
, 
NULL
);

1743 
	`›t_ªg_uöt
(
odb
, "-opt:uint", "This isán unsigned integer option.",

1744 &
uöt_v¨
, 3, 
TRUE
, 
NULL
);

1745 
	`›t_ªg_uöt_li°
(
odb
, "-opt:uint:list",

1747 
uöt_v¨s
, 
MAX_VARS
, &
n_uöt_v¨s
, 4,

1748  
TRUE
, 
NULL
);

1749 
	`›t_ªg_Êﬂt
(
odb
, "-opt:float", "This isá float option.",

1750 &
Êﬂt_v¨
, 5.0, 
TRUE
, 
NULL
);

1751 
	`›t_ªg_Êﬂt_li°
(
odb
, "-opt:float:list", "This isá floatÜist option.",

1752 
Êﬂt_v¨s
, 
MAX_VARS
, &
n_Êﬂt_v¨s
, 6.0,

1753  
TRUE
, 
NULL
);

1754 
	`›t_ªg_doubÀ
(
odb
, "-opt:double", "This isá double option.",

1755 &
doubÀ_v¨
, 7.0, 
TRUE
, 
NULL
);

1756 
	`›t_ªg_doubÀ_li°
(
odb
, "-opt:double:list", "This isá doubleÜist option.",

1757 
doubÀ_v¨s
, 
MAX_VARS
, &
n_doubÀ_v¨s
, 8.0,

1758  
TRUE
, 
NULL
);

1759 
	`›t_ªg_íum
(
odb
, "-opt:enum", "This isánÉnumeration option.",

1760 &
íum_v¨
, "íum_a", 
íum_em≠
, 
NULL
, 
íum_NUM
,

1761  
TRUE
, 
NULL
);

1762 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:list", "This isáÉnumÜist option.",

1763 
íum_v¨s
, 
MAX_VARS
, &
n_íum_v¨s
, "enum_b",

1764 
íum_em≠
, 
NULL
, 
íum_NUM
,

1765  
TRUE
, 
NULL
);

1766 
	`›t_ªg_íum
(
odb
, "-opt:enum:eval", "This isánÉnumeration option w/eval.",

1767 &
íum_evÆ_v¨
, "íum_b", 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1768  
TRUE
, 
NULL
);

1769 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:eval:list",

1771 
íum_evÆ_v¨s
, 
MAX_VARS
, &
n_íum_evÆ_v¨s
, "enum_a",

1772 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1773  
TRUE
, 
NULL
);

1774 
	`›t_ªg_Êag
(
odb
, "-opt:flag", "This isá boolean flag option.",

1775 &
Êag_v¨
, 
FALSE
, 
TRUE
, 
NULL
);

1776 
	`›t_ªg_Êag_li°
(
odb
, "-opt:flag:list",

1778 
Êag_v¨s
, 
MAX_VARS
, &
n_Êag_v¨s
, 
TRUE
,

1779  
TRUE
, 
NULL
);

1780 
	`›t_ªg_°rög
(
odb
, "-opt:string", "This isá string option.",

1781 &
°rög_v¨
, "a:string",

1782  
TRUE
, 
NULL
);

1783 
	`›t_ªg_°rög_li°
(
odb
, "-opt:string:list", "This isá stringÜist option.",

1784 
°rög_v¨s
, 
MAX_VARS
, &
n_°rög_v¨s
, "another:string",

1785  
TRUE
, 
NULL
);

1788 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

1791 
	`Ârötf
(
°dout
, "## Current Option Values ##\n");

1792 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dout
, 
FALSE
, 
TRUE
);

1795 
	`›t_dñëe
(
odb
);

1796 
	`exô
(0);

1797 
	}
}

	@options.h

52 #i‚de‡
OPTIONS_H


53 
	#OPTIONS_H


	)

67 
	e›t_˛ass_t
 {

68 
	moc_öt
 = 0,

69 
	moc_uöt
,

70 
	moc_Êﬂt
,

71 
	moc_doubÀ
,

72 
	moc_íum
,

73 
	moc_Êag
,

74 
	moc_°rög
,

75 
	moc_NUM


79 
	s›t_›t_t
 {

80 
›t_›t_t
 *
	m√xt
;

81 *
	m«me
;

82 *
	mdesc
;

83 
	mnv¨s
;

84 *
	m√…
;

85 *
	mf‹m©
;

86 
	m¥öt
;

87 
	mac¸ue
;

88 
›t_˛ass_t
 
	moc
;

89 
	u›t_v¨ü¡_t
 {

91 
	s›t_f‹_öt_t
 {

92 *
	mv¨
;

93 } 
	mf‹_öt
;

95 
	s›t_f‹_uöt_t
 {

96 *
	mv¨
;

97 } 
	mf‹_uöt
;

99 
	s›t_f‹_Êﬂt_t
 {

100 *
	mv¨
;

101 } 
	mf‹_Êﬂt
;

103 
	s›t_f‹_doubÀ_t
 {

104 *
	mv¨
;

105 } 
	mf‹_doubÀ
;

107 
	s›t_f‹_íum_t
 {

108 *
	mv¨
;

109 **
	mem≠
;

110 *
	mevÆ
;

111 
	mem≠_sz
;

112 } 
	mf‹_íum
;

114 
	s›t_f‹_°rög_t
 {

115 **
	mv¨
;

116 } 
	mf‹_°rög
;

117 } 
	mv¨ü¡
;

123 (*
	t‹ph™_‚_t
)(
	ti
,

124 
	t¨gc
,

125 **
	t¨gv
);

129 
	s›t_nŸe_t
 {

130 
›t_nŸe_t
 *
	m√xt
;

131 *
	mnŸe
;

135 
	s›t_odb_t
 {

136 
›t_›t_t
 *
	m›ti⁄s
;

137 
‹ph™_‚_t
 
	m‹ph™_‚
;

138 *
	mhódî
;

139 
›t_nŸe_t
 *
	mnŸes
;

143 
›t_odb_t
 *

144 
›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
);

148 
›t_dñëe
(
›t_odb_t
 *
odb
);

152 
›t_ªg_öt
(
›t_odb_t
 *
odb
,

153 *
«me
,

154 *
desc
,

155 *
v¨
,

156 
def_vÆ
,

157 
¥öt
,

158 *
f‹m©
);

162 
›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

163 *
«me
,

164 *
desc
,

165 *
v¨s
,

166 
nv¨s
,

167 *
√…
,

168 *
def_vÆ
,

169 
¥öt
,

170 *
f‹m©
,

171 
ac¸ue
);

175 
›t_ªg_uöt
(
›t_odb_t
 *
odb
,

176 *
«me
,

177 *
desc
,

178 *
v¨
,

179 
def_vÆ
,

180 
¥öt
,

181 *
f‹m©
);

185 
›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

186 *
«me
,

187 *
desc
,

188 *
v¨s
,

189 
nv¨s
,

190 *
√…
,

191 *
def_vÆ
,

192 
¥öt
,

193 *
f‹m©
,

194 
ac¸ue
);

198 
›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

199 *
«me
,

200 *
desc
,

201 *
v¨
,

202 
def_vÆ
,

203 
¥öt
,

204 *
f‹m©
);

208 
›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

209 *
«me
,

210 *
desc
,

211 *
v¨s
,

212 
nv¨s
,

213 *
√…
,

214 *
def_vÆ
,

215 
¥öt
,

216 *
f‹m©
,

217 
ac¸ue
);

221 
›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

222 *
«me
,

223 *
desc
,

224 *
v¨
,

225 
def_vÆ
,

226 
¥öt
,

227 *
f‹m©
);

231 
›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

232 *
«me
,

233 *
desc
,

234 *
v¨s
,

235 
nv¨s
,

236 *
√…
,

237 *
def_vÆ
,

238 
¥öt
,

239 *
f‹m©
,

240 
ac¸ue
);

246 
›t_ªg_íum
(
›t_odb_t
 *
odb
,

247 *
«me
,

248 *
desc
,

249 *
v¨
,

250 *
def_vÆ
,

251 **
em≠
,

252 *
evÆ
,

253 
em≠_sz
,

254 
¥öt
,

255 *
f‹m©
);

261 
›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

262 *
«me
,

263 *
desc
,

264 *
v¨s
,

265 
nv¨s
,

266 *
√…
,

267 *
def_vÆ
,

268 **
em≠
,

269 *
evÆ
,

270 
em≠_sz
,

271 
¥öt
,

272 *
f‹m©
,

273 
ac¸ue
);

277 
›t_ªg_Êag
(
›t_odb_t
 *
odb
,

278 *
«me
,

279 *
desc
,

280 *
v¨
,

281 
def_vÆ
,

282 
¥öt
,

283 *
f‹m©
);

287 
›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

288 *
«me
,

289 *
desc
,

290 *
v¨s
,

291 
nv¨s
,

292 *
√…
,

293 *
def_vÆ
,

294 
¥öt
,

295 *
f‹m©
,

296 
ac¸ue
);

300 
›t_ªg_°rög
(
›t_odb_t
 *
odb
,

301 *
«me
,

302 *
desc
,

303 **
v¨
,

304 *
def_vÆ
,

305 
¥öt
,

306 *
f‹m©
);

310 
›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

311 *
«me
,

312 *
desc
,

313 **
v¨s
,

314 
nv¨s
,

315 *
√…
,

316 **
def_vÆ
,

317 
¥öt
,

318 *
f‹m©
,

319 
ac¸ue
);

323 
›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

324 
¨gc
,

325 **
¨gv
);

329 
›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

330 
FILE
 *
fd
);

334 
›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

335 
FILE
 *
fd
,

336 
ãr£
,

337 
nŸes
);

341 
›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

342 
FILE
 *
fd
);

345 
›t_›t_t
 *

346 
›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

347 *
›t_«me
);

351 
›t_ªg_hódî
(
›t_odb_t
 *
odb
,

352 *
hódî
);

356 
›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

357 *
nŸe
);

	@ptrace.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ønge.h
"

59 
	~"±ø˚.h
"

62 
FILE
 *
	g±ø˚_outfd
 = 
NULL
;

65 
	g±ø˚_a˘ive
 = 
FALSE
;

68 
ønge_ønge_t
 
	g±ø˚_ønge
;

71 
	g±ø˚_⁄eshŸ
 = 
FALSE
;

75 
	$±ø˚_›í
(*
‚ame
,

76 *
ønge
)

78 *
îr°r
;

81 i‡(!
ønge
)

84 
îr°r
 = 
	`ønge_∑r£_ønge
(":", &
±ø˚_ønge
);

85 i‡(
îr°r
)

86 
	`∑nic
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

87 
±ø˚_a˘ive
 = 
TRUE
;

91 
îr°r
 = 
	`ønge_∑r£_ønge
(
ønge
, &
±ø˚_ønge
);

92 i‡(
îr°r
)

93 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

94 
±ø˚_a˘ive
 = 
FALSE
;

97 i‡(
±ø˚_ønge
.
°¨t
.
±y≥
 !±ø˚_ønge.
íd
.ptype)

98 
	`Áèl
("rangeÉndpointsáreÇot ofÅhe sameÅype");

101 i‡(!
‚ame
 || !
	`°rcmp
(fname, "-") || !strcmp(fname, "stderr"))

102 
±ø˚_outfd
 = 
°dîr
;

103 i‡(!
	`°rcmp
(
‚ame
, "stdout"))

104 
±ø˚_outfd
 = 
°dout
;

107 
±ø˚_outfd
 = 
	`f›í
(
‚ame
, "w");

108 i‡(!
±ø˚_outfd
)

109 
	`Áèl
("ˇ¬Ÿ o≥¿pùëø˚ ouçuàfûê`%s'", 
‚ame
);

111 
	}
}

115 
	$±ø˚_˛o£
()

117 i‡(
±ø˚_outfd
 !
NULL
 &&Öåa˚_outfd !
°dîr
 &&Öåa˚_outfd !
°dout
)

118 
	`f˛o£
(
±ø˚_outfd
);

119 
	}
}

123 
	$__±ø˚_√wö°
(
i£q
,

124 
md_ö°_t
 
ö°
,

125 
md_addr_t
 
pc
,

126 
md_addr_t
 
addr
)

128 
	`myÂrötf
(
±ø˚_outfd
, "+ %u 0x%08∞0x%08∞", 
i£q
, 
pc
, 
addr
);

129 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
±ø˚_outfd
);

130 
	`Ârötf
(
±ø˚_outfd
, "\n");

132 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

133 
	`fÊush
(
±ø˚_outfd
);

134 
	}
}

138 
	$__±ø˚_√wu›
(
i£q
,

139 *
u›_desc
,

140 
md_addr_t
 
pc
,

141 
md_addr_t
 
addr
)

143 
	`myÂrötf
(
±ø˚_outfd
,

144 "+ %u 0x%08∞0x%08∞[%s]\n", 
i£q
, 
pc
, 
addr
, 
u›_desc
);

146 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

147 
	`fÊush
(
±ø˚_outfd
);

148 
	}
}

152 
	$__±ø˚_ídö°
(
i£q
)

154 
	`Ârötf
(
±ø˚_outfd
, "- %u\n", 
i£q
);

156 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

157 
	`fÊush
(
±ø˚_outfd
);

158 
	}
}

162 
	$__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
)

164 
	`Ârötf
(
±ø˚_outfd
, "@ %.0f\n", ()
cy˛e
);

166 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

167 
	`fÊush
(
±ø˚_outfd
);

168 
	}
}

172 
	$__±ø˚_√w°age
(
i£q
,

173 *
p°age
,

174 
≥víts
)

176 
	`Ârötf
(
±ø˚_outfd
, "* %u %†0x%08x\n", 
i£q
, 
p°age
, 
≥víts
);

178 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

179 
	`fÊush
(
±ø˚_outfd
);

180 
	}
}

	@ptrace.h

52 #i‚de‡
PTRACE_H


53 
	#PTRACE_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ønge.h
"

78 
	#PST_IFETCH
 "IF"

	)

79 
	#PST_DISPATCH
 "DA"

	)

80 
	#PST_EXECUTE
 "EX"

	)

81 
	#PST_WRITEBACK
 "WB"

	)

82 
	#PST_COMMIT
 "CT"

	)

85 
	#PEV_CACHEMISS
 0x00000001

	)

86 
	#PEV_TLBMISS
 0x00000002

	)

87 
	#PEV_MPOCCURED
 0x00000004

	)

88 
	#PEV_MPDETECT
 0x00000008

	)

89 
	#PEV_AGEN
 0x00000010

	)

92 
FILE
 *
±ø˚_outfd
;

95 
±ø˚_a˘ive
;

98 
ønge_ønge_t
 
±ø˚_ønge
;

101 
±ø˚_⁄eshŸ
;

105 
±ø˚_›í
(*
ønge
,

106 *
‚ame
);

110 
±ø˚_˛o£
();

114 
	#±ø˚_check_a˘ive
(
PC
, 
ICNT
, 
CYCLE
) \

115 ((
±ø˚_outfd
 !
NULL
 \

116 && !
	`ønge_cmp_ønge1
(&
±ø˚_ønge
, (
PC
), (
ICNT
), (
CYCLE
))) \

117 ? (!
±ø˚_⁄eshŸ
 ? (
±ø˚_a˘ive
 =Öåa˚_⁄eshŸ = 
TRUE
Ë: 
FALSE
)\

118 : (
±ø˚_a˘ive
 = 
FALSE
))

	)

121 
	#±ø˚_√wö°
(
A
,
B
,
C
,
D
) \

122 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wö°
((
A
),(
B
),(
C
),(
D
))

	)

123 
	#±ø˚_√wu›
(
A
,
B
,
C
,
D
) \

124 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wu›
((
A
),(
B
),(
C
),(
D
))

	)

125 
	#±ø˚_ídö°
(
A
) \

126 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_ídö°
((
A
))

	)

127 
	#±ø˚_√wcy˛e
(
A
) \

128 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√wcy˛e
((
A
))

	)

129 
	#±ø˚_√w°age
(
A
,
B
,
C
) \

130 i‡(
±ø˚_a˘ive
Ë
	`__±ø˚_√w°age
((
A
),(
B
),(
C
))

	)

132 
	#±ø˚_a˘ive
(
A
,
I
,
C
) \

133 (
±ø˚_outfd
 !
NULL
 && !
	`ønge_cmp_ønge
(&
±ø˚_ønge
, (
A
), (
I
), (
C
)))

	)

137 
__±ø˚_√wö°
(
i£q
,

138 
md_ö°_t
 
ö°
,

139 
md_addr_t
 
pc
,

140 
md_addr_t
 
addr
);

144 
__±ø˚_√wu›
(
i£q
,

145 *
u›_desc
,

146 
md_addr_t
 
pc
,

147 
md_addr_t
 
addr
);

151 
__±ø˚_ídö°
(
i£q
);

155 
__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
);

159 
__±ø˚_√w°age
(
i£q
,

160 *
p°age
,

161 
≥víts
);

	@range.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<î∫o.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"symbﬁ.h
"

61 
	~"lﬂdî.h
"

62 
	~"ønge.h
"

66 
	$ønge_∑r£_pos
(*
p°r
,

67 
ønge_pos_t
 *
pos
)

69 *
s
, *
ídp
;

70 
sym_sym_t
 *
sym
;

73 i‡(
p°r
[0] == '@')

76 
pos
->
±y≥
 = 
±_addr
;

77 
s
 = 
p°r
 + 1;

79 i‡(
p°r
[0] == '#')

82 
pos
->
±y≥
 = 
±_cy˛e
;

83 
s
 = 
p°r
 + 1;

88 
pos
->
±y≥
 = 
±_ö°
;

89 
s
 = 
p°r
;

93 
î∫o
 = 0;

94 
pos
->po†(
cou¡î_t
)
	`°πoul
(
s
, &
ídp
, 0);

95 i‡(!
î∫o
 && !*
ídp
)

98  
NULL
;

102 
î∫o
 = 0;

103 
pos
->po†(
cou¡î_t
)
	`°πod
(
s
, &
ídp
);

104 i‡(!
î∫o
 && !*
ídp
)

108  
NULL
;

112 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

113 
sym
 = 
	`sym_böd_«me
(
s
, 
NULL
, 
sdb_™y
);

114 i‡(
sym
 !
NULL
)

116 
pos
->po†(
cou¡î_t
)
sym
->
addr
;

117  
NULL
;

122 
	}
}

126 
	$ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

127 
FILE
 *
°ªam
)

129 
pos
->
±y≥
)

131 
±_addr
:

132 
	`myÂrötf
(
°ªam
, "@0x%08p", (
md_addr_t
)
pos
->pos);

134 
±_ö°
:

135 
	`Ârötf
(
°ªam
, "%.0f", ()
pos
->pos);

137 
±_cy˛e
:

138 
	`Ârötf
(
°ªam
, "#%.0f", ()
pos
->pos);

141 
	`∑nic
("bogusÉxecutionÖositionÅype");

143 
	}
}

147 
	$ønge_∑r£_ønge
(*
r°r
,

148 
ønge_ønge_t
 *
ønge
)

150 *
pos1
, *
pos2
, *
p
, 
buf
[512], *
îr°r
;

153 
	`°r˝y
(
buf
, 
r°r
);

154 
pos1
 = 
buf
;

157 
p
 = 
buf
;

158 *
p
 != ':' && *p != '\0')

160 
p
++;

162 i‡(*
p
 != ':')

164 *
p
 = '\0';

167 
pos2
 = 
p
 + 1;

170 i‡(*
pos1
 && *pos1 != ':')

172 
îr°r
 = 
	`ønge_∑r£_pos
(
pos1
, &
ønge
->
°¨t
);

173 i‡(
îr°r
)

174  
îr°r
;

179 
ønge
->
°¨t
.
±y≥
 = 
±_ö°
;

180 
ønge
->
°¨t
.
pos
 = 0;

184 i‡(*
pos2
)

186 i‡(*
pos2
 == '+')

188 
dñè
;

189 *
ídp
;

192 
î∫o
 = 0;

193 
dñè
 = 
	`°πﬁ
(
pos2
 + 1, &
ídp
, 0);

194 i‡(!
î∫o
 && !*
ídp
)

197 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

198 
ønge
->
íd
.
pos
 =Ñ™ge->
°¨t
.po†+ 
dñè
;

208 
îr°r
 = 
	`ønge_∑r£_pos
(
pos2
, &
ønge
->
íd
);

209 i‡(
îr°r
)

210  
îr°r
;

216 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

217 #ifde‡
HOST_HAS_QWORD


218 
ønge
->
íd
.
pos
 = 
	`ULL
(0x7fffffffffffffff);

220 
ønge
->
íd
.
pos
 = 281474976645120.0;

225  
NULL
;

226 
	}
}

230 
	$ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

231 
FILE
 *
°ªam
)

233 
	`ønge_¥öt_pos
(&
ønge
->
°¨t
, 
°ªam
);

234 
	`Ârötf
(
°ªam
, ":");

235 
	`ønge_¥öt_pos
(&
ønge
->
íd
, 
°ªam
);

236 
	}
}

240 
	$ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

241 
cou¡î_t
 
vÆ
)

243 i‡(
vÆ
 < 
pos
->pos)

245 i‡(
vÆ
 =
pos
->pos)

249 
	}
}

253 
	$ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

254 
cou¡î_t
 
vÆ
)

256 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

257 
	`∑nic
("invalidÑange");

259 i‡(
vÆ
 < 
ønge
->
°¨t
.
pos
)

261 i‡(
ønge
->
°¨t
.
pos
 <
vÆ
 && vÆ <ønge->
íd
.pos)

265 
	}
}

269 
	$ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

270 
md_addr_t
 
addr
,

271 
cou¡î_t
 
icou¡
,

272 
cou¡î_t
 
cy˛e
)

274 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

275 
	`∑nic
("invalidÑange");

277 
ønge
->
°¨t
.
±y≥
)

279 
±_addr
:

280 i‡(
addr
 < (
md_addr_t
)
ønge
->
°¨t
.
pos
)

282 i‡((
md_addr_t
)
ønge
->
°¨t
.
pos
 <
addr
 &&ádd∏<(md_addr_tÏ™ge->
íd
.pos)

287 
±_ö°
:

288 i‡(
icou¡
 < 
ønge
->
°¨t
.
pos
)

290 i‡(
ønge
->
°¨t
.
pos
 <
icou¡
 && icou¡ <ønge->
íd
.pos)

295 
±_cy˛e
:

296 i‡(
cy˛e
 < 
ønge
->
°¨t
.
pos
)

298 i‡(
ønge
->
°¨t
.
pos
 <
cy˛e
 && cy˛ê<ønge->
íd
.pos)

304 
	`∑nic
("bogusÑangeÅype");

306 
	}
}

	@range.h

52 #i‚de‡
RANGE_H


53 
	#RANGE_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

61 
	eønge_±y≥_t
 {

62 
	m±_addr
 = 0,

63 
	m±_ö°
,

64 
	m±_cy˛e
,

65 
	m±_NUM


76 
	sønge_pos_t
 {

77 
ønge_±y≥_t
 
	m±y≥
;

78 
cou¡î_t
 
	mpos
;

82 
	sønge_ønge_t
 {

83 
ønge_pos_t
 
	m°¨t
;

84 
ønge_pos_t
 
	míd
;

89 
ønge_∑r£_pos
(*
p°r
,

90 
ønge_pos_t
 *
pos
);

94 
ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

95 
FILE
 *
°ªam
);

99 
ønge_∑r£_ønge
(*
r°r
,

100 
ønge_ønge_t
 *
ønge
);

104 
ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

105 
FILE
 *
°ªam
);

109 
ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

110 
cou¡î_t
 
vÆ
);

114 
ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

115 
cou¡î_t
 
vÆ
);

120 
ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

121 
md_addr_t
 
addr
,

122 
cou¡î_t
 
icou¡
,

123 
cou¡î_t
 
cy˛e
);

	@regs.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"lﬂdî.h
"

60 
	~"ªgs.h
"

64 
ªgs_t
 *

65 
	$ªgs_¸óã
()

67 
ªgs_t
 *
ªgs
;

69 
ªgs
 = 
	`ˇŒoc
(1, (
ªgs_t
));

70 i‡(!
ªgs
)

71 
	`Áèl
("out of virtual memory");

73  
ªgs
;

74 
	}
}

78 
	$ªgs_öô
(
ªgs_t
 *
ªgs
)

81 
	`mem£t
(
ªgs
, 0, (*regs));

84 
	}
}

92 
	uªgs_FP_t
 {

93 
md_g¥_t
 
	ml
[
MD_NUM_FREGS
];

94 
md_SS_FLOAT_TYPE
 
	mf
[
SS_NUM_REGS
];

95 
SS_DOUBLE_TYPE
 
	md
[
SS_NUM_REGS
/2];

99 
md_ªgs_FP_t
 
ªgs_F
;

102 
SS_WORD_TYPE
 
ªgs_HI
;

105 
SS_WORD_TYPE
 
ªgs_LO
;

108 
ªgs_FCC
;

111 
SS_ADDR_TYPE
 
ªgs_PC
;

115 
	$ªgs_dump
(
FILE
 *
°ªam
)

117 
i
;

120 i‡(!
°ªam
)

121 
°ªam
 = 
°dîr
;

124 
	`Ârötf
(
°ªam
, "Processor state:\n");

125 
	`Ârötf
(
°ªam
, " PC: 0x%08x\n", 
ªgs_PC
);

126 
i
=0; i<
SS_NUM_REGS
; i += 2)

128 
	`Ârötf
(
°ªam
, " R[%2d]: %12d/0x%08x",

129 
i
, 
ªgs_R
[i],Ñegs_R[i]);

130 
	`Ârötf
(
°ªam
, " R[%2d]: %12d/0x%08x\n",

131 
i
+1, 
ªgs_R
[i+1],Ñegs_R[i+1]);

133 
	`Ârötf
(
°ªam
, " HI: %10d/0x%08x LO: %10d/0x%08x\n",

134 
ªgs_HI
,Ñegs_HI, 
ªgs_LO
,Ñegs_LO);

135 
i
=0; i<
SS_NUM_REGS
; i += 2)

137 
	`Ârötf
(
°ªam
, " F[%2d]: %12d/0x%08x",

138 
i
, 
ªgs_F
.
l
[i],Ñegs_F.l[i]);

139 
	`Ârötf
(
°ªam
, " F[%2d]: %12d/0x%08x\n",

140 
i
+1, 
ªgs_F
.
l
[i+1],Ñegs_F.l[i+1]);

142 
	`Ârötf
(
°ªam
, " FCC: 0x%08x\n", 
ªgs_FCC
);

143 
	}
}

146 
SS_WORD_TYPE
 
	gªgs_R
[
SS_NUM_REGS
];

149 
ªgs_FP
 
	gªgs_F
;

152 
SS_WORD_TYPE
 
	gªgs_HI
;

154 
SS_WORD_TYPE
 
	gªgs_LO
;

157 
	gªgs_FCC
;

160 
SS_ADDR_TYPE
 
	gªgs_PC
;

	@regs.h

52 #i‚de‡
REGS_H


53 
	#REGS_H


	)

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

100 
	sªgs_t
 {

101 
md_g¥_t
 
	mªgs_R
;

102 
md_Âr_t
 
	mªgs_F
;

103 
md_˘æ_t
 
	mªgs_C
;

104 
md_addr_t
 
	mªgs_PC
;

105 
md_addr_t
 
	mªgs_NPC
;

109 
ªgs_t
 *
ªgs_¸óã
();

113 
ªgs_öô
(
ªgs_t
 *
ªgs
);

117 
ªgs_dump
(
ªgs_t
 *
ªgs
,

118 
FILE
 *
°ªam
);

122 
ªgs_de°roy
(
ªgs_t
 *
ªgs
);

	@resource.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<as£π.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"ªsour˚.h
"

61 
ªs_poﬁ
 *

62 
	$ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
)

64 
i
, 
j
, 
k
, 
ödex
, 
nö°s
;

65 
ªs_desc
 *
ö°_poﬁ
;

66 
ªs_poﬁ
 *
ªs
;

69 
nö°s
=0,
i
=0; i<
ndesc
; i++)

71 i‡(
poﬁ
[
i
].
qu™tôy
 > 
MAX_INSTS_PER_CLASS
)

72 
	`Áèl
("too many functional units, increase MAX_INSTS_PER_CLASS");

73 
nö°s
 +
poﬁ
[
i
].
qu™tôy
;

77 
ö°_poﬁ
 = (
ªs_desc
 *)
	`ˇŒoc
(
nö°s
, (res_desc));

78 i‡(!
ö°_poﬁ
)

79 
	`Áèl
("out of virtual memory");

82 
ödex
=0,
i
=0; i<
ndesc
; i++)

84 
j
=0; j<
poﬁ
[
i
].
qu™tôy
; j++)

86 
ö°_poﬁ
[
ödex
] = 
poﬁ
[
i
];

87 
ö°_poﬁ
[
ödex
].
qu™tôy
 = 1;

88 
ö°_poﬁ
[
ödex
].
busy
 = 
FALSE
;

89 
k
=0; k<
MAX_RES_CLASSES
 && 
ö°_poﬁ
[
ödex
].
x
[k].
˛ass
; k++)

90 
ö°_poﬁ
[
ödex
].
x
[
k
].
ma°î
 = &inst_pool[index];

91 
ödex
++;

94 
	`as£π
(
ödex
 =
nö°s
);

97 
ªs
 = (
ªs_poﬁ
 *)
	`ˇŒoc
(1, (res_pool));

98 i‡(!
ªs
)

99 
	`Áèl
("out of virtual memory");

100 
ªs
->
«me
 =Çame;

101 
ªs
->
num_ªsour˚s
 = 
nö°s
;

102 
ªs
->
ªsour˚s
 = 
ö°_poﬁ
;

105 
i
=0; i<
nö°s
; i++)

107 
ªs_ãm∂©e
 *
∂©e
;

108 
j
=0; j<
MAX_RES_CLASSES
; j++)

110 
∂©e
 = &
ªs
->
ªsour˚s
[
i
].
x
[
j
];

111 i‡(
∂©e
->
˛ass
)

113 
	`as£π
(
∂©e
->
˛ass
 < 
MAX_RES_CLASSES
);

114 
ªs
->
èbÀ
[
∂©e
->
˛ass
][ªs->
√¡s
[plate->class]++] =Ölate;

122  
ªs
;

123 
	}
}

131 
ªs_ãm∂©e
 *

132 
	$ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
)

134 
i
;

137 
	`as£π
(
˛ass
 < 
MAX_RES_CLASSES
);

140 
	`as£π
(
poﬁ
->
èbÀ
[
˛ass
][0]);

142 
i
=0; i<
MAX_INSTS_PER_CLASS
; i++)

144 i‡(
poﬁ
->
èbÀ
[
˛ass
][
i
])

146 i‡(!
poﬁ
->
èbÀ
[
˛ass
][
i
]->
ma°î
->
busy
)

147  
poﬁ
->
èbÀ
[
˛ass
][
i
];

153  
NULL
;

154 
	}
}

158 
	$ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
)

160 
i
, 
j
;

162 i‡(!
°ªam
)

163 
°ªam
 = 
°dîr
;

165 
	`Ârötf
(
°ªam
, "Resour˚Öoﬁ: %s:\n", 
poﬁ
->
«me
);

166 
	`Ârötf
(
°ªam
, "\tc⁄èö†%dÑesour˚ in°™˚s\n", 
poﬁ
->
num_ªsour˚s
);

167 
i
=0; i<
MAX_RES_CLASSES
; i++)

169 
	`Ârötf
(
°ªam
, "\tclass: %d: %d matching instances\n",

170 
i
, 
poﬁ
->
√¡s
[i]);

171 
	`Ârötf
(
°ªam
, "\tmatching: ");

172 
j
=0; j<
MAX_INSTS_PER_CLASS
; j++)

174 i‡(!
poﬁ
->
èbÀ
[
i
][
j
])

176 
	`Ârötf
(
°ªam
, "\t%s (busy for %d cycles) ",

177 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
«me
,

178 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
busy
);

180 
	`as£π
(
j
 =
poﬁ
->
√¡s
[
i
]);

181 
	`Ârötf
(
°ªam
, "\n");

183 
	}
}

	@resource.h

52 #i‚de‡
RESOURCE_H


53 
	#RESOURCE_H


	)

55 
	~<°dio.h
>

58 
	#MAX_RES_CLASSES
 16

	)

61 
	#MAX_INSTS_PER_CLASS
 8

	)

64 
	sªs_desc
 {

65 *
	m«me
;

66 
	mqu™tôy
;

67 
	mbusy
;

68 
	sªs_ãm∂©e
 {

69 
	m˛ass
;

72 
	m›œt
;

74 
	missuñ©
;

77 
ªs_desc
 *
	mma°î
;

78 } 
	mx
[
MAX_RES_CLASSES
];

82 
	sªs_poﬁ
 {

83 *
	m«me
;

84 
	mnum_ªsour˚s
;

85 
ªs_desc
 *
	mªsour˚s
;

87 
	m√¡s
[
MAX_RES_CLASSES
];

88 
ªs_ãm∂©e
 *
	mèbÀ
[
MAX_RES_CLASSES
][
MAX_INSTS_PER_CLASS
];

92 
ªs_poﬁ
 *
ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
);

100 
ªs_ãm∂©e
 *
ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
);

103 
ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
);

	@sim-bpred.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"b¥ed.h
"

67 
	~"sim.h
"

74 
ªgs_t
 
	gªgs
;

77 
mem_t
 *
	gmem
 = 
NULL
;

80 
	gmax_ö°s
;

83 *
	g¥ed_ty≥
;

86 
	gbimod_√…
 = 1;

87 
	gbimod_c⁄fig
[1] =

91 
	gtwﬁev_√…
 = 4;

92 
	gtwﬁev_c⁄fig
[4] =

93 { 1, 1024, 8, 
FALSE
};

96 
	gcomb_√…
 = 1;

97 
	gcomb_c⁄fig
[1] =

101 
	gøs_size
 = 8;

104 
	gbtb_√…
 = 2;

105 
	gbtb_c⁄fig
[2] =

109 
b¥ed_t
 *
	g¥ed
;

112 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

115 
cou¡î_t
 
	gsim_num_bønches
 = 0;

120 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

122 
	`›t_ªg_hódî
(
odb
,

127 
	`›t_ªg_nŸe
(
odb
,

144 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

145 &
max_ö°s
, 0,

146  
TRUE
, 
NULL
);

148 
	`›t_ªg_°rög
(
odb
, "-bpred",

150 &
¥ed_ty≥
, "bimod",

151  
TRUE
, 
NULL
);

153 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

155 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

156  
bimod_c⁄fig
,

157  
TRUE
, 
NULL
, 
FALSE
);

159 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

162 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

163  
twﬁev_c⁄fig
,

164  
TRUE
, 
NULL
, 
FALSE
);

166 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

168 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

169  
comb_c⁄fig
,

170  
TRUE
, 
NULL
, 
FALSE
);

172 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

174 &
øs_size
,Ñas_size,

175  
TRUE
, 
NULL
);

177 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

179 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

180  
btb_c⁄fig
,

181  
TRUE
, 
NULL
, 
FALSE
);

182 
	}
}

186 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

188 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

191 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

193 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

196 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

198 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

200 i‡(
bimod_√…
 != 1)

201 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

202 i‡(
btb_√…
 != 2)

203 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

206 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

207  
bimod_c⁄fig
[0],

213  
btb_c⁄fig
[0],

214  
btb_c⁄fig
[1],

215  
øs_size
);

217 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

220 i‡(
twﬁev_√…
 != 4)

221 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

222 i‡(
btb_√…
 != 2)

223 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

225 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

227  
twﬁev_c⁄fig
[0],

228  
twﬁev_c⁄fig
[1],

230  
twﬁev_c⁄fig
[2],

231  
twﬁev_c⁄fig
[3],

232  
btb_c⁄fig
[0],

233  
btb_c⁄fig
[1],

234  
øs_size
);

236 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

239 i‡(
twﬁev_√…
 != 4)

240 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

241 i‡(
bimod_√…
 != 1)

242 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

243 i‡(
comb_√…
 != 1)

244 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

245 i‡(
btb_√…
 != 2)

246 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

248 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

249  
bimod_c⁄fig
[0],

250  
twﬁev_c⁄fig
[0],

251  
twﬁev_c⁄fig
[1],

252  
comb_c⁄fig
[0],

253  
twﬁev_c⁄fig
[2],

254  
twﬁev_c⁄fig
[3],

255  
btb_c⁄fig
[0],

256  
btb_c⁄fig
[1],

257  
øs_size
);

260 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

261 
	}
}

265 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

267 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

269 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

270 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

272 &
sim_num_ªfs
, 0, 
NULL
);

273 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

275 &
sim_ñ≠£d_time
, 0, 
NULL
);

276 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

278 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

280 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

282 &
sim_num_bønches
, 0, 
NULL
);

283 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

285 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

288 i‡(
¥ed
)

289 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

290 
	}
}

294 
	$sim_öô
()

296 
sim_num_ªfs
 = 0;

299 
	`ªgs_öô
(&
ªgs
);

302 
mem
 = 
	`mem_¸óã
("mem");

303 
	`mem_öô
(
mem
);

304 
	}
}

308 
	$b¥ed_m°©e_obj
(
FILE
 *
°ªam
,

309 *
cmd
,

310 
ªgs_t
 *
ªgs
,

311 
mem_t
 *
mem
)

314 
	`sim_¥öt_°©s
(
°ªam
);

317  
NULL
;

318 
	}
}

322 
	$sim_lﬂd_¥og
(*
‚ame
,

323 
¨gc
, **
¨gv
,

324 **
ívp
)

327 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

330 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
b¥ed_m°©e_obj
);

331 
	}
}

335 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

338 
	}
}

342 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

345 
	}
}

349 
	$sim_unöô
()

352 
	}
}

364 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

367 #unde‡
SET_TPC


368 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

371 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

374 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

375 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

377 #i‡
deföed
(
TARGET_PISA
)

380 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

381 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

382 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

383 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

384 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

385 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

388 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

389 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

390 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

391 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

392 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

393 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

395 #ñi‡
deföed
(
TARGET_ALPHA
)

398 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

399 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

400 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

401 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

404 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

405 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

406 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

407 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

410 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

414 
	#READ_BYTE
(
SRC
, 
FAULT
) \

415 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

416 
	#READ_HALF
(
SRC
, 
FAULT
) \

417 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

418 
	#READ_WORD
(
SRC
, 
FAULT
) \

419 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

420 #ifde‡
HOST_HAS_QWORD


421 
	#READ_QWORD
(
SRC
, 
FAULT
) \

422 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

425 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

426 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

427 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

428 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

429 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

430 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

431 #ifde‡
HOST_HAS_QWORD


432 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

433 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

437 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

441 
	$sim_maö
()

443 
md_ö°_t
 
ö°
;

444 
md_addr_t
 
addr
, 
èrgë_PC
 = 0;

445 
md_›code
 
›
;

446 
is_wrôe
;

447 
°ack_idx
;

448 
md_Áu…_ty≥
 
Áu…
;

450 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/Öredictors **\n");

453 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

456 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

457 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

458 
sim_num_ö¢
, &
ªgs
, 
mem
);

460 
TRUE
)

463 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

464 #ifde‡
TARGET_ALPHA


465 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

469 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

472 
sim_num_ö¢
++;

475 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

478 
Áu…
 = 
md_Áu…_n⁄e
;

481 
	`MD_SET_OPCODE
(
›
, 
ö°
);

484 
›
)

486 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

487 
OP
: \

488 
	`SYMCAT
(
OP
,
_IMPL
); \

489 ;

	)

490 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

491 
OP
: \

492 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

493 
	#CONNECT
(
OP
)

	)

494 
	#DECLARE_FAULT
(
FAULT
) \

495 { 
Áu…
 = (
FAULT
); ; }

	)

496 
	~"machöe.def
"

498 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

501 i‡(
Áu…
 !
md_Áu…_n⁄e
)

502 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

504 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

506 
sim_num_ªfs
++;

507 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

508 
is_wrôe
 = 
TRUE
;

511 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

513 
md_addr_t
 
¥ed_PC
;

514 
b¥ed_upd©e_t
 
upd©e_ªc
;

516 
sim_num_bønches
++;

518 i‡(
¥ed
)

521 
¥ed_PC
 = 
	`b¥ed_lookup
(
¥ed
,

522  
ªgs
.
ªgs_PC
,

523  
èrgë_PC
,

524  
›
,

525  
	`MD_IS_CALL
(
›
),

526  
	`MD_IS_RETURN
(
›
),

527  &
upd©e_ªc
,

528  &
°ack_idx
);

531 i‡(!
¥ed_PC
)

534 
¥ed_PC
 = 
ªgs
.
ªgs_PC
 + (
md_ö°_t
);

537 
	`b¥ed_upd©e
(
¥ed
,

538  
ªgs
.
ªgs_PC
,

539  
ªgs
.
ªgs_NPC
,

540  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

541 (
md_ö°_t
)),

542  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

543 (
md_ö°_t
)),

544  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

545  
›
,

546  &
upd©e_ªc
);

551 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

552 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

553 
addr
, 
sim_num_ö¢
, sim_num_insn))

554 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

557 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

558 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

561 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

564 
	}
}

	@sim-cache.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 
	~<m©h.h
>

56 
	~<as£π.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"dlôe.h
"

67 
	~"sim.h
"

78 
ªgs_t
 
	gªgs
;

81 
mem_t
 *
	gmem
 = 
NULL
;

84 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

87 
	gmax_ö°s
;

90 
ˇche_t
 *
	gˇche_û1
 = 
NULL
;

93 
ˇche_t
 *
	gˇche_û2
 = 
NULL
;

96 
ˇche_t
 *
	gˇche_dl1
 = 
NULL
;

99 
ˇche_t
 *
	gˇche_dl2
 = 
NULL
;

102 
ˇche_t
 *
	gôlb
 = 
NULL
;

105 
ˇche_t
 *
	gdéb
 = 
NULL
;

108 
	#MAX_PCSTAT_VARS
 8

	)

109 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

110 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

111 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

114 
	#STATVAL
(
STAT
) \

115 ((
STAT
)->
sc
 =
sc_öt
 \

116 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

117 : ((
STAT
)->
sc
 =
sc_uöt
 \

118 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

119 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

120 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

121 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

125 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

126 
md_addr_t
 
baddr
,

127 
bsize
,

128 
ˇche_blk_t
 *
blk
,

129 
tick_t
 
now
)

131 i‡(
ˇche_dl2
)

134  
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

135  
now
, 
NULL
, NULL);

142 
	}
}

146 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

147 
md_addr_t
 
baddr
,

148 
bsize
,

149 
ˇche_blk_t
 *
blk
,

150 
tick_t
 
now
)

155 
	}
}

159 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

160 
md_addr_t
 
baddr
,

161 
bsize
,

162 
ˇche_blk_t
 *
blk
,

163 
tick_t
 
now
)

165 i‡(
ˇche_û2
)

168  
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

169  
now
, 
NULL
, NULL);

176 
	}
}

180 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

181 
md_addr_t
 
baddr
,

182 
bsize
,

183 
ˇche_blk_t
 *
blk
,

184 
tick_t
 
now
)

189 
	}
}

193 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

194 
md_addr_t
 
baddr
,

195 
bsize
,

196 
ˇche_blk_t
 *
blk
,

197 
tick_t
 
now
)

199 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

202 
	`as£π
(
phy_∑ge_±r
);

205 *
phy_∑ge_±r
 = 0;

208 
	}
}

212 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

213 
md_addr_t
 
baddr
,

214 
bsize
,

215 
ˇche_blk_t
 *
blk
,

216 
tick_t
 
now
)

218 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

221 
	`as£π
(
phy_∑ge_±r
);

224 *
phy_∑ge_±r
 = 0;

227 
	}
}

230 *
	gˇche_dl1_›t
 ;

231 *
	gˇche_dl2_›t
 ;

232 *
	gˇche_û1_›t
 ;

233 *
	gˇche_û2_›t
 ;

234 *
	gôlb_›t
 ;

235 *
	gdéb_›t
 ;

236 
	gÊush_⁄_sysˇŒs
 ;

237 
	gcom¥ess_iˇche_addrs
 ;

240 
	gpc°©_√…
 = 0;

241 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

244 #ifde‡
TARGET_PISA


245 
	#IACOMPRESS
(
A
) \

246 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

247 
	#ISCOMPRESS
(
SZ
) \

248 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

250 
	#IACOMPRESS
(
A
Ë(A)

	)

251 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

256 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

258 
	`›t_ªg_hódî
(
odb
,

267 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

268 &
max_ö°s
, 0,

269  
TRUE
, 
NULL
);

271 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

273 &
ˇche_dl1_›t
, "dl1:256:32:1:l", 
TRUE
, 
NULL
);

274 
	`›t_ªg_nŸe
(
odb
,

288 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

290 &
ˇche_dl2_›t
, "ul2:1024:64:4:l", 
TRUE
, 
NULL
);

291 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

293 &
ˇche_û1_›t
, "û1:256:32:1:l", 
TRUE
, 
NULL
);

294 
	`›t_ªg_nŸe
(
odb
,

307 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

309 &
ˇche_û2_›t
, "dl2", 
TRUE
, 
NULL
);

310 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

312 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

313 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

315 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

316 
	`›t_ªg_Êag
(
odb
, "-flush", "flush caches on system calls",

317 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

318 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

320 &
com¥ess_iˇche_addrs
, 
FALSE
,

321  
TRUE
, 
NULL
);

323 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

325 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

326  
FALSE
, 
NULL
, 
TRUE
);

328 
	}
}

332 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

333 
¨gc
, **
¨gv
)

335 
«me
[128], 
c
;

336 
n£ts
, 
bsize
, 
assoc
;

339 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

341 
ˇche_dl1
 = 
NULL
;

344 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

345 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

346 
ˇche_dl2
 = 
NULL
;

350 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

351 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

352 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

353 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

354  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

355 
dl1_ac˚ss_‚
, 1);

358 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

359 
ˇche_dl2
 = 
NULL
;

362 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

363 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

364 
	`Áèl
("badÜ2 D-cacheÖarms: "

366 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

367  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

368 
dl2_ac˚ss_‚
, 1);

373 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

375 
ˇche_û1
 = 
NULL
;

378 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

379 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

380 
ˇche_û2
 = 
NULL
;

382 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

384 i‡(!
ˇche_dl1
)

385 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

386 
ˇche_û1
 = 
ˇche_dl1
;

389 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

390 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

391 
ˇche_û2
 = 
NULL
;

393 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

395 i‡(!
ˇche_dl2
)

396 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

397 
ˇche_û1
 = 
ˇche_dl2
;

400 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

401 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

402 
ˇche_û2
 = 
NULL
;

406 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

407 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

408 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

409 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

410  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

411 
û1_ac˚ss_‚
, 1);

414 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

415 
ˇche_û2
 = 
NULL
;

416 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

418 i‡(!
ˇche_dl2
)

419 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

420 
ˇche_û2
 = 
ˇche_dl2
;

424 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

425 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

426 
	`Áèl
("badÜ2 I-cacheÖarms: "

428 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

429  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

430 
û2_ac˚ss_‚
, 1);

435 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

436 
ôlb
 = 
NULL
;

439 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

440 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

441 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

442 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

443  (
md_addr_t
), 
assoc
,

444 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

449 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

450 
déb
 = 
NULL
;

453 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

454 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

455 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

456 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

457  (
md_addr_t
), 
assoc
,

458 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

461 
	}
}

465 
	$sim_öô
()

467 
sim_num_ªfs
 = 0;

470 
	`ªgs_öô
(&
ªgs
);

473 
mem
 = 
	`mem_¸óã
("mem");

474 
	`mem_öô
(
mem
);

475 
	}
}

479 
	$ˇche_m°©e_obj
(
FILE
 *
°ªam
,

480 *
cmd
,

481 
ªgs_t
 *
ªgs
,

482 
mem_t
 *
mem
)

485 
	`sim_¥öt_°©s
(
°ªam
);

488  
NULL
;

489 
	}
}

493 
	$sim_lﬂd_¥og
(*
‚ame
,

494 
¨gc
, **
¨gv
,

495 **
ívp
)

498 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

501 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
ˇche_m°©e_obj
);

502 
	}
}

506 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

509 
	}
}

513 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

515 
i
;

518 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

520 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

521 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

523 &
sim_num_ªfs
, 0, 
NULL
);

524 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

526 &
sim_ñ≠£d_time
, 0, 
NULL
);

527 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

529 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

532 i‡(
ˇche_û1


533 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

534 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

535 i‡(
ˇche_û2


536 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

537 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

538 i‡(
ˇche_dl1
)

539 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

540 i‡(
ˇche_dl2
)

541 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

542 i‡(
ôlb
)

543 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

544 i‡(
déb
)

545 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

547 
i
=0; i<
pc°©_√…
; i++)

549 
buf
[512], 
buf1
[512];

550 
°©_°©_t
 *
°©
;

555 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

556 i‡(!
°©
)

557 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

560 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

561 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

562 
°©
->
«me
);

565 
pc°©_°©s
[
i
] = 
°©
;

566 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

569 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

570 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

571 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

573  (
PF_COUNT
|
PF_PDF
),

575  
NULL
);

577 
	`ld_ªg_°©s
(
sdb
);

578 
	`mem_ªg_°©s
(
mem
, 
sdb
);

579 
	}
}

583 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

586 
	}
}

590 
	$sim_unöô
()

593 
	}
}

604 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

607 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

610 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

611 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

613 #i‡
deföed
(
TARGET_PISA
)

616 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

617 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

618 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

619 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

620 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

621 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

624 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

625 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

626 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

627 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

628 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

629 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

631 #ñi‡
deföed
(
TARGET_ALPHA
)

634 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

635 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

636 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

637 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

640 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

641 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

642 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

643 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

646 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

650 
	#__READ_CACHE
(
addr
, 
SRC_T
) \

651 ((
déb
 \

652 ? 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
addr
), 
NULL
, \

653 (
SRC_T
), 0, 
NULL
, NULL) \

655 (
ˇche_dl1
 \

656 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
, (
addr
), 
NULL
, \

657 (
SRC_T
), 0, 
NULL
, NULL) \

658 : 0))

	)

660 
	#READ_BYTE
(
SRC
, 
FAULT
) \

661 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

662 
	`__READ_CACHE
(
addr
, 
byã_t
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

663 
	#READ_HALF
(
SRC
, 
FAULT
) \

664 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

665 
	`__READ_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

666 
	#READ_WORD
(
SRC
, 
FAULT
) \

667 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

668 
	`__READ_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

669 #ifde‡
HOST_HAS_QWORD


670 
	#READ_QWORD
(
SRC
, 
FAULT
) \

671 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

672 
	`__READ_CACHE
(
addr
, 
qw‹d_t
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

675 
	#__WRITE_CACHE
(
addr
, 
DST_T
) \

676 ((
déb
 \

677 ? 
	`ˇche_ac˚ss
(
déb
, 
Wrôe
, (
addr
), 
NULL
, \

678 (
DST_T
), 0, 
NULL
, NULL) \

680 (
ˇche_dl1
 \

681 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
addr
), 
NULL
, \

682 (
DST_T
), 0, 
NULL
, NULL) \

683 : 0))

	)

685 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

686 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

687 
	`__WRITE_CACHE
(
addr
, 
byã_t
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

688 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

689 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

690 
	`__WRITE_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

691 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

692 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

693 
	`__WRITE_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

694 #ifde‡
HOST_HAS_QWORD


695 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

696 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

697 
	`__WRITE_CACHE
(
addr
, 
qw‹d_t
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

701 
md_Áu…_ty≥


702 
	$dˇche_ac˚ss_‚
(
mem_t
 *
mem
,

703 
mem_cmd
 
cmd
,

704 
md_addr_t
 
addr
,

705 *
p
,

706 
nbyãs
)

708 i‡(
déb
)

709 
	`ˇche_ac˚ss
(
déb
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

710 i‡(
ˇche_dl1
)

711 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

712  
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

713 
	}
}

716 
	#SYSCALL
(
INST
) \

717 (
Êush_⁄_sysˇŒs
 \

718 ? ((
déb
 ? 
	`ˇche_Êush
(dtlb, 0) : 0), \

719 (
ˇche_dl1
 ? 
	`ˇche_Êush
(cache_dl1, 0) : 0), \

720 (
ˇche_dl2
 ? 
	`ˇche_Êush
(cache_dl2, 0) : 0), \

721 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
)) \

722 : 
	`sys_sysˇŒ
(&
ªgs
, 
dˇche_ac˚ss_‚
, 
mem
, 
INST
, 
TRUE
))

	)

726 
	$sim_maö
()

728 
i
;

729 
md_ö°_t
 
ö°
;

730 
md_addr_t
 
addr
;

731 
md_›code
 
›
;

732 
is_wrôe
;

733 
md_Áu…_ty≥
 
Áu…
;

735 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/ caches **\n");

738 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

741 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

742 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

743 
sim_num_ö¢
, &
ªgs
, 
mem
);

745 
TRUE
)

748 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

749 #ifde‡
TARGET_ALPHA


750 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

754 i‡(
ôlb
)

755 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

756 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

757 i‡(
ˇche_û1
)

758 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

759 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

760 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

763 
sim_num_ö¢
++;

766 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

769 
Áu…
 = 
md_Áu…_n⁄e
;

772 
	`MD_SET_OPCODE
(
›
, 
ö°
);

775 
›
)

777 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

778 
OP
: \

779 
	`SYMCAT
(
OP
,
_IMPL
); \

780 ;

	)

781 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

782 
OP
: \

783 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

784 
	#CONNECT
(
OP
)

	)

785 
	#DECLARE_FAULT
(
FAULT
) \

786 { 
Áu…
 = (
FAULT
); ; }

	)

787 
	~"machöe.def
"

789 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

792 i‡(
Áu…
 !
md_Áu…_n⁄e
)

793 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

795 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

797 
sim_num_ªfs
++;

798 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

799 
is_wrôe
 = 
TRUE
;

803 
i
=0; i < 
pc°©_√…
; i++)

805 
cou¡î_t
 
√wvÆ
;

806 
dñè
;

809 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

810 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

811 i‡(
dñè
 != 0)

813 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

814 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

820 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

821 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

822 
addr
, 
sim_num_ö¢
, sim_num_insn))

823 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

826 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

827 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

830 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

833 
	}
}

	@sim-eio.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"eio.h
"

67 
	~"ønge.h
"

68 
	~"sim.h
"

78 
ªgs_t
 
	gªgs
;

81 
mem_t
 *
	gmem
 = 
NULL
;

84 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

87 
	gmax_ö°s
;

90 
	gÁ°fwd_cou¡
;

93 
	gÁ°fwdög
 = 
FALSE
;

96 *
	gåa˚_‚ame
;

97 
FILE
 *
	gåa˚_fd
 = 
NULL
;

100 íum { 
	mno_chk±
, 
	m⁄e_shŸ_chk±
, 
	m≥riodic_chk±
 } 
	gchk±_köd
 = 
no_chk±
;

101 *
	gchk±_‚ame
;

102 
FILE
 *
	gchk±_fd
 = 
NULL
;

103 
ønge_ønge_t
 
	gchk±_ønge
;

106 
cou¡î_t
 
	g≥r_chk±_öãrvÆ
;

107 
cou¡î_t
 
	g√xt_chk±_cy˛e
;

108 
	gchk±_num
;

111 
	gchk±_√…
 = 0;

112 *
	gchk±_›ts
[2];

115 
	g≥r_chk±_√…
 = 0;

116 *
	g≥r_chk±_›ts
[2];

121 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

123 
	`›t_ªg_hódî
(
odb
,

136 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

137 &
max_ö°s
, 0,

138  
TRUE
, 
NULL
);

140 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅracing starts",

141 &
Á°fwd_cou¡
, 0,

142  
TRUE
, 
NULL
);

144 
	`›t_ªg_°rög
(
odb
, "-trace", "EIOÅrace file output fileÇame",

145 &
åa˚_‚ame
, 
NULL
,

146  
TRUE
, 
NULL
);

148 
	`›t_ªg_°rög_li°
(
odb
, "-perdump",

151 
≥r_chk±_›ts
, 2, &
≥r_chk±_√…
,

152  
NULL
,

153  
FALSE
, 
NULL
, FALSE);

155 
	`›t_ªg_°rög_li°
(
odb
, "-dump",

157 
chk±_›ts
, 2, &
chk±_√…
, 
NULL
,

158  
FALSE
, 
NULL
, FALSE);

160 
	`›t_ªg_nŸe
(
odb
,

177 
	}
}

181 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

183 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

184 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

185 
	}
}

189 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

191 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

193 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

194 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

196 &
sim_num_ªfs
, 0, 
NULL
);

197 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

199 &
sim_ñ≠£d_time
, 0, 
NULL
);

200 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

202 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

203 
	`ld_ªg_°©s
(
sdb
);

204 
	`mem_ªg_°©s
(
mem
, 
sdb
);

205 
	}
}

209 
	$sim_öô
()

211 
sim_num_ªfs
 = 0;

214 
	`ªgs_öô
(&
ªgs
);

217 
mem
 = 
	`mem_¸óã
("mem");

218 
	`mem_öô
(
mem
);

219 
	}
}

223 
	$sim_lﬂd_¥og
(*
‚ame
,

224 
¨gc
, **
¨gv
,

225 **
ívp
)

228 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

230 i‡(
chk±_√…
 == 2)

232 *
îr°r
;

235 i‡(!
sim_eio_fd
)

236 
	`Áèl
("checkpoints can only be generated whileÑunningán EIOÅrace");

239 i‡(
≥r_chk±_√…
 != 0)

240 
	`Áèl
("can't do bothÑegularándÖeriodic checkpoints");

243 i‡(
åa˚_‚ame
 !
NULL
)

244 
	`Áèl
("checkpoints cannot be generated with generatingán EIOÅrace");

248 
îr°r
 = 
	`ønge_∑r£_ønge
(
chk±_›ts
[1], &
chk±_ønge
);

249 i‡(
îr°r
)

250 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

253 
chk±_‚ame
 = 
chk±_›ts
[0];

254 
chk±_fd
 = 
	`eio_¸óã
(
chk±_‚ame
);

257 
chk±_köd
 = 
⁄e_shŸ_chk±
;

260 i‡(
≥r_chk±_√…
 == 2)

262 
chk±_‚ame
 = 
≥r_chk±_›ts
[0];

263 i‡(
	`°rchr
(
chk±_‚ame
, '%'Ë=
NULL
)

264 
	`Áèl
("periodic checkpoint filename must beÖrintf-style format");

266 i‡(
	`ssˇnf
(
≥r_chk±_›ts
[1], "%Ld", &
≥r_chk±_öãrvÆ
) != 1)

267 
	`Áèl
("can'tÖarseÖeriodic checkpoint interval '%s'",

268 
≥r_chk±_›ts
[1]);

271 
chk±_köd
 = 
≥riodic_chk±
;

272 
chk±_num
 = 1;

273 
√xt_chk±_cy˛e
 = 
≥r_chk±_öãrvÆ
;

276 i‡(
åa˚_‚ame
 !
NULL
)

278 
	`Ârötf
(
°dîr
, "sim:ÅracingÉxecutionÅo EIO file `%s'...\n",

279 
åa˚_‚ame
);

282 
åa˚_fd
 = 
	`eio_¸óã
(
åa˚_‚ame
);

286 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

287 
	}
}

292 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

295 
	}
}

299 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

302 
	}
}

306 
	$sim_unöô
()

308 i‡(
åa˚_fd
 !
NULL
)

309 
	`eio_˛o£
(
åa˚_fd
);

310 
	}
}

322 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

325 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

328 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

329 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

331 #i‡
deföed
(
TARGET_PISA
)

334 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

335 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

336 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

337 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

338 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

339 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

342 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

343 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

344 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

345 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

346 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

347 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

349 #ñi‡
deföed
(
TARGET_ALPHA
)

352 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

353 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

354 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

355 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

358 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

359 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

360 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

361 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

364 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

368 
	#READ_BYTE
(
SRC
, 
FAULT
) \

369 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

370 
	#READ_HALF
(
SRC
, 
FAULT
) \

371 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

372 
	#READ_WORD
(
SRC
, 
FAULT
) \

373 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

374 #ifde‡
HOST_HAS_QWORD


375 
	#READ_QWORD
(
SRC
, 
FAULT
) \

376 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

379 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

380 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

381 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

382 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

383 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

384 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

385 #ifde‡
HOST_HAS_QWORD


386 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

387 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

391 
	#SYSCALL
(
INST
) \

392 ((
åa˚_fd
 !
NULL
 && !
Á°fwdög
) \

393 ? 
	`eio_wrôe_åa˚
(
åa˚_fd
, 
sim_num_ö¢
, \

394 &
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
) \

395 : 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

	)

399 
	$sim_maö
()

401 
md_ö°_t
 
ö°
;

402 
md_addr_t
 
addr
;

403 
md_›code
 
›
;

404 
boﬁ_t
 
is_wrôe
;

405 
md_Áu…_ty≥
 
Áu…
;

408 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

411 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

412 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

413 
sim_num_ö¢
, &
ªgs
, 
mem
);

417 i‡(
Á°fwd_cou¡
 > 0)

419 
icou¡
;

421 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

423 
Á°fwdög
 = 
TRUE
;

424 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++)

427 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

428 #ifde‡
TARGET_ALPHA


429 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

433 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

436 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

439 
Áu…
 = 
md_Áu…_n⁄e
;

442 
	`MD_SET_OPCODE
(
›
, 
ö°
);

445 
›
)

447 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

448 
OP
: \

449 
	`SYMCAT
(
OP
,
_IMPL
); \

450 ;

	)

451 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

452 
OP
: \

453 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

454 
	#CONNECT
(
OP
)

	)

455 #unde‡
DECLARE_FAULT


456 
	#DECLARE_FAULT
(
FAULT
) \

457 { 
Áu…
 = (
FAULT
); ; }

	)

458 
	~"machöe.def
"

460 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

463 i‡(
Áu…
 !
md_Áu…_n⁄e
)

464 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

467 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

469 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

470 
is_wrôe
 = 
TRUE
;

474 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

475 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

476 
addr
, 
sim_num_ö¢
, sim_num_insn))

477 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

480 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

481 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

484 
Á°fwdög
 = 
FALSE
;

486 i‡(
åa˚_fd
 !
NULL
)

488 
	`Ârötf
(
°dîr
, "sim: writing EIO file initial checkpoint...\n");

489 i‡(
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
åa˚_fd
) != -1)

490 
	`∑nic
("checkpoint code is broken");

493 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

496 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

498 
TRUE
)

501 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

502 #ifde‡
TARGET_ALPHA


503 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

507 i‡(
chk±_köd
 =
⁄e_shŸ_chk±


508 && !
	`ønge_cmp_ønge1
(&
chk±_ønge
, 
ªgs
.
ªgs_NPC
,

509 
sim_num_ö¢
, sim_num_insn))

511 
	`myÂrötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %n...\n",

512 
chk±_‚ame
, 
sim_num_ö¢
);

515 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

518 
	`eio_˛o£
(
chk±_fd
);

521 
	`l⁄gjmp
(
sim_exô_buf
, 0+1);

523 i‡(
chk±_köd
 =
≥riodic_chk±


524 && 
sim_num_ö¢
 =
√xt_chk±_cy˛e
)

526 
this_chk±_‚ame
[256];

529 
	`•rötf
(
this_chk±_‚ame
, 
chk±_‚ame
, 
chk±_num
);

530 
chk±_fd
 = 
	`eio_¸óã
(
this_chk±_‚ame
);

532 
	`myÂrötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %n...\n",

533 
this_chk±_‚ame
, 
sim_num_ö¢
);

536 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

539 
	`eio_˛o£
(
chk±_fd
);

541 
chk±_num
++;

542 
√xt_chk±_cy˛e
 +
≥r_chk±_öãrvÆ
;

546 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

549 
sim_num_ö¢
++;

552 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

555 
Áu…
 = 
md_Áu…_n⁄e
;

558 
	`MD_SET_OPCODE
(
›
, 
ö°
);

561 
›
)

563 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

564 
OP
: \

565 
	`SYMCAT
(
OP
,
_IMPL
); \

566 ;

	)

567 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

568 
OP
: \

569 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

570 
	#CONNECT
(
OP
)

	)

571 
	#DECLARE_FAULT
(
FAULT
) \

572 { 
Áu…
 = (
FAULT
); ; }

	)

573 
	~"machöe.def
"

575 
	`∑nic
("bogus opcode");

578 i‡(
Áu…
 !
md_Áu…_n⁄e
)

579 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

581 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

583 
sim_num_ªfs
++;

584 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

585 
is_wrôe
 = 
TRUE
;

589 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

590 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

591 
addr
, 
sim_num_ö¢
, sim_num_insn))

592 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

595 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

596 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

599 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

602 
	}
}

	@sim-fast.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

70 #unde‡
NO_INSN_COUNT


72 #ifde‡
__GNUC__


79 
	~"ho°.h
"

80 
	~"misc.h
"

81 
	~"machöe.h
"

82 
	~"ªgs.h
"

83 
	~"mem‹y.h
"

84 
	~"lﬂdî.h
"

85 
	~"sysˇŒ.h
"

86 
	~"dlôe.h
"

87 
	~"sim.h
"

90 
ªgs_t
 
	gªgs
;

93 
mem_t
 *
	gmem
 = 
NULL
;

95 #ifde‡
TARGET_ALPHA


97 
mem_t
 *
	gdec
 = 
NULL
;

102 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

104 
	`›t_ªg_hódî
(
odb
,

113 
	}
}

117 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

119 i‡(
dlôe_a˘ive
)

120 
	`Áèl
("sim-fast doesÇot support DLite debugging");

121 
	}
}

125 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

127 #i‚de‡
NO_INSN_COUNT


128 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

130 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

132 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

134 &
sim_ñ≠£d_time
, 0, 
NULL
);

135 #i‚de‡
NO_INSN_COUNT


136 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

138 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

140 
	`ld_ªg_°©s
(
sdb
);

141 
	`mem_ªg_°©s
(
mem
, 
sdb
);

142 #ifde‡
TARGET_ALPHA


143 
	`mem_ªg_°©s
(
dec
, 
sdb
);

145 
	}
}

149 
	$sim_öô
()

152 
	`ªgs_öô
(&
ªgs
);

155 
mem
 = 
	`mem_¸óã
("mem");

156 
	`mem_öô
(
mem
);

157 
	}
}

161 
	$sim_lﬂd_¥og
(*
‚ame
,

162 
¨gc
, **
¨gv
,

163 **
ívp
)

166 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

168 #ifde‡
TARGET_ALPHA


171 
i
, 
num_ö¢
 = (
ld_ãxt_size
 + 3) / 4;

173 
	`Ârötf
(
°dîr
, "**Öª-decodög %u in°s...", 
num_ö¢
);

176 
dec
 = 
	`mem_¸óã
("dec");

178 
i
=0; i < 
num_ö¢
; i++)

180 
md_›code
 
›
;

181 
md_ö°_t
 
ö°
;

182 
md_addr_t
 
PC
;

185 
PC
 = 
ld_ãxt_ba£
 + 
i
 * (
md_ö°_t
);

188 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
PC
);

191 
	`MD_SET_OPCODE
(
›
, 
ö°
);

194 
	`MEM_WRITE_WORD
(
dec
, 
PC
 << 1, (
w‹d_t
)
›
);

195 
	`MEM_WRITE_WORD
(
dec
, (
PC
 << 1)+(
w‹d_t
), 
ö°
);

197 
	`Ârötf
(
°dîr
, "done\n");

200 
	}
}

204 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

207 
	}
}

211 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

214 
	}
}

218 
	$sim_unöô
()

221 
	}
}

228 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

231 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

234 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

235 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

237 #i‡
deföed
(
TARGET_PISA
)

240 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

241 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

242 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

243 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

244 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

245 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

248 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

249 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

250 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

251 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

252 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

253 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

255 #ñi‡
deföed
(
TARGET_ALPHA
)

258 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

259 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

260 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

261 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

264 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

265 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

266 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

267 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

270 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

274 
	#READ_BYTE
(
SRC
, 
FAULT
) \

275 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_BYTE
(
mem
, (
SRC
)))

	)

276 
	#READ_HALF
(
SRC
, 
FAULT
) \

277 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_HALF
(
mem
, (
SRC
)))

	)

278 
	#READ_WORD
(
SRC
, 
FAULT
) \

279 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_WORD
(
mem
, (
SRC
)))

	)

280 #ifde‡
HOST_HAS_QWORD


281 
	#READ_QWORD
(
SRC
, 
FAULT
) \

282 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_READ_QWORD
(
mem
, (
SRC
)))

	)

285 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

286 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, (
DST
), (
SRC
)))

	)

287 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

288 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, (
DST
), (
SRC
)))

	)

289 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

290 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, (
DST
), (
SRC
)))

	)

291 #ifde‡
HOST_HAS_QWORD


292 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

293 ((
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QWORD
(
mem
, (
DST
), (
SRC
)))

	)

297 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

299 #i‚de‡
NO_INSN_COUNT


300 
	#INC_INSN_CTR
(Ë
sim_num_ö¢
++

	)

302 
	#INC_INSN_CTR
(Ë

	)

305 #ifde‡
TARGET_ALPHA


306 
	#ZERO_FP_REG
(Ë
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0

	)

308 
	#ZERO_FP_REG
(Ë

	)

313 
	$sim_maö
()

315 #ifde‡
USE_JUMP_TABLE


325 *
›_jump
[ ] = {

326 &&
›code_NA
,

327 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

328 &&
›code_
##
OP
,

	)

329 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

330 &&
›code_
##
OP
,

	)

331 
	#CONNECT
(
OP
)

	)

332 
	~"machöe.def
"

337 
md_ö°_t
 
ö°
;

340 
md_›code
 
›
;

342 
	`Ârötf
(
°dîr
, "sim: ** starting *fast* functional simulation **\n");

345 i‡(
sim_sw≠_byãs
 || 
sim_sw≠_w‹ds
)

346 
	`Áèl
("sim: *fast* functional simulation cannot swap bytes or words");

348 #ifde‡
USE_JUMP_TABLE


350 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
;

353 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_NPC
);

356 
	`MD_SET_OPCODE
(
›
, 
ö°
);

357 *
›_jump
[
›
];

359 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

360 
›code_
##
OP
: \

362 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; \

363 
	`ZERO_FP_REG
(); \

366 
	`INC_INSN_CTR
(); \

369 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
; \

372 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
); \

375 
	`SYMCAT
(
OP
,
_IMPL
); \

378 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_NPC
); \

381 
	`MD_SET_OPCODE
(
›
, 
ö°
); \

382 *
›_jump
[
›
];

	)

384 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

385 
›code_
##
OP
: \

386 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

387 
	#CONNECT
(
OP
)

	)

388 
	#DECLARE_FAULT
(
FAULT
) \

389 { ; }

	)

390 
	~"machöe.def
"

392 
›code_NA
:

393 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

396 
	`∑nic
("exited sim-fast mainÜoop");

401 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

403 
TRUE
)

406 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

407 #ifde‡
TARGET_ALPHA


408 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

412 #i‚de‡
NO_INSN_COUNT


413 
sim_num_ö¢
++;

416 #ifde‡
TARGET_ALPHA


418 
›
 = (
md_›code
)
	`__UNCHK_MEM_READ
(
dec
, 
ªgs
.
ªgs_PC
 << 1, 
w‹d_t
);

419 
ö°
 =

420 
	`__UNCHK_MEM_READ
(
dec
, (
ªgs
.
ªgs_PC
 << 1)+(
w‹d_t
), 
md_ö°_t
);

423 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

426 
	`MD_SET_OPCODE
(
›
, 
ö°
);

430 
›
)

432 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

433 
OP
: \

434 
	`SYMCAT
(
OP
,
_IMPL
); \

435 ;

	)

436 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

437 
OP
: \

438 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

439 
	#CONNECT
(
OP
)

	)

440 
	#DECLARE_FAULT
(
FAULT
) \

441 { ; }

	)

442 
	~"machöe.def
"

444 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

448 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

449 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

453 
	}
}

	@sim-outorder.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

55 
	~<as£π.h
>

56 
	~<sig«l.h
>

58 
	~"ho°.h
"

59 
	~"misc.h
"

60 
	~"machöe.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

63 
	~"ˇche.h
"

64 
	~"lﬂdî.h
"

65 
	~"sysˇŒ.h
"

66 
	~"b¥ed.h
"

67 
	~"ªsour˚.h
"

68 
	~"bôm≠.h
"

69 
	~"›ti⁄s.h
"

70 
	~"evÆ.h
"

71 
	~"°©s.h
"

72 
	~"±ø˚.h
"

73 
	~"dlôe.h
"

74 
	~"sim.h
"

84 
ªgs_t
 
	gªgs
;

87 
mem_t
 *
	gmem
 = 
NULL
;

95 
	gmax_ö°s
;

98 
	gÁ°fwd_cou¡
;

101 
	g±ø˚_√…
 = 0;

102 *
	g±ø˚_›ts
[2];

105 
	gruu_ifq_size
;

108 
	gruu_bønch_≥«…y
;

111 
	g„tch_•ìd
;

114 *
	g¥ed_ty≥
;

117 
	gbimod_√…
 = 1;

118 
	gbimod_c⁄fig
[1] =

122 
	gtwﬁev_√…
 = 4;

123 
	gtwﬁev_c⁄fig
[4] =

124 { 1, 1024, 8, 
FALSE
};

127 
	gcomb_√…
 = 1;

128 
	gcomb_c⁄fig
[1] =

132 
	gøs_size
 = 8;

135 
	gbtb_√…
 = 2;

136 
	gbtb_c⁄fig
[2] =

140 
	gruu_decode_width
;

143 
	gruu_issue_width
;

146 
	gruu_ö‹dî_issue
;

149 
	gruu_ö˛ude_•ec
 = 
TRUE
;

152 
	gruu_commô_width
;

155 
	gRUU_size
 = 8;

158 
	gLSQ_size
 = 4;

161 *
	gˇche_dl1_›t
;

164 
	gˇche_dl1_œt
;

167 *
	gˇche_dl2_›t
;

170 
	gˇche_dl2_œt
;

173 *
	gˇche_û1_›t
;

176 
	gˇche_û1_œt
;

179 *
	gˇche_û2_›t
;

182 
	gˇche_û2_œt
;

185 
	gÊush_⁄_sysˇŒs
;

188 
	gcom¥ess_iˇche_addrs
;

191 
	gmem_√…
 = 2;

192 
	gmem_œt
[2] =

196 
	gmem_bus_width
;

199 *
	gôlb_›t
;

202 *
	gdéb_›t
;

205 
	géb_miss_œt
;

208 
	gªs_ülu
;

211 
	gªs_imu…
;

214 
	gªs_memp‹t
;

217 
	gªs_ÂÆu
;

220 
	gªs_Âmu…
;

223 
	#MAX_PCSTAT_VARS
 8

	)

224 
	gpc°©_√…
 = 0;

225 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

228 #ifde‡
TARGET_PISA


229 
	#IACOMPRESS
(
A
) \

230 (
com¥ess_iˇche_addrs
 ? ((((
A
Ë- 
ld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (A))

	)

231 
	#ISCOMPRESS
(
SZ
) \

232 (
com¥ess_iˇche_addrs
 ? ((
SZ
Ë>> 1Ë: (SZ))

	)

234 
	#IACOMPRESS
(
A
Ë(A)

	)

235 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

239 
	gbugcom∑t_mode
;

246 
	#FU_IALU_INDEX
 0

	)

247 
	#FU_IMULT_INDEX
 1

	)

248 
	#FU_MEMPORT_INDEX
 2

	)

249 
	#FU_FPALU_INDEX
 3

	)

250 
	#FU_FPMULT_INDEX
 4

	)

253 
ªs_desc
 
	gfu_c⁄fig
[] = {

259 { 
I¡ALU
, 1, 1 }

267 { 
I¡MULT
, 3, 1 },

268 { 
I¡DIV
, 20, 19 }

276 { 
RdP‹t
, 1, 1 },

277 { 
WrP‹t
, 1, 1 }

285 { 
FlﬂtADD
, 2, 1 },

286 { 
FlﬂtCMP
, 2, 1 },

287 { 
FlﬂtCVT
, 2, 1 }

295 { 
FlﬂtMULT
, 4, 1 },

296 { 
FlﬂtDIV
, 12, 12 },

297 { 
FlﬂtSQRT
, 24, 24 }

307 
cou¡î_t
 
	gsim_¶ù
 = 0;

310 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

313 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

316 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

319 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

322 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

325 
cou¡î_t
 
	gsim_num_bønches
 = 0;

328 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

331 
tick_t
 
	gsim_cy˛e
 = 0;

334 
cou¡î_t
 
	gIFQ_cou¡
;

335 
cou¡î_t
 
	gIFQ_fcou¡
;

336 
cou¡î_t
 
	gRUU_cou¡
;

337 
cou¡î_t
 
	gRUU_fcou¡
;

338 
cou¡î_t
 
	gLSQ_cou¡
;

339 
cou¡î_t
 
	gLSQ_fcou¡
;

342 
cou¡î_t
 
	gsim_övÆid_addrs
;

349 
	gö°_£q
 = 0;

352 
	g±ø˚_£q
 = 0;

358 
	g•ec_mode
 = 
FALSE
;

361 
	gruu_„tch_issue_dñay
 = 0;

364 
	g¥ed_≥r„˘
 = 
FALSE
;

367 *
	gb¥ed_•ec_›t
;

368 íum { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

371 
ˇche_t
 *
	gˇche_û1
;

374 
ˇche_t
 *
	gˇche_û2
;

377 
ˇche_t
 *
	gˇche_dl1
;

380 
ˇche_t
 *
	gˇche_dl2
;

383 
ˇche_t
 *
	gôlb
;

386 
ˇche_t
 *
	gdéb
;

389 
b¥ed_t
 *
	g¥ed
;

392 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

395 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

396 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

397 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

400 
	#STATVAL
(
STAT
) \

401 ((
STAT
)->
sc
 =
sc_öt
 \

402 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

403 : ((
STAT
)->
sc
 =
sc_uöt
 \

404 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

405 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

406 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

407 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

412 
	$mem_ac˚ss_œãncy
(
blk_sz
)

414 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

416 
	`as£π
(
chunks
 > 0);

418  ( 
mem_œt
[0] +

419 –
mem_œt
[1] * (
chunks
 - 1)));

420 
	}
}

429 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

430 
md_addr_t
 
baddr
,

431 
bsize
,

432 
ˇche_blk_t
 *
blk
,

433 
tick_t
 
now
)

435 
œt
;

437 i‡(
ˇche_dl2
)

440 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

441  
now
, 
NULL
, NULL);

442 i‡(
cmd
 =
Ród
)

443  
œt
;

453 i‡(
cmd
 =
Ród
)

454  
	`mem_ac˚ss_œãncy
(
bsize
);

461 
	}
}

465 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

466 
md_addr_t
 
baddr
,

467 
bsize
,

468 
ˇche_blk_t
 *
blk
,

469 
tick_t
 
now
)

472 i‡(
cmd
 =
Ród
)

473  
	`mem_ac˚ss_œãncy
(
bsize
);

479 
	}
}

483 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

484 
md_addr_t
 
baddr
,

485 
bsize
,

486 
ˇche_blk_t
 *
blk
,

487 
tick_t
 
now
)

489 
œt
;

491 i‡(
ˇche_û2
)

494 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

495  
now
, 
NULL
, NULL);

496 i‡(
cmd
 =
Ród
)

497  
œt
;

499 
	`∑nic
("writesÅo instruction memoryÇot supported");

504 i‡(
cmd
 =
Ród
)

505  
	`mem_ac˚ss_œãncy
(
bsize
);

507 
	`∑nic
("writesÅo instruction memoryÇot supported");

509 
	}
}

513 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

514 
md_addr_t
 
baddr
,

515 
bsize
,

516 
ˇche_blk_t
 *
blk
,

517 
tick_t
 
now
)

520 i‡(
cmd
 =
Ród
)

521  
	`mem_ac˚ss_œãncy
(
bsize
);

523 
	`∑nic
("writesÅo instruction memoryÇot supported");

524 
	}
}

533 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

534 
md_addr_t
 
baddr
,

535 
bsize
,

536 
ˇche_blk_t
 *
blk
,

537 
tick_t
 
now
)

539 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

542 
	`as£π
(
phy_∑ge_±r
);

545 *
phy_∑ge_±r
 = 0;

548  
éb_miss_œt
;

549 
	}
}

553 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

554 
md_addr_t
 
baddr
,

555 
bsize
,

556 
ˇche_blk_t
 *
blk
,

557 
tick_t
 
now
)

559 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

562 
	`as£π
(
phy_∑ge_±r
);

565 *
phy_∑ge_±r
 = 0;

568  
éb_miss_œt
;

569 
	}
}

574 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

576 
	`›t_ªg_hódî
(
odb
,

585 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

586 &
max_ö°s
, 0,

587  
TRUE
, 
NULL
);

591 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅiming starts",

592 &
Á°fwd_cou¡
, 0,

593  
TRUE
, 
NULL
);

594 
	`›t_ªg_°rög_li°
(
odb
, "-ptrace",

596 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

597  
FALSE
, 
NULL
, FALSE);

599 
	`›t_ªg_nŸe
(
odb
,

621 
	`›t_ªg_öt
(
odb
, "-fetch:ifqsize", "instruction fetch queue size (in insts)",

622 &
ruu_ifq_size
, 4,

623  
TRUE
, 
NULL
);

625 
	`›t_ªg_öt
(
odb
, "-fetch:mplat", "extra branch mis-predictionÜatency",

626 &
ruu_bønch_≥«…y
, 3,

627  
TRUE
, 
NULL
);

629 
	`›t_ªg_öt
(
odb
, "-fetch:speed",

631 &
„tch_•ìd
, 1,

632  
TRUE
, 
NULL
);

636 
	`›t_ªg_nŸe
(
odb
,

652 
	`›t_ªg_°rög
(
odb
, "-bpred",

654 &
¥ed_ty≥
, "bimod",

655  
TRUE
, 
NULL
);

657 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

659 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

660  
bimod_c⁄fig
,

661  
TRUE
, 
NULL
, 
FALSE
);

663 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

666 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

667  
twﬁev_c⁄fig
,

668  
TRUE
, 
NULL
, 
FALSE
);

670 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

672 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

673  
comb_c⁄fig
,

674  
TRUE
, 
NULL
, 
FALSE
);

676 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

678 &
øs_size
,Ñas_size,

679  
TRUE
, 
NULL
);

681 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

683 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

684  
btb_c⁄fig
,

685  
TRUE
, 
NULL
, 
FALSE
);

687 
	`›t_ªg_°rög
(
odb
, "-bpred:spec_update",

689 &
b¥ed_•ec_›t
, 
NULL
,

690  
TRUE
, 
NULL
);

694 
	`›t_ªg_öt
(
odb
, "-decode:width",

696 &
ruu_decode_width
, 4,

697  
TRUE
, 
NULL
);

701 
	`›t_ªg_öt
(
odb
, "-issue:width",

703 &
ruu_issue_width
, 4,

704  
TRUE
, 
NULL
);

706 
	`›t_ªg_Êag
(
odb
, "-issue:inorder", "runÖipeline with in-order issue",

707 &
ruu_ö‹dî_issue
, 
FALSE
,

708  
TRUE
, 
NULL
);

710 
	`›t_ªg_Êag
(
odb
, "-issue:wrongpath",

712 &
ruu_ö˛ude_•ec
, 
TRUE
,

713  
TRUE
, 
NULL
);

717 
	`›t_ªg_öt
(
odb
, "-commit:width",

719 &
ruu_commô_width
, 4,

720  
TRUE
, 
NULL
);

724 
	`›t_ªg_öt
(
odb
, "-ruu:size",

726 &
RUU_size
, 16,

727  
TRUE
, 
NULL
);

731 
	`›t_ªg_öt
(
odb
, "-lsq:size",

733 &
LSQ_size
, 8,

734  
TRUE
, 
NULL
);

738 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

740 &
ˇche_dl1_›t
, "dl1:128:32:4:l",

741  
TRUE
, 
NULL
);

743 
	`›t_ªg_nŸe
(
odb
,

758 
	`›t_ªg_öt
(
odb
, "-cache:dl1lat",

760 &
ˇche_dl1_œt
, 1,

761  
TRUE
, 
NULL
);

763 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

765 &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

766  
TRUE
, 
NULL
);

768 
	`›t_ªg_öt
(
odb
, "-cache:dl2lat",

770 &
ˇche_dl2_œt
, 6,

771  
TRUE
, 
NULL
);

773 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

775 &
ˇche_û1_›t
, "il1:512:32:1:l",

776  
TRUE
, 
NULL
);

778 
	`›t_ªg_nŸe
(
odb
,

792 
	`›t_ªg_öt
(
odb
, "-cache:il1lat",

794 &
ˇche_û1_œt
, 1,

795  
TRUE
, 
NULL
);

797 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

799 &
ˇche_û2_›t
, "dl2",

800  
TRUE
, 
NULL
);

802 
	`›t_ªg_öt
(
odb
, "-cache:il2lat",

804 &
ˇche_û2_œt
, 6,

805  
TRUE
, 
NULL
);

807 
	`›t_ªg_Êag
(
odb
, "-cache:flush", "flush caches on system calls",

808 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

810 
	`›t_ªg_Êag
(
odb
, "-cache:icompress",

812 &
com¥ess_iˇche_addrs
, 
FALSE
,

813  
TRUE
, 
NULL
);

816 
	`›t_ªg_öt_li°
(
odb
, "-mem:lat",

818 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

819  
TRUE
, 
NULL
, 
FALSE
);

821 
	`›t_ªg_öt
(
odb
, "-mem:width", "memoryáccess bus width (in bytes)",

822 &
mem_bus_width
, 8,

823  
TRUE
, 
NULL
);

827 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

829 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

831 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

833 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

835 
	`›t_ªg_öt
(
odb
, "-tlb:lat",

837 &
éb_miss_œt
, 30,

838  
TRUE
, 
NULL
);

842 
	`›t_ªg_öt
(
odb
, "-res:ialu",

844 &
ªs_ülu
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

845  
TRUE
, 
NULL
);

847 
	`›t_ªg_öt
(
odb
, "-res:imult",

849 &
ªs_imu…
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

850  
TRUE
, 
NULL
);

852 
	`›t_ªg_öt
(
odb
, "-res:memport",

854 &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

855  
TRUE
, 
NULL
);

857 
	`›t_ªg_öt
(
odb
, "-res:fpalu",

859 &
ªs_ÂÆu
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

860  
TRUE
, 
NULL
);

862 
	`›t_ªg_öt
(
odb
, "-res:fpmult",

864 &
ªs_Âmu…
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

865  
TRUE
, 
NULL
);

867 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

869 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

870  
FALSE
, 
NULL
, 
TRUE
);

872 
	`›t_ªg_Êag
(
odb
, "-bugcompat",

874 &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

875 
	}
}

879 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

880 
¨gc
, **
¨gv
)

882 
«me
[128], 
c
;

883 
n£ts
, 
bsize
, 
assoc
;

885 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

886 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

888 i‡(
ruu_ifq_size
 < 1 || (ruu_ifq_size & (ruu_ifq_size - 1)) != 0)

889 
	`Áèl
("inst fetch queue size must beÖositive > 0ándáÖower ofÅwo");

891 i‡(
ruu_bønch_≥«…y
 < 1)

892 
	`Áèl
("mis-predictionÖenalty must beátÜeast 1 cycle");

894 i‡(
„tch_•ìd
 < 1)

895 
	`Áèl
("front-end speed must beÖositiveándÇon-zero");

897 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "perfect"))

900 
¥ed
 = 
NULL
;

901 
¥ed_≥r„˘
 = 
TRUE
;

903 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

906 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

908 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

911 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

913 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

916 i‡(
bimod_√…
 != 1)

917 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

918 i‡(
btb_√…
 != 2)

919 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

922 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

923  
bimod_c⁄fig
[0],

929  
btb_c⁄fig
[0],

930  
btb_c⁄fig
[1],

931  
øs_size
);

933 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

936 i‡(
twﬁev_√…
 != 4)

937 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

938 i‡(
btb_√…
 != 2)

939 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

941 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

943  
twﬁev_c⁄fig
[0],

944  
twﬁev_c⁄fig
[1],

946  
twﬁev_c⁄fig
[2],

947  
twﬁev_c⁄fig
[3],

948  
btb_c⁄fig
[0],

949  
btb_c⁄fig
[1],

950  
øs_size
);

952 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

955 i‡(
twﬁev_√…
 != 4)

956 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

957 i‡(
bimod_√…
 != 1)

958 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

959 i‡(
comb_√…
 != 1)

960 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

961 i‡(
btb_√…
 != 2)

962 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

964 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

965  
bimod_c⁄fig
[0],

966  
twﬁev_c⁄fig
[0],

967  
twﬁev_c⁄fig
[1],

968  
comb_c⁄fig
[0],

969  
twﬁev_c⁄fig
[2],

970  
twﬁev_c⁄fig
[3],

971  
btb_c⁄fig
[0],

972  
btb_c⁄fig
[1],

973  
øs_size
);

976 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

978 i‡(!
b¥ed_•ec_›t
)

979 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

980 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "ID"))

981 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

982 i‡(!
	`my°ricmp
(
b¥ed_•ec_›t
, "WB"))

983 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

985 
	`Áèl
("bad speculative update stage specifier, use {ID|WB}");

987 i‡(
ruu_decode_width
 < 1 || (ruu_decode_width & (ruu_decode_width-1)) != 0)

988 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

990 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width-1)) != 0)

991 
	`Áèl
("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

993 i‡(
ruu_commô_width
 < 1)

994 
	`Áèl
("commit width must beÖositiveÇon-zero");

996 i‡(
RUU_size
 < 2 || (RUU_size & (RUU_size-1)) != 0)

997 
	`Áèl
("RUU size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

999 i‡(
LSQ_size
 < 2 || (LSQ_size & (LSQ_size-1)) != 0)

1000 
	`Áèl
("LSQ size must beáÖositiveÇumber > 1ándáÖower ofÅwo");

1003 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

1005 
ˇche_dl1
 = 
NULL
;

1008 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

1009 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

1010 
ˇche_dl2
 = 
NULL
;

1014 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

1015 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1016 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1017 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1018  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1019 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
);

1022 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

1023 
ˇche_dl2
 = 
NULL
;

1026 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

1027 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1028 
	`Áèl
("badÜ2 D-cacheÖarms: "

1030 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1031  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1032 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
);

1037 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

1039 
ˇche_û1
 = 
NULL
;

1042 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1043 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1044 
ˇche_û2
 = 
NULL
;

1046 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

1048 i‡(!
ˇche_dl1
)

1049 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

1050 
ˇche_û1
 = 
ˇche_dl1
;

1053 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1054 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1055 
ˇche_û2
 = 
NULL
;

1057 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

1059 i‡(!
ˇche_dl2
)

1060 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

1061 
ˇche_û1
 = 
ˇche_dl2
;

1064 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

1065 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

1066 
ˇche_û2
 = 
NULL
;

1070 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

1071 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1072 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

1073 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1074  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1075 
û1_ac˚ss_‚
, 
ˇche_û1_œt
);

1078 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

1079 
ˇche_û2
 = 
NULL
;

1080 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

1082 i‡(!
ˇche_dl2
)

1083 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

1084 
ˇche_û2
 = 
ˇche_dl2
;

1088 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

1089 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1090 
	`Áèl
("badÜ2 I-cacheÖarms: "

1092 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1093  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

1094 
û2_ac˚ss_‚
, 
ˇche_û2_œt
);

1099 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

1100 
ôlb
 = 
NULL
;

1103 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

1104 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1105 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1106 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1107  (
md_addr_t
), 
assoc
,

1108 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

1113 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

1114 
déb
 = 
NULL
;

1117 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

1118 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

1119 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

1120 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

1121  (
md_addr_t
), 
assoc
,

1122 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

1126 i‡(
ˇche_dl1_œt
 < 1)

1127 
	`Áèl
("l1 data cacheÜatency must be greaterÅhan zero");

1129 i‡(
ˇche_dl2_œt
 < 1)

1130 
	`Áèl
("l2 data cacheÜatency must be greaterÅhan zero");

1132 i‡(
ˇche_û1_œt
 < 1)

1133 
	`Áèl
("l1 instruction cacheÜatency must be greaterÅhan zero");

1135 i‡(
ˇche_û2_œt
 < 1)

1136 
	`Áèl
("l2 instruction cacheÜatency must be greaterÅhan zero");

1138 i‡(
mem_√…
 != 2)

1139 
	`Áèl
("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

1141 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

1142 
	`Áèl
("all memoryáccessÜatencies must be greaterÅhan zero");

1144 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width-1)) != 0)

1145 
	`Áèl
("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

1147 i‡(
éb_miss_œt
 < 1)

1148 
	`Áèl
("TLB missÜatency must be greaterÅhan zero");

1150 i‡(
ªs_ülu
 < 1)

1151 
	`Áèl
("number of integer ALU's must be greaterÅhan zero");

1152 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

1153 
	`Áèl
("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

1154 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

1156 i‡(
ªs_imu…
 < 1)

1157 
	`Áèl
("number of integer multiplier/dividers must be greaterÅhan zero");

1158 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

1159 
	`Áèl
("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

1160 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

1162 i‡(
ªs_memp‹t
 < 1)

1163 
	`Áèl
("number of memory systemÖorts must be greaterÅhan zero");

1164 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

1165 
	`Áèl
("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

1166 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

1168 i‡(
ªs_ÂÆu
 < 1)

1169 
	`Áèl
("number of floatingÖoint ALU's must be greaterÅhan zero");

1170 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

1171 
	`Áèl
("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

1172 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

1174 i‡(
ªs_Âmu…
 < 1)

1175 
	`Áèl
("number of floatingÖoint multiplier/dividers must be > zero");

1176 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

1177 
	`Áèl
("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

1178 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

1179 
	}
}

1183 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

1186 
	}
}

1190 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

1192 
i
;

1193 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

1195 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

1196 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

1198 &
sim_num_ªfs
, 0, 
NULL
);

1199 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_loads",

1201 &
sim_num_lﬂds
, 0, 
NULL
);

1202 
	`°©_ªg_f‹muœ
(
sdb
, "sim_num_stores",

1204 "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

1205 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

1207 &
sim_num_bønches
, 0, 
NULL
);

1208 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

1210 &
sim_ñ≠£d_time
, 0, 
NULL
);

1211 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

1213 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

1215 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_insn",

1217 &
sim_tŸÆ_ö¢
, 0, 
NULL
);

1218 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_refs",

1220 &
sim_tŸÆ_ªfs
, 0, 
NULL
);

1221 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_loads",

1223 &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

1224 
	`°©_ªg_f‹muœ
(
sdb
, "sim_total_stores",

1226 "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

1227 
	`°©_ªg_cou¡î
(
sdb
, "sim_total_branches",

1229 &
sim_tŸÆ_bønches
, 0, 
NULL
);

1232 
	`°©_ªg_cou¡î
(
sdb
, "sim_cycle",

1234 &
sim_cy˛e
, 0, 
NULL
);

1235 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPC",

1237 "sim_num_ö¢ / sim_cy˛e", 
NULL
);

1238 
	`°©_ªg_f‹muœ
(
sdb
, "sim_CPI",

1240 "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

1241 
	`°©_ªg_f‹muœ
(
sdb
, "sim_exec_BW",

1243 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1244 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

1246 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

1249 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_count", "cumulative IFQ occupancy",

1250 &
IFQ_cou¡
, 0, 
NULL
);

1251 
	`°©_ªg_cou¡î
(
sdb
, "IFQ_fcount", "cumulative IFQ full count",

1252 &
IFQ_fcou¡
, 0, 
NULL
);

1253 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_occupancy", "avg IFQ occupancy (insn's)",

1254 "IFQ_cou¡ / sim_cy˛e", 
NULL
);

1255 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_rate", "avg IFQ dispatchÑate (insn/cycle)",

1256 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1257 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_latency", "avg IFQ occupantÜatency (cycle's)",

1258 "ifq_occu∑ncy / ifq_øã", 
NULL
);

1259 
	`°©_ªg_f‹muœ
(
sdb
, "ifq_full", "fraction ofÅime (cycle's) IFQ was full",

1260 "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

1262 
	`°©_ªg_cou¡î
(
sdb
, "RUU_count", "cumulative RUU occupancy",

1263 &
RUU_cou¡
, 0, 
NULL
);

1264 
	`°©_ªg_cou¡î
(
sdb
, "RUU_fcount", "cumulative RUU full count",

1265 &
RUU_fcou¡
, 0, 
NULL
);

1266 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_occupancy", "avg RUU occupancy (insn's)",

1267 "RUU_cou¡ / sim_cy˛e", 
NULL
);

1268 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_rate", "avg RUU dispatchÑate (insn/cycle)",

1269 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1270 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_latency", "avg RUU occupantÜatency (cycle's)",

1271 "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

1272 
	`°©_ªg_f‹muœ
(
sdb
, "ruu_full", "fraction ofÅime (cycle's) RUU was full",

1273 "RUU_fcou¡ / sim_cy˛e", 
NULL
);

1275 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_count", "cumulative LSQ occupancy",

1276 &
LSQ_cou¡
, 0, 
NULL
);

1277 
	`°©_ªg_cou¡î
(
sdb
, "LSQ_fcount", "cumulative LSQ full count",

1278 &
LSQ_fcou¡
, 0, 
NULL
);

1279 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_occupancy", "avg LSQ occupancy (insn's)",

1280 "LSQ_cou¡ / sim_cy˛e", 
NULL
);

1281 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_rate", "avg LSQ dispatchÑate (insn/cycle)",

1282 "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

1283 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_latency", "avg LSQ occupantÜatency (cycle's)",

1284 "lsq_occu∑ncy /Üsq_øã", 
NULL
);

1285 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_full", "fraction ofÅime (cycle's) LSQ was full",

1286 "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

1288 
	`°©_ªg_cou¡î
(
sdb
, "sim_slip",

1290 &
sim_¶ù
, 0, 
NULL
);

1292 
	`°©_ªg_f‹muœ
(
sdb
, "avg_sim_slip",

1294 "sim_¶ù / sim_num_ö¢", 
NULL
);

1297 i‡(
¥ed
)

1298 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

1301 i‡(
ˇche_û1


1302 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

1303 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

1304 i‡(
ˇche_û2


1305 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

1306 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

1307 i‡(
ˇche_dl1
)

1308 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

1309 i‡(
ˇche_dl2
)

1310 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

1311 i‡(
ôlb
)

1312 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

1313 i‡(
déb
)

1314 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

1317 
	`°©_ªg_cou¡î
(
sdb
, "sim_invalid_addrs",

1319 &
sim_övÆid_addrs
, 0, 
NULL
);

1321 
i
=0; i<
pc°©_√…
; i++)

1323 
buf
[512], 
buf1
[512];

1324 
°©_°©_t
 *
°©
;

1329 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

1330 i‡(!
°©
)

1331 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

1334 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

1335 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

1336 
°©
->
«me
);

1339 
pc°©_°©s
[
i
] = 
°©
;

1340 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

1343 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

1344 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

1345 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

1347  (
PF_COUNT
|
PF_PDF
),

1349  
NULL
);

1351 
	`ld_ªg_°©s
(
sdb
);

1352 
	`mem_ªg_°©s
(
mem
, 
sdb
);

1353 
	}
}

1356 
ruu_öô
();

1357 
lsq_öô
();

1358 
r¶ök_öô
(
∆öks
);

1359 
evítq_öô
();

1360 
ªadyq_öô
();

1361 
cv_öô
();

1362 
åa˚r_öô
();

1363 
„tch_öô
();

1367 
	$sim_öô
()

1369 
sim_num_ªfs
 = 0;

1372 
	`ªgs_öô
(&
ªgs
);

1375 
mem
 = 
	`mem_¸óã
("mem");

1376 
	`mem_öô
(
mem
);

1377 
	}
}

1381 
simoo_ªg_obj
(
ªgs_t
 *
ªgs
,

1382 
is_wrôe
,

1383 
md_ªg_ty≥
 
π
,

1384 
ªg
,

1385 
evÆ_vÆue_t
 *
vÆ
);

1389 
simoo_mem_obj
(
mem_t
 *
mem
,

1390 
is_wrôe
,

1391 
md_addr_t
 
addr
,

1392 *
p
,

1393 
nbyãs
);

1397 
simoo_m°©e_obj
(
FILE
 *
°ªam
,

1398 *
cmd
,

1399 
ªgs_t
 *
ªgs
,

1400 
mem_t
 *
mem
);

1403 
	#MAX_RS_LINKS
 4096

	)

1407 
	$sim_lﬂd_¥og
(*
‚ame
,

1408 
¨gc
, **
¨gv
,

1409 **
ívp
)

1412 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

1415 i‡(
±ø˚_√…
 == 2)

1418 
	`±ø˚_›í
–
±ø˚_›ts
[0],Ötrace_opts[1]);

1420 i‡(
±ø˚_√…
 == 0)

1425 
	`Áèl
("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

1428 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
(fu_config));

1429 
	`r¶ök_öô
(
MAX_RS_LINKS
);

1430 
	`åa˚r_öô
();

1431 
	`„tch_öô
();

1432 
	`cv_öô
();

1433 
	`evítq_öô
();

1434 
	`ªadyq_öô
();

1435 
	`ruu_öô
();

1436 
	`lsq_öô
();

1439 
	`dlôe_öô
(
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

1440 
	}
}

1444 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

1447 
	}
}

1451 
	$sim_unöô
()

1453 i‡(
±ø˚_√…
 > 0)

1454 
	`±ø˚_˛o£
();

1455 
	}
}

1463 
	tINST_TAG_TYPE
;

1468 
	tINST_SEQ_TYPE
;

1472 
	#MAX_IDEPS
 3

	)

1475 
	#MAX_ODEPS
 2

	)

1490 
	sRUU_°©i⁄
 {

1492 
md_ö°_t
 
	mIR
;

1493 
md_›code
 
	m›
;

1494 
md_addr_t
 
	mPC
, 
	m√xt_PC
, 
	m¥ed_PC
;

1495 
	mö_LSQ
;

1496 
	mó_comp
;

1497 
	mªcovî_ö°
;

1498 
	m°ack_ªcovî_idx
;

1499 
b¥ed_upd©e_t
 
	mdú_upd©e
;

1500 
	m•ec_mode
;

1501 
md_addr_t
 
	maddr
;

1502 
INST_TAG_TYPE
 
	mèg
;

1504 
INST_SEQ_TYPE
 
	m£q
;

1506 
	m±ø˚_£q
;

1507 
	m¶ù
;

1509 
	mqueued
;

1510 
	missued
;

1511 
	mcom∂ëed
;

1515 
	m⁄ames
[
MAX_ODEPS
];

1516 
RS_lök
 *
	modï_li°
[
MAX_ODEPS
];

1524 
	midï_ªady
[
MAX_IDEPS
];

1528 
	#OPERANDS_READY
(
RS
) \

1529 ((
RS
)->
idï_ªady
[0] && (RS)->idï_ªady[1] && (RS)->idï_ªady[2])

	)

1533 
RUU_°©i⁄
 *
	gRUU
;

1534 
	gRUU_hód
, 
	gRUU_èû
;

1535 
	gRUU_num
;

1539 
	$ruu_öô
()

1541 
RUU
 = 
	`ˇŒoc
(
RUU_size
, (
RUU_°©i⁄
));

1542 i‡(!
RUU
)

1543 
	`Áèl
("out of virtual memory");

1545 
RUU_num
 = 0;

1546 
RUU_hód
 = 
RUU_èû
 = 0;

1547 
RUU_cou¡
 = 0;

1548 
RUU_fcou¡
 = 0;

1549 
	}
}

1553 
	$ruu_dum≥¡
(
RUU_°©i⁄
 *
rs
,

1554 
ödex
,

1555 
FILE
 *
°ªam
,

1556 
hódî
)

1558 i‡(!
°ªam
)

1559 
°ªam
 = 
°dîr
;

1561 i‡(
hódî
)

1562 
	`Ârötf
(
°ªam
, "idx: %2d: opcode: %s, inst: `",

1563 
ödex
, 
	`MD_OP_NAME
(
rs
->
›
));

1565 
	`Ârötf
(
°ªam
, " opcode: %s, inst: `",

1566 
	`MD_OP_NAME
(
rs
->
›
));

1567 
	`md_¥öt_ö¢
(
rs
->
IR
,Ñs->
PC
, 
°ªam
);

1568 
	`Ârötf
(
°ªam
, "'\n");

1569 
	`myÂrötf
(
°ªam
, " PC: 0x%08p, NPC: 0x%08p (pred_PC: 0x%08p)\n",

1570 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

1571 
	`Ârötf
(
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecover_inst: %s\n",

1572 
rs
->
ö_LSQ
 ? "t" : "f",

1573 
rs
->
ó_comp
 ? "t" : "f",

1574 
rs
->
ªcovî_ö°
 ? "t" : "f");

1575 
	`myÂrötf
(
°ªam
, " spec_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n",

1576 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

1577 
	`Ârötf
(
°ªam
, " seq: 0x%08x,Ötrace_seq: 0x%08x\n",

1578 
rs
->
£q
,Ñs->
±ø˚_£q
);

1579 
	`Ârötf
(
°ªam
, " queued: %s, issued: %s, completed: %s\n",

1580 
rs
->
queued
 ? "t" : "f",

1581 
rs
->
issued
 ? "t" : "f",

1582 
rs
->
com∂ëed
 ? "t" : "f");

1583 
	`Ârötf
(
°ªam
, " operandsÑeady: %s\n",

1584 
	`OPERANDS_READY
(
rs
) ? "t" : "f");

1585 
	}
}

1589 
	$ruu_dump
(
FILE
 *
°ªam
)

1591 
num
, 
hód
;

1592 
RUU_°©i⁄
 *
rs
;

1594 i‡(!
°ªam
)

1595 
°ªam
 = 
°dîr
;

1597 
	`Ârötf
(
°ªam
, "** RUU state **\n");

1598 
	`Ârötf
(
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
RUU_hód
, 
RUU_èû
);

1599 
	`Ârötf
(
°ªam
, "RUU_num: %d\n", 
RUU_num
);

1601 
num
 = 
RUU_num
;

1602 
hód
 = 
RUU_hód
;

1603 
num
)

1605 
rs
 = &
RUU
[
hód
];

1606 
	`ruu_dum≥¡
(
rs
,Ñ†- 
RUU
, 
°ªam
, 
TRUE
);

1607 
hód
 = (hód + 1Ë% 
RUU_size
;

1608 
num
--;

1610 
	}
}

1640 
RUU_°©i⁄
 *
	gLSQ
;

1641 
	gLSQ_hód
, 
	gLSQ_èû
;

1642 
	gLSQ_num
;

1649 
	#STORE_OP_INDEX
 0

	)

1650 
	#STORE_ADDR_INDEX
 1

	)

1652 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

1653 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

1657 
	$lsq_öô
()

1659 
LSQ
 = 
	`ˇŒoc
(
LSQ_size
, (
RUU_°©i⁄
));

1660 i‡(!
LSQ
)

1661 
	`Áèl
("out of virtual memory");

1663 
LSQ_num
 = 0;

1664 
LSQ_hód
 = 
LSQ_èû
 = 0;

1665 
LSQ_cou¡
 = 0;

1666 
LSQ_fcou¡
 = 0;

1667 
	}
}

1671 
	$lsq_dump
(
FILE
 *
°ªam
)

1673 
num
, 
hód
;

1674 
RUU_°©i⁄
 *
rs
;

1676 i‡(!
°ªam
)

1677 
°ªam
 = 
°dîr
;

1679 
	`Ârötf
(
°ªam
, "** LSQ state **\n");

1680 
	`Ârötf
(
°ªam
, "LSQ_hód: %d, LSQ_èû: %d\n", 
LSQ_hód
, 
LSQ_èû
);

1681 
	`Ârötf
(
°ªam
, "LSQ_num: %d\n", 
LSQ_num
);

1683 
num
 = 
LSQ_num
;

1684 
hód
 = 
LSQ_hód
;

1685 
num
)

1687 
rs
 = &
LSQ
[
hód
];

1688 
	`ruu_dum≥¡
(
rs
,Ñ†- 
LSQ
, 
°ªam
, 
TRUE
);

1689 
hód
 = (hód + 1Ë% 
LSQ_size
;

1690 
num
--;

1692 
	}
}

1707 
	sRS_lök
 {

1708 
RS_lök
 *
	m√xt
;

1709 
RUU_°©i⁄
 *
	mrs
;

1710 
INST_TAG_TYPE
 
	mèg
;

1712 
tick_t
 
	mwhí
;

1713 
INST_SEQ_TYPE
 
	m£q
;

1714 
	m›num
;

1715 } 
	mx
;

1719 
RS_lök
 *
	gr¶ök_‰ì_li°
;

1722 
	#RSLINK_NULL_DATA
 { 
NULL
, NULL, 0 }

	)

1723 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

1726 
	#RSLINK_INIT
(
RSL
, 
RS
) \

1727 ((
RSL
).
√xt
 = 
NULL
, (RSL).
rs
 = (
RS
), (RSL).
èg
 = (RS)->èg)

	)

1730 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

1733 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

1736 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

1739 
	#RSLINK_NEW
(
DST
, 
RS
) \

1740 { 
RS_lök
 *
n_lök
; \

1741 i‡(!
r¶ök_‰ì_li°
) \

1742 
	`∑nic
("out ofÑsÜinks"); \

1743 
n_lök
 = 
r¶ök_‰ì_li°
; \

1744 
r¶ök_‰ì_li°
 =Ñ¶ök_‰ì_li°->
√xt
; \

1745 
n_lök
->
√xt
 = 
NULL
; \

1746 
n_lök
->
rs
 = (
RS
);Ç_lök->
èg
 =Ç_link->rs->tag; \

1747 (
DST
Ë
n_lök
; \

1748 }

	)

1751 
	#RSLINK_FREE
(
LINK
) \

1752 { 
RS_lök
 *
f_lök
 = (
LINK
); \

1753 
f_lök
->
rs
 = 
NULL
; f_lök->
èg
 = 0; \

1754 
f_lök
->
√xt
 = 
r¶ök_‰ì_li°
; \

1755 
r¶ök_‰ì_li°
 = 
f_lök
; \

1756 }

	)

1760 
	#RSLINK_FREE_LIST
(
LINK
) \

1761 { 
RS_lök
 *
Ê_lök
, *
Ê_lök_√xt
; \

1762 
Ê_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

1764 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

1765 
	`RSLINK_FREE
(
Ê_lök
); \

1767 }

	)

1771 
	$r¶ök_öô
(
∆öks
)

1773 
i
;

1774 
RS_lök
 *
lök
;

1776 
r¶ök_‰ì_li°
 = 
NULL
;

1777 
i
=0; i<
∆öks
; i++)

1779 
lök
 = 
	`ˇŒoc
(1, (
RS_lök
));

1780 i‡(!
lök
)

1781 
	`Áèl
("out of virtual memory");

1782 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

1783 
r¶ök_‰ì_li°
 = 
lök
;

1785 
	}
}

1792 
	$ruu_ªÀa£_fu
()

1794 
i
;

1797 
i
=0; i<
fu_poﬁ
->
num_ªsour˚s
; i++)

1800 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

1801 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

1803 
	}
}

1815 
RS_lök
 *
	gevít_queue
;

1819 
	$evítq_öô
()

1821 
evít_queue
 = 
NULL
;

1822 
	}
}

1826 
	$evítq_dump
(
FILE
 *
°ªam
)

1828 
RS_lök
 *
ev
;

1830 i‡(!
°ªam
)

1831 
°ªam
 = 
°dîr
;

1833 
	`Ârötf
(
°ªam
, "**Évent queue state **\n");

1835 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

1838 i‡(
	`RSLINK_VALID
(
ev
))

1840 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
ev
);

1842 
	`Ârötf
(
°ªam
, "idx: %2d: @ %.0f\n",

1843 ()(
rs
 - (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
)), ()
ev
->
x
.
whí
);

1844 
	`ruu_dum≥¡
(
rs
,Ñ†- (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
),

1845 
°ªam
, 
FALSE
);

1848 
	}
}

1854 
	$evítq_queue_evít
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
)

1856 
RS_lök
 *
¥ev
, *
ev
, *
√w_ev
;

1858 i‡(
rs
->
com∂ëed
)

1859 
	`∑nic
("event completed");

1861 i‡(
whí
 <
sim_cy˛e
)

1862 
	`∑nic
("event occurred inÅheÖast");

1865 
	`RSLINK_NEW
(
√w_ev
, 
rs
);

1866 
√w_ev
->
x
.
whí
 = when;

1869 
¥ev
=
NULL
, 
ev
=
evít_queue
;

1870 
ev
 &&Év->
x
.
whí
 < when;

1871 
¥ev
=
ev
,ÉvÛv->
√xt
);

1873 i‡(
¥ev
)

1876 
√w_ev
->
√xt
 = 
¥ev
->next;

1877 
¥ev
->
√xt
 = 
√w_ev
;

1882 
√w_ev
->
√xt
 = 
evít_queue
;

1883 
evít_queue
 = 
√w_ev
;

1885 
	}
}

1889 
RUU_°©i⁄
 *

1890 
	$evítq_√xt_evít
()

1892 
RS_lök
 *
ev
;

1894 i‡(
evít_queue
 &&Évít_queue->
x
.
whí
 <
sim_cy˛e
)

1897 
ev
 = 
evít_queue
;

1898 
evít_queue
 =Évít_queue->
√xt
;

1901 i‡(
	`RSLINK_VALID
(
ev
))

1903 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
ev
);

1906 
	`RSLINK_FREE
(
ev
);

1909  
rs
;

1914 
	`RSLINK_FREE
(
ev
);

1917  
	`evítq_√xt_evít
();

1923  
NULL
;

1925 
	}
}

1941 
RS_lök
 *
	gªady_queue
;

1945 
	$ªadyq_öô
()

1947 
ªady_queue
 = 
NULL
;

1948 
	}
}

1952 
	$ªadyq_dump
(
FILE
 *
°ªam
)

1954 
RS_lök
 *
lök
;

1956 i‡(!
°ªam
)

1957 
°ªam
 = 
°dîr
;

1959 
	`Ârötf
(
°ªam
, "**Ñeady queue state **\n");

1961 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

1964 i‡(
	`RSLINK_VALID
(
lök
))

1966 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
lök
);

1968 
	`ruu_dum≥¡
(
rs
,Ñ†- (rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
),

1969 
°ªam
, 
TRUE
);

1972 
	}
}

1988 
	$ªadyq_íqueue
(
RUU_°©i⁄
 *
rs
)

1990 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

1993 i‡(
rs
->
queued
)

1994 
	`∑nic
("node isálready queued");

1995 
rs
->
queued
 = 
TRUE
;

1998 
	`RSLINK_NEW
(
√w_node
, 
rs
);

1999 
√w_node
->
x
.
£q
 = 
rs
->seq;

2002 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
‘s->
›
Ë& (
F_LONGLAT
|
F_CTRL
))

2005 
¥ev
 = 
NULL
;

2006 
node
 = 
ªady_queue
;

2011 
¥ev
=
NULL
, 
node
=
ªady_queue
;

2012 
node
 &&Çode->
x
.
£q
 < 
rs
->seq;

2013 
¥ev
=
node
,ÇodeÚode->
√xt
);

2016 i‡(
¥ev
)

2019 
√w_node
->
√xt
 = 
¥ev
->next;

2020 
¥ev
->
√xt
 = 
√w_node
;

2025 
√w_node
->
√xt
 = 
ªady_queue
;

2026 
ªady_queue
 = 
√w_node
;

2028 
	}
}

2038 
	sCV_lök
 {

2039 
RUU_°©i⁄
 *
	mrs
;

2040 
	modï_num
;

2044 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

2047 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

2050 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

2055 
BITMAP_TYPE
(
MD_TOTAL_REGS
, 
u£_•ec_cv
);

2056 
CV_lök
 
	g¸óã_ve˘‹
[
MD_TOTAL_REGS
];

2057 
CV_lök
 
	g•ec_¸óã_ve˘‹
[
MD_TOTAL_REGS
];

2061 
tick_t
 
	g¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

2062 
tick_t
 
	g•ec_¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

2065 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

2066 ? 
•ec_¸óã_ve˘‹
[
N
] \

2067 : 
¸óã_ve˘‹
[
N
])

	)

2070 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

2071 ? 
•ec_¸óã_ve˘‹_π
[
N
] \

2072 : 
¸óã_ve˘‹_π
[
N
])

	)

2075 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë(
•ec_mode
 \

2076 ? (
	`BITMAP_SET
(
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

2077 
•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

2078 : (
¸óã_ve˘‹
[
N
] = (
L
)))

	)

2082 
	$cv_öô
()

2084 
i
;

2088 
i
=0; i < 
MD_TOTAL_REGS
; i++)

2090 
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

2091 
¸óã_ve˘‹_π
[
i
] = 0;

2092 
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

2093 
•ec_¸óã_ve˘‹_π
[
i
] = 0;

2097 
	`BITMAP_CLEAR_MAP
(
u£_•ec_cv
, 
CV_BMAP_SZ
);

2098 
	}
}

2102 
	$cv_dump
(
FILE
 *
°ªam
)

2104 
i
;

2105 
CV_lök
 
ít
;

2107 i‡(!
°ªam
)

2108 
°ªam
 = 
°dîr
;

2110 
	`Ârötf
(
°ªam
, "** create vector state **\n");

2112 
i
=0; i < 
MD_TOTAL_REGS
; i++)

2114 
ít
 = 
	`CREATE_VECTOR
(
i
);

2115 i‡(!
ít
.
rs
)

2116 
	`Ârötf
(
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

2118 
	`Ârötf
(
°ªam
, "[cv%02d]: from %s, idx: %d\n",

2119 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),

2120 ()(
ít
.
rs
 - (ít.rs->
ö_LSQ
 ? 
LSQ
 : 
RUU
)));

2122 
	}
}

2133 
	$ruu_commô
()

2135 
i
, 
œt
, 
evíts
, 
commôãd
 = 0;

2136 
cou¡î_t
 
sim_ªt_ö¢
 = 0;

2139 
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

2141 
RUU_°©i⁄
 *
rs
 = &(
RUU
[
RUU_hód
]);

2143 i‡(!
rs
->
com∂ëed
)

2150 
evíts
 = 0;

2153 i‡(
RUU
[
RUU_hód
].
ó_comp
)

2156 i‡(
LSQ_num
 <0 || !
LSQ
[
LSQ_hód
].
ö_LSQ
)

2157 
	`∑nic
("RUU out of sync with LSQ");

2160 i‡(!
LSQ
[
LSQ_hód
].
com∂ëed
)

2166 i‡((
	`MD_OP_FLAGS
(
LSQ
[
LSQ_hód
].
›
Ë& (
F_MEM
|
F_STORE
))

2167 =(
F_MEM
|
F_STORE
))

2169 
ªs_ãm∂©e
 *
fu
;

2174 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
LSQ
[
LSQ_hód
].
›
));

2175 i‡(
fu
)

2178 i‡(
fu
->
ma°î
->
busy
)

2179 
	`∑nic
("functional unitálready in use");

2182 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

2185 i‡(
ˇche_dl1
)

2188 
œt
 =

2189 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
LSQ
[
LSQ_hód
].
addr
&~3),

2190 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2191 i‡(
œt
 > 
ˇche_dl1_œt
)

2192 
evíts
 |
PEV_CACHEMISS
;

2196 i‡(
déb
)

2199 
œt
 =

2200 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
LSQ
[
LSQ_hód
].
addr
 & ~3),

2201 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2202 i‡(
œt
 > 1)

2203 
evíts
 |
PEV_TLBMISS
;

2214 
LSQ
[
LSQ_hód
].
èg
++;

2215 
sim_¶ù
 +(
sim_cy˛e
 - 
LSQ
[
LSQ_hód
].
¶ù
);

2218 
	`±ø˚_√w°age
(
LSQ
[
LSQ_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

2219 
	`±ø˚_ídö°
(
LSQ
[
LSQ_hód
].
±ø˚_£q
);

2222 
LSQ_hód
 = (LSQ_hód + 1Ë% 
LSQ_size
;

2223 
LSQ_num
--;

2226 i‡(
¥ed


2227 && 
b¥ed_•ec_upd©e
 =
•ec_CT


2228 && (
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_CTRL
))

2230 
	`b¥ed_upd©e
(
¥ed
,

2231  
rs
->
PC
,

2232  
rs
->
√xt_PC
,

2233  
rs
->
√xt_PC
 !‘s->
PC
 +

2234 (
md_ö°_t
)),

2235  
rs
->
¥ed_PC
 !‘s->
PC
 +

2236 (
md_ö°_t
)),

2237  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

2238  
rs
->
›
,

2239  &
rs
->
dú_upd©e
);

2243 
RUU
[
RUU_hód
].
èg
++;

2244 
sim_¶ù
 +(
sim_cy˛e
 - 
RUU
[
RUU_hód
].
¶ù
);

2246 i‡(
vîbo£
)

2248 
sim_ªt_ö¢
++;

2249 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_ªt_ö¢
, 
RUU
[
RUU_hód
].
PC
);

2250 
	`md_¥öt_ö¢
(
RUU
[
RUU_hód
].
IR
, RUU[RUU_hód].
PC
, 
°dîr
);

2251 i‡(
	`MD_OP_FLAGS
(
RUU
[
RUU_hód
].
›
Ë& 
F_MEM
)

2252 
	`myÂrötf
(
°dîr
, " mem: 0x%08p", 
RUU
[
RUU_hód
].
addr
);

2253 
	`Ârötf
(
°dîr
, "\n");

2258 
	`±ø˚_√w°age
(
RUU
[
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

2259 
	`±ø˚_ídö°
(
RUU
[
RUU_hód
].
±ø˚_£q
);

2262 
RUU_hód
 = (RUU_hód + 1Ë% 
RUU_size
;

2263 
RUU_num
--;

2266 
commôãd
++;

2268 
i
=0; i<
MAX_ODEPS
; i++)

2270 i‡(
rs
->
odï_li°
[
i
])

2271 
	`∑nic
 ("retired instruction has odeps\n");

2274 
	}
}

2284 
	$ruu_ªcovî
(
bønch_ödex
)

2286 
i
, 
RUU_ödex
 = 
RUU_èû
, 
LSQ_ödex
 = 
LSQ_èû
;

2287 
RUU_¥ev_èû
 = 
RUU_èû
, 
LSQ_¥ev_èû
 = 
LSQ_èû
;

2294 
RUU_ödex
 = (RUU_ödex + (
RUU_size
-1)) % RUU_size;

2295 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

2298 
RUU_ödex
 !
bønch_ödex
)

2301 i‡(!
RUU_num
)

2302 
	`∑nic
("empty RUU");

2305 i‡(
RUU_ödex
 =
RUU_hód
)

2306 
	`∑nic
("RUU headándÅail broken");

2309 i‡(
RUU
[
RUU_ödex
].
ó_comp
)

2312 i‡(!
LSQ_num
)

2313 
	`∑nic
("RUUánd LSQ out of sync");

2316 
i
=0; i<
MAX_ODEPS
; i++)

2318 
	`RSLINK_FREE_LIST
(
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

2320 
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

2324 
LSQ
[
LSQ_ödex
].
èg
++;

2327 
	`±ø˚_ídö°
(
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

2330 
LSQ_¥ev_èû
 = 
LSQ_ödex
;

2331 
LSQ_ödex
 = (LSQ_ödex + (
LSQ_size
-1)) % LSQ_size;

2332 
LSQ_num
--;

2336 
i
=0; i<
MAX_ODEPS
; i++)

2338 
	`RSLINK_FREE_LIST
(
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

2340 
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

2344 
RUU
[
RUU_ödex
].
èg
++;

2347 
	`±ø˚_ídö°
(
RUU
[
RUU_ödex
].
±ø˚_£q
);

2350 
RUU_¥ev_èû
 = 
RUU_ödex
;

2351 
RUU_ödex
 = (RUU_ödex + (
RUU_size
-1)) % RUU_size;

2352 
RUU_num
--;

2356 
RUU_èû
 = 
RUU_¥ev_èû
;

2357 
LSQ_èû
 = 
LSQ_¥ev_èû
;

2362 
	`BITMAP_CLEAR_MAP
(
u£_•ec_cv
, 
CV_BMAP_SZ
);

2365 
	}
}

2373 
åa˚r_ªcovî
();

2381 
	$ruu_wrôeback
()

2383 
i
;

2384 
RUU_°©i⁄
 *
rs
;

2387 (
rs
 = 
	`evítq_√xt_evít
()))

2390 i‡(!
	`OPERANDS_READY
(
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

2391 
	`∑nic
("inst completedánd !ready, !issued, or completed");

2394 
rs
->
com∂ëed
 = 
TRUE
;

2397 i‡(
rs
->
ªcovî_ö°
)

2399 i‡(
rs
->
ö_LSQ
)

2400 
	`∑nic
("mis-predictedÜoad or store?!?!?");

2403 
	`ruu_ªcovî
(
rs
 - 
RUU
);

2404 
	`åa˚r_ªcovî
();

2405 
	`b¥ed_ªcovî
(
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
);

2408 
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

2414 i‡(
¥ed


2415 && 
b¥ed_•ec_upd©e
 =
•ec_WB


2416 && !
rs
->
ö_LSQ


2417 && (
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_CTRL
))

2419 
	`b¥ed_upd©e
(
¥ed
,

2420  
rs
->
PC
,

2421  
rs
->
√xt_PC
,

2422  
rs
->
√xt_PC
 !‘s->
PC
 +

2423 (
md_ö°_t
)),

2424  
rs
->
¥ed_PC
 !‘s->
PC
 +

2425 (
md_ö°_t
)),

2426  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

2427  
rs
->
›
,

2428  &
rs
->
dú_upd©e
);

2432 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,

2433 
rs
->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

2438 
i
=0; i<
MAX_ODEPS
; i++)

2440 i‡(
rs
->
⁄ames
[
i
] !
NA
)

2442 
CV_lök
 
lök
;

2443 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

2445 i‡(
rs
->
•ec_mode
)

2449 
lök
 = 
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

2450 i‡–
lök
.
rs


2451 && (
lök
.
rs
 =r†&&Üök.
odï_num
 =
i
))

2455 
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

2456 
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

2465 
lök
 = 
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

2466 i‡–
lök
.
rs


2467 && (
lök
.
rs
 =r†&&Üök.
odï_num
 =
i
))

2471 
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

2472 
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

2478 
ﬁök
=
rs
->
odï_li°
[
i
]; olök; olök=
ﬁök_√xt
)

2480 i‡(
	`RSLINK_VALID
(
ﬁök
))

2482 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

2483 
	`∑nic
("output dependenceálready satisfied");

2486 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

2489 i‡(
	`OPERANDS_READY
(
ﬁök
->
rs
))

2494 i‡(!
ﬁök
->
rs
->
ö_LSQ


2495 || ((
	`MD_OP_FLAGS
(
ﬁök
->
rs
->
›
)&(
F_MEM
|
F_STORE
))

2496 =(
F_MEM
|
F_STORE
)))

2497 
	`ªadyq_íqueue
(
ﬁök
->
rs
);

2503 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

2506 
	`RSLINK_FREE
(
ﬁök
);

2509 
rs
->
odï_li°
[
i
] = 
NULL
;

2517 
	}
}

2528 
	#MAX_STD_UNKNOWNS
 64

	)

2530 
	$lsq_ª‰esh
()

2532 
i
, 
j
, 
ödex
, 
n_°d_unknowns
;

2533 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

2538 
i
=0, 
ödex
=
LSQ_hód
, 
n_°d_unknowns
=0;

2539 
i
 < 
LSQ_num
;

2540 
i
++, 
ödex
=(ödex + 1Ë% 
LSQ_size
)

2545 (
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

2547 i‡(!
	`STORE_ADDR_READY
(&
LSQ
[
ödex
]))

2553 i‡(!
	`OPERANDS_READY
(&
LSQ
[
ödex
]))

2559 i‡(
n_°d_unknowns
 =
MAX_STD_UNKNOWNS
)

2560 
	`Áèl
("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

2561 
°d_unknowns
[
n_°d_unknowns
++] = 
LSQ
[
ödex
].
addr
;

2566 
j
=0; j<
n_°d_unknowns
; j++)

2568 i‡(
°d_unknowns
[
j
] = 
LSQ
[
ödex
].
addr
)

2569 
°d_unknowns
[
j
] = 0;

2575 ((
	`MD_OP_FLAGS
(
LSQ
[
ödex
].
›
Ë& (
F_MEM
|
F_LOAD
)) == (F_MEM|F_LOAD))

2576 && !
LSQ
[
ödex
].
queued


2577 && !
LSQ
[
ödex
].
issued


2578 && !
LSQ
[
ödex
].
com∂ëed


2579 && 
	`OPERANDS_READY
(&
LSQ
[
ödex
]))

2583 
j
=0; j<
n_°d_unknowns
; j++)

2586 i‡(
°d_unknowns
[
j
] =
LSQ
[
ödex
].
addr
)

2589 i‡(
j
 =
n_°d_unknowns
)

2592 
	`ªadyq_íqueue
(&
LSQ
[
ödex
]);

2596 
	}
}

2611 
	$ruu_issue
()

2613 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

2614 
RS_lök
 *
node
, *
√xt_node
;

2615 
ªs_ãm∂©e
 *
fu
;

2624 
node
 = 
ªady_queue
;

2625 
ªady_queue
 = 
NULL
;

2630 
n_issued
=0;

2631 
node
 && 
n_issued
 < 
ruu_issue_width
;

2632 
node
 = 
√xt_node
)

2634 
√xt_node
 = 
node
->
√xt
;

2637 i‡(
	`RSLINK_VALID
(
node
))

2639 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
node
);

2642 i‡(!
	`OPERANDS_READY
(
rs
Ë|| !rs->
queued


2643 || 
rs
->
issued
 ||Ñs->
com∂ëed
)

2644 
	`∑nic
("issued inst !ready, issued, or completed");

2647 
rs
->
queued
 = 
FALSE
;

2649 i‡(
rs
->
ö_LSQ


2650 && ((
	`MD_OP_FLAGS
(
rs
->
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE)))

2656 
rs
->
issued
 = 
TRUE
;

2657 
rs
->
com∂ëed
 = 
TRUE
;

2658 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

2659 
	`∑nic
("store createsÑesult");

2661 i‡(
rs
->
ªcovî_ö°
)

2662 
	`∑nic
("mis-predicted store");

2665 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

2668 
n_issued
++;

2673 i‡(
	`MD_OP_FUCLASS
(
rs
->
›
Ë!
NA
)

2675 
fu
 = 
	`ªs_gë
(
fu_poﬁ
, 
	`MD_OP_FUCLASS
(
rs
->
›
));

2676 i‡(
fu
)

2679 
rs
->
issued
 = 
TRUE
;

2681 i‡(
fu
->
ma°î
->
busy
)

2682 
	`∑nic
("functional unitálready in use");

2685 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

2688 i‡(
rs
->
ö_LSQ


2689 && ((
	`MD_OP_FLAGS
(
rs
->
›
Ë& (
F_MEM
|
F_LOAD
))

2690 =(
F_MEM
|
F_LOAD
)))

2692 
evíts
 = 0;

2697 
lﬂd_œt
 = 0;

2698 
i
 = (
rs
 - 
LSQ
);

2699 i‡(
i
 !
LSQ_hód
)

2704 
i
 = (ò+ (
LSQ_size
-1)) % LSQ_size;

2707 i‡((
	`MD_OP_FLAGS
(
LSQ
[
i
].
›
Ë& 
F_STORE
)

2708 && (
LSQ
[
i
].
addr
 =
rs
->addr))

2711 
lﬂd_œt
 = 1;

2716 i‡(
i
 =
LSQ_hód
)

2722 i‡(!
lﬂd_œt
)

2724 
vÆid_addr
 = 
	`MD_VALID_ADDR
(
rs
->
addr
);

2726 i‡(!
•ec_mode
 && !
vÆid_addr
)

2727 
sim_övÆid_addrs
++;

2730 i‡(
ˇche_dl1
 && 
vÆid_addr
)

2733 
lﬂd_œt
 =

2734 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
,

2735 (
rs
->
addr
 & ~3), 
NULL
, 4,

2736 
sim_cy˛e
, 
NULL
, NULL);

2737 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

2738 
evíts
 |
PEV_CACHEMISS
;

2743 
lﬂd_œt
 = 
fu
->
›œt
;

2748 i‡(
déb
 && 
	`MD_VALID_ADDR
(
rs
->
addr
))

2752 
éb_œt
 =

2753 
	`ˇche_ac˚ss
(
déb
, 
Ród
, (
rs
->
addr
 & ~3),

2754 
NULL
, 4, 
sim_cy˛e
, NULL, NULL);

2755 i‡(
éb_œt
 > 1)

2756 
evíts
 |
PEV_TLBMISS
;

2759 
lﬂd_œt
 = 
	`MAX
(
éb_œt
,Üoad_lat);

2763 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
);

2766 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2767 ((
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0)

2768 | 
evíts
));

2773 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
fu
->
›œt
);

2776 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2777 
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0);

2781 
n_issued
++;

2788 
	`ªadyq_íqueue
(
rs
);

2795 
rs
->
issued
 = 
TRUE
;

2798 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 1);

2801 
	`±ø˚_√w°age
(
rs
->
±ø˚_£q
, 
PST_EXECUTE
,

2802 
rs
->
ó_comp
 ? 
PEV_AGEN
 : 0);

2805 
n_issued
++;

2816 
	`RSLINK_FREE
(
node
);

2821 ; 
node
;Çodê
√xt_node
)

2823 
√xt_node
 = 
node
->
√xt
;

2826 i‡(
	`RSLINK_VALID
(
node
))

2828 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
(
node
);

2831 
rs
->
queued
 = 
FALSE
;

2835 
	`ªadyq_íqueue
(
rs
);

2843 
	`RSLINK_FREE
(
node
);

2845 
	}
}

2854 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

2855 
BITMAP_TYPE
(
MD_NUM_IREGS
, 
u£_•ec_R
);

2856 
md_g¥_t
 
	g•ec_ªgs_R
;

2859 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

2860 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_F
);

2861 
md_Âr_t
 
	g•ec_ªgs_F
;

2864 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

2865 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_C
);

2866 
md_˘æ_t
 
	g•ec_ªgs_C
;

2870 
	$r•ec_dump
(
FILE
 *
°ªam
)

2872 
i
;

2874 i‡(!
°ªam
)

2875 
°ªam
 = 
°dîr
;

2877 
	`Ârötf
(
°ªam
, "** speculativeÑegister contents **\n");

2879 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

2882 
i
=0; i < 
MD_NUM_IREGS
; i++)

2884 i‡(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

2886 
	`md_¥öt_úeg
(
•ec_ªgs_R
, 
i
, 
°ªam
);

2887 
	`Ârötf
(
°ªam
, "\n");

2892 
i
=0; i < 
MD_NUM_FREGS
; i++)

2894 i‡(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

2896 
	`md_¥öt_Âªg
(
•ec_ªgs_F
, 
i
, 
°ªam
);

2897 
	`Ârötf
(
°ªam
, "\n");

2902 
i
=0; i < 
MD_NUM_CREGS
; i++)

2904 i‡(
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

2906 
	`md_¥öt_¸eg
(
•ec_ªgs_C
, 
i
, 
°ªam
);

2907 
	`Ârötf
(
°ªam
, "\n");

2910 
	}
}

2914 
	#STORE_HASH_SIZE
 32

	)

2919 
	s•ec_mem_ít
 {

2920 
•ec_mem_ít
 *
	m√xt
;

2921 
md_addr_t
 
	maddr
;

2922 
	md©a
[2];

2926 
•ec_mem_ít
 *
	g°‹e_hèbÀ
[
STORE_HASH_SIZE
];

2929 
•ec_mem_ít
 *
	gbuckë_‰ì_li°
 = 
NULL
;

2933 
md_addr_t
 
	g¥ed_PC
;

2934 
md_addr_t
 
	gªcovî_PC
;

2937 
md_addr_t
 
	g„tch_ªgs_PC
;

2938 
md_addr_t
 
	g„tch_¥ed_PC
;

2941 
	s„tch_ªc
 {

2942 
md_ö°_t
 
	mIR
;

2943 
md_addr_t
 
	mªgs_PC
, 
	m¥ed_PC
;

2944 
b¥ed_upd©e_t
 
	mdú_upd©e
;

2945 
	m°ack_ªcovî_idx
;

2946 
	m±ø˚_£q
;

2948 
„tch_ªc
 *
	g„tch_d©a
;

2949 
	g„tch_num
;

2950 
	g„tch_èû
, 
	g„tch_hód
;

2957 
	$åa˚r_ªcovî
()

2959 
i
;

2960 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

2963 i‡(!
•ec_mode
)

2964 
	`∑nic
("cannotÑecover unless in speculative mode");

2967 
•ec_mode
 = 
FALSE
;

2970 
	`BITMAP_CLEAR_MAP
(
u£_•ec_R
, 
R_BMAP_SZ
);

2971 
	`BITMAP_CLEAR_MAP
(
u£_•ec_F
, 
F_BMAP_SZ
);

2972 
	`BITMAP_CLEAR_MAP
(
u£_•ec_C
, 
C_BMAP_SZ
);

2976 
i
=0; i<
STORE_HASH_SIZE
; i++)

2979 
ít
=
°‹e_hèbÀ
[
i
];É¡;É¡=
ít_√xt
)

2981 
ít_√xt
 = 
ít
->
√xt
;

2982 
ít
->
√xt
 = 
buckë_‰ì_li°
;

2983 
buckë_‰ì_li°
 = 
ít
;

2985 
°‹e_hèbÀ
[
i
] = 
NULL
;

2989 i‡(
±ø˚_a˘ive
)

2991 
„tch_num
 != 0)

2994 
	`±ø˚_ídö°
(
„tch_d©a
[
„tch_hód
].
±ø˚_£q
);

2997 
„tch_hód
 = („tch_hód+1Ë& (
ruu_ifq_size
 - 1);

2998 
„tch_num
--;

3003 
„tch_num
 = 0;

3004 
„tch_èû
 = 
„tch_hód
 = 0;

3005 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªcovî_PC
;

3006 
	}
}

3010 
	$åa˚r_öô
()

3012 
i
;

3015 
•ec_mode
 = 
FALSE
;

3018 
	`BITMAP_CLEAR_MAP
(
u£_•ec_R
, 
R_BMAP_SZ
);

3019 
	`BITMAP_CLEAR_MAP
(
u£_•ec_F
, 
F_BMAP_SZ
);

3020 
	`BITMAP_CLEAR_MAP
(
u£_•ec_C
, 
C_BMAP_SZ
);

3023 
i
=0; i<
STORE_HASH_SIZE
; i++)

3024 
°‹e_hèbÀ
[
i
] = 
NULL
;

3025 
	}
}

3029 
	#HASH_ADDR
(
ADDR
) \

3030 ((((
ADDR
Ë>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

3041 
md_Áu…_ty≥


3042 
	$•ec_mem_ac˚ss
(
mem_t
 *
mem
,

3043 
mem_cmd
 
cmd
,

3044 
md_addr_t
 
addr
,

3045 *
p
,

3046 
nbyãs
)

3048 
i
, 
ödex
;

3049 
•ec_mem_ít
 *
ít
, *
¥ev
;

3055 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

3058 
i
=0; i < 
nbyãs
; i++)

3059 ((*)
p
)[
i
] = 0;

3061  
md_Áu…_n⁄e
;

3065 i‡(!((
addr
 >
ld_ãxt_ba£
 &&ádd∏< (ld_ãxt_ba£+
ld_ãxt_size
)

3066 && 
cmd
 =
Ród
)

3067 || 
	`MD_VALID_ADDR
(
addr
)))

3070 
i
=0; i < 
nbyãs
; i++)

3071 ((*)
p
)[
i
] = 0;

3073  
md_Áu…_n⁄e
;

3077 
ödex
 = 
	`HASH_ADDR
(
addr
);

3078 
¥ev
=
NULL
,
ít
=
°‹e_hèbÀ
[
ödex
];É¡;ÖªvÛ¡,ítÛ¡->
√xt
)

3080 i‡(
ít
->
addr
 ==áddr)

3083 i‡(
¥ev
 !
NULL
)

3086 
¥ev
->
√xt
 = 
ít
->next;

3087 
ít
->
√xt
 = 
°‹e_hèbÀ
[
ödex
];

3088 
°‹e_hèbÀ
[
ödex
] = 
ít
;

3095 i‡(!
ít
 && 
cmd
 =
Wrôe
)

3098 i‡(!
buckë_‰ì_li°
)

3101 
buckë_‰ì_li°
 = 
	`ˇŒoc
(1, (
•ec_mem_ít
));

3102 i‡(!
buckë_‰ì_li°
)

3103 
	`Áèl
("out of virtual memory");

3105 
ít
 = 
buckë_‰ì_li°
;

3106 
buckë_‰ì_li°
 = buckë_‰ì_li°->
√xt
;

3108 i‡(!
bugcom∑t_mode
)

3111 
ít
->
√xt
 = 
°‹e_hèbÀ
[
ödex
];

3112 
°‹e_hèbÀ
[
ödex
] = 
ít
;

3113 
ít
->
addr
 =áddr;

3114 
ít
->
d©a
[0] = 0;Ént->data[1] = 0;

3119 
nbyãs
)

3122 i‡(
cmd
 =
Ród
)

3124 i‡(
ít
)

3127 *((
byã_t
 *)
p
Ë*((byã_à*)(&
ít
->
d©a
[0]));

3133 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

3139 *((
byã_t
 *)(&
ít
->
d©a
[0])Ë*((byã_à*)
p
);

3143 i‡(
cmd
 =
Ród
)

3145 i‡(
ít
)

3148 *((
hÆf_t
 *)
p
Ë*((hÆf_à*)(&
ít
->
d©a
[0]));

3154 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

3160 *((
hÆf_t
 *)&
ít
->
d©a
[0]Ë*((hÆf_à*)
p
);

3164 i‡(
cmd
 =
Ród
)

3166 i‡(
ít
)

3169 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

3175 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

3181 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

3185 i‡(
cmd
 =
Ród
)

3187 i‡(
ít
)

3190 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

3191 *(((
w‹d_t
 *)
p
)+1Ë*((w‹d_à*)&
ít
->
d©a
[1]);

3197 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

3198 *(((
w‹d_t
 *)
p
)+1) =

3199 
	`MEM_READ_WORD
(
mem
, 
addr
 + (
w‹d_t
));

3205 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

3206 *((
w‹d_t
 *)&
ít
->
d©a
[1]Ë*(((w‹d_à*)
p
)+1);

3210 
	`∑nic
("access sizeÇot supported in mis-speculative mode");

3213  
md_Áu…_n⁄e
;

3214 
	}
}

3218 
	$m•ec_dump
(
FILE
 *
°ªam
)

3220 
i
;

3221 
•ec_mem_ít
 *
ít
;

3223 i‡(!
°ªam
)

3224 
°ªam
 = 
°dîr
;

3226 
	`Ârötf
(
°ªam
, "** speculative memory contents **\n");

3228 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

3230 
i
=0; i<
STORE_HASH_SIZE
; i++)

3233 
ít
=
°‹e_hèbÀ
[
i
];É¡;É¡Û¡->
√xt
)

3235 
	`myÂrötf
(
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n",

3236 
ít
->
addr
, ()(*((*Î¡->
d©a
)),

3237 *((*)&
ít
->
d©a
[0]),

3238 *(((*)&
ít
->
d©a
[0]) + 1));

3241 
	}
}

3245 
	$simoo_mem_obj
(
mem_t
 *
mem
,

3246 
is_wrôe
,

3247 
md_addr_t
 
addr
,

3248 *
p
,

3249 
nbyãs
)

3251 
mem_cmd
 
cmd
;

3253 i‡(!
is_wrôe
)

3254 
cmd
 = 
Ród
;

3256 
cmd
 = 
Wrôe
;

3259 *
îr°r
;

3261 
îr°r
 = 
	`mem_vÆid
(
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

3262 i‡(
îr°r
)

3263  
îr°r
;

3267 i‡(
•ec_mode
)

3268 
	`•ec_mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

3270 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

3273  
NULL
;

3274 
	}
}

3283 
INLINE
 

3284 
	$ruu_lök_idï
(
RUU_°©i⁄
 *
rs
,

3285 
idï_num
,

3286 
idï_«me
)

3288 
CV_lök
 
hód
;

3289 
RS_lök
 *
lök
;

3292 i‡(
idï_«me
 =
NA
)

3295 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

3300 
hód
 = 
	`CREATE_VECTOR
(
idï_«me
);

3303 i‡(!
hód
.
rs
)

3307 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

3314 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

3317 
	`RSLINK_NEW
(
lök
, 
rs
);Üök->
x
.
›num
 = 
idï_num
;

3318 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

3319 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

3320 
	}
}

3323 
INLINE
 

3324 
	$ruu_ö°Æl_odï
(
RUU_°©i⁄
 *
rs
,

3325 
odï_num
,

3326 
odï_«me
)

3328 
CV_lök
 
cv
;

3331 i‡(
odï_«me
 =
NA
)

3334 
rs
->
⁄ames
[
odï_num
] = 
NA
;

3340 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

3343 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

3346 
	`CVLINK_INIT
(
cv
, 
rs
, 
odï_num
);

3347 
	`SET_CREATE_VECTOR
(
odï_«me
, 
cv
);

3348 
	}
}

3355 
	#DNA
 (0)

	)

3357 #i‡
deföed
(
TARGET_PISA
)

3360 
	#DGPR
(
N
Ë(N)

	)

3361 
	#DGPR_D
(
N
Ë((NË&~1)

	)

3364 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

3365 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

3366 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

3369 
	#DHI
 (0+32+32)

	)

3370 
	#DLO
 (1+32+32)

	)

3371 
	#DFCC
 (2+32+32)

	)

3372 
	#DTMP
 (3+32+32)

	)

3374 #ñi‡
deföed
(
TARGET_ALPHA
)

3377 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

3380 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

3383 
	#DFPCR
 (0+32+32)

	)

3384 
	#DUNIQ
 (1+32+32)

	)

3385 
	#DTMP
 (2+32+32)

	)

3388 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

3397 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

3400 #unde‡
SET_TPC


3401 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

3404 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

3405 
	#SET_CPC
(
EXPR
Ë(
ªgs
.
ªgs_PC
 = (EXPR))

	)

3410 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N))\

3411 ? 
•ec_ªgs_R
[
N
] \

3412 : 
ªgs
.
ªgs_R
[
N
])

	)

3413 
	#SET_GPR
(
N
,
EXPR
Ë(
•ec_mode
 \

3414 ? ((
•ec_ªgs_R
[
N
] = (
EXPR
)), \

3415 
	`BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)),\

3416 
•ec_ªgs_R
[
N
]) \

3417 : (
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

	)

3419 #i‡
deföed
(
TARGET_PISA
)

3424 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3425 ? 
•ec_ªgs_F
.
l
[(
N
)] \

3426 : 
ªgs
.
ªgs_F
.
l
[(
N
)])

	)

3427 
	#SET_FPR_L
(
N
,
EXPR
Ë(
•ec_mode
 \

3428 ? ((
•ec_ªgs_F
.
l
[(
N
)] = (
EXPR
)), \

3429 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3430 
•ec_ªgs_F
.
l
[(
N
)]) \

3431 : (
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

	)

3432 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3433 ? 
•ec_ªgs_F
.
f
[(
N
)] \

3434 : 
ªgs
.
ªgs_F
.
f
[(
N
)])

	)

3435 
	#SET_FPR_F
(
N
,
EXPR
Ë(
•ec_mode
 \

3436 ? ((
•ec_ªgs_F
.
f
[(
N
)] = (
EXPR
)), \

3437 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3438 
•ec_ªgs_F
.
f
[(
N
)]) \

3439 : (
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

	)

3440 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

3441 ? 
•ec_ªgs_F
.
d
[(
N
) >> 1] \

3442 : 
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1])

	)

3443 
	#SET_FPR_D
(
N
,
EXPR
Ë(
•ec_mode
 \

3444 ? ((
•ec_ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)), \

3445 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

3446 
•ec_ªgs_F
.
d
[(
N
) >> 1]) \

3447 : (
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

	)

3452 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

3453 ? 
•ec_ªgs_C
.
hi
 \

3454 : 
ªgs
.
ªgs_C
.
hi
)

	)

3455 
	#SET_HI
(
EXPR
Ë(
•ec_mode
 \

3456 ? ((
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

3457 
	`BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

3458 
•ec_ªgs_C
.
hi
) \

3459 : (
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

	)

3460 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

3461 ? 
•ec_ªgs_C
.
lo
 \

3462 : 
ªgs
.
ªgs_C
.
lo
)

	)

3463 
	#SET_LO
(
EXPR
Ë(
•ec_mode
 \

3464 ? ((
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

3465 
	`BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

3466 
•ec_ªgs_C
.
lo
) \

3467 : (
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

	)

3468 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

3469 ? 
•ec_ªgs_C
.
fcc
 \

3470 : 
ªgs
.
ªgs_C
.
fcc
)

	)

3471 
	#SET_FCC
(
EXPR
Ë(
•ec_mode
 \

3472 ? ((
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

3473 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2),\

3474 
•ec_ªgs_C
.
fcc
) \

3475 : (
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

	)

3477 #ñi‡
deföed
(
TARGET_ALPHA
)

3482 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

3483 ? 
•ec_ªgs_F
.
q
[(
N
)] \

3484 : 
ªgs
.
ªgs_F
.
q
[(
N
)])

	)

3485 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
•ec_mode
 \

3486 ? ((
•ec_ªgs_F
.
q
[(
N
)] = (
EXPR
)), \

3487 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

3488 
•ec_ªgs_F
.
q
[(
N
)]) \

3489 : (
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

	)

3490 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

3491 ? 
•ec_ªgs_F
.
d
[(
N
)] \

3492 : 
ªgs
.
ªgs_F
.
d
[(
N
)])

	)

3493 
	#SET_FPR
(
N
,
EXPR
Ë(
•ec_mode
 \

3494 ? ((
•ec_ªgs_F
.
d
[(
N
)] = (
EXPR
)), \

3495 
	`BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

3496 
•ec_ªgs_F
.
d
[(
N
)]) \

3497 : (
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

	)

3502 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

3503 ? 
•ec_ªgs_C
.
Â¸
 \

3504 : 
ªgs
.
ªgs_C
.
Â¸
)

	)

3505 
	#SET_FPCR
(
EXPR
Ë(
•ec_mode
 \

3506 ? ((
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

3507 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0),\

3508 
•ec_ªgs_C
.
Â¸
) \

3509 : (
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

	)

3510 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

3511 ? 
•ec_ªgs_C
.
uniq
 \

3512 : 
ªgs
.
ªgs_C
.
uniq
)

	)

3513 
	#SET_UNIQ
(
EXPR
Ë(
•ec_mode
 \

3514 ? ((
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

3515 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1),\

3516 
•ec_ªgs_C
.
uniq
) \

3517 : (
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

	)

3518 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

3519 ? 
•ec_ªgs_C
.
fcc
 \

3520 : 
ªgs
.
ªgs_C
.
fcc
)

	)

3521 
	#SET_FCC
(
EXPR
Ë(
•ec_mode
 \

3522 ? ((
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

3523 
	`BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1),\

3524 
•ec_ªgs_C
.
fcc
) \

3525 : (
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

	)

3528 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

3534 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
) \

3535 (
addr
 = (
SRC
), \

3536 (
•ec_mode
 \

3537 ? ((
FAULT
Ë
	`•ec_mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

3538 : ((
FAULT
Ë
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))), \

3539 
SRC_V
)

	)

3541 
	#READ_BYTE
(
SRC
, 
FAULT
) \

3542 
	`__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

	)

3543 
	#READ_HALF
(
SRC
, 
FAULT
) \

3544 
	`MD_SWAPH
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

	)

3545 
	#READ_WORD
(
SRC
, 
FAULT
) \

3546 
	`MD_SWAPW
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

	)

3547 #ifde‡
HOST_HAS_QWORD


3548 
	#READ_QWORD
(
SRC
, 
FAULT
) \

3549 
	`MD_SWAPQ
(
	`__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

	)

3553 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
) \

3554 (
DST_V
 = (
SRC
), 
addr
 = (
DST
), \

3555 (
•ec_mode
 \

3556 ? ((
FAULT
Ë
	`•ec_mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

3557 : ((
FAULT
Ë
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))))

	)

3559 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

3560 
	`__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

	)

3561 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

3562 
	`__WRITE_SPECMEM
(
	`MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

	)

3563 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

3564 
	`__WRITE_SPECMEM
(
	`MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

	)

3565 #ifde‡
HOST_HAS_QWORD


3566 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

3567 
	`__WRITE_SPECMEM
(
	`MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

	)

3571 
	#SYSCALL
(
INST
) \

3573 (
•ec_mode
 ? 
	`∑nic
("speculative syscall") : () 0), \

3574 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

	)

3578 
	$simoo_ªg_obj
(
ªgs_t
 *
xªgs
,

3579 
is_wrôe
,

3580 
md_ªg_ty≥
 
π
,

3581 
ªg
,

3582 
evÆ_vÆue_t
 *
vÆ
)

3584 
π
)

3586 
π_g¥
:

3587 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

3590 i‡(!
is_wrôe
)

3592 
vÆ
->
ty≥
 = 
ë_uöt
;

3593 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
(
ªg
);

3596 
	`SET_GPR
(
ªg
, 
	`evÆ_as_uöt
(*
vÆ
));

3599 
π_Õr
:

3600 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

3604 
	`ab‹t
();

3606 i‡(!
is_wrôe
)

3608 
vÆ
->
ty≥
 = 
ë_uöt
;

3609 
vÆ
->
vÆue
.
as_uöt
 = 
	`FPR_L
(
ªg
);

3612 
	`SET_FPR_L
(
ªg
, 
	`evÆ_as_uöt
(*
vÆ
));

3616 
π_Âr
:

3618 
	`ab‹t
();

3620 i‡(!
is_wrôe
)

3621 
vÆ
->
vÆue
.
as_Êﬂt
 = 
	`FPR_F
(
ªg
);

3623 
	`SET_FPR_F
(
ªg
, 
vÆ
->
vÆue
.
as_Êﬂt
);

3627 
π_d¥
:

3629 
	`ab‹t
();

3632 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_REGS
/2)

3635 i‡(
©
 =
©_ªad
)

3636 
vÆ
->
as_doubÀ
 = 
	`FPR_D
(
ªg
 * 2);

3638 
	`SET_FPR_D
(
ªg
 * 2, 
vÆ
->
as_doubÀ
);

3644 
	`ab‹t
();

3645 
π_hi
:

3646 i‡(
©
 =
©_ªad
)

3647 
vÆ
->
as_w‹d
 = 
HI
;

3649 
	`SET_HI
(
vÆ
->
as_w‹d
);

3651 
π_lo
:

3652 i‡(
©
 =
©_ªad
)

3653 
vÆ
->
as_w‹d
 = 
LO
;

3655 
	`SET_LO
(
vÆ
->
as_w‹d
);

3657 
π_FCC
:

3658 i‡(
©
 =
©_ªad
)

3659 
vÆ
->
as_c⁄dôi⁄
 = 
FCC
;

3661 
	`SET_FCC
(
vÆ
->
as_c⁄dôi⁄
);

3665 
π_PC
:

3666 i‡(!
is_wrôe
)

3668 
vÆ
->
ty≥
 = 
ë_addr
;

3669 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
.
ªgs_PC
;

3672 
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

3675 
π_NPC
:

3676 i‡(!
is_wrôe
)

3678 
vÆ
->
ty≥
 = 
ë_addr
;

3679 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
.
ªgs_NPC
;

3682 
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

3686 
	`∑nic
("bogusÑegister bank");

3690  
NULL
;

3691 
	}
}

3695 
RS_lök
 
	gœ°_›
 = 
RSLINK_NULL_DATA
;

3701 
	$ruu_di•©ch
()

3703 
i
;

3704 
n_di•©ched
;

3705 
md_ö°_t
 
ö°
;

3706 
md_›code
 
›
;

3707 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

3708 
md_addr_t
 
èrgë_PC
;

3709 
md_addr_t
 
addr
;

3710 
RUU_°©i⁄
 *
rs
;

3711 
RUU_°©i⁄
 *
lsq
;

3712 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

3713 
°ack_ªcovî_idx
;

3714 
p£q
;

3715 
is_wrôe
;

3716 
made_check
;

3717 
br_èkí
, 
br_¥ed_èkí
;

3718 
„tch_ªdúe˘ed
 = 
FALSE
;

3719 
byã_t
 
ãmp_byã
 = 0;

3720 
hÆf_t
 
ãmp_hÆf
 = 0;

3721 
w‹d_t
 
ãmp_w‹d
 = 0;

3722 #ifde‡
HOST_HAS_QWORD


3723 
qw‹d_t
 
ãmp_qw‹d
 = 0;

3725 
md_Áu…_ty≥
 
Áu…
;

3727 
made_check
 = 
FALSE
;

3728 
n_di•©ched
 = 0;

3730 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

3732 && 
RUU_num
 < 
RUU_size
 && 
LSQ_num
 < 
LSQ_size


3734 && 
„tch_num
 != 0

3736 && (
ruu_ö˛ude_•ec
 || !
•ec_mode
))

3739 i‡(
ruu_ö‹dî_issue


3740 && (
œ°_›
.
rs
 && 
	`RSLINK_VALID
(&last_op)

3741 && !
	`OPERANDS_READY
(
œ°_›
.
rs
)))

3748 
ö°
 = 
„tch_d©a
[
„tch_hód
].
IR
;

3749 
ªgs
.
ªgs_PC
 = 
„tch_d©a
[
„tch_hód
].regs_PC;

3750 
¥ed_PC
 = 
„tch_d©a
[
„tch_hód
].pred_PC;

3751 
dú_upd©e_±r
 = &(
„tch_d©a
[
„tch_hód
].
dú_upd©e
);

3752 
°ack_ªcovî_idx
 = 
„tch_d©a
[
„tch_hód
].stack_recover_idx;

3753 
p£q
 = 
„tch_d©a
[
„tch_hód
].
±ø˚_£q
;

3756 
	`MD_SET_OPCODE
(
›
, 
ö°
);

3759 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

3762 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_TRAP
)

3764 i‡(
RUU_num
 != 0)

3769 i‡(
•ec_mode
)

3770 
	`∑nic
("drainedánd speculative");

3774 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; 
•ec_ªgs_R
[MD_REG_ZERO] = 0;

3775 #ifde‡
TARGET_ALPHA


3776 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0; 
•ec_ªgs_F
.d[MD_REG_ZERO] = 0.0;

3779 i‡(!
•ec_mode
)

3782 
sim_num_ö¢
++;

3786 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

3789 
Áu…
 = 
md_Áu…_n⁄e
;

3792 
›
)

3794 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

3795 
OP
: \

3797 
out1
 = 
O1
; 
out2
 = 
O2
; \

3798 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

3800 
	`SYMCAT
(
OP
,
_IMPL
); \

3801 ;

	)

3802 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

3803 
OP
: \

3805 
›
 = 
MD_NOP_OP
; \

3807 
out1
 = 
NA
; 
out2
 = NA; \

3808 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

3810 ;

	)

3811 
	#CONNECT
(
OP
Ë

	)

3817 
	#DECLARE_FAULT
(
FAULT
) \

3819 i‡(!
•ec_mode
) \

3820 
Áu…
 = (
FAULT
); \

3823 }

	)

3824 
	~"machöe.def
"

3827 
›
 = 
MD_NOP_OP
;

3829 
out1
 = 
NA
; 
out2
 = NA;

3830 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA;

3836 i‡(!
•ec_mode
 && 
vîbo£
)

3838 
	`myÂrötf
(
°dîr
, "++ %10n [xor: 0x%08x] {%d} @ 0x%08p: ",

3839 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),

3840 
ö°_£q
+1, 
ªgs
.
ªgs_PC
);

3841 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

3842 
	`Ârötf
(
°dîr
, "\n");

3846 i‡(
Áu…
 !
md_Áu…_n⁄e
)

3847 
	`Áèl
("non-speculative fault (%d) detected @ 0x%08p",

3848 
Áu…
, 
ªgs
.
ªgs_PC
);

3851 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

3853 
sim_tŸÆ_ªfs
++;

3854 i‡(!
•ec_mode
)

3855 
sim_num_ªfs
++;

3857 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

3858 
is_wrôe
 = 
TRUE
;

3861 
sim_tŸÆ_lﬂds
++;

3862 i‡(!
•ec_mode
)

3863 
sim_num_lﬂds
++;

3867 
br_èkí
 = (
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 + (
md_ö°_t
)));

3868 
br_¥ed_èkí
 = (
¥ed_PC
 !(
ªgs
.
ªgs_PC
 + (
md_ö°_t
)));

3870 i‡((
¥ed_PC
 !
ªgs
.
ªgs_NPC
 && 
¥ed_≥r„˘
)

3871 || ((
	`MD_OP_FLAGS
(
›
Ë& (
F_CTRL
|
F_DIRJMP
)) == (F_CTRL|F_DIRJMP)

3872 && 
èrgë_PC
 !
¥ed_PC
 && 
br_¥ed_èkí
))

3882 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_NPC
;

3884 i‡(
¥ed_≥r„˘
)

3885 
¥ed_PC
 = 
ªgs
.
ªgs_NPC
;

3887 
„tch_hód
 = (
ruu_ifq_size
-1);

3888 
„tch_num
 = 1;

3889 
„tch_èû
 = 0;

3891 i‡(!
¥ed_≥r„˘
)

3892 
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

3894 
„tch_ªdúe˘ed
 = 
TRUE
;

3898 i‡(
›
 !
MD_NOP_OP
)

3916 
rs
 = &
RUU
[
RUU_èû
];

3917 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

3918 
rs
->
IR
 = 
ö°
;

3919 
rs
->
›
 = op;

3920 
rs
->
PC
 = 
ªgs
.
ªgs_PC
;

3921 
rs
->
√xt_PC
 = 
ªgs
.
ªgs_NPC
;Ñs->
¥ed_PC
 =Öred_PC;

3922 
rs
->
ö_LSQ
 = 
FALSE
;

3923 
rs
->
ó_comp
 = 
FALSE
;

3924 
rs
->
ªcovî_ö°
 = 
FALSE
;

3925 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

3926 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

3927 
rs
->
•ec_mode
 = spec_mode;

3928 
rs
->
addr
 = 0;

3930 
rs
->
£q
 = ++
ö°_£q
;

3931 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

3932 
rs
->
±ø˚_£q
 = 
p£q
;

3935 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

3938 
rs
->
›
 = 
MD_AGEN_OP
;

3939 
rs
->
ó_comp
 = 
TRUE
;

3942 
lsq
 = &
LSQ
[
LSQ_èû
];

3943 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

3944 
lsq
->
IR
 = 
ö°
;

3945 
lsq
->
›
 = op;

3946 
lsq
->
PC
 = 
ªgs
.
ªgs_PC
;

3947 
lsq
->
√xt_PC
 = 
ªgs
.
ªgs_NPC
;Üsq->
¥ed_PC
 =Öred_PC;

3948 
lsq
->
ö_LSQ
 = 
TRUE
;

3949 
lsq
->
ó_comp
 = 
FALSE
;

3950 
lsq
->
ªcovî_ö°
 = 
FALSE
;

3951 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

3952 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

3953 
lsq
->
°ack_ªcovî_idx
 = 0;

3954 
lsq
->
•ec_mode
 = spec_mode;

3955 
lsq
->
addr
 =áddr;

3957 
lsq
->
£q
 = ++
ö°_£q
;

3958 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

3959 
lsq
->
±ø˚_£q
 =Ötrace_seq++;

3962 
	`±ø˚_√wu›
(
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

3963 
	`±ø˚_√w°age
(
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

3966 
	`ruu_lök_idï
(
rs
, 0, 
NA
);

3967 
	`ruu_lök_idï
(
rs
, 1, 
ö2
);

3968 
	`ruu_lök_idï
(
rs
, 2, 
ö3
);

3971 
	`ruu_ö°Æl_odï
(
rs
, 0, 
DTMP
);

3972 
	`ruu_ö°Æl_odï
(
rs
, 1, 
NA
);

3975 
	`ruu_lök_idï
(
lsq
,

3976  
STORE_OP_INDEX
 ,

3977 
ö1
);

3978 
	`ruu_lök_idï
(
lsq
,

3979  
STORE_ADDR_INDEX
 ,

3980 
DTMP
);

3981 
	`ruu_lök_idï
(
lsq
, 2, 
NA
);

3984 
	`ruu_ö°Æl_odï
(
lsq
, 0, 
out1
);

3985 
	`ruu_ö°Æl_odï
(
lsq
, 1, 
out2
);

3988 
n_di•©ched
++;

3989 
RUU_èû
 = (RUU_èû + 1Ë% 
RUU_size
;

3990 
RUU_num
++;

3991 
LSQ_èû
 = (LSQ_èû + 1Ë% 
LSQ_size
;

3992 
LSQ_num
++;

3994 i‡(
	`OPERANDS_READY
(
rs
))

3997 
	`ªadyq_íqueue
(
rs
);

4000 
	`RSLINK_INIT
(
œ°_›
, 
lsq
);

4003 i‡(((
	`MD_OP_FLAGS
(
›
Ë& (
F_MEM
|
F_STORE
)) == (F_MEM|F_STORE))

4004 && 
	`OPERANDS_READY
(
lsq
))

4008 
	`ªadyq_íqueue
(
lsq
);

4014 
	`ruu_lök_idï
(
rs
, 0, 
ö1
);

4015 
	`ruu_lök_idï
(
rs
, 1, 
ö2
);

4016 
	`ruu_lök_idï
(
rs
, 2, 
ö3
);

4019 
	`ruu_ö°Æl_odï
(
rs
, 0, 
out1
);

4020 
	`ruu_ö°Æl_odï
(
rs
, 1, 
out2
);

4023 
n_di•©ched
++;

4024 
RUU_èû
 = (RUU_èû + 1Ë% 
RUU_size
;

4025 
RUU_num
++;

4028 i‡(
	`OPERANDS_READY
(
rs
))

4031 
	`ªadyq_íqueue
(
rs
);

4033 
œ°_›
 = 
RSLINK_NULL
;

4038 
	`RSLINK_INIT
(
œ°_›
, 
rs
);

4045 
rs
 = 
NULL
;

4049 
sim_tŸÆ_ö¢
++;

4050 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4051 
sim_tŸÆ_bønches
++;

4053 i‡(!
•ec_mode
)

4057 
sim_num_ö¢
++;

4062 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4064 
sim_num_bønches
++;

4065 i‡(
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

4067 
	`b¥ed_upd©e
(
¥ed
,

4068  
ªgs
.
ªgs_PC
,

4069  
ªgs
.
ªgs_NPC
,

4070  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

4071 (
md_ö°_t
)),

4072  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

4073 (
md_ö°_t
)),

4074  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

4075  
›
,

4076  &
rs
->
dú_upd©e
);

4081 i‡(
¥ed_PC
 !
ªgs
.
ªgs_NPC
 && !
„tch_ªdúe˘ed
)

4084 
•ec_mode
 = 
TRUE
;

4085 
rs
->
ªcovî_ö°
 = 
TRUE
;

4086 
ªcovî_PC
 = 
ªgs
.
ªgs_NPC
;

4091 
	`±ø˚_√w°age
(
p£q
, 
PST_DISPATCH
,

4092 (
¥ed_PC
 !
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

4093 i‡(
›
 =
MD_NOP_OP
)

4096 
	`±ø˚_ídö°
(
p£q
);

4100 
i
=0; i<
pc°©_√…
; i++)

4102 
cou¡î_t
 
√wvÆ
;

4103 
dñè
;

4106 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

4107 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

4108 i‡(
dñè
 != 0)

4110 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

4111 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

4116 
„tch_hód
 = („tch_hód+1Ë& (
ruu_ifq_size
 - 1);

4117 
„tch_num
--;

4120 
made_check
 = 
TRUE
;

4121 i‡(
	`dlôe_check_bªak
(
¥ed_PC
,

4122 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4123 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

4124 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 
¥ed_PC
, 
sim_cy˛e
, &ªgs, 
mem
);

4128 i‡(!
made_check
)

4130 i‡(
	`dlôe_check_bªak
( 0,

4131 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4132 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

4133 
	`dlôe_maö
(
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &ªgs, 
mem
);

4135 
	}
}

4144 
	$„tch_öô
()

4147 
„tch_d©a
 =

4148 (
„tch_ªc
 *)
	`ˇŒoc
(
ruu_ifq_size
, (fetch_rec));

4149 i‡(!
„tch_d©a
)

4150 
	`Áèl
("out of virtual memory");

4152 
„tch_num
 = 0;

4153 
„tch_èû
 = 
„tch_hód
 = 0;

4154 
IFQ_cou¡
 = 0;

4155 
IFQ_fcou¡
 = 0;

4156 
	}
}

4160 
	$„tch_dump
(
FILE
 *
°ªam
)

4162 
num
, 
hód
;

4164 i‡(!
°ªam
)

4165 
°ªam
 = 
°dîr
;

4167 
	`Ârötf
(
°ªam
, "** fetch stage state **\n");

4169 
	`Ârötf
(
°ªam
, "•ec_mode: %s\n", 
•ec_mode
 ? "t" : "f");

4170 
	`myÂrötf
(
°ªam
, "pred_PC: 0x%08p,Ñecover_PC: 0x%08p\n",

4171 
¥ed_PC
, 
ªcovî_PC
);

4172 
	`myÂrötf
(
°ªam
, "fetch_regs_PC: 0x%08p, fetch_pred_PC: 0x%08p\n",

4173 
„tch_ªgs_PC
, 
„tch_¥ed_PC
);

4174 
	`Ârötf
(
°ªam
, "\n");

4176 
	`Ârötf
(
°ªam
, "** fetch queue contents **\n");

4177 
	`Ârötf
(
°ªam
, "„tch_num: %d\n", 
„tch_num
);

4178 
	`Ârötf
(
°ªam
, "fetch_head: %d, fetch_tail: %d\n",

4179 
„tch_hód
, 
„tch_èû
);

4181 
num
 = 
„tch_num
;

4182 
hód
 = 
„tch_hód
;

4183 
num
)

4185 
	`Ârötf
(
°ªam
, "idx: %2d: in°: `", 
hód
);

4186 
	`md_¥öt_ö¢
(
„tch_d©a
[
hód
].
IR
, fëch_d©a[hód].
ªgs_PC
, 
°ªam
);

4187 
	`Ârötf
(
°ªam
, "'\n");

4188 
	`myÂrötf
(
°ªam
, "Ñegs_PC: 0x%08p,Öred_PC: 0x%08p\n",

4189 
„tch_d©a
[
hód
].
ªgs_PC
, fëch_d©a[hód].
¥ed_PC
);

4190 
hód
 = (hód + 1Ë& (
ruu_ifq_size
 - 1);

4191 
num
--;

4193 
	}
}

4195 
	gœ°_ö°_mis£d
 = 
FALSE
;

4196 
	gœ°_ö°_tmis£d
 = 
FALSE
;

4201 
	$ruu_„tch
()

4203 
i
, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

4204 
md_ö°_t
 
ö°
;

4205 
°ack_ªcovî_idx
;

4206 
bønch_˙t
;

4208 
i
=0, 
bønch_˙t
=0;

4210 
i
 < (
ruu_decode_width
 * 
„tch_•ìd
)

4212 && 
„tch_num
 < 
ruu_ifq_size


4214 && !
d⁄e
;

4215 
i
++)

4218 
„tch_ªgs_PC
 = 
„tch_¥ed_PC
;

4221 i‡(
ld_ãxt_ba£
 <
„tch_ªgs_PC


4222 && 
„tch_ªgs_PC
 < (
ld_ãxt_ba£
+
ld_ãxt_size
)

4223 && !(
„tch_ªgs_PC
 & ((
md_ö°_t
)-1)))

4226 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
„tch_ªgs_PC
);

4229 
œt
 = 
ˇche_û1_œt
;

4230 i‡(
ˇche_û1
)

4233 
œt
 =

4234 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
„tch_ªgs_PC
),

4235 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

4236 
NULL
, NULL);

4237 i‡(
œt
 > 
ˇche_û1_œt
)

4238 
œ°_ö°_mis£d
 = 
TRUE
;

4241 i‡(
ôlb
)

4245 
éb_œt
 =

4246 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
„tch_ªgs_PC
),

4247 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

4248 
NULL
, NULL);

4249 i‡(
éb_œt
 > 1)

4250 
œ°_ö°_tmis£d
 = 
TRUE
;

4253 
œt
 = 
	`MAX
(
éb_œt
,Üat);

4257 i‡(
œt
 !
ˇche_û1_œt
)

4260 
ruu_„tch_issue_dñay
 +
œt
 - 1;

4268 
ö°
 = 
MD_NOP_INST
;

4274 i‡(
¥ed
)

4276 
md_›code
 
›
;

4279 
	`MD_SET_OPCODE
(
›
, 
ö°
);

4284 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

4285 
„tch_¥ed_PC
 =

4286 
	`b¥ed_lookup
(
¥ed
,

4287  
„tch_ªgs_PC
,

4289  
›
,

4290  
	`MD_IS_CALL
(
›
),

4291  
	`MD_IS_RETURN
(
›
),

4292  &(
„tch_d©a
[
„tch_èû
].
dú_upd©e
),

4293  &
°ack_ªcovî_idx
);

4295 
„tch_¥ed_PC
 = 0;

4298 i‡(!
„tch_¥ed_PC
)

4301 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 + (
md_ö°_t
);

4306 
bønch_˙t
++;

4307 i‡(
bønch_˙t
 >
„tch_•ìd
)

4308 
d⁄e
 = 
TRUE
;

4315 
„tch_¥ed_PC
 = 
„tch_ªgs_PC
 + (
md_ö°_t
);

4319 
„tch_d©a
[
„tch_èû
].
IR
 = 
ö°
;

4320 
„tch_d©a
[
„tch_èû
].
ªgs_PC
 = 
„tch_ªgs_PC
;

4321 
„tch_d©a
[
„tch_èû
].
¥ed_PC
 = 
„tch_¥ed_PC
;

4322 
„tch_d©a
[
„tch_èû
].
°ack_ªcovî_idx
 = stack_recover_idx;

4323 
„tch_d©a
[
„tch_èû
].
±ø˚_£q
 =Ötrace_seq++;

4326 
	`±ø˚_√wö°
(
„tch_d©a
[
„tch_èû
].
±ø˚_£q
,

4327 
ö°
, 
„tch_d©a
[
„tch_èû
].
ªgs_PC
,

4329 
	`±ø˚_√w°age
(
„tch_d©a
[
„tch_èû
].
±ø˚_£q
,

4330 
PST_IFETCH
,

4331 ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0)

4332 | (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

4333 
œ°_ö°_mis£d
 = 
FALSE
;

4334 
œ°_ö°_tmis£d
 = 
FALSE
;

4337 
„tch_èû
 = („tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

4338 
„tch_num
++;

4340 
	}
}

4344 
	$simoo_m°©e_obj
(
FILE
 *
°ªam
,

4345 *
cmd
,

4346 
ªgs_t
 *
ªgs
,

4347 
mem_t
 *
mem
)

4349 i‡(!
cmd
 || !
	`°rcmp
(cmd, "help"))

4350 
	`Ârötf
(
°ªam
,

4366 i‡(!
	`°rcmp
(
cmd
, "stats"))

4369 
	`sim_¥öt_°©s
(
°ªam
);

4371 i‡(!
	`°rcmp
(
cmd
, "res"))

4374 
	`ªs_dump
(
fu_poﬁ
, 
°ªam
);

4376 i‡(!
	`°rcmp
(
cmd
, "ruu"))

4379 
	`ruu_dump
(
°ªam
);

4381 i‡(!
	`°rcmp
(
cmd
, "lsq"))

4384 
	`lsq_dump
(
°ªam
);

4386 i‡(!
	`°rcmp
(
cmd
, "eventq"))

4389 
	`evítq_dump
(
°ªam
);

4391 i‡(!
	`°rcmp
(
cmd
, "readyq"))

4394 
	`ªadyq_dump
(
°ªam
);

4396 i‡(!
	`°rcmp
(
cmd
, "cv"))

4399 
	`cv_dump
(
°ªam
);

4401 i‡(!
	`°rcmp
(
cmd
, "rspec"))

4404 
	`r•ec_dump
(
°ªam
);

4406 i‡(!
	`°rcmp
(
cmd
, "mspec"))

4409 
	`m•ec_dump
(
°ªam
);

4411 i‡(!
	`°rcmp
(
cmd
, "fetch"))

4414 
	`„tch_dump
(
°ªam
);

4420  
NULL
;

4421 
	}
}

4426 
	$sim_maö
()

4430 
	`sig«l
(
SIGFPE
, 
SIG_IGN
);

4433 
ªgs
.
ªgs_PC
 = 
ld_¥og_íåy
;

4434 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

4437 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

4438 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.ªgs_PC + (
md_ö°_t
),

4439 
sim_cy˛e
, &
ªgs
, 
mem
);

4443 i‡(
Á°fwd_cou¡
 > 0)

4445 
icou¡
;

4446 
md_ö°_t
 
ö°
;

4447 
md_›code
 
›
;

4448 
md_addr_t
 
èrgë_PC
;

4449 
md_addr_t
 
addr
;

4450 
is_wrôe
;

4451 
byã_t
 
ãmp_byã
 = 0;

4452 
hÆf_t
 
ãmp_hÆf
 = 0;

4453 
w‹d_t
 
ãmp_w‹d
 = 0;

4454 #ifde‡
HOST_HAS_QWORD


4455 
qw‹d_t
 
ãmp_qw‹d
 = 0;

4457 
md_Áu…_ty≥
 
Áu…
;

4459 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

4461 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++)

4464 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

4465 #ifde‡
TARGET_ALPHA


4466 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

4470 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

4473 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

4476 
Áu…
 = 
md_Áu…_n⁄e
;

4479 
	`MD_SET_OPCODE
(
›
, 
ö°
);

4482 
›
)

4484 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

4485 
OP
: \

4486 
	`SYMCAT
(
OP
,
_IMPL
); \

4487 ;

	)

4488 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

4489 
OP
: \

4490 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

4491 
	#CONNECT
(
OP
)

	)

4492 #unde‡
DECLARE_FAULT


4493 
	#DECLARE_FAULT
(
FAULT
) \

4494 { 
Áu…
 = (
FAULT
); ; }

	)

4495 
	~"machöe.def
"

4497 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

4500 i‡(
Áu…
 !
md_Áu…_n⁄e
)

4501 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

4504 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

4506 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

4507 
is_wrôe
 = 
TRUE
;

4511 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

4512 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

4513 
addr
, 
sim_num_ö¢
, sim_num_insn))

4514 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

4517 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

4518 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

4522 
	`Ârötf
(
°dîr
, "sim: ** startingÖerformance simulation **\n");

4525 
„tch_ªgs_PC
 = 
ªgs
.
ªgs_PC
 - (
md_ö°_t
);

4526 
„tch_¥ed_PC
 = 
ªgs
.
ªgs_PC
;

4527 
ªgs
.
ªgs_PC
 =Ñegs.ªgs_PC - (
md_ö°_t
);

4534 i‡(
RUU_num
 < 
LSQ_num
)

4535 
	`∑nic
("RUU_num < LSQ_num");

4536 i‡(((
RUU_hód
 + 
RUU_num
Ë% 
RUU_size
Ë!
RUU_èû
)

4537 
	`∑nic
("RUU_head/RUU_tail wedged");

4538 i‡(((
LSQ_hód
 + 
LSQ_num
Ë% 
LSQ_size
Ë!
LSQ_èû
)

4539 
	`∑nic
("LSQ_head/LSQ_tail wedged");

4542 
	`±ø˚_check_a˘ive
(
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

4545 
	`±ø˚_√wcy˛e
(
sim_cy˛e
);

4548 
	`ruu_commô
();

4551 
	`ruu_ªÀa£_fu
();

4557 
	`ruu_wrôeback
();

4559 i‡(!
bugcom∑t_mode
)

4563 
	`lsq_ª‰esh
();

4567 
	`ruu_issue
();

4572 
	`ruu_di•©ch
();

4574 i‡(
bugcom∑t_mode
)

4578 
	`lsq_ª‰esh
();

4582 
	`ruu_issue
();

4586 i‡(!
ruu_„tch_issue_dñay
)

4587 
	`ruu_„tch
();

4589 
ruu_„tch_issue_dñay
--;

4592 
IFQ_cou¡
 +
„tch_num
;

4593 
IFQ_fcou¡
 +((
„tch_num
 =
ruu_ifq_size
) ? 1 : 0);

4594 
RUU_cou¡
 +
RUU_num
;

4595 
RUU_fcou¡
 +((
RUU_num
 =
RUU_size
) ? 1 : 0);

4596 
LSQ_cou¡
 +
LSQ_num
;

4597 
LSQ_fcou¡
 +((
LSQ_num
 =
LSQ_size
) ? 1 : 0);

4600 
sim_cy˛e
++;

4603 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

4606 
	}
}

	@sim-profile.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"symbﬁ.h
"

65 
	~"›ti⁄s.h
"

66 
	~"°©s.h
"

67 
	~"sim.h
"

75 
ªgs_t
 
	gªgs
;

78 
mem_t
 *
	gmem
 = 
NULL
;

81 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

84 
	gmax_ö°s
;

87 
	g¥of_Æl
 ;

88 
	g¥of_ic
 ;

89 
	g¥of_ö°
 ;

90 
	g¥of_bc
 ;

91 
	g¥of_am
 ;

92 
	g¥of_£g
 ;

93 
	g¥of_tsyms
 ;

94 
	g¥of_dsyms
 ;

95 
	glﬂd_loˇls
 ;

96 
	g¥of_èddr
 ;

99 
	#MAX_PCSTAT_VARS
 8

	)

100 
	gpc°©_√…
 = 0;

101 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

105 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

107 
	`›t_ªg_hódî
(
odb
,

114 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

115 &
max_ö°s
, 0,

116  
TRUE
, 
NULL
);

118 
	`›t_ªg_Êag
(
odb
, "-all", "enableállÖrofile options",

119 &
¥of_Æl
, 
FALSE
, 
TRUE
, 
NULL
);

121 
	`›t_ªg_Êag
(
odb
, "-iclass", "enable instruction classÖrofiling",

122 &
¥of_ic
, 
FALSE
, 
TRUE
, 
NULL
);

124 
	`›t_ªg_Êag
(
odb
, "-iprof", "enable instructionÖrofiling",

125 &
¥of_ö°
, 
FALSE
, 
TRUE
, 
NULL
);

127 
	`›t_ªg_Êag
(
odb
, "-brprof", "enable branch instructionÖrofiling",

128 &
¥of_bc
, 
FALSE
, 
TRUE
, 
NULL
);

130 
	`›t_ªg_Êag
(
odb
, "-amprof", "enableáddress modeÖrofiling",

131 &
¥of_am
, 
FALSE
, 
TRUE
, 
NULL
);

133 
	`›t_ªg_Êag
(
odb
, "-segprof", "enableÜoad/storeáddress segmentÖrofiling",

134 &
¥of_£g
, 
FALSE
, 
TRUE
, 
NULL
);

136 
	`›t_ªg_Êag
(
odb
, "-tsymprof", "enableÅext symbolÖrofiling",

137 &
¥of_tsyms
, 
FALSE
, 
TRUE
, 
NULL
);

139 
	`›t_ªg_Êag
(
odb
, "-taddrprof", "enableÅextáddressÖrofiling",

140 &
¥of_èddr
, 
FALSE
, 
TRUE
, 
NULL
);

142 
	`›t_ªg_Êag
(
odb
, "-dsymprof", "enable data symbolÖrofiling",

143 &
¥of_dsyms
, 
FALSE
, 
TRUE
, 
NULL
);

145 
	`›t_ªg_Êag
(
odb
, "-internal",

147 &
lﬂd_loˇls
, 
FALSE
, 
TRUE
, 
NULL
);

149 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

151 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

152  
FALSE
, 
NULL
, 
TRUE
);

153 
	}
}

157 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

159 i‡(
¥of_Æl
)

162 
¥of_ic
 = 
TRUE
;

163 
¥of_ö°
 = 
TRUE
;

164 
¥of_bc
 = 
TRUE
;

165 
¥of_am
 = 
TRUE
;

166 
¥of_£g
 = 
TRUE
;

167 
¥of_tsyms
 = 
TRUE
;

168 
¥of_dsyms
 = 
TRUE
;

169 
¥of_èddr
 = 
TRUE
;

171 
	}
}

174 
	eö°_˛ass_t
 {

175 
	mic_lﬂd
,

176 
	mic_°‹e
,

177 
	mic_unc⁄d
,

178 
	mic_c⁄d
,

179 
	mic_icomp
,

180 
	mic_fcomp
,

181 
	mic_å≠
,

182 
	mic_NUM


186 *
	gö°_˛ass_°r
[
ic_NUM
] = {

197 
°©_°©_t
 *
	gic_¥of
 = 
NULL
;

200 *
	gö°_°r
[
OP_MAX
];

203 
°©_°©_t
 *
	gö°_¥of
 = 
NULL
;

206 
	ebønch_˛ass_t
 {

207 
	mbc_unc⁄d_dú
,

208 
	mbc_c⁄d_dú
,

209 
	mbc_ˇŒ_dú
,

210 
	mbc_unc⁄d_ödú
,

211 
	mbc_c⁄d_ödú
,

212 
	mbc_ˇŒ_ödú
,

213 
	mbc_NUM


217 *
	gbønch_˛ass_°r
[
bc_NUM
] = {

227 
°©_°©_t
 *
	gbc_¥of
 = 
NULL
;

230 
°©_°©_t
 *
	gam_¥of
 = 
NULL
;

233 
	eaddr_£g_t
 {

234 
	m£g_d©a
,

235 
	m£g_hóp
,

236 
	m£g_°ack
,

237 
	m£g_ãxt
,

238 
	m£g_NUM


242 *
	gaddr_£g_°r
[
£g_NUM
] = {

250 
°©_°©_t
 *
	g£g_¥of
 = 
NULL
;

253 
addr_£g_t


254 
	$böd_to_£g
(
md_addr_t
 
addr
)

256 i‡(
ld_d©a_ba£
 <
addr
 &&ádd∏< (ld_d©a_ba£ + 
ld_d©a_size
))

257  
£g_d©a
;

258 i‡((
ld_d©a_ba£
 + 
ld_d©a_size
Ë<
addr
 &&ádd∏< 
ld_brk_poöt
)

259  
£g_hóp
;

261 i‡((
ld_°ack_ba£
 - (16*1024*1024)Ë<
addr
 &&áddr <Üd_stack_base)

262  
£g_°ack
;

263 i‡(
ld_ãxt_ba£
 <
addr
 &&ádd∏< (ld_ãxt_ba£ + 
ld_ãxt_size
))

264  
£g_ãxt
;

266 
	`∑nic
("cannot bindáddressÅo segment");

267 
	}
}

270 
°©_°©_t
 *
	gtsym_¥of
 = 
NULL
;

271 **
	gtsym_«mes
 = 
NULL
;

274 
°©_°©_t
 *
	gdsym_¥of
 = 
NULL
;

275 **
	gdsym_«mes
 = 
NULL
;

278 
°©_°©_t
 *
	gèddr_¥of
 = 
NULL
;

281 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

282 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

283 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

286 
	#STATVAL
(
STAT
) \

287 ((
STAT
)->
sc
 =
sc_öt
 \

288 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

289 : ((
STAT
)->
sc
 =
sc_uöt
 \

290 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

291 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

292 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

293 : (
	`∑nic
("bad sèà˛ass"), 0))))

	)

297 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

299 
i
;

301 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

303 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

304 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

306 &
sim_num_ªfs
, 0, 
NULL
);

307 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

309 &
sim_ñ≠£d_time
, 0, 
NULL
);

310 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

312 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

314 i‡(
¥of_ic
)

317 
ic_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_class_prof",

320  
ic_NUM
,

322  (
PF_COUNT
|
PF_PDF
),

323  
NULL
,

324  
ö°_˛ass_°r
,

325  
NULL
);

328 i‡(
¥of_ö°
)

330 
i
;

331 
buf
[512];

334 
i
=0; i < 
OP_MAX
-1; i++)

336 
	`•rötf
(
buf
, "%-8†%-6s", 
md_›2«me
[
i
+1], 
md_›2f‹m©
[i+1]);

337 
ö°_°r
[
i
] = 
	`my°rdup
(
buf
);

341 
ö°_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_prof",

344  
OP_MAX
-1,

346  (
PF_COUNT
|
PF_PDF
),

347  
NULL
,

348  
ö°_°r
,

349  
NULL
);

352 i‡(
¥of_bc
)

355 
bc_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_branch_prof",

358  
bc_NUM
,

360  (
PF_COUNT
|
PF_PDF
),

361  
NULL
,

362  
bønch_˛ass_°r
,

363  
NULL
);

366 i‡(
¥of_am
)

369 
am_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_mode_prof",

372  
md_amode_NUM
,

374  (
PF_COUNT
|
PF_PDF
),

375  
NULL
,

376  
md_amode_°r
,

377  
NULL
);

380 i‡(
¥of_£g
)

383 
£g_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_seg_prof",

386  
£g_NUM
,

388  (
PF_COUNT
|
PF_PDF
),

389  
NULL
,

390  
addr_£g_°r
,

391  
NULL
);

394 i‡(
¥of_tsyms
 && 
sym_¡extsyms
 != 0)

396 
i
;

399 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

402 
tsym_«mes
 = (**)
	`ˇŒoc
(
sym_¡extsyms
, (*));

404 
i
=0; i < 
sym_¡extsyms
; i++)

405 
tsym_«mes
[
i
] = 
sym_ãxtsyms
[i]->
«me
;

408 
tsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_text_sym_prof",

411  
sym_¡extsyms
,

413  (
PF_COUNT
|
PF_PDF
),

414  
NULL
,

415  
tsym_«mes
,

416  
NULL
);

419 i‡(
¥of_dsyms
 && 
sym_nd©asyms
 != 0)

421 
i
;

424 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

427 
dsym_«mes
 = (**)
	`ˇŒoc
(
sym_nd©asyms
, (*));

429 
i
=0; i < 
sym_nd©asyms
; i++)

430 
dsym_«mes
[
i
] = 
sym_d©asyms
[i]->
«me
;

433 
dsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_data_sym_prof",

436  
sym_nd©asyms
,

438  (
PF_COUNT
|
PF_PDF
),

439  
NULL
,

440  
dsym_«mes
,

441  
NULL
);

444 i‡(
¥of_èddr
)

450 
èddr_¥of
 = 
	`°©_ªg_sdi°
(
sdb
, "sim_text_addr_prof",

453  (
PF_COUNT
|
PF_PDF
),

455  
NULL
);

458 
i
=0; i<
pc°©_√…
; i++)

460 
buf
[512], 
buf1
[512];

461 
°©_°©_t
 *
°©
;

466 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

467 i‡(!
°©
)

468 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

471 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

472 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

473 
°©
->
«me
);

476 
pc°©_°©s
[
i
] = 
°©
;

477 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

480 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

481 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

482 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

484  (
PF_COUNT
|
PF_PDF
),

486  
NULL
);

488 
	`ld_ªg_°©s
(
sdb
);

489 
	`mem_ªg_°©s
(
mem
, 
sdb
);

490 
	}
}

494 
	$sim_öô
()

496 
sim_num_ªfs
 = 0;

499 
	`ªgs_öô
(&
ªgs
);

502 
mem
 = 
	`mem_¸óã
("mem");

503 
	`mem_öô
(
mem
);

504 
	}
}

508 
	$¥ofûe_m°©e_obj
(
FILE
 *
°ªam
,

509 *
cmd
,

510 
ªgs_t
 *
ªgs
,

511 
mem_t
 *
mem
)

514 
	`sim_¥öt_°©s
(
°ªam
);

517  
NULL
;

518 
	}
}

522 
	$sim_lﬂd_¥og
(*
‚ame
,

523 
¨gc
, **
¨gv
,

524 **
ívp
)

527 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

530 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
¥ofûe_m°©e_obj
);

531 
	}
}

536 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

539 
	}
}

543 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

545 
	}
}

549 
	$sim_unöô
()

552 
	}
}

564 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

567 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

570 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

571 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

573 #i‡
deföed
(
TARGET_PISA
)

576 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

577 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

578 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

579 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

580 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

581 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

584 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

585 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

586 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

587 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

588 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

589 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

591 #ñi‡
deföed
(
TARGET_ALPHA
)

594 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

595 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

596 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

597 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

600 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

601 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

602 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

603 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

606 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

610 
	#READ_BYTE
(
SRC
, 
FAULT
) \

611 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

612 
	#READ_HALF
(
SRC
, 
FAULT
) \

613 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

614 
	#READ_WORD
(
SRC
, 
FAULT
) \

615 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

616 #ifde‡
HOST_HAS_QWORD


617 
	#READ_QWORD
(
SRC
, 
FAULT
) \

618 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

621 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

622 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

623 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

624 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

625 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

626 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

627 #ifde‡
HOST_HAS_QWORD


628 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

629 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

633 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

637 
	gfsm
 = 0;

641 
	$sim_maö
()

643 
i
;

644 
md_ö°_t
 
ö°
;

645 
md_addr_t
 
addr
;

646 
is_wrôe
;

647 
md_›code
 
›
;

648 
Êags
;

649 
md_Áu…_ty≥
 
Áu…
;

651 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

654 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

657 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

658 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

659 
sim_num_ö¢
, &
ªgs
, 
mem
);

661 
TRUE
)

664 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

665 #ifde‡
TARGET_ALPHA


666 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

670 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

672 i‡(
vîbo£
)

674 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_num_ö¢
, 
ªgs
.
ªgs_PC
);

675 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

676 
	`Ârötf
(
°dîr
, "\n");

681 
sim_num_ö¢
++;

684 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

687 
Áu…
 = 
md_Áu…_n⁄e
;

690 
	`MD_SET_OPCODE
(
›
, 
ö°
);

693 
›
)

695 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

696 
OP
: \

697 
	`SYMCAT
(
OP
,
_IMPL
); \

698 ;

	)

699 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

700 
OP
: \

701 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

702 
	#CONNECT
(
OP
)

	)

703 
	#DECLARE_FAULT
(
FAULT
) \

704 { 
Áu…
 = (
FAULT
); ; }

	)

705 
	~"machöe.def
"

707 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

710 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

712 
sim_num_ªfs
++;

713 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

714 
is_wrôe
 = 
TRUE
;

720 
Êags
 = 
	`MD_OP_FLAGS
(
›
);

722 i‡(
¥of_ic
)

724 
ö°_˛ass_t
 
ic
;

727 i‡(
Êags
 & 
F_LOAD
)

728 
ic
 = 
ic_lﬂd
;

729 i‡(
Êags
 & 
F_STORE
)

730 
ic
 = 
ic_°‹e
;

731 i‡(
Êags
 & 
F_UNCOND
)

732 
ic
 = 
ic_unc⁄d
;

733 i‡(
Êags
 & 
F_COND
)

734 
ic
 = 
ic_c⁄d
;

735 i‡(
Êags
 & 
F_ICOMP
)

736 
ic
 = 
ic_icomp
;

737 i‡(
Êags
 & 
F_FCOMP
)

738 
ic
 = 
ic_fcomp
;

739 i‡(
Êags
 & 
F_TRAP
)

740 
ic
 = 
ic_å≠
;

742 
	`∑nic
("instruction hasÇo class");

745 
	`°©_add_ßm∂e
(
ic_¥of
, ()
ic
);

748 i‡(
¥of_ö°
)

751 
	`°©_add_ßm∂e
(
ö°_¥of
, ()
›
 - 1);

754 i‡(
¥of_bc
)

756 
bønch_˛ass_t
 
bc
;

759 i‡(
Êags
 & 
F_CTRL
)

761 i‡((
Êags
 & (
F_CALL
|
F_DIRJMP
)) == (F_CALL|F_DIRJMP))

762 
bc
 = 
bc_ˇŒ_dú
;

763 i‡((
Êags
 & (
F_CALL
|
F_INDIRJMP
)) == (F_CALL|F_INDIRJMP))

764 
bc
 = 
bc_ˇŒ_ödú
;

765 i‡((
Êags
 & (
F_UNCOND
|
F_DIRJMP
)) == (F_UNCOND|F_DIRJMP))

766 
bc
 = 
bc_unc⁄d_dú
;

767 i‡((
Êags
 & (
F_UNCOND
|
F_INDIRJMP
))== (F_UNCOND|F_INDIRJMP))

768 
bc
 = 
bc_unc⁄d_ödú
;

769 i‡((
Êags
 & (
F_COND
|
F_DIRJMP
)) == (F_COND|F_DIRJMP))

770 
bc
 = 
bc_c⁄d_dú
;

771 i‡((
Êags
 & (
F_COND
|
F_INDIRJMP
)) == (F_COND|F_INDIRJMP))

772 
bc
 = 
bc_c⁄d_ödú
;

774 
	`∑nic
("branch hasÇo class");

777 
	`°©_add_ßm∂e
(
bc_¥of
, ()
bc
);

781 i‡(
¥of_am
)

783 
md_amode_ty≥
 
am
;

786 
	`MD_AMODE_PREPROBE
(
›
, 
fsm
);

789 i‡(
Êags
 & 
F_MEM
)

792 
	`MD_AMODE_PROBE
(
am
, 
›
, 
fsm
);

795 
	`°©_add_ßm∂e
(
am_¥of
, ()
am
);

798 
	`MD_AMODE_POSTPROBE
(
fsm
);

802 i‡(
¥of_£g
)

804 i‡(
Êags
 & 
F_MEM
)

807 
	`°©_add_ßm∂e
(
£g_¥of
, ()
	`böd_to_£g
(
addr
));

811 i‡(
¥of_tsyms
)

813 
tödex
;

816 
	`sym_böd_addr
(
ªgs
.
ªgs_PC
, &
tödex
, 
FALSE
, 
sdb_ãxt
);

818 i‡(
tödex
 >= 0)

820 i‡(
tödex
 > 
sym_¡extsyms
)

821 
	`∑nic
("bogusÅext symbol index");

823 
	`°©_add_ßm∂e
(
tsym_¥of
, 
tödex
);

828 i‡(
¥of_dsyms
)

830 
dödex
;

832 i‡(
Êags
 & 
F_MEM
)

835 
	`sym_böd_addr
(
addr
, &
dödex
, 
FALSE
, 
sdb_d©a
);

837 i‡(
dödex
 >= 0)

839 i‡(
dödex
 > 
sym_nd©asyms
)

840 
	`∑nic
("bogus data symbol index");

842 
	`°©_add_ßm∂e
(
dsym_¥of
, 
dödex
);

848 i‡(
¥of_èddr
)

851 
	`°©_add_ßm∂e
(
èddr_¥of
, 
ªgs
.
ªgs_PC
);

855 
i
=0; i<
pc°©_√…
; i++)

857 
cou¡î_t
 
√wvÆ
;

858 
dñè
;

861 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

862 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

863 i‡(
dñè
 != 0)

865 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

866 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

872 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

873 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

874 
addr
, 
sim_num_ö¢
, sim_num_insn))

875 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

878 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

879 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

882 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

885 
	}
}

	@sim-safe.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<m©h.h
>

56 
	~"ho°.h
"

57 
	~"misc.h
"

58 
	~"machöe.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"lﬂdî.h
"

62 
	~"sysˇŒ.h
"

63 
	~"dlôe.h
"

64 
	~"›ti⁄s.h
"

65 
	~"°©s.h
"

66 
	~"sim.h
"

76 
ªgs_t
 
	gªgs
;

79 
mem_t
 *
	gmem
 = 
NULL
;

82 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

85 
	gmax_ö°s
;

89 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

91 
	`›t_ªg_hódî
(
odb
,

100 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

101 &
max_ö°s
, 0,

102  
TRUE
, 
NULL
);

104 
	}
}

108 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

111 
	}
}

115 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

117 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

119 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

120 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

122 &
sim_num_ªfs
, 0, 
NULL
);

123 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

125 &
sim_ñ≠£d_time
, 0, 
NULL
);

126 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

128 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

129 
	`ld_ªg_°©s
(
sdb
);

130 
	`mem_ªg_°©s
(
mem
, 
sdb
);

131 
	}
}

135 
	$sim_öô
()

137 
sim_num_ªfs
 = 0;

140 
	`ªgs_öô
(&
ªgs
);

143 
mem
 = 
	`mem_¸óã
("mem");

144 
	`mem_öô
(
mem
);

145 
	}
}

149 
	$sim_lﬂd_¥og
(*
‚ame
,

150 
¨gc
, **
¨gv
,

151 **
ívp
)

154 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

157 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

158 
	}
}

162 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

165 
	}
}

169 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

172 
	}
}

176 
	$sim_unöô
()

179 
	}
}

191 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

194 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

197 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

198 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

200 #i‡
deföed
(
TARGET_PISA
)

203 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

204 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

205 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

206 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

207 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

208 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

211 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

212 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

213 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

214 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

215 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

216 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

218 #ñi‡
deföed
(
TARGET_ALPHA
)

221 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

222 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

223 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(N)])

	)

224 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(N)] = (EXPR))

	)

227 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

228 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

229 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

230 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

233 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

237 
	#READ_BYTE
(
SRC
, 
FAULT
) \

238 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_BYTE
(
mem
,áddr))

	)

239 
	#READ_HALF
(
SRC
, 
FAULT
) \

240 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_HALF
(
mem
,áddr))

	)

241 
	#READ_WORD
(
SRC
, 
FAULT
) \

242 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_WORD
(
mem
,áddr))

	)

243 #ifde‡
HOST_HAS_QWORD


244 
	#READ_QWORD
(
SRC
, 
FAULT
) \

245 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), 
	`MEM_READ_QWORD
(
mem
,áddr))

	)

248 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
) \

249 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

	)

250 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
) \

251 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

	)

252 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
) \

253 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

	)

254 #ifde‡
HOST_HAS_QWORD


255 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
) \

256 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), 
	`MEM_WRITE_QWORD
(
mem
,áddr, (
SRC
)))

	)

260 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

264 
	$sim_maö
()

266 
md_ö°_t
 
ö°
;

267 
md_addr_t
 
addr
;

268 
md_›code
 
›
;

269 
is_wrôe
;

270 
md_Áu…_ty≥
 
Áu…
;

272 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

275 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

278 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

279 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),

280 
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, &ªgs, 
mem
);

282 
TRUE
)

285 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

286 #ifde‡
TARGET_ALPHA


287 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

291 
	`MD_FETCH_INST
(
ö°
, 
mem
, 
ªgs
.
ªgs_PC
);

294 
sim_num_ö¢
++;

297 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

300 
Áu…
 = 
md_Áu…_n⁄e
;

303 
	`MD_SET_OPCODE
(
›
, 
ö°
);

306 
›
)

308 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

309 
OP
: \

310 
	`SYMCAT
(
OP
,
_IMPL
); \

311 ;

	)

312 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

313 
OP
: \

314 
	`∑nic
("©ãm±edÅÿexecuãáÜökög opcode");

	)

315 
	#CONNECT
(
OP
)

	)

316 
	#DECLARE_FAULT
(
FAULT
) \

317 { 
Áu…
 = (
FAULT
); ; }

	)

318 
	~"machöe.def
"

320 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

323 i‡(
Áu…
 !
md_Áu…_n⁄e
)

324 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

326 i‡(
vîbo£
)

328 
	`myÂrötf
(
°dîr
, "%10n [xor: 0x%08x] @ 0x%08p: ",

329 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),Ñegs.
ªgs_PC
);

330 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

331 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

332 
	`myÂrötf
(
°dîr
, " mem: 0x%08p", 
addr
);

333 
	`Ârötf
(
°dîr
, "\n");

337 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

339 
sim_num_ªfs
++;

340 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

341 
is_wrôe
 = 
TRUE
;

345 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

346 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

347 
addr
, 
sim_num_ö¢
, sim_num_insn))

348 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

351 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

352 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

355 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

358 
	}
}

	@sim.h

52 #i‚de‡
SIM_H


53 
	#SIM_H


	)

55 
	~<°dio.h
>

56 
	~<£tjmp.h
>

57 
	~<time.h
>

59 
	~"›ti⁄s.h
"

60 
	~"°©s.h
"

61 
	~"ªgs.h
"

62 
	~"mem‹y.h
"

65 
sim_dump_°©s
;

68 
sim_exô_now
;

71 
jmp_buf
 
sim_exô_buf
;

74 
sim_sw≠_byãs
;

75 
sim_sw≠_w‹ds
;

78 
cou¡î_t
 
sim_num_ö¢
;

81 
time_t
 
sim_°¨t_time
;

82 
time_t
 
sim_íd_time
;

83 
sim_ñ≠£d_time
;

86 
›t_odb_t
 *
sim_odb
;

89 
°©_sdb_t
 *
sim_sdb
;

92 *
sim_eio_‚ame
;

93 *
sim_chk±_‚ame
;

94 
FILE
 *
sim_eio_fd
;

97 
FILE
 *
sim_¥ogfd
;

105 
sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

110 
sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
);

113 
sim_ªg_°©s
(
°©_sdb_t
 *
sdb
);

116 
sim_öô
();

119 
sim_lﬂd_¥og
(*
‚ame
, 
¨gc
, **
¨gv
, **
ívp
);

124 
sim_aux_c⁄fig
(
FILE
 *
°ªam
);

127 
sim_maö
();

132 
sim_aux_°©s
(
FILE
 *
°ªam
);

135 
sim_unöô
();

139 
sim_¥öt_°©s
(
FILE
 *
fd
);

	@stats.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<limôs.h
>

55 
	~<m©h.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

60 
	~"evÆ.h
"

61 
	~"°©s.h
"

64 
evÆ_vÆue_t


65 
	$°©_evÆ_idít
(
evÆ_°©e_t
 *
es
)

67 
°©_sdb_t
 *
sdb
 = 
es
->
u£r_±r
;

68 
°©_°©_t
 *
°©
;

69 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

70 
evÆ_vÆue_t
 
vÆ
;

73 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

75 i‡(!
	`°rcmp
(
°©
->
«me
, 
es
->
tok_buf
))

81 i‡(!
°©
)

84 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

85  
îr_vÆue
;

90 
°©
->
sc
)

92 
sc_öt
:

93 
vÆ
.
ty≥
 = 
ë_öt
;

94 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

96 
sc_uöt
:

97 
vÆ
.
ty≥
 = 
ë_uöt
;

98 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

100 #ifde‡
HOST_HAS_QWORD


101 
sc_qw‹d
:

103 
vÆ
.
ty≥
 = 
ë_doubÀ
;

104 #ifde‡
_MSC_VER


105 
vÆ
.
vÆue
.
as_doubÀ
 = ()(
sqw‹d_t
)*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

107 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

110 
sc_sqw‹d
:

112 
vÆ
.
ty≥
 = 
ë_doubÀ
;

113 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
;

116 
sc_Êﬂt
:

117 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

118 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

120 
sc_doubÀ
:

121 
vÆ
.
ty≥
 = 
ë_doubÀ
;

122 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

124 
sc_di°
:

125 
sc_sdi°
:

126 
	`Áèl
("stat distributionsÇotállowed in formulaÉxpressions");

128 
sc_f‹muœ
:

131 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

132 *
ídp
;

134 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

135 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

138 
vÆ
 = 
îr_vÆue
;

141 
	`evÆ_dñëe
(
es
);

145 
	`∑nic
("bogus stat class");

148  
vÆ
;

149 
	}
}

152 
°©_sdb_t
 *

153 
	$°©_√w
()

155 
°©_sdb_t
 *
sdb
;

157 
sdb
 = (
°©_sdb_t
 *)
	`ˇŒoc
(1, (stat_sdb_t));

158 i‡(!
sdb
)

159 
	`Áèl
("out of virtual memory");

161 
sdb
->
°©s
 = 
NULL
;

162 
sdb
->
evÆu©‹
 = 
	`evÆ_√w
(
°©_evÆ_idít
, sdb);

164  
sdb
;

165 
	}
}

169 
	$°©_dñëe
(
°©_sdb_t
 *
sdb
)

171 
i
;

172 
°©_°©_t
 *
°©
, *
°©_√xt
;

173 
buckë_t
 *
buckë
, *
buckë_√xt
;

176 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà
°©_√xt
)

178 
°©_√xt
 = 
°©
->
√xt
;

179 
°©
->
√xt
 = 
NULL
;

182 
°©
->
sc
)

184 
sc_öt
:

185 
sc_uöt
:

186 #ifde‡
HOST_HAS_QWORD


187 
sc_qw‹d
:

188 
sc_sqw‹d
:

190 
sc_Êﬂt
:

191 
sc_doubÀ
:

192 
sc_f‹muœ
:

195 
sc_di°
:

197 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_di°
.
¨r
);

198 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 = 
NULL
;

200 
sc_sdi°
:

202 
i
=0; i<
HTAB_SZ
; i++)

204 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

205 
buckë
 !
NULL
;

206 
buckë
 = 
buckë_√xt
)

208 
buckë_√xt
 = 
buckë
->
√xt
;

209 
buckë
->
√xt
 = 
NULL
;

210 
	`‰ì
(
buckë
);

212 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
] = 
NULL
;

215 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
);

216 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = 
NULL
;

219 
	`∑nic
("bogus stat class");

222 
	`‰ì
(
°©
);

224 
sdb
->
°©s
 = 
NULL
;

225 
	`evÆ_dñëe
(
sdb
->
evÆu©‹
);

226 
sdb
->
evÆu©‹
 = 
NULL
;

227 
	`‰ì
(
sdb
);

228 
	}
}

232 
	$add_°©
(
°©_sdb_t
 *
sdb
,

233 
°©_°©_t
 *
°©
)

235 
°©_°©_t
 *
ñt
, *
¥ev
;

238 
¥ev
=
NULL
, 
ñt
=
sdb
->
°©s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

242 i‡(
¥ev
 !
NULL
)

243 
¥ev
->
√xt
 = 
°©
;

245 
sdb
->
°©s
 = 
°©
;

246 
°©
->
√xt
 = 
NULL
;

247 
	}
}

250 
°©_°©_t
 *

251 
	$°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

252 *
«me
,

253 *
desc
,

254 *
v¨
,

255 
öô_vÆ
,

256 *
f‹m©
)

258 
°©_°©_t
 *
°©
;

260 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

261 i‡(!
°©
)

262 
	`Áèl
("out of virtual memory");

264 
°©
->
«me
 = 
	`my°rdup
(name);

265 
°©
->
desc
 = 
	`my°rdup
(desc);

266 
°©
->
f‹m©
 = format ? format : "%12d";

267 
°©
->
sc
 = 
sc_öt
;

268 
°©
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

269 
°©
->
v¨ü¡
.
f‹_öt
.
öô_vÆ
 = init_val;

272 
	`add_°©
(
sdb
, 
°©
);

275 *
v¨
 = 
öô_vÆ
;

277  
°©
;

278 
	}
}

281 
°©_°©_t
 *

282 
	$°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

283 *
«me
,

284 *
desc
,

285 *
v¨
,

286 
öô_vÆ
,

287 *
f‹m©
)

289 
°©_°©_t
 *
°©
;

291 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

292 i‡(!
°©
)

293 
	`Áèl
("out of virtual memory");

295 
°©
->
«me
 = 
	`my°rdup
(name);

296 
°©
->
desc
 = 
	`my°rdup
(desc);

297 
°©
->
f‹m©
 = format ? format : "%12u";

298 
°©
->
sc
 = 
sc_uöt
;

299 
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

300 
°©
->
v¨ü¡
.
f‹_uöt
.
öô_vÆ
 = init_val;

303 
	`add_°©
(
sdb
, 
°©
);

306 *
v¨
 = 
öô_vÆ
;

308  
°©
;

309 
	}
}

311 #ifde‡
HOST_HAS_QWORD


313 
°©_°©_t
 *

314 
	$°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

315 *
«me
,

316 *
desc
,

317 
qw‹d_t
 *
v¨
,

318 
qw‹d_t
 
öô_vÆ
,

319 *
f‹m©
)

321 
°©_°©_t
 *
°©
;

323 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

324 i‡(!
°©
)

325 
	`Áèl
("out of virtual memory");

327 
°©
->
«me
 = 
	`my°rdup
(name);

328 
°©
->
desc
 = 
	`my°rdup
(desc);

329 
°©
->
f‹m©
 = format ? format : "%12lu";

330 
°©
->
sc
 = 
sc_qw‹d
;

331 
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
 = var;

332 
°©
->
v¨ü¡
.
f‹_qw‹d
.
öô_vÆ
 = init_val;

335 
	`add_°©
(
sdb
, 
°©
);

338 *
v¨
 = 
öô_vÆ
;

340  
°©
;

341 
	}
}

344 
°©_°©_t
 *

345 
	$°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

346 *
«me
,

347 *
desc
,

348 
sqw‹d_t
 *
v¨
,

349 
sqw‹d_t
 
öô_vÆ
,

350 *
f‹m©
)

352 
°©_°©_t
 *
°©
;

354 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

355 i‡(!
°©
)

356 
	`Áèl
("out of virtual memory");

358 
°©
->
«me
 = 
	`my°rdup
(name);

359 
°©
->
desc
 = 
	`my°rdup
(desc);

360 
°©
->
f‹m©
 = format ? format : "%12ld";

361 
°©
->
sc
 = 
sc_sqw‹d
;

362 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
 = var;

363 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
öô_vÆ
 = init_val;

366 
	`add_°©
(
sdb
, 
°©
);

369 *
v¨
 = 
öô_vÆ
;

371  
°©
;

372 
	}
}

376 
°©_°©_t
 *

377 
	$°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

378 *
«me
,

379 *
desc
,

380 *
v¨
,

381 
öô_vÆ
,

382 *
f‹m©
)

384 
°©_°©_t
 *
°©
;

386 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

387 i‡(!
°©
)

388 
	`Áèl
("out of virtual memory");

390 
°©
->
«me
 = 
	`my°rdup
(name);

391 
°©
->
desc
 = 
	`my°rdup
(desc);

392 
°©
->
f‹m©
 = format ? format : "%12.4f";

393 
°©
->
sc
 = 
sc_Êﬂt
;

394 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

395 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
öô_vÆ
 = init_val;

398 
	`add_°©
(
sdb
, 
°©
);

401 *
v¨
 = 
öô_vÆ
;

403  
°©
;

404 
	}
}

407 
°©_°©_t
 *

408 
	$°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

409 *
«me
,

410 *
desc
,

411 *
v¨
,

412 
öô_vÆ
,

413 *
f‹m©
)

415 
°©_°©_t
 *
°©
;

417 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

418 i‡(!
°©
)

419 
	`Áèl
("out of virtual memory");

421 
°©
->
«me
 = 
	`my°rdup
(name);

422 
°©
->
desc
 = 
	`my°rdup
(desc);

423 
°©
->
f‹m©
 = format ? format : "%12.4f";

424 
°©
->
sc
 = 
sc_doubÀ
;

425 
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

426 
°©
->
v¨ü¡
.
f‹_doubÀ
.
öô_vÆ
 = init_val;

429 
	`add_°©
(
sdb
, 
°©
);

432 *
v¨
 = 
öô_vÆ
;

434  
°©
;

435 
	}
}

443 
°©_°©_t
 *

444 
	$°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

445 *
«me
,

446 *
desc
,

447 
öô_vÆ
,

448 
¨r_sz
,

449 
buckë_sz
,

450 
pf
,

451 *
f‹m©
,

452 **
im≠
,

453 
¥öt_‚_t
 
¥öt_‚
)

455 
i
;

456 
°©_°©_t
 *
°©
;

457 *
¨r
;

459 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

460 i‡(!
°©
)

461 
	`Áèl
("out of virtual memory");

463 
°©
->
«me
 = 
	`my°rdup
(name);

464 
°©
->
desc
 = 
	`my°rdup
(desc);

465 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

466 
°©
->
sc
 = 
sc_di°
;

467 
°©
->
v¨ü¡
.
f‹_di°
.
öô_vÆ
 = init_val;

468 
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
 =árr_sz;

469 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
 = bucket_sz;

470 
°©
->
v¨ü¡
.
f‹_di°
.
pf
 =Öf;

471 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
 = imap;

472 
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
 =Örint_fn;

473 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 = 0;

475 
¨r
 = (*)
	`ˇŒoc
(
¨r_sz
, ());

476 i‡(!
¨r
)

477 
	`Áèl
("out of virtual memory");

478 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 =árr;

481 
	`add_°©
(
sdb
, 
°©
);

484 
i
=0; i < 
¨r_sz
; i++)

485 
¨r
[
i
] = 
öô_vÆ
;

487  
°©
;

488 
	}
}

497 
°©_°©_t
 *

498 
	$°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

499 *
«me
,

500 *
desc
,

501 
öô_vÆ
,

502 
pf
,

503 *
f‹m©
,

504 
¥öt_‚_t
 
¥öt_‚
)

506 
°©_°©_t
 *
°©
;

507 
buckë_t
 **
ßº
;

509 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

510 i‡(!
°©
)

511 
	`Áèl
("out of virtual memory");

513 
°©
->
«me
 = 
	`my°rdup
(name);

514 
°©
->
desc
 = 
	`my°rdup
(desc);

515 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

516 
°©
->
sc
 = 
sc_sdi°
;

517 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
 = init_val;

518 
°©
->
v¨ü¡
.
f‹_sdi°
.
pf
 =Öf;

519 
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
 =Örint_fn;

522 
ßº
 = (
buckë_t
 **)
	`ˇŒoc
(
HTAB_SZ
, (bucket_t *));

523 i‡(!
ßº
)

524 
	`Áèl
("out of virtual memory");

525 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = sarr;

528 
	`add_°©
(
sdb
, 
°©
);

530  
°©
;

531 
	}
}

535 
	$°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

536 
md_addr_t
 
ödex
,

537 
nßm∂es
)

539 
°©
->
sc
)

541 
sc_di°
:

543 
i
;

546 
i
 = 
ödex
 / 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
;

549 i‡(
i
 >
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
)

550 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 +
nßm∂es
;

552 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] +
nßm∂es
;

555 
sc_sdi°
:

557 
buckë_t
 *
buckë
;

558 
hash
 = 
	`HTAB_HASH
(
ödex
);

560 i‡(
hash
 < 0 || hash >
HTAB_SZ
)

561 
	`∑nic
("hashÅable index overflow");

564 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

565 
buckë
 !
NULL
;

566 
buckë
 = buckë->
√xt
)

568 i‡(
buckë
->
ödex
 == index)

571 i‡(!
buckë
)

574 
buckë
 = (
buckë_t
 *)
	`ˇŒoc
(1, (bucket_t));

575 i‡(!
buckë
)

576 
	`Áèl
("out of virtual memory");

577 
buckë
->
√xt
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

578 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
] = 
buckë
;

579 
buckë
->
ödex
 = index;

580 
buckë
->
cou¡
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
;

582 
buckë
->
cou¡
 +
nßm∂es
;

586 
	`∑nic
("stat variable isÇotánárray distribution");

588 
	}
}

592 
	$°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

593 
md_addr_t
 
ödex
)

595 
	`°©_add_ßm∂es
(
°©
, 
ödex
, 1);

596 
	}
}

605 
°©_°©_t
 *

606 
	$°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

607 *
«me
,

608 *
desc
,

609 *
f‹muœ
,

610 *
f‹m©
)

612 
°©_°©_t
 *
°©
;

614 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

615 i‡(!
°©
)

616 
	`Áèl
("out of virtual memory");

618 
°©
->
«me
 = 
	`my°rdup
(name);

619 
°©
->
desc
 = 
	`my°rdup
(desc);

620 
°©
->
f‹m©
 = format ? format : "%12.4f";

621 
°©
->
sc
 = 
sc_f‹muœ
;

622 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
 = 
	`my°rdup
(formula);

625 
	`add_°©
(
sdb
, 
°©
);

627  
°©
;

628 
	}
}

633 
	$com∑ª_‚
(*
p1
, *
p2
)

635 
buckë_t
 **
pb1
 = 
p1
, **
pb2
 = 
p2
;

638 i‡((*
pb1
)->
ödex
 < (*
pb2
)->index)

640 i‡((*
pb1
)->
ödex
 > (*
pb2
)->index)

644 
	}
}

648 
	$¥öt_di°
(
°©_°©_t
 *
°©
,

649 
FILE
 *
fd
)

651 
i
, 
bcou¡
, 
imax
, 
imö
;

652 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

653 
pf
 = 
°©
->
v¨ü¡
.
f‹_di°
.pf;

656 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

657 
imax
 = 0; 
imö
 = 
UINT_MAX
;

658 
i
=0; i<
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
; i++)

660 
bcou¡
++;

661 
btŸÆ
 +
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

663 
bsqsum
 +(()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] *

664 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

665 
bavg
 = 
btŸÆ
 / 
	`MAX
(()
bcou¡
, 1.0);

666 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

667 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

671 
	`Ârötf
(
fd
, "\n");

672 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

673 
	`Ârötf
(
fd
, "%s.array_size = %u\n",

674 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
¨r_sz
);

675 
	`Ârötf
(
fd
, "%s.bucket_size = %u\n",

676 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

678 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

679 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

680 i‡(
bcou¡
 > 0)

682 
	`Ârötf
(
fd
, "%s.imö = %u\n", 
°©
->
«me
, 0U);

683 
	`Ârötf
(
fd
, "%s.imax = %u\n", 
°©
->
«me
, 
bcou¡
);

687 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

688 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

690 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
	`MAX
(
bcou¡
, 1.0));

691 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

692 
	`Ârötf
(
fd
, "%s.overflows = %u\n",

693 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
ovîÊows
);

695 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

696 
	`Ârötf
(
fd
, "# %14s ", "index");

697 i‡(
pf
 & 
PF_COUNT
)

698 
	`Ârötf
(
fd
, "%10s ", "count");

699 i‡(
pf
 & 
PF_PDF
)

700 
	`Ârötf
(
fd
, "%6s ", "pdf");

701 i‡(
pf
 & 
PF_CDF
)

702 
	`Ârötf
(
fd
, "%6s ", "cdf");

703 
	`Ârötf
(
fd
, "\n");

705 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

707 i‡(
bcou¡
 > 0)

710 
bsum
 = 0.0;

711 
i
=0; i<
bcou¡
; i++)

713 
bsum
 +()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

714 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
)

716 
°©
->
v¨ü¡
.
f‹_di°
.
	`¥öt_‚
(stat,

717 
i
,

718 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

719 
bsum
,

720 
btŸÆ
);

724 i‡(
°©
->
f‹m©
 =
NULL
)

726 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

727 
	`Ârötf
(
fd
, "%-16†", 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
]);

729 
	`Ârötf
(
fd
, "%16u ",

730 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

731 i‡(
pf
 & 
PF_COUNT
)

732 
	`Ârötf
(
fd
, "%10u ", 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

733 i‡(
pf
 & 
PF_PDF
)

734 
	`Ârötf
(
fd
, "%6.2f ",

735 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

736 
	`MAX
(
btŸÆ
, 1.0) * 100.0);

737 i‡(
pf
 & 
PF_CDF
)

738 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

742 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

744 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

745 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

746 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
],

747 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

748 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

749 
	`MAX
(
btŸÆ
, 1.0) * 100.0,

750 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

752 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

753 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
,

754 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

755 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

756 
	`MAX
(
btŸÆ
, 1.0) * 100.0,

757 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

760 
	`Áèl
("distribution formatÇot yet implemented");

762 
	`Ârötf
(
fd
, "\n");

767 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

768 
	}
}

772 
	$¥öt_sdi°
(
°©_°©_t
 *
°©
,

773 
FILE
 *
fd
)

775 
i
, 
bcou¡
;

776 
md_addr_t
 
imax
, 
imö
;

777 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

778 
buckë_t
 *
buckë
;

779 
pf
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.pf;

782 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

783 
imax
 = 0; 
imö
 = 
UINT_MAX
;

784 
i
=0; i<
HTAB_SZ
; i++)

786 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

787 
buckë
 !
NULL
;

788 
buckë
 = buckë->
√xt
)

790 
bcou¡
++;

791 
btŸÆ
 +
buckë
->
cou¡
;

793 
bsqsum
 +(()
buckë
->
cou¡
 * ()bucket->count);

794 
bavg
 = 
btŸÆ
 / ()
bcou¡
;

795 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

796 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

797 i‡(
buckë
->
ödex
 < 
imö
)

798 
imö
 = 
buckë
->
ödex
;

799 i‡(
buckë
->
ödex
 > 
imax
)

800 
imax
 = 
buckë
->
ödex
;

805 
	`Ârötf
(
fd
, "\n");

806 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

807 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

808 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

809 i‡(
bcou¡
 > 0)

811 
	`myÂrötf
(
fd
, "%s.imö = 0x%p\n", 
°©
->
«me
, 
imö
);

812 
	`myÂrötf
(
fd
, "%s.imax = 0x%p\n", 
°©
->
«me
, 
imax
);

816 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

817 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

819 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
bcou¡
);

820 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

821 
	`Ârötf
(
fd
, "%s.ovîÊow†0\n", 
°©
->
«me
);

823 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

824 
	`Ârötf
(
fd
, "# %14s ", "index");

825 i‡(
pf
 & 
PF_COUNT
)

826 
	`Ârötf
(
fd
, "%10s ", "count");

827 i‡(
pf
 & 
PF_PDF
)

828 
	`Ârötf
(
fd
, "%6s ", "pdf");

829 i‡(
pf
 & 
PF_CDF
)

830 
	`Ârötf
(
fd
, "%6s ", "cdf");

831 
	`Ârötf
(
fd
, "\n");

833 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

835 i‡(
bcou¡
 > 0)

837 
bödex
;

838 
buckë_t
 **
b¨r
;

841 
b¨r
 = (
buckë_t
 **)
	`ˇŒoc
(
bcou¡
, (bucket_t *));

842 i‡(!
b¨r
)

843 
	`Áèl
("out of virtual memory");

844 
bödex
=0,
i
=0; i<
HTAB_SZ
; i++)

846 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

847 
buckë
 !
NULL
;

848 
buckë
 = buckë->
√xt
)

850 
b¨r
[
bödex
++] = 
buckë
;

855 
	`qs‹t
(
b¨r
, 
bcou¡
, (
buckë_t
 *), (*)
com∑ª_‚
);

858 
bsum
 = 0.0;

859 
i
=0; i<
bcou¡
; i++)

861 
bsum
 +()
b¨r
[
i
]->
cou¡
;

862 i‡(
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
)

864 
°©
->
v¨ü¡
.
f‹_sdi°
.
	`¥öt_‚
(stat,

865 
b¨r
[
i
]->
ödex
,

866 
b¨r
[
i
]->
cou¡
,

867 
bsum
,

868 
btŸÆ
);

872 i‡(
°©
->
f‹m©
 =
NULL
)

874 
	`myÂrötf
(
fd
, "0x%∞", 
b¨r
[
i
]->
ödex
);

875 i‡(
pf
 & 
PF_COUNT
)

876 
	`Ârötf
(
fd
, "%10u ", 
b¨r
[
i
]->
cou¡
);

877 i‡(
pf
 & 
PF_PDF
)

878 
	`Ârötf
(
fd
, "%6.2f ",

879 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

880 i‡(
pf
 & 
PF_CDF
)

881 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

885 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

887 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

888 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

889 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0)*100.0,

890 
bsum
/
	`MAX
(
btŸÆ
, 1.0) * 100.0);

892 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
))

894 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

895 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

896 ()
b¨r
[
i
]->
cou¡
/
	`MAX
(
btŸÆ
, 1.0)*100.0);

898 i‡(
pf
 =
PF_COUNT
)

900 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

901 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
);

904 
	`Áèl
("distribution formatÇot yet implemented");

906 
	`Ârötf
(
fd
, "\n");

911 
	`‰ì
(
b¨r
);

914 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

915 
	}
}

919 
	$°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

920 
°©_°©_t
 *
°©
,

921 
FILE
 *
fd
)

923 
evÆ_vÆue_t
 
vÆ
;

925 
°©
->
sc
)

927 
sc_öt
:

928 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

929 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_öt
.
v¨
);

930 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

932 
sc_uöt
:

933 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

934 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_uöt
.
v¨
);

935 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

937 #ifde‡
HOST_HAS_QWORD


938 
sc_qw‹d
:

940 
buf
[128];

942 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

943 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_qw‹d
.
v¨
);

944 
	`Ârötf
(
fd
, "%†# %s", 
buf
, 
°©
->
desc
);

947 
sc_sqw‹d
:

949 
buf
[128];

951 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

952 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_sqw‹d
.
v¨
);

953 
	`Ârötf
(
fd
, "%†# %s", 
buf
, 
°©
->
desc
);

957 
sc_Êﬂt
:

958 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

959 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, ()*°©->
v¨ü¡
.
f‹_Êﬂt
.
v¨
);

960 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

962 
sc_doubÀ
:

963 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

964 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_doubÀ
.
v¨
);

965 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

967 
sc_di°
:

968 
	`¥öt_di°
(
°©
, 
fd
);

970 
sc_sdi°
:

971 
	`¥öt_sdi°
(
°©
, 
fd
);

973 
sc_f‹muœ
:

976 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

977 *
ídp
;

979 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

980 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

981 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

982 
	`Ârötf
(
fd
, "<îr‹: %s>", 
evÆ_îr_°r
[
evÆ_îr‹
]);

984 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, 
	`evÆ_as_doubÀ
(
vÆ
));

985 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

988 
	`evÆ_dñëe
(
es
);

992 
	`∑nic
("bogus stat class");

994 
	`Ârötf
(
fd
, "\n");

995 
	}
}

999 
	$°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

1000 
FILE
 *
fd
)

1002 
°©_°©_t
 *
°©
;

1004 i‡(!
sdb
)

1010 
°©
=
sdb
->
°©s
; sèà!
NULL
; sèt=°©->
√xt
)

1011 
	`°©_¥öt_°©
(
sdb
, 
°©
, 
fd
);

1012 
	}
}

1015 
°©_°©_t
 *

1016 
	$°©_föd_°©
(
°©_sdb_t
 *
sdb
,

1017 *
°©_«me
)

1019 
°©_°©_t
 *
°©
;

1021 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

1023 i‡(!
	`°rcmp
(
°©
->
«me
, 
°©_«me
))

1026  
°©
;

1027 
	}
}

1029 #ifde‡
TESTIT


1032 
	$maö
()

1034 
°©_sdb_t
 *
sdb
;

1035 
°©_°©_t
 *
°©
, *
°©1
, *
°©2
, *
°©3
, *
°©4
, *
°©5
;

1036 
™_öt
;

1037 
a_uöt
;

1038 
a_Êﬂt
;

1039 
a_doubÀ
;

1040 *
my_im≠
[8] = {

1045 
sdb
 = 
	`°©_√w
();

1048 
	`°©_ªg_öt
(
sdb
, "stat.an_int", "An integer stat variable.",

1049 &
™_öt
, 1, 
NULL
);

1050 
	`°©_ªg_uöt
(
sdb
, "stat.a_uint", "An unsigned integer stat variable.",

1051 &
a_uöt
, 2, "%u (unsigned)");

1052 
	`°©_ªg_Êﬂt
(
sdb
, "stat.a_float", "A float stat variable.",

1053 &
a_Êﬂt
, 3, 
NULL
);

1054 
	`°©_ªg_doubÀ
(
sdb
, "stat.a_double", "A double stat variable.",

1055 &
a_doubÀ
, 4, 
NULL
);

1056 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_formula", "A double stat formula.",

1057 "°©.a_Êﬂà/ sèt.a_uöt", 
NULL
);

1058 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_formula1", "A double stat formula #1.",

1059 "2 * (°©.a_f‹muœ / (1.5 * sèt.™_öt))", 
NULL
);

1060 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_bad_formula", "A double stat formula w/error.",

1061 "°©.a_Êﬂà/ (°©.a_uöà- 2)", 
NULL
);

1062 
°©
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist", "Anárray distribution.",

1063 0, 8, 1, 
PF_ALL
, 
NULL
, NULL, NULL);

1064 
°©1
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist1", "Anárray distribution #1.",

1065 0, 8, 4, 
PF_ALL
, 
NULL
, NULL, NULL);

1066 
°©2
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist2", "Anárray distribution #2.",

1067 0, 8, 1, (
PF_PDF
|
PF_CDF
), 
NULL
, NULL, NULL);

1068 
°©3
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist3", "Anárray distribution #3.",

1069 0, 8, 1, 
PF_ALL
, 
NULL
, 
my_im≠
, NULL);

1070 
°©4
 = 
	`°©_ªg_sdi°
(
sdb
, "stat.a_sdist", "A sparseárray distribution.",

1071 0, 
PF_ALL
, 
NULL
, NULL);

1072 
°©5
 = 
	`°©_ªg_sdi°
(
sdb
, "stat.a_sdist1",

1074 0, 
PF_ALL
, "0x%08lx %10lu %6.2f %6.2f",

1075 
NULL
);

1078 
	`Ârötf
(
°dout
, "** Initial stats...\n");

1079 
	`°©_¥öt_°©s
(
sdb
, 
°dout
);

1082 
™_öt
++;

1083 
a_uöt
++;

1084 
a_Êﬂt
 *= 2;

1085 
a_doubÀ
 *= 4;

1087 
	`°©_add_ßm∂e
(
°©
, 8);

1088 
	`°©_add_ßm∂e
(
°©
, 8);

1089 
	`°©_add_ßm∂e
(
°©
, 1);

1090 
	`°©_add_ßm∂e
(
°©
, 3);

1091 
	`°©_add_ßm∂e
(
°©
, 4);

1092 
	`°©_add_ßm∂e
(
°©
, 4);

1093 
	`°©_add_ßm∂e
(
°©
, 7);

1095 
	`°©_add_ßm∂e
(
°©1
, 32);

1096 
	`°©_add_ßm∂e
(
°©1
, 32);

1097 
	`°©_add_ßm∂e
(
°©1
, 1);

1098 
	`°©_add_ßm∂e
(
°©1
, 12);

1099 
	`°©_add_ßm∂e
(
°©1
, 17);

1100 
	`°©_add_ßm∂e
(
°©1
, 18);

1101 
	`°©_add_ßm∂e
(
°©1
, 30);

1103 
	`°©_add_ßm∂e
(
°©2
, 8);

1104 
	`°©_add_ßm∂e
(
°©2
, 8);

1105 
	`°©_add_ßm∂e
(
°©2
, 1);

1106 
	`°©_add_ßm∂e
(
°©2
, 3);

1107 
	`°©_add_ßm∂e
(
°©2
, 4);

1108 
	`°©_add_ßm∂e
(
°©2
, 4);

1109 
	`°©_add_ßm∂e
(
°©2
, 7);

1111 
	`°©_add_ßm∂e
(
°©3
, 8);

1112 
	`°©_add_ßm∂e
(
°©3
, 8);

1113 
	`°©_add_ßm∂e
(
°©3
, 1);

1114 
	`°©_add_ßm∂e
(
°©3
, 3);

1115 
	`°©_add_ßm∂e
(
°©3
, 4);

1116 
	`°©_add_ßm∂e
(
°©3
, 4);

1117 
	`°©_add_ßm∂e
(
°©3
, 7);

1119 
	`°©_add_ßm∂e
(
°©4
, 800);

1120 
	`°©_add_ßm∂e
(
°©4
, 800);

1121 
	`°©_add_ßm∂e
(
°©4
, 1123);

1122 
	`°©_add_ßm∂e
(
°©4
, 3332);

1123 
	`°©_add_ßm∂e
(
°©4
, 4000);

1124 
	`°©_add_ßm∂es
(
°©4
, 4001, 18);

1125 
	`°©_add_ßm∂e
(
°©4
, 7);

1127 
	`°©_add_ßm∂e
(
°©5
, 800);

1128 
	`°©_add_ßm∂e
(
°©5
, 800);

1129 
	`°©_add_ßm∂e
(
°©5
, 1123);

1130 
	`°©_add_ßm∂e
(
°©5
, 3332);

1131 
	`°©_add_ßm∂e
(
°©5
, 4000);

1132 
	`°©_add_ßm∂es
(
°©5
, 4001, 18);

1133 
	`°©_add_ßm∂e
(
°©5
, 7);

1136 
	`Ârötf
(
°dout
, "** Final stats...\n");

1137 
	`°©_¥öt_°©s
(
sdb
, 
°dout
);

1140 
	`°©_dñëe
(
sdb
);

1141 
	`exô
(0);

1142 
	}
}

	@stats.h

52 #i‚de‡
STAT_H


53 
	#STAT_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"machöe.h
"

59 
	~"evÆ.h
"

73 
	e°©_˛ass_t
 {

74 
	msc_öt
 = 0,

75 
	msc_uöt
,

76 #ifde‡
HOST_HAS_QWORD


77 
	msc_qw‹d
,

78 
	msc_sqw‹d
,

80 
	msc_Êﬂt
,

81 
	msc_doubÀ
,

82 
	msc_di°
,

83 
	msc_sdi°
,

84 
	msc_f‹muœ
,

85 
	msc_NUM


89 
	#HTAB_SZ
 1024

	)

90 
	#HTAB_HASH
(
I
Ë((((IË>> 8Ë^ (I)Ë& (
HTAB_SZ
 - 1))

	)

93 
	sbuckë_t
 {

94 
buckë_t
 *
	m√xt
;

95 
md_addr_t
 
	mödex
;

96 
	mcou¡
;

100 
	g°©_°©_t
;

103 
	#PF_COUNT
 0x0001

	)

104 
	#PF_PDF
 0x0002

	)

105 
	#PF_CDF
 0x0004

	)

106 
	#PF_ALL
 (
PF_COUNT
|
PF_PDF
|
PF_CDF
)

	)

112 (*
	t¥öt_‚_t
)(
	t°©_°©_t
 *
	t°©
,

113 
	tmd_addr_t
 
	tödex
,

114 
	tcou¡
,

115 
	tsum
,

116 
	ttŸÆ
);

119 
	s°©_°©_t
 {

120 
°©_°©_t
 *
	m√xt
;

121 *
	m«me
;

122 *
	mdesc
;

123 *
	mf‹m©
;

124 
°©_˛ass_t
 
	msc
;

125 
	u°©_v¨ü¡_t
 {

127 
	s°©_f‹_öt_t
 {

128 *
	mv¨
;

129 
	möô_vÆ
;

130 } 
	mf‹_öt
;

132 
	s°©_f‹_uöt_t
 {

133 *
	mv¨
;

134 
	möô_vÆ
;

135 } 
	mf‹_uöt
;

136 #ifde‡
HOST_HAS_QWORD


138 
	s°©_f‹_qw‹d_t
 {

139 
qw‹d_t
 *
	mv¨
;

140 
qw‹d_t
 
	möô_vÆ
;

141 } 
	mf‹_qw‹d
;

143 
	s°©_f‹_sqw‹d_t
 {

144 
sqw‹d_t
 *
	mv¨
;

145 
sqw‹d_t
 
	möô_vÆ
;

146 } 
	mf‹_sqw‹d
;

149 
	s°©_f‹_Êﬂt_t
 {

150 *
	mv¨
;

151 
	möô_vÆ
;

152 } 
	mf‹_Êﬂt
;

154 
	s°©_f‹_doubÀ_t
 {

155 *
	mv¨
;

156 
	möô_vÆ
;

157 } 
	mf‹_doubÀ
;

159 
	s°©_f‹_di°_t
 {

160 
	möô_vÆ
;

161 *
	m¨r
;

162 
	m¨r_sz
;

163 
	mbuckë_sz
;

164 
	mpf
;

165 **
	mim≠
;

166 
¥öt_‚_t
 
	m¥öt_‚
;

167 
	movîÊows
;

168 } 
	mf‹_di°
;

170 
	s°©_f‹_sdi°_t
 {

171 
	möô_vÆ
;

172 
buckë_t
 **
	mßº
;

173 
	mpf
;

174 
¥öt_‚_t
 
	m¥öt_‚
;

175 } 
	mf‹_sdi°
;

177 
	s°©_f‹_f‹muœ_t
 {

178 *
	mf‹muœ
;

179 } 
	mf‹_f‹muœ
;

180 } 
	mv¨ü¡
;

184 
	s°©_sdb_t
 {

185 
°©_°©_t
 *
	m°©s
;

186 
evÆ_°©e_t
 *
	mevÆu©‹
;

190 
evÆ_vÆue_t


191 
°©_evÆ_idít
(
evÆ_°©e_t
 *
es
);

194 
°©_sdb_t
 *
°©_√w
();

198 
°©_dñëe
(
°©_sdb_t
 *
sdb
);

201 
°©_°©_t
 *

202 
°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

203 *
«me
,

204 *
desc
,

205 *
v¨
,

206 
öô_vÆ
,

207 *
f‹m©
);

210 
°©_°©_t
 *

211 
°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

212 *
«me
,

213 *
desc
,

214 *
v¨
,

215 
öô_vÆ
,

216 *
f‹m©
);

218 #ifde‡
HOST_HAS_QWORD


220 
°©_°©_t
 *

221 
°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

222 *
«me
,

223 *
desc
,

224 
qw‹d_t
 *
v¨
,

225 
qw‹d_t
 
öô_vÆ
,

226 *
f‹m©
);

229 
°©_°©_t
 *

230 
°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

231 *
«me
,

232 *
desc
,

233 
sqw‹d_t
 *
v¨
,

234 
sqw‹d_t
 
öô_vÆ
,

235 *
f‹m©
);

239 
°©_°©_t
 *

240 
°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

241 *
«me
,

242 *
desc
,

243 *
v¨
,

244 
öô_vÆ
,

245 *
f‹m©
);

248 
°©_°©_t
 *

249 
°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

250 *
«me
,

251 *
desc
,

252 *
v¨
,

253 
öô_vÆ
,

254 *
f‹m©
);

262 
°©_°©_t
 *

263 
°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

264 *
«me
,

265 *
desc
,

266 
öô_vÆ
,

267 
¨r_sz
,

268 
buckë_sz
,

269 
pf
,

270 *
f‹m©
,

271 **
im≠
,

272 
¥öt_‚_t
 
¥öt_‚
);

281 
°©_°©_t
 *

282 
°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

283 *
«me
,

284 *
desc
,

285 
öô_vÆ
,

286 
pf
,

287 *
f‹m©
,

288 
¥öt_‚_t
 
¥öt_‚
);

292 
°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

293 
md_addr_t
 
ödex
,

294 
nßm∂es
);

298 
°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

299 
md_addr_t
 
ödex
);

308 
°©_°©_t
 *

309 
°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

310 *
«me
,

311 *
desc
,

312 *
f‹muœ
,

313 *
f‹m©
);

317 
°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

318 
°©_°©_t
 *
°©
,

319 
FILE
 *
fd
);

323 
°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

324 
FILE
 *
fd
);

328 
°©_°©_t
 *

329 
°©_föd_°©
(
°©_sdb_t
 *
sdb
,

330 *
°©_«me
);

	@symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"lﬂdî.h
"

58 
	~"symbﬁ.h
"

60 #ifde‡
BFD_LOADER


61 
	~<bfd.h
>

63 
	~"èrgë-Æpha/ecoff.h
"

69 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

72 
	gsym_nsyms
 = 0;

73 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

76 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

79 
	gsym_¡extsyms
 = 0;

80 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

83 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

86 
	gsym_nd©asyms
 = 0;

87 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

90 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

93 
	gsyms_lﬂded
 = 
FALSE
;

95 #ifde‡
PRINT_SYMS


98 
	$Êags2°r
(
Êags
)

100 
buf
[256];

101 *
p
;

103 i‡(!
Êags
)

106 
p
 = 
buf
;

107 *
p
 = '\0';

109 i‡(
Êags
 & 
BSF_LOCAL
)

111 *
p
++ = 'L';

112 *
p
++ = '|';

114 i‡(
Êags
 & 
BSF_GLOBAL
)

116 *
p
++ = 'G';

117 *
p
++ = '|';

119 i‡(
Êags
 & 
BSF_DEBUGGING
)

121 *
p
++ = 'D';

122 *
p
++ = '|';

124 i‡(
Êags
 & 
BSF_FUNCTION
)

126 *
p
++ = 'F';

127 *
p
++ = '|';

129 i‡(
Êags
 & 
BSF_KEEP
)

131 *
p
++ = 'K';

132 *
p
++ = '|';

134 i‡(
Êags
 & 
BSF_KEEP_G
)

136 *
p
++ = 'k'; *p++ = '|';

138 i‡(
Êags
 & 
BSF_WEAK
)

140 *
p
++ = 'W';

141 *
p
++ = '|';

143 i‡(
Êags
 & 
BSF_SECTION_SYM
)

145 *
p
++ = 'S'; *p++ = '|';

147 i‡(
Êags
 & 
BSF_OLD_COMMON
)

149 *
p
++ = 'O';

150 *
p
++ = '|';

152 i‡(
Êags
 & 
BSF_NOT_AT_END
)

154 *
p
++ = 'N';

155 *
p
++ = '|';

157 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

159 *
p
++ = 'C';

160 *
p
++ = '|';

162 i‡(
Êags
 & 
BSF_WARNING
)

164 *
p
++ = 'w';

165 *
p
++ = '|';

167 i‡(
Êags
 & 
BSF_INDIRECT
)

169 *
p
++ = 'I';

170 *
p
++ = '|';

172 i‡(
Êags
 & 
BSF_FILE
)

174 *
p
++ = 'f';

175 *
p
++ = '|';

178 i‡(
p
 =
buf
)

179 
	`∑nic
("no flags detected");

181 *--
p
 = '\0';

182  
buf
;

183 
	}
}

188 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

190  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

191 
	}
}

195 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

197  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

198 
	}
}

200 
	#RELEVANT_SCOPE
(
SYM
) \

202 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

204 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

205 && (
SYM
)->
«me
[0] != '$') \

207 
lﬂd_loˇls
 \

209 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

210 && (
SYM
)->
«me
[0] == '$') \

212 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

213 && (
SYM
)->
«me
[0] ='$'))))

	)

218 
	$sym_lﬂdsyms
(*
‚ame
,

219 
lﬂd_loˇls
)

221 
i
, 
debug_˙t
;

222 #ifde‡
BFD_LOADER


223 
bfd
 *
abfd
;

224 
asymbﬁ
 **
syms
;

225 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

227 
Àn
;

228 
FILE
 *
fobj
;

229 
ecoff_fûehdr
 
fhdr
;

230 
ecoff_aouthdr
 
ahdr
;

231 
ecoff_symhdr_t
 
symhdr
;

232 *
°πab
 = 
NULL
;

233 
ecoff_EXTR
 *
exå
;

236 i‡(
syms_lﬂded
)

243 #ifde‡
BFD_LOADER


246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

247 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

248 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

253 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

255 
	`bfd_˛o£
(
abfd
);

256 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

260 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

261 
	`∑nic
("binaryÉndian changed");

263 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

266 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

267 i‡(
°‹age
 <= 0)

268 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

270 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

271 i‡(!
syms
)

272 
	`Áèl
("out of virtual memory");

274 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

275 i‡(
nsyms
 <= 0)

276 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

283 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

284 
i
=0; i < 
nsyms
; i++)

286 
asymbﬁ
 *
sym
 = 
syms
[
i
];

290 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

294 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

296 && 
	`RELEVANT_SCOPE
(
sym
))

299 
sym_nd©asyms
++;

300 #ifde‡
PRINT_SYMS


301 
	`Ârötf
(
°dîr
,

303 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

304 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

308 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

310 && 
	`RELEVANT_SCOPE
(
sym
))

313 
sym_¡extsyms
++;

314 #ifde‡
PRINT_SYMS


315 
	`Ârötf
(
°dîr
,

317 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

318 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

324 #ifde‡
PRINT_SYMS


325 
	`Ârötf
(
°dîr
,

327 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

328 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

332 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

333 i‡(
sym_nsyms
 <= 0)

334 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

337 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

338 i‡(!
sym_db
)

339 
	`Áèl
("out of virtual memory");

342 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

344 
asymbﬁ
 *
sym
 = 
syms
[
i
];

348 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

352 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

354 && 
	`RELEVANT_SCOPE
(
sym
))

357 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

358 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

359 
sym_db
[
debug_˙t
].
öôülized
 =

360 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

362 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

363 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

364 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

365 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

367 
debug_˙t
++;

370 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

372 && 
	`RELEVANT_SCOPE
(
sym
))

375 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

376 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

377 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

378 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

379 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

380 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

382 
debug_˙t
++;

390 i‡(
debug_˙t
 !
sym_nsyms
)

391 
	`∑nic
("couldÇotÜocateáll counted symbols");

394 
	`‰ì
(
syms
);

398 i‡(!
	`bfd_˛o£
(
abfd
))

399 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

404 #i‡
	`deföed
(
_MSC_VER
)

405 
fobj
 = 
	`f›í
(
‚ame
, "rb");

407 
fobj
 = 
	`f›í
(
‚ame
, "r");

409 i‡(!
fobj
)

410 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

412 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

413 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

416 i‡(
fhdr
.
f_magic
 !
ECOFF_ALPHAMAGIC
)

417 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

419 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

420 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

423 
	`f£ek
(
fobj
, ()
fhdr
.
f_sym±r
, 0);

425 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

426 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

428 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

429 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

432 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

433 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

434 i‡(!
°πab
)

435 
	`Áèl
("out of virtual memory");

438 
	`f£ek
(
fobj
, ()
symhdr
.
cbSsExtOff£t
 , 0);

439 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

440 
	`Áèl
("error whileÑeading symbolÅableÇames");

443 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

444 i‡(
Àn
 <= 0)

445 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

446 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

447 i‡(!
sym_db
)

448 
	`Áèl
("out of virtual memory");

451 
exå
 =

452 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

453 i‡(!
exå
)

454 
	`Áèl
("out of virtual memory");

456 
	`f£ek
(
fobj
, ()
symhdr
.
cbExtOff£t
, 0);

457 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

458 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

460 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

463 
i
=0; i < 
symhdr
.
õxtMax
; i++)

465 
°r_off£t
;

467 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

470 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

472 
i
, 
exå
[i].
ifd
,

473 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

474 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

475 
exå
[
i
].
asym
.
ödex
);

476 
	`¥ötf
(" %08x %2d %2d %s\n",

477 
exå
[
i
].
asym
.
vÆue
,

478 
exå
[
i
].
asym
.
°
,

479 
exå
[
i
].
asym
.
sc
,

480 &
°πab
[
°r_off£t
]);

483 
exå
[
i
].
asym
.
°
)

485 
ECOFF_°GlobÆ
:

486 
ECOFF_°Sètic
:

488 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

489 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

490 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

492 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

493 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

494 
sym_nsyms
++;

495 
sym_nd©asyms
++;

498 
ECOFF_°Proc
:

499 
ECOFF_°SèticProc
:

500 
ECOFF_°Labñ
:

502 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

503 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

504 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

505 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

506 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

507 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

508 
sym_nsyms
++;

509 
sym_¡extsyms
++;

515 
	`Ârötf
(
°dîr
, "** skùpög: %s...\n", &
°πab
[
°r_off£t
]);

520 
	`‰ì
(
exå
);

523 i‡(
	`f˛o£
(
fobj
))

524 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

533 
sym_syms
 =

534 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

535 i‡(!
sym_syms
)

536 
	`Áèl
("out of virtual memory");

538 
sym_syms_by_«me
 =

539 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

540 i‡(!
sym_syms_by_«me
)

541 
	`Áèl
("out of virtual memory");

543 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

545 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

546 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

547 
debug_˙t
++;

550 i‡(
debug_˙t
 !
sym_nsyms
)

551 
	`∑nic
("couldÇotÜocateáll symbols");

554 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

557 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

560 
sym_ãxtsyms
 =

561 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

562 i‡(!
sym_ãxtsyms
)

563 
	`Áèl
("out of virtual memory");

565 
sym_ãxtsyms_by_«me
 =

566 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

567 i‡(!
sym_ãxtsyms_by_«me
)

568 
	`Áèl
("out of virtual memory");

570 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

572 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

574 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

575 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

576 
debug_˙t
++;

580 i‡(
debug_˙t
 !
sym_¡extsyms
)

581 
	`∑nic
("couldÇotÜocateállÅext symbols");

584 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

587 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

588 (
sym_sym_t
 *), (*)
ncmp
);

591 
sym_d©asyms
 =

592 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

593 i‡(!
sym_d©asyms
)

594 
	`Áèl
("out of virtual memory");

596 
sym_d©asyms_by_«me
 =

597 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

598 i‡(!
sym_d©asyms_by_«me
)

599 
	`Áèl
("out of virtual memory");

601 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

603 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

605 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

606 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

607 
debug_˙t
++;

611 i‡(
debug_˙t
 !
sym_nd©asyms
)

612 
	`∑nic
("couldÇotÜocateáll data symbols");

615 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

618 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

619 (
sym_sym_t
 *), (*)
ncmp
);

622 
i
=0; i<
sym_¡extsyms
; i++)

624 
sym_ãxtsyms
[
i
]->
size
 =

625 (
i
 !(
sym_¡extsyms
 - 1)

626 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

627 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

629 
i
=0; i<
sym_nd©asyms
; i++)

631 
sym_d©asyms
[
i
]->
size
 =

632 (
i
 !(
sym_nd©asyms
 - 1)

633 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

634 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

638 
syms_lﬂded
 = 
TRUE
;

639 
	}
}

643 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

644 
FILE
 *
fd
)

646 
	`myÂrötf
(
fd
,

648 
sym
->
«me
,

649 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

650 
sym
->
öôülized
 ? "y" : "n",

651 
sym
->
pub
 ? "y" : "n",

652 
sym
->
loˇl
 ? "y" : "n",

653 
sym
->
addr
,

654 
sym
->
size
);

655 
	}
}

659 
	$sym_dumpsyms
(
FILE
 *
fd
)

661 
i
;

663 
i
=0; i < 
sym_nsyms
; i++)

664 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

665 
	}
}

669 
	$sym_dump°©e
(
FILE
 *
fd
)

671 
i
;

673 i‡(
fd
 =
NULL
)

674 
fd
 = 
°dîr
;

676 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

677 
i
=0; i < 
sym_nsyms
; i++)

678 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

680 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

681 
i
=0; i < 
sym_nsyms
; i++)

682 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

684 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

685 
i
=0; i < 
sym_¡extsyms
; i++)

686 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

688 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

689 
i
=0; i < 
sym_¡extsyms
; i++)

690 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

692 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

693 
i
=0; i < 
sym_nd©asyms
; i++)

694 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

696 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

697 
i
=0; i < 
sym_nd©asyms
; i++)

698 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

699 
	}
}

705 
sym_sym_t
 *

706 
	$sym_böd_addr
(
md_addr_t
 
addr
,

707 *
pödex
,

708 
exa˘
,

709 
sym_db_t
 
db
)

711 
nsyms
, 
low
, 
high
, 
pos
;

712 
sym_sym_t
 **
syms
;

714 
db
)

716 
sdb_™y
:

717 
syms
 = 
sym_syms
;

718 
nsyms
 = 
sym_nsyms
;

720 
sdb_ãxt
:

721 
syms
 = 
sym_ãxtsyms
;

722 
nsyms
 = 
sym_¡extsyms
;

724 
sdb_d©a
:

725 
syms
 = 
sym_d©asyms
;

726 
nsyms
 = 
sym_nd©asyms
;

729 
	`∑nic
("bogus symbol database");

733 i‡(!
nsyms
)

735 i‡(
pödex
)

736 *
pödex
 = -1;

737  
NULL
;

741 
low
 = 0;

742 
high
 = 
nsyms
-1;

743 
pos
 = (
low
 + 
high
) >> 1;

745 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

747 || (!
exa˘


748 && 
syms
[
pos
]->
addr
 <=áddr

749 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

751 i‡(
addr
 < 
syms
[
pos
]->addr)

752 
high
 = 
pos
 - 1;

754 
low
 = 
pos
 + 1;

755 i‡(
high
 >
low
)

756 
pos
 = (
low
 + 
high
) >> 1;

759 i‡(
pödex
)

760 *
pödex
 = -1;

761  
NULL
;

766 i‡(
pödex
)

767 *
pödex
 = 
pos
;

768  
syms
[
pos
];

769 
	}
}

774 
sym_sym_t
 *

775 
	$sym_böd_«me
(*
«me
,

776 *
pödex
,

777 
sym_db_t
 
db
)

779 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

780 
sym_sym_t
 **
syms
;

782 
db
)

784 
sdb_™y
:

785 
syms
 = 
sym_syms_by_«me
;

786 
nsyms
 = 
sym_nsyms
;

788 
sdb_ãxt
:

789 
syms
 = 
sym_ãxtsyms_by_«me
;

790 
nsyms
 = 
sym_¡extsyms
;

792 
sdb_d©a
:

793 
syms
 = 
sym_d©asyms_by_«me
;

794 
nsyms
 = 
sym_nd©asyms
;

797 
	`∑nic
("bogus symbol database");

801 i‡(!
nsyms
)

803 i‡(
pödex
)

804 *
pödex
 = -1;

805  
NULL
;

809 
low
 = 0;

810 
high
 = 
nsyms
-1;

811 
pos
 = (
low
 + 
high
) >> 1;

812 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

814 i‡(
cmp
 > 0)

815 
high
 = 
pos
 - 1;

817 
low
 = 
pos
 + 1;

818 i‡(
high
 >
low
)

819 
pos
 = (
low
 + 
high
) >> 1;

822 i‡(
pödex
)

823 *
pödex
 = -1;

824  
NULL
;

829 i‡(
pödex
)

830 *
pödex
 = 
pos
;

831  
syms
[
pos
];

832 
	}
}

	@symbol.h

52 #i‚de‡
SYMBOL_H


53 
	#SYMBOL_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"machöe.h
"

61 
	esym_£g_t
 {

62 
	mss_d©a
,

63 
	mss_ãxt
,

64 
	mss_NUM


68 
	ssym_sym_t
 {

69 *
	m«me
;

70 
sym_£g_t
 
	m£g
;

71 
	möôülized
;

72 
	mpub
;

73 
	mloˇl
;

74 
md_addr_t
 
	maddr
;

75 
	msize
;

79 
sym_sym_t
 *
sym_db
;

82 
sym_nsyms
;

83 
sym_sym_t
 **
sym_syms
;

86 
sym_sym_t
 **
sym_syms_by_«me
;

89 
sym_¡extsyms
;

90 
sym_sym_t
 **
sym_ãxtsyms
;

93 
sym_sym_t
 **
sym_ãxtsyms_by_«me
;

96 
sym_nd©asyms
;

97 
sym_sym_t
 **
sym_d©asyms
;

100 
sym_sym_t
 **
sym_d©asyms_by_«me
;

104 
sym_lﬂdsyms
(*
‚ame
,

105 
lﬂd_loˇls
);

109 
sym_dumpsym
(
sym_sym_t
 *
sym
,

110 
FILE
 *
fd
);

114 
sym_dumpsyms
(
FILE
 *
fd
);

118 
sym_dump°©e
(
FILE
 *
fd
);

121 
	esym_db_t
 {

122 
	msdb_™y
,

123 
	msdb_ãxt
,

124 
	msdb_d©a
,

125 
	msdb_NUM


132 
sym_sym_t
 *

133 
sym_böd_addr
(
md_addr_t
 
addr
,

134 *
pödex
,

135 
exa˘
,

136 
sym_db_t
 
db
);

141 
sym_sym_t
 *

142 
sym_böd_«me
(*
«me
,

143 *
pödex
,

144 
sym_db_t
 
db
);

	@syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

57 #i‚de‡
MIN_SYSCALL_MODE


58 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

59 
	#MIN_SYSCALL_MODE


	)

64 #ifde‡
_MSC_VER


65 
	~<io.h
>

67 
	~<uni°d.h
>

69 
	~<f˙é.h
>

70 
	~<sys/ty≥s.h
>

71 #i‚de‡
_MSC_VER


72 
	~<sys/∑øm.h
>

74 
	~<î∫o.h
>

75 
	~<time.h
>

76 #i‚de‡
_MSC_VER


77 
	~<sys/time.h
>

79 #i‚de‡
_MSC_VER


80 
	~<sys/ªsour˚.h
>

82 
	~<sig«l.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/fûe.h
>

86 
	~<sys/°©.h
>

87 #i‚de‡
_MSC_VER


88 
	~<sys/uio.h
>

90 
	~<£tjmp.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/times.h
>

94 
	~<limôs.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/io˘l.h
>

98 #i‡
deföed
(
löux
)

99 
	~<utime.h
>

100 
	~<dúít.h
>

101 
	~<sys/vfs.h
>

103 #i‡
deföed
(
_AIX
)

104 
	~<sys/°©fs.h
>

106 #i‚de‡
_MSC_VER


107 
	~<sys/mou¡.h
>

110 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

111 #i‚de‡
_MSC_VER


112 
	~<sys/£À˘.h
>

115 #ifde‡
löux


116 
	~<sgây.h
>

117 
	~<√töë/t˝.h
>

118 
	~<√töë/udp.h
>

119 
	~<√töë/ö.h
>

122 #i‡
deföed
(
__svr4__
)

123 
	~<sys/dúít.h
>

124 
	~<sys/fûio.h
>

125 #ñi‡
deföed
(
__osf__
)

126 
	~<dúít.h
>

131 
gëdúíåõs
(
fd
, *
buf
, 
nbyãs
, *
ba£p
);

134 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

135 
	~<sys/°©vfs.h
>

136 
	#°©fs
 
°©vfs


	)

137 
	~<sys/time.h
>

138 
	~<utime.h
>

139 
	~<sgây.h
>

140 
	~<√töë/ö.h
>

141 
	~<√töë/t˝.h
>

144 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

145 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

146 
	~<dúít.h
>

148 
	~<sys/dú.h
>

152 #unde‡
NL0


153 #unde‡
NL1


154 #unde‡
CR0


155 #unde‡
CR1


156 #unde‡
CR2


157 #unde‡
CR3


158 #unde‡
TAB0


159 #unde‡
TAB1


160 #unde‡
TAB2


161 #unde‡
XTABS


162 #unde‡
BS0


163 #unde‡
BS1


164 #unde‡
FF0


165 #unde‡
FF1


166 #unde‡
ECHO


167 #unde‡
NOFLSH


168 #unde‡
TOSTOP


169 #unde‡
FLUSHO


170 #unde‡
PENDIN


173 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

174 #unde‡
CR0


177 #ifde‡
__FªeBSD__


178 
	~<sys/io˘l_com∑t.h
>

180 #i‚de‡
_MSC_VER


181 
	~<ãrmio.h
>

185 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

187 #unde‡
HUPCL


188 #unde‡
ECHO


189 #unde‡
B50


190 #unde‡
B75


191 #unde‡
B110


192 #unde‡
B134


193 #unde‡
B150


194 #unde‡
B200


195 #unde‡
B300


196 #unde‡
B600


197 #unde‡
B1200


198 #unde‡
B1800


199 #unde‡
B2400


200 #unde‡
B4800


201 #unde‡
B9600


202 #unde‡
B19200


203 #unde‡
B38400


204 #unde‡
NL0


205 #unde‡
NL1


206 #unde‡
CR0


207 #unde‡
CR1


208 #unde‡
CR2


209 #unde‡
CR3


210 #unde‡
TAB0


211 #unde‡
TAB1


212 #unde‡
BS0


213 #unde‡
BS1


214 #unde‡
FF0


215 #unde‡
FF1


216 #unde‡
EXTA


217 #unde‡
EXTB


218 #unde‡
B900


219 #unde‡
B3600


220 #unde‡
B7200


221 #unde‡
XTABS


222 
	~<sgây.h
>

223 
	~<utime.h
>

226 
	~<sys/sockë.h
>

227 
	~<sys/pﬁl.h
>

229 #ifde‡
_MSC_VER


230 
	#ac˚ss
 
_ac˚ss


	)

231 
	#chmod
 
_chmod


	)

232 
	#chdú
 
_chdú


	)

233 
	#u∆ök
 
_u∆ök


	)

234 
	#›í
 
_›í


	)

235 
	#¸ót
 
_¸ót


	)

236 
	#pùe
 
_pùe


	)

237 
	#dup
 
_dup


	)

238 
	#dup2
 
_dup2


	)

239 
	#°©
 
_°©


	)

240 
	#f°©
 
_f°©


	)

241 
	#l£ek
 
_l£ek


	)

242 
	#ªad
 
_ªad


	)

243 
	#wrôe
 
_wrôe


	)

244 
	#˛o£
 
_˛o£


	)

245 
	#gëpid
 
_gëpid


	)

246 
	#utime
 
_utime


	)

247 
	~<sys/utime.h
>

250 
	~"ho°.h
"

251 
	~"misc.h
"

252 
	~"machöe.h
"

253 
	~"ªgs.h
"

254 
	~"mem‹y.h
"

255 
	~"lﬂdî.h
"

256 
	~"sim.h
"

257 
	~"ídün.h
"

258 
	~"eio.h
"

259 
	~"sysˇŒ.h
"

261 
	#OSF_SYS_sysˇŒ
 0

	)

263 
	#OSF_SYS_f‹k
 2

	)

264 
	#OSF_SYS_ªad
 3

	)

266 
	#OSF_SYS_ﬁd_›í
 5

	)

267 
	#OSF_SYS_˛o£
 6

	)

268 
	#OSF_SYS_waô4
 7

	)

269 
	#OSF_SYS_ﬁd_¸ót
 8

	)

270 
	#OSF_SYS_lök
 9

	)

271 
	#OSF_SYS_u∆ök
 10

	)

272 
	#OSF_SYS_execv
 11

	)

273 
	#OSF_SYS_chdú
 12

	)

274 
	#OSF_SYS_fchdú
 13

	)

275 
	#OSF_SYS_mknod
 14

	)

276 
	#OSF_SYS_chmod
 15

	)

277 
	#OSF_SYS_chown
 16

	)

278 
	#OSF_SYS_obªak
 17

	)

279 
	#OSF_SYS_gëfs°©
 18

	)

280 
	#OSF_SYS_l£ek
 19

	)

281 
	#OSF_SYS_gëpid
 20

	)

282 
	#OSF_SYS_mou¡
 21

	)

283 
	#OSF_SYS_unmou¡
 22

	)

284 
	#OSF_SYS_£tuid
 23

	)

285 
	#OSF_SYS_gëuid
 24

	)

286 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

287 
	#OSF_SYS_±ø˚
 26

	)

288 #ifde‡ 
COMPAT_43


289 
	#OSF_SYS_ƒecvmsg
 27

	)

290 
	#OSF_SYS_n£ndmsg
 28

	)

291 
	#OSF_SYS_ƒecv‰om
 29

	)

292 
	#OSF_SYS_«c˚±
 30

	)

293 
	#OSF_SYS_ngë≥î«me
 31

	)

294 
	#OSF_SYS_ngësock«me
 32

	)

296 
	#OSF_SYS_ªcvmsg
 27

	)

297 
	#OSF_SYS_£ndmsg
 28

	)

298 
	#OSF_SYS_ªcv‰om
 29

	)

299 
	#OSF_SYS_ac˚±
 30

	)

300 
	#OSF_SYS_gë≥î«me
 31

	)

301 
	#OSF_SYS_gësock«me
 32

	)

303 
	#OSF_SYS_ac˚ss
 33

	)

304 
	#OSF_SYS_chÊags
 34

	)

305 
	#OSF_SYS_fchÊags
 35

	)

306 
	#OSF_SYS_sync
 36

	)

307 
	#OSF_SYS_kûl
 37

	)

308 
	#OSF_SYS_ﬁd_°©
 38

	)

309 
	#OSF_SYS_£çgid
 39

	)

310 
	#OSF_SYS_ﬁd_l°©
 40

	)

311 
	#OSF_SYS_dup
 41

	)

312 
	#OSF_SYS_pùe
 42

	)

313 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

314 
	#OSF_SYS_¥ofû
 44

	)

315 
	#OSF_SYS_›í
 45

	)

317 
	#OSF_SYS_gëgid
 47

	)

318 
	#OSF_SYS_sig¥ocmask
 48

	)

319 
	#OSF_SYS_gëlogö
 49

	)

320 
	#OSF_SYS_£éogö
 50

	)

321 
	#OSF_SYS_ac˘
 51

	)

322 
	#OSF_SYS_sig≥ndög
 52

	)

323 
	#OSF_SYS_io˘l
 54

	)

324 
	#OSF_SYS_ªboŸ
 55

	)

325 
	#OSF_SYS_ªvoke
 56

	)

326 
	#OSF_SYS_symlök
 57

	)

327 
	#OSF_SYS_ªadlök
 58

	)

328 
	#OSF_SYS_execve
 59

	)

329 
	#OSF_SYS_umask
 60

	)

330 
	#OSF_SYS_chroŸ
 61

	)

331 
	#OSF_SYS_ﬁd_f°©
 62

	)

332 
	#OSF_SYS_gëpgΩ
 63

	)

333 
	#OSF_SYS_gë∑gesize
 64

	)

334 
	#OSF_SYS_mªm≠
 65

	)

335 
	#OSF_SYS_vf‹k
 66

	)

336 
	#OSF_SYS_°©
 67

	)

337 
	#OSF_SYS_l°©
 68

	)

338 
	#OSF_SYS_sbrk
 69

	)

339 
	#OSF_SYS_s°k
 70

	)

340 
	#OSF_SYS_mm≠
 71

	)

341 
	#OSF_SYS_ovadvi£
 72

	)

342 
	#OSF_SYS_munm≠
 73

	)

343 
	#OSF_SYS_m¥Ÿe˘
 74

	)

344 
	#OSF_SYS_madvi£
 75

	)

345 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

346 
	#OSF_SYS_kmodˇŒ
 77

	)

347 
	#OSF_SYS_möc‹e
 78

	)

348 
	#OSF_SYS_gëgroups
 79

	)

349 
	#OSF_SYS_£tgroups
 80

	)

350 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

351 
	#OSF_SYS_£çgΩ
 82

	)

352 
	#OSF_SYS_£tôimî
 83

	)

353 
	#OSF_SYS_ﬁd_waô
 84

	)

354 
	#OSF_SYS_èbÀ
 85

	)

355 
	#OSF_SYS_gëôimî
 86

	)

356 
	#OSF_SYS_gëho°«me
 87

	)

357 
	#OSF_SYS_£tho°«me
 88

	)

358 
	#OSF_SYS_gëdèbÀsize
 89

	)

359 
	#OSF_SYS_dup2
 90

	)

360 
	#OSF_SYS_f°©
 91

	)

361 
	#OSF_SYS_f˙é
 92

	)

362 
	#OSF_SYS_£À˘
 93

	)

363 
	#OSF_SYS_pﬁl
 94

	)

364 
	#OSF_SYS_fsync
 95

	)

365 
	#OSF_SYS_£çri‹ôy
 96

	)

366 
	#OSF_SYS_sockë
 97

	)

367 
	#OSF_SYS_c⁄√˘
 98

	)

368 #ifde‡ 
COMPAT_43


369 
	#OSF_SYS_ac˚±
 99

	)

371 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

373 
	#OSF_SYS_gë¥i‹ôy
 100

	)

374 #ifde‡ 
COMPAT_43


375 
	#OSF_SYS_£nd
 101

	)

376 
	#OSF_SYS_ªcv
 102

	)

378 
	#OSF_SYS_ﬁd_£nd
 101

	)

379 
	#OSF_SYS_ﬁd_ªcv
 102

	)

381 
	#OSF_SYS_sigªtu∫
 103

	)

382 
	#OSF_SYS_böd
 104

	)

383 
	#OSF_SYS_£tsock›t
 105

	)

384 
	#OSF_SYS_li°í
 106

	)

385 
	#OSF_SYS_∂ock
 107

	)

386 
	#OSF_SYS_ﬁd_sigvec
 108

	)

387 
	#OSF_SYS_ﬁd_sigblock
 109

	)

388 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

389 
	#OSF_SYS_sigsu•íd
 111

	)

390 
	#OSF_SYS_sig°ack
 112

	)

391 #ifde‡ 
COMPAT_43


392 
	#OSF_SYS_ªcvmsg
 113

	)

393 
	#OSF_SYS_£ndmsg
 114

	)

395 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

396 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

399 
	#OSF_SYS_gëtimeofday
 116

	)

400 
	#OSF_SYS_gërußge
 117

	)

401 
	#OSF_SYS_gësock›t
 118

	)

402 
	#OSF_SYS_ªadv
 120

	)

403 
	#OSF_SYS_wrôev
 121

	)

404 
	#OSF_SYS_£âimeofday
 122

	)

405 
	#OSF_SYS_fchown
 123

	)

406 
	#OSF_SYS_fchmod
 124

	)

407 #ifde‡ 
COMPAT_43


408 
	#OSF_SYS_ªcv‰om
 125

	)

410 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

412 
	#OSF_SYS_£åeuid
 126

	)

413 
	#OSF_SYS_£åegid
 127

	)

414 
	#OSF_SYS_ª«me
 128

	)

415 
	#OSF_SYS_åunˇã
 129

	)

416 
	#OSF_SYS_·runˇã
 130

	)

417 
	#OSF_SYS_Êock
 131

	)

418 
	#OSF_SYS_£tgid
 132

	)

419 
	#OSF_SYS_£ndto
 133

	)

420 
	#OSF_SYS_shutdown
 134

	)

421 
	#OSF_SYS_sockë∑ú
 135

	)

422 
	#OSF_SYS_mkdú
 136

	)

423 
	#OSF_SYS_rmdú
 137

	)

424 
	#OSF_SYS_utimes
 138

	)

426 
	#OSF_SYS_adjtime
 140

	)

427 #ifde‡ 
COMPAT_43


428 
	#OSF_SYS_gë≥î«me
 141

	)

430 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

432 
	#OSF_SYS_gëho°id
 142

	)

433 
	#OSF_SYS_£tho°id
 143

	)

434 
	#OSF_SYS_gëæimô
 144

	)

435 
	#OSF_SYS_£ålimô
 145

	)

436 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

437 
	#OSF_SYS_£tsid
 147

	)

438 
	#OSF_SYS_quŸa˘l
 148

	)

439 
	#OSF_SYS_ﬁdquŸa
 149

	)

440 #ifde‡ 
COMPAT_43


441 
	#OSF_SYS_gësock«me
 150

	)

443 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

445 
	#OSF_SYS_pid_block
 153

	)

446 
	#OSF_SYS_pid_unblock
 154

	)

447 
	#OSF_SYS_siga˘i⁄
 156

	)

448 
	#OSF_SYS_sigwaô¥im
 157

	)

449 
	#OSF_SYS_nfssvc
 158

	)

450 
	#OSF_SYS_gëdúíåõs
 159

	)

451 
	#OSF_SYS_°©fs
 160

	)

452 
	#OSF_SYS_f°©fs
 161

	)

453 
	#OSF_SYS_async_d´m⁄
 163

	)

454 
	#OSF_SYS_gëfh
 164

	)

455 
	#OSF_SYS_gëdomaö«me
 165

	)

456 
	#OSF_SYS_£tdomaö«me
 166

	)

457 
	#OSF_SYS_exp‹tfs
 169

	)

458 
	#OSF_SYS_Æt_∂ock
 181

	)

459 
	#OSF_SYS_gëm¡
 184

	)

460 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

461 
	#OSF_SYS_Æt_£tsid
 188

	)

462 
	#OSF_SYS_sw≠⁄
 199

	)

463 
	#OSF_SYS_msg˘l
 200

	)

464 
	#OSF_SYS_msggë
 201

	)

465 
	#OSF_SYS_msgrcv
 202

	)

466 
	#OSF_SYS_msg¢d
 203

	)

467 
	#OSF_SYS_£m˘l
 204

	)

468 
	#OSF_SYS_£mgë
 205

	)

469 
	#OSF_SYS_£m›
 206

	)

470 
	#OSF_SYS_u«me
 207

	)

471 
	#OSF_SYS_lchown
 208

	)

472 
	#OSF_SYS_shm©
 209

	)

473 
	#OSF_SYS_shm˘l
 210

	)

474 
	#OSF_SYS_shmdt
 211

	)

475 
	#OSF_SYS_shmgë
 212

	)

476 
	#OSF_SYS_mvÆid
 213

	)

477 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

478 
	#OSF_SYS_m¶ìp
 215

	)

479 
	#OSF_SYS_mwakeup
 216

	)

480 
	#OSF_SYS_msync
 217

	)

481 
	#OSF_SYS_sig«l
 218

	)

482 
	#OSF_SYS_utc_gëtime
 219

	)

483 
	#OSF_SYS_utc_adjtime
 220

	)

484 
	#OSF_SYS_£curôy
 222

	)

485 
	#OSF_SYS_klﬂdˇŒ
 223

	)

486 
	#OSF_SYS_gëpgid
 233

	)

487 
	#OSF_SYS_gësid
 234

	)

488 
	#OSF_SYS_sigÆt°ack
 235

	)

489 
	#OSF_SYS_waôid
 236

	)

490 
	#OSF_SYS_¥io˙é£t
 237

	)

491 
	#OSF_SYS_sig£nd£t
 238

	)

492 
	#OSF_SYS_£t_•ecuœtive
 239

	)

493 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

494 
	#OSF_SYS_sysöfo
 241

	)

495 
	#OSF_SYS_uadmö
 242

	)

496 
	#OSF_SYS_fu£r
 243

	)

497 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

498 
	#OSF_SYS_¡p_adjtime
 245

	)

499 
	#OSF_SYS_¡p_gëtime
 246

	)

500 
	#OSF_SYS_∑thc⁄f
 247

	)

501 
	#OSF_SYS_Â©hc⁄f
 248

	)

502 
	#OSF_SYS_uswôch
 250

	)

503 
	#OSF_SYS_u¶ìp_thªad
 251

	)

504 
	#OSF_SYS_aud˙é
 252

	)

505 
	#OSF_SYS_audgí
 253

	)

506 
	#OSF_SYS_sysfs
 254

	)

507 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

508 
	#OSF_SYS_gësysöfo
 256

	)

509 
	#OSF_SYS_£tsysöfo
 257

	)

510 
	#OSF_SYS_afs_sysˇŒ
 258

	)

511 
	#OSF_SYS_sw≠˘l
 259

	)

512 
	#OSF_SYS_mem˙é
 260

	)

513 
	#OSF_SYS_fd©async
 261

	)

516 
	sxœã_èbÀ_t


518 
	mèrgë_vÆ
;

519 
	mho°_vÆ
;

523 
	$xœã_¨g
(
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

525 
i
;

527 
i
=0; i < 
m≠_sz
; i++)

529 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

530  
m≠
[
i
].
ho°_vÆ
;

534 
	`w¨n
("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

535  
èrgë_vÆ
;

536 
	}
}

540 
	#MAXBUFSIZE
 1024

	)

546 
	#NUM_IOCTL_BYTES
 128

	)

549 
	#OSF_TIOCGETP
 0x40067408

	)

550 
	#OSF_FIONREAD
 0x4004667f

	)

554 
	sosf_°©buf


556 
w‹d_t
 
	mosf_°_dev
;

557 
w‹d_t
 
	mosf_°_öo
;

558 
w‹d_t
 
	mosf_°_mode
;

559 
hÆf_t
 
	mosf_°_∆ök
;

560 
hÆf_t
 
	m∑d0
;

561 
w‹d_t
 
	mosf_°_uid
;

562 
w‹d_t
 
	mosf_°_gid
;

563 
w‹d_t
 
	mosf_°_rdev
;

564 
w‹d_t
 
	m∑d1
;

565 
qw‹d_t
 
	mosf_°_size
;

566 
w‹d_t
 
	mosf_°_©ime
;

567 
w‹d_t
 
	mosf_°_•¨e1
;

568 
w‹d_t
 
	mosf_°_mtime
;

569 
w‹d_t
 
	mosf_°_•¨e2
;

570 
w‹d_t
 
	mosf_°_˘ime
;

571 
w‹d_t
 
	mosf_°_•¨e3
;

572 
w‹d_t
 
	mosf_°_blksize
;

573 
w‹d_t
 
	mosf_°_blocks
;

574 
w‹d_t
 
	mosf_°_gínum
;

575 
w‹d_t
 
	mosf_°_•¨e4
;

578 
	sosf_sgâyb
 {

579 
byã_t
 
	msg_i•ìd
;

580 
byã_t
 
	msg_o•ìd
;

581 
byã_t
 
	msg_îa£
;

582 
byã_t
 
	msg_kûl
;

583 
shÆf_t
 
	msg_Êags
;

586 
	#OSF_NSIG
 32

	)

588 
	#OSF_SIG_BLOCK
 1

	)

589 
	#OSF_SIG_UNBLOCK
 2

	)

590 
	#OSF_SIG_SETMASK
 3

	)

592 
	sosf_sigc⁄ãxt
 {

593 
qw‹d_t
 
	msc_⁄°ack
;

594 
qw‹d_t
 
	msc_mask
;

595 
qw‹d_t
 
	msc_pc
;

596 
qw‹d_t
 
	msc_ps
;

597 
qw‹d_t
 
	msc_ªgs
[32];

598 
qw‹d_t
 
	msc_ow√dÂ
;

599 
qw‹d_t
 
	msc_Âªgs
[32];

600 
qw‹d_t
 
	msc_Â¸
;

601 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

604 
	sosf_°©fs
 {

605 
shÆf_t
 
	mf_ty≥
;

606 
shÆf_t
 
	mf_Êags
;

607 
w‹d_t
 
	mf_fsize
;

608 
w‹d_t
 
	mf_bsize
;

609 
w‹d_t
 
	mf_blocks
;

611 
w‹d_t
 
	mf_b‰ì
;

612 
w‹d_t
 
	mf_bavaû
;

613 
w‹d_t
 
	mf_fûes
;

614 
w‹d_t
 
	mf_f‰ì
;

615 
qw‹d_t
 
	mf_fsid
;

616 
w‹d_t
 
	mf_•¨e
[9];

619 
	sosf_timevÆ


621 
sw‹d_t
 
	mosf_tv_£c
;

622 
sw‹d_t
 
	mosf_tv_u£c
;

625 
	sosf_timez⁄e


627 
sw‹d_t
 
	mosf_tz_möuãswe°
;

628 
sw‹d_t
 
	mosf_tz_d°time
;

633 
	sosf_rußge


635 
osf_timevÆ
 
	mosf_ru_utime
;

636 
osf_timevÆ
 
	mosf_ru_°ime
;

637 
sw‹d_t
 
	mosf_ru_maxrss
;

638 
sw‹d_t
 
	mosf_ru_ixrss
;

639 
sw‹d_t
 
	mosf_ru_idrss
;

640 
sw‹d_t
 
	mosf_ru_i§ss
;

641 
sw‹d_t
 
	mosf_ru_möÊt
;

642 
sw‹d_t
 
	mosf_ru_majÊt
;

643 
sw‹d_t
 
	mosf_ru_nsw≠
;

644 
sw‹d_t
 
	mosf_ru_öblock
;

645 
sw‹d_t
 
	mosf_ru_oublock
;

646 
sw‹d_t
 
	mosf_ru_msg¢d
;

647 
sw‹d_t
 
	mosf_ru_msgrcv
;

648 
sw‹d_t
 
	mosf_ru_nsig«ls
;

649 
sw‹d_t
 
	mosf_ru_nvcsw
;

650 
sw‹d_t
 
	mosf_ru_nivcsw
;

653 
	sosf_æimô


655 
qw‹d_t
 
	mosf_æim_cur
;

656 
qw‹d_t
 
	mosf_æim_max
;

659 
	sosf_sockaddr


661 
hÆf_t
 
	mß_Ámûy
;

662 
byã_t
 
	mß_d©a
[24];

665 
	sosf_iovec


667 
md_addr_t
 
	miov_ba£
;

668 
w‹d_t
 
	miov_Àn
;

669 
w‹d_t
 
	m∑d
;

673 
	#OSF_DIRENT_SZ
(
STR
) \

674 ((
w‹d_t
Ë+ 2*(
hÆf_t
Ë+ (((
	`°æí
(
STR
Ë+ 1Ë+ 3)/4)*4)

	)

677 
	sosf_dúít


679 
w‹d_t
 
	md_öo
;

680 
hÆf_t
 
	md_ª˛í
;

681 
hÆf_t
 
	md_«mÀn
;

682 
	md_«me
[256];

692 
	#OSF_O_RDONLY
 0x0000

	)

693 
	#OSF_O_WRONLY
 0x0001

	)

694 
	#OSF_O_RDWR
 0x0002

	)

695 
	#OSF_O_NONBLOCK
 0x0004

	)

696 
	#OSF_O_APPEND
 0x0008

	)

697 
	#OSF_O_CREAT
 0x0200

	)

698 
	#OSF_O_TRUNC
 0x0400

	)

699 
	#OSF_O_EXCL
 0x0800

	)

700 
	#OSF_O_NOCTTY
 0x1000

	)

701 
	#OSF_O_SYNC
 0x4000

	)

705 
	mosf_Êag
;

706 
	mloˇl_Êag
;

707 } 
	gosf_Êag_èbÀ
[] = {

709 #ifde‡
_MSC_VER


710 { 
OSF_O_RDONLY
, 
_O_RDONLY
 },

711 { 
OSF_O_WRONLY
, 
_O_WRONLY
 },

712 { 
OSF_O_RDWR
, 
_O_RDWR
 },

713 { 
OSF_O_APPEND
, 
_O_APPEND
 },

714 { 
OSF_O_CREAT
, 
_O_CREAT
 },

715 { 
OSF_O_TRUNC
, 
_O_TRUNC
 },

716 { 
OSF_O_EXCL
, 
_O_EXCL
 },

717 #ifde‡
_O_NONBLOCK


718 { 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
 },

720 #ifde‡
_O_NOCTTY


721 { 
OSF_O_NOCTTY
, 
_O_NOCTTY
 },

723 #ifde‡
_O_SYNC


724 { 
OSF_O_SYNC
, 
_O_SYNC
 },

727 { 
OSF_O_RDONLY
, 
O_RDONLY
 },

728 { 
OSF_O_WRONLY
, 
O_WRONLY
 },

729 { 
OSF_O_RDWR
, 
O_RDWR
 },

730 { 
OSF_O_APPEND
, 
O_APPEND
 },

731 { 
OSF_O_CREAT
, 
O_CREAT
 },

732 { 
OSF_O_TRUNC
, 
O_TRUNC
 },

733 { 
OSF_O_EXCL
, 
O_EXCL
 },

734 { 
OSF_O_NONBLOCK
, 
O_NONBLOCK
 },

735 { 
OSF_O_NOCTTY
, 
O_NOCTTY
 },

736 #ifde‡
O_SYNC


737 { 
OSF_O_SYNC
, 
O_SYNC
 },

741 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

743 
qw‹d_t
 
	gsigmask
 = 0;

745 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] =

749 
	#OSF_SO_DEBUG
 0x0001

	)

750 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

751 
	#OSF_SO_REUSEADDR
 0x0004

	)

752 
	#OSF_SO_KEEPALIVE
 0x0008

	)

753 
	#OSF_SO_DONTROUTE
 0x0010

	)

754 
	#OSF_SO_BROADCAST
 0x0020

	)

755 
	#OSF_SO_USELOOPBACK
 0x0040

	)

756 
	#OSF_SO_LINGER
 0x0080

	)

757 
	#OSF_SO_OOBINLINE
 0x0100

	)

758 
	#OSF_SO_REUSEPORT
 0x0200

	)

760 
xœã_èbÀ_t
 
	gsock›t_m≠
[] =

762 { 
OSF_SO_DEBUG
, 
SO_DEBUG
 },

763 #ifde‡
SO_ACCEPTCONN


764 { 
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
 },

766 { 
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
 },

767 { 
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
 },

768 { 
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
 },

769 { 
OSF_SO_BROADCAST
, 
SO_BROADCAST
 },

770 #ifde‡
SO_USELOOPBACK


771 { 
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
 },

773 { 
OSF_SO_LINGER
, 
SO_LINGER
 },

774 { 
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
 },

775 #ifde‡
SO_REUSEPORT


776 { 
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
 }

781 
	#OSF_TCP_NODELAY
 0x01

	)

782 
	#OSF_TCP_MAXSEG
 0x02

	)

783 
	#OSF_TCP_RPTR2RXT
 0x03

	)

784 
	#OSF_TCP_KEEPIDLE
 0x04

	)

785 
	#OSF_TCP_KEEPINTVL
 0x05

	)

786 
	#OSF_TCP_KEEPCNT
 0x06

	)

787 
	#OSF_TCP_KEEPINIT
 0x07

	)

788 
	#OSF_TCP_PUSH
 0x08

	)

789 
	#OSF_TCP_NODELACK
 0x09

	)

791 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] =

793 { 
OSF_TCP_NODELAY
, 
TCP_NODELAY
 },

794 { 
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
 },

795 #ifde‡
TCP_RPTR2RXT


796 { 
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
 },

798 #ifde‡
TCP_KEEPIDLE


799 { 
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
 },

801 #ifde‡
TCP_KEEPINTVL


802 { 
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
 },

804 #ifde‡
TCP_KEEPCNT


805 { 
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
 },

807 #ifde‡
TCP_KEEPINIT


808 { 
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
 },

810 #ifde‡
TCP_PUSH


811 { 
OSF_TCP_PUSH
, 
TCP_PUSH
 },

813 #ifde‡
TCP_NODELACK


814 { 
OSF_TCP_NODELACK
, 
TCP_NODELACK
 }

819 
	#OSF_SOL_SOCKET
 0xfff‡

	)

820 
	#OSF_SOL_IP
 0

	)

821 
	#OSF_SOL_TCP
 6

	)

822 
	#OSF_SOL_UDP
 17

	)

824 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] =

826 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

827 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

828 { 
OSF_SOL_IP
, 
IPPROTO_IP
 },

829 { 
OSF_SOL_TCP
, 
IPPROTO_TCP
 },

830 { 
OSF_SOL_UDP
, 
IPPROTO_UDP
 }

832 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

833 { 
OSF_SOL_IP
, 
SOL_IP
 },

834 { 
OSF_SOL_TCP
, 
SOL_TCP
 },

835 { 
OSF_SOL_UDP
, 
SOL_UDP
 }

840 
	#OSF_AF_UNSPEC
 0

	)

841 
	#OSF_AF_UNIX
 1

	)

842 
	#OSF_AF_INET
 2

	)

843 
	#OSF_AF_IMPLINK
 3

	)

844 
	#OSF_AF_PUP
 4

	)

845 
	#OSF_AF_CHAOS
 5

	)

846 
	#OSF_AF_NS
 6

	)

847 
	#OSF_AF_ISO
 7

	)

849 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] =

851 { 
OSF_AF_UNSPEC
, 
AF_UNSPEC
 },

852 { 
OSF_AF_UNIX
, 
AF_UNIX
 },

853 { 
OSF_AF_INET
, 
AF_INET
 },

854 #ifde‡
AF_IMPLINK


855 { 
OSF_AF_IMPLINK
, 
AF_IMPLINK
 },

857 #ifde‡
AF_PUP


858 { 
OSF_AF_PUP
, 
AF_PUP
 },

860 #ifde‡
AF_CHAOS


861 { 
OSF_AF_CHAOS
, 
AF_CHAOS
 },

863 #ifde‡
AF_NS


864 { 
OSF_AF_NS
, 
AF_NS
 },

866 #ifde‡
AF_ISO


867 { 
OSF_AF_ISO
, 
AF_ISO
 }

872 
	#OSF_SOCK_STREAM
 1

	)

873 
	#OSF_SOCK_DGRAM
 2

	)

874 
	#OSF_SOCK_RAW
 3

	)

875 
	#OSF_SOCK_RDM
 4

	)

876 
	#OSF_SOCK_SEQPACKET
 5

	)

878 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] =

880 { 
OSF_SOCK_STREAM
, 
SOCK_STREAM
 },

881 { 
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
 },

882 { 
OSF_SOCK_RAW
, 
SOCK_RAW
 },

883 { 
OSF_SOCK_RDM
, 
SOCK_RDM
 },

884 { 
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
 }

888 
	#OSF_TBL_SYSINFO
 12

	)

889 
	sosf_tbl_sysöfo


891 
	msi_u£r
;

892 
	msi_ni˚
;

893 
	msi_sys
;

894 
	msi_idÀ
;

895 
	msi_hz
;

896 
	msi_phz
;

897 
	msi_boŸtime
;

898 
	mwaô
;

913 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

914 
mem_ac˚ss_‚
 
mem_‚
,

915 
mem_t
 *
mem
,

916 
md_ö°_t
 
ö°
,

917 
åa˚abÀ
)

919 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

922 i‡(
syscode
 =
OSF_SYS_sysˇŒ
)

923 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

926 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

928 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

931 i‡(
syscode
 =
OSF_SYS_sigªtu∫
)

933 
i
;

934 
osf_sigc⁄ãxt
 
sc
;

935 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

937 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
sc_addr
,

938 &
sc
, (
osf_sigc⁄ãxt
));

939 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

940 
i
=0; i < 32; ++i)

941 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

942 
i
=0; i < 32; ++i)

943 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

944 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

952 
syscode
)

954 
OSF_SYS_exô
:

956 
	`l⁄gjmp
(
sim_exô_buf
,

957  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

960 
OSF_SYS_ªad
:

962 *
buf
;

965 i‡(!(
buf
 =

966 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

967 
	`Áèl
("out of memory in SYS_read");

971  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

972 
	`ªad
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,

973  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

974 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

975 && 
î∫o
 =
EAGAIN
);

978 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

979 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

982 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

983 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

987 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

988  
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
]);

991 
	`‰ì
(
buf
);

995 
OSF_SYS_wrôe
:

997 *
buf
;

1000 i‡(!(
buf
 =

1001 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

1002 
	`Áèl
("out of memory in SYS_write");

1005 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,

1006  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1009 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

1013  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1014 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
sim_¥ogfd
);

1021  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1022 
	`wrôe
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1023 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1024 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

1025 && 
î∫o
 =
EAGAIN
);

1029 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] =ªgs->ªgs_R[
MD_REG_A2
])

1030 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1033 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1034 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1038 
	`‰ì
(
buf
);

1042 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1044 
OSF_SYS_gëdomaö«me
:

1047 *
buf
;

1049 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1050 i‡(!
buf
)

1051 
	`Áèl
("out of virtual memory in gethostname()");

1053  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1054 
	`gëdomaö«me
–
buf
,

1055  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1058 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1059 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1062 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1063 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1067 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1068  
ªgs
->
ªgs_R
[
MD_REG_A0
],

1069 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1074 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1076 
OSF_SYS_Êock
:

1079 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1080 
	`Êock
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1081  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1084 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1085 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1088 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1089 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1095 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1097 
OSF_SYS_böd
:

1099 c⁄° 
sockaddr
 
a_sock
;

1101 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1102 (*)&
a_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1104 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1105 
	`böd
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1106 &
a_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1109 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1110 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1113 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1114 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1120 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1122 
OSF_SYS_£ndto
:

1124 *
buf
 = 
NULL
;

1125 
sockaddr
 
d_sock
;

1126 
buf_Àn
 = 0;

1128 
buf_Àn
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1130 i‡(
buf_Àn
 > 0)

1131 
buf
 = (*Ë
	`mÆloc
(
buf_Àn
*());

1133 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1134 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1136 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1137 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1138 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1140 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1141 
	`£ndto
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1142 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1143 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
],

1144 &
d_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1146 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1147 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1150 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1151 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1152 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1155 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1156 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1159 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1160 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1163 i‡(
buf
 !
NULL
)

1164 
	`‰ì
(
buf
);

1169 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1171 
OSF_SYS_ﬁd_ªcv‰om
:

1172 
OSF_SYS_ªcv‰om
:

1174 
addr_Àn
;

1175 *
buf
;

1176 
sockaddr
 *
a_sock
;

1178 
buf
 = (*Ë
	`mÆloc
(()*
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1180 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1181 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1183 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1184 &
addr_Àn
, ());

1186 
a_sock
 = (
sockaddr
 *)
	`mÆloc
(
addr_Àn
);

1188 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1189 
a_sock
, 
addr_Àn
);

1191 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1192 
	`ªcv‰om
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1193 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1194 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
], 
a_sock
,&
addr_Àn
);

1196 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1197 
buf
, (Ë
ªgs
->
ªgs_R
[
MD_REG_V0
]);

1199 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1200 &
addr_Àn
, ());

1202 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1203 
a_sock
, 
addr_Àn
);

1206 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1207 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1210 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1211 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1213 i‡(
buf
 !
NULL
)

1214 
	`‰ì
(
buf
);

1219 
OSF_SYS_›í
:

1221 
buf
[
MAXBUFSIZE
];

1222 
i
;

1223 
osf_Êags
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
loˇl_Êags
 = 0;

1226 
i
=0; i < 
OSF_NFLAGS
; i++)

1228 i‡(
osf_Êags
 & 
osf_Êag_èbÀ
[
i
].
osf_Êag
)

1230 
osf_Êags
 &~
osf_Êag_èbÀ
[
i
].
osf_Êag
;

1231 
loˇl_Êags
 |
osf_Êag_èbÀ
[
i
].
loˇl_Êag
;

1235 i‡(
osf_Êags
 != 0)

1236 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
osf_Êags
);

1239 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1242  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1243 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1246 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1247 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1250 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1251 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1256 
OSF_SYS_˛o£
:

1258 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0

1259 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1

1260 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 2)

1262 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1267 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`˛o£
–ªgs->ªgs_R[
MD_REG_A0
]);

1270 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1271 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1274 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1275 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1280 
OSF_SYS_¸ót
:

1282 
buf
[
MAXBUFSIZE
];

1285 
	`mem_°r˝y
(
mem_‚
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1288  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1289 
	`¸ót
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1292 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1293 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1296 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1297 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1303 
OSF_SYS_u∆ök
:

1305 
buf
[
MAXBUFSIZE
];

1308 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1311  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u∆ök
(
buf
);

1314 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1315 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1318 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1319 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1324 
OSF_SYS_chdú
:

1326 
buf
[
MAXBUFSIZE
];

1329 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1332  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`chdú
(
buf
);

1335 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1336 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1339 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1340 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1345 
OSF_SYS_chmod
:

1347 
buf
[
MAXBUFSIZE
];

1350 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1353  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1354 
	`chmod
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1357 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1358 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1361 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1362 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1367 
OSF_SYS_chown
:

1368 #ifde‡
_MSC_VER


1369 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

1370 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1373 
buf
[
MAXBUFSIZE
];

1376 
	`mem_°r˝y
(
mem_‚
, 
mem
,
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1379  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1380 
	`chown
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1381  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1384 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1385 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1388 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1389 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1395 
OSF_SYS_sbrk
:

1397 
sqw‹d_t
 
dñè
;

1398 
md_addr_t
 
addr
;

1400 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1401 
addr
 = 
ld_brk_poöt
 + 
dñè
;

1403 i‡(
vîbo£
)

1404 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

1406 
ld_brk_poöt
 = 
addr
;

1407 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1408 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1410 i‡(
vîbo£
)

1411 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1415 i‡–
addr
 < 
ªgs
->
ªgs_R
[
MD_REG_SP
])

1417 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1418 
ld_brk_poöt
 = 
addr
;

1423 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1429 
OSF_SYS_obªak
:

1431 
md_addr_t
 
addr
;

1435 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

1437 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1439 i‡(
vîbo£
)

1440 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

1442 
ld_brk_poöt
 = 
addr
;

1443 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1444 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1446 i‡(
vîbo£
)

1447 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1451 
OSF_SYS_l£ek
:

1453 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1454 
	`l£ek
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1455  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

1458 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1459 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1462 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1463 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1467 
OSF_SYS_gëpid
:

1469  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëpid
();

1472 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1473 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1476 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1477 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1481 
OSF_SYS_gëuid
:

1482 #ifde‡
_MSC_VER


1483 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

1484 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1487  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëuid
();

1488  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëeuid
();

1491 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1492 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1495 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1496 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1501 
OSF_SYS_ac˚ss
:

1503 
buf
[
MAXBUFSIZE
];

1506 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1509  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1510 
	`ac˚ss
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1513 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1514 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1517 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1518 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1523 
OSF_SYS_°©
:

1524 
OSF_SYS_l°©
:

1526 
buf
[
MAXBUFSIZE
];

1527 
osf_°©buf
 
osf_sbuf
;

1528 #ifde‡
_MSC_VER


1529 
_°©
 
sbuf
;

1531 
°©
 
sbuf
;

1535 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1538 i‡(
syscode
 =
OSF_SYS_°©
)

1539  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©
(
buf
, &
sbuf
);

1542 #ifde‡
_MSC_VER


1543 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1544 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1547  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l°©
(
buf
, &
sbuf
);

1552 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1553 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1556 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1557 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1561 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1562 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1563 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1564 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1565 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1566 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1567 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1568 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1569 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1570 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1571 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1572 #i‚de‡
_MSC_VER


1573 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1574 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1578 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1579 &
osf_sbuf
, (
osf_°©buf
));

1583 
OSF_SYS_dup
:

1585  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup
–ªgs->ªgs_R[
MD_REG_A0
]);

1588 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1589 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1592 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1593 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1598 
OSF_SYS_pùe
:

1600 
fd
[2];

1603 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

1604 
fd
, (fd));

1607  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1610  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
fd
[0];

1611  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1614 i‡(
ªgs
->
ªgs_R
[7] =(
qw‹d_t
)-1)

1616 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1617 
ªgs
->
ªgs_R
[7] = 1;

1623 
OSF_SYS_gëgid
:

1624 #ifde‡
_MSC_VER


1625 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1626 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1629  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëgid
();

1630  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëegid
();

1633 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1634 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1637 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1638 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1643 
OSF_SYS_io˘l
:

1644  
ªgs
->
ªgs_R
[
MD_REG_A1
])

1646 #i‡!
	`deföed
(
TIOCGETP
Ë&& (deföed(
löux
Ë|| deföed(
__CYGWIN32__
))

1647 
OSF_TIOCGETP
:

1649 
ãrmios
 
lbuf
;

1650 
osf_sgâyb
 
buf
;

1652  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1653 
	`tcgë©å
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1654 &
lbuf
);

1657 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1658 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1659 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1660 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1661 
buf
.
sg_Êags
 = 0;

1663 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1664  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1665 (
osf_sgâyb
));

1667 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1668 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1671 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1672 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1677 #ifde‡
TIOCGETP


1678 
OSF_TIOCGETP
:

1680 
sgâyb
 
lbuf
;

1681 
osf_sgâyb
 
buf
;

1683  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1684 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1685  
TIOCGETP
,

1686 &
lbuf
);

1689 
buf
.
sg_i•ìd
 = 
lbuf
.sg_ispeed;

1690 
buf
.
sg_o•ìd
 = 
lbuf
.sg_ospeed;

1691 
buf
.
sg_îa£
 = 
lbuf
.sg_erase;

1692 
buf
.
sg_kûl
 = 
lbuf
.sg_kill;

1693 
buf
.
sg_Êags
 = 
lbuf
.sg_flags;

1694 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1695  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1696 (
osf_sgâyb
));

1698 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1699 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1702 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1703 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1708 #ifde‡
FIONREAD


1709 
OSF_FIONREAD
:

1711 
ƒód
;

1713  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1714 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1715  
FIONREAD
,

1716  &
ƒód
);

1718 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1719  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1720 &
ƒód
, (nread));

1722 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1723 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1726 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1727 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1732 #ifde‡
FIONBIO


1733 
FIONBIO
:

1735 
¨g
 = 0;

1737 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1738 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

1739  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1740 &
¨g
, (arg));

1742 #ifde‡
NOTNOW


1743 
	`Ârötf
(
°dîr
, "FIONBIO: %d, %d\n",

1744 ()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1745 
¨g
);

1747  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1748 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1749  
FIONBIO
,

1750  &
¨g
);

1752 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1753 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1754  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1755 &
¨g
, (arg));

1757 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1758 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1761 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1762 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1768 
	`w¨n
("unsupported ioctl call: ioctl(%ld, ...)",

1769 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1770 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1777 
buf
[
NUM_IOCTL_BYTES
];

1778 
loˇl_ªq
 = 0;

1781  
ªgs
->
ªgs_R
[
MD_REG_A1
]) {

1783 
SS_IOCTL_TIOCGETP
:

1784 
loˇl_ªq
 = 
TIOCGETP
;

1786 
SS_IOCTL_TIOCSETP
:

1787 
loˇl_ªq
 = 
TIOCSETP
;

1789 
SS_IOCTL_TCGETP
:

1790 
loˇl_ªq
 = 
TIOCGETP
;

1793 #ifde‡
TCGETA


1794 
SS_IOCTL_TCGETA
:

1795 
loˇl_ªq
 = 
TCGETA
;

1798 #ifde‡
TIOCGLTC


1799 
SS_IOCTL_TIOCGLTC
:

1800 
loˇl_ªq
 = 
TIOCGLTC
;

1803 #ifde‡
TIOCSLTC


1804 
SS_IOCTL_TIOCSLTC
:

1805 
loˇl_ªq
 = 
TIOCSLTC
;

1808 
SS_IOCTL_TIOCGWINSZ
:

1809 
loˇl_ªq
 = 
TIOCGWINSZ
;

1811 #ifde‡
TCSETAW


1812 
SS_IOCTL_TCSETAW
:

1813 
loˇl_ªq
 = 
TCSETAW
;

1816 #ifde‡
TIOCGETC


1817 
SS_IOCTL_TIOCGETC
:

1818 
loˇl_ªq
 = 
TIOCGETC
;

1821 #ifde‡
TIOCSETC


1822 
SS_IOCTL_TIOCSETC
:

1823 
loˇl_ªq
 = 
TIOCSETC
;

1826 #ifde‡
TIOCLBIC


1827 
SS_IOCTL_TIOCLBIC
:

1828 
loˇl_ªq
 = 
TIOCLBIC
;

1831 #ifde‡
TIOCLBIS


1832 
SS_IOCTL_TIOCLBIS
:

1833 
loˇl_ªq
 = 
TIOCLBIS
;

1836 #ifde‡
TIOCLGET


1837 
SS_IOCTL_TIOCLGET
:

1838 
loˇl_ªq
 = 
TIOCLGET
;

1841 #ifde‡
TIOCLSET


1842 
SS_IOCTL_TIOCLSET
:

1843 
loˇl_ªq
 = 
TIOCLSET
;

1848 i‡(!
loˇl_ªq
)

1852 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1853 
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

1854 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

1855 
ªgs
->
ªgs_R
[7] = 0;

1862 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1863 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1864 
buf
, 
NUM_IOCTL_BYTES
);

1867  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1868 
	`io˘l
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
loˇl_ªq
, 
buf
);

1871 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1872 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1873 
buf
, 
NUM_IOCTL_BYTES
);

1876 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1877 
ªgs
->
ªgs_R
[7] = 0;

1881 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1882 
ªgs
->
ªgs_R
[7] = 1;

1889 
OSF_SYS_f°©
:

1891 
osf_°©buf
 
osf_sbuf
;

1892 #ifde‡
_MSC_VER


1893 
_°©
 
sbuf
;

1895 
°©
 
sbuf
;

1899  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1900 
	`f°©
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sbuf
);

1903 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1904 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1907 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1908 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1912 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1913 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1914 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1915 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1916 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1917 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1918 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1919 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1920 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1921 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1922 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1923 #i‚de‡
_MSC_VER


1924 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1925 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1929 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1930 &
osf_sbuf
, (
osf_°©buf
));

1934 
OSF_SYS_gë∑gesize
:

1936 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
MD_PAGE_SIZE
;

1939 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1940 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1943 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1944 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1948 
OSF_SYS_£tôimî
:

1950 
	`w¨n
("syscall: setitimer ignored");

1951 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1954 
OSF_SYS_èbÀ
:

1956 
qw‹d_t
 
èbÀ_id
, 
èbÀ_ödex
, 
buf_addr
, 
num_ñem
, 
size_ñem
;

1957 
osf_tbl_sysöfo
 
sysöfo
;

1959 
èbÀ_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

1960 
èbÀ_ödex
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1961 
buf_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

1962 
num_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A4
];

1963 
size_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A5
];

1965 
èbÀ_id
)

1967 
OSF_TBL_SYSINFO
:

1968 i‡(
èbÀ_ödex
 != 0)

1970 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 0 index, got %08d",

1971 
èbÀ_ödex
 );

1973 i‡(
num_ñem
 != 1)

1975 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 1Élts, got %08d",

1976 
num_ñem
 );

1980 
rußge
 
rußge_öfo
;

1983 i‡(
	`gërußge
(
RUSAGE_SELF
, &
rußge_öfo
) < 0)

1986 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1989 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1994 
sysöfo
.
si_hz
 = 
	`sysc⁄f
(
_SC_CLK_TCK
);

1997 
sysöfo
.
si_u£r
 = 
rußge_öfo
.
ru_utime
.
tv_£c
 * sysöfo.
si_hz
 +

1998 (
rußge_öfo
.
ru_utime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

1999 
sysöfo
.
si_sys
 = 
rußge_öfo
.
ru_°ime
.
tv_£c
 * sysöfo.
si_hz
 +

2000 (
rußge_öfo
.
ru_°ime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

2004 
sysöfo
.
si_ni˚
 = 0;

2005 
sysöfo
.
si_idÀ
 = 0;

2006 
sysöfo
.
si_phz
 = 0;

2007 
sysöfo
.
si_boŸtime
 = 0;

2008 
sysöfo
.
waô
 = 0;

2011 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
buf_addr
,

2012 &
sysöfo
, (
osf_tbl_sysöfo
));

2015 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2020 
	`w¨n
("èbÀ: unsuµ‹ãdÅabÀ id %dÑeque°ed, ign‹ed", 
èbÀ_id
);

2021 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2026 
OSF_SYS_gëdèbÀsize
:

2027 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__Æpha
)

2029 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdèbÀsize
();

2032 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2033 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2036 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2037 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2039 #ñi‡
	`deföed
(
u…rix
)

2042 
	`w¨n
("syscall: called getdtablesize\n");

2043 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2044 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2046 #ñi‡
	`deföed
(
MIN_SYSCALL_MODE
)

2049 
	`w¨n
("syscall: called getdtablesize\n");

2050 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2051 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2055 
æimô
 
æ
;

2058 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
Ë!(
qw‹d_t
)-1)

2060 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
æ
.
æim_cur
;

2061 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2065 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2066 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2072 
OSF_SYS_dup2
:

2074 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2075 
	`dup2
–
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

2078 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2079 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2082 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2083 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2087 
OSF_SYS_f˙é
:

2088 #ifde‡
_MSC_VER


2089 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

2090 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2093 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2094 
	`f˙é
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

2095  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

2098 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2099 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2102 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2103 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2109 
OSF_SYS_sigvec
:

2111 
	`w¨n
("syscall: sigvec ignored");

2112 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2117 
OSF_SYS_sigblock
:

2119 
	`w¨n
("syscall: sigblock ignored");

2120 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2125 
OSF_SYS_sig£tmask
:

2127 
	`w¨n
("syscall: sigsetmask ignored");

2128 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2132 
OSF_SYS_gëtimeofday
:

2133 #ifde‡
_MSC_VER


2134 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

2135 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2138 
osf_timevÆ
 
osf_tv
;

2139 
timevÆ
 
tv
, *
tvp
;

2140 
osf_timez⁄e
 
osf_tz
;

2141 
timez⁄e
 
tz
, *
tzp
;

2143 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2146 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2147 &
osf_tv
, (
osf_timevÆ
));

2150 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_£c
);

2151 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_u£c
);

2152 
tvp
 = &
tv
;

2155 
tvp
 = 
NULL
;

2157 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2160 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2161 &
osf_tz
, (
osf_timez⁄e
));

2164 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_möuãswe°
);

2165 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_d°time
);

2166 
tzp
 = &
tz
;

2169 
tzp
 = 
NULL
;

2172  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëtimeofday
(
tvp
, 
tzp
);

2175 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2176 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2179 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2180 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2183 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2186 
osf_tv
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

2187 
osf_tv
.
osf_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

2190 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2191 &
osf_tv
, (
osf_timevÆ
));

2194 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2197 
osf_tz
.
osf_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

2198 
osf_tz
.
osf_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

2201 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2202 &
osf_tz
, (
osf_timez⁄e
));

2208 
OSF_SYS_gërußge
:

2209 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

2211 
tms
 
tms_buf
;

2212 
osf_rußge
 
rußge
;

2215 i‡(
	`times
(&
tms_buf
Ë!(
qw‹d_t
)-1)

2218 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2219 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2223 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2224 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2228 #i‡
	`deföed
(
__svr4__
)

2229 
	`mem£t
(&
rußge
, '\0', (
osf_rußge
));

2231 
	`bzîo
(&
rußge
, (
osf_rußge
));

2235 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_utime
/
CLK_TCK
);

2236 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2237 
	`MD_SWAPW
(
rußge
.
osf_ru_utime
.
osf_tv_£c
);

2238 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 0;

2239 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_°ime
/
CLK_TCK
);

2240 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2241 
	`MD_SWAPW
(
rußge
.
osf_ru_°ime
.
osf_tv_£c
);

2242 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 0;

2245 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2246 &
rußge
, (
osf_rußge
));

2248 #ñi‡
	`deföed
(
__unix__
)

2250 
rußge
 
loˇl_rußge
;

2251 
osf_rußge
 
rußge
;

2254  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2255 
	`gërußge
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
loˇl_rußge
);

2258 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2259 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2262 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2263 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2267 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2268 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2269 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2270 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2271 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2272 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2273 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2274 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2275 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2276 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2277 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2278 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2279 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2280 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2281 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2282 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2283 
rußge
.
osf_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

2284 
rußge
.
osf_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

2285 
rußge
.
osf_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

2286 
rußge
.
osf_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

2287 
rußge
.
osf_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

2288 
rußge
.
osf_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

2289 
rußge
.
osf_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

2290 
rußge
.
osf_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

2291 
rußge
.
osf_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

2292 
rußge
.
osf_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

2293 
rußge
.
osf_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

2294 
rußge
.
osf_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

2295 
rußge
.
osf_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

2296 
rußge
.
osf_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

2299 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2300 &
rußge
, (
osf_rußge
));

2302 #ñi‡ 
	`deföed
(
_MSC_VER
)

2303 
	`w¨n
("syscall: called getrusage\n");

2304 
ªgs
->
ªgs_R
[7] = 0;

2306 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

2310 
OSF_SYS_utimes
:

2312 
buf
[
MAXBUFSIZE
];

2315 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2317 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] == 0)

2319 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
löux
)

2321  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2322 #ñi‡
	`deföed
(
_MSC_VER
)

2324  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2325 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2326  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
NULL
);

2327 #ñi‡
	`deföed
(
__CYGWIN32__
)

2328 
	`w¨n
("syscall: called utimes\n");

2330 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2335 
osf_timevÆ
 
osf_tvÆ
[2];

2336 #i‚de‡
_MSC_VER


2337 
timevÆ
 
tvÆ
[2];

2341 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2342 
osf_tvÆ
, 2*(
osf_timevÆ
));

2344 #i‚de‡
_MSC_VER


2346 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2347 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_u£c
);

2348 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2349 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_u£c
);

2352 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

2355 
utimbuf
 
ubuf
;

2357 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
tvÆ
[0].
tv_£c
);

2358 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
tvÆ
[1].
tv_£c
);

2360  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2362 #ñi‡
	`deföed
(
_MSC_VER
)

2365 
_utimbuf
 
ubuf
;

2367 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2368 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2370  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2372 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2373  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
tvÆ
);

2374 #ñi‡
	`deföed
(
__CYGWIN32__
)

2375 
	`w¨n
("syscall: called utimes\n");

2377 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2382 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2383 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2386 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2387 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2392 
OSF_SYS_gëæimô
:

2393 
OSF_SYS_£ålimô
:

2394 #ifde‡
_MSC_VER


2395 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

2396 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2397 #ñi‡
	`deföed
(
__CYGWIN32__
)

2399 
	`w¨n
("syscall: called get/setrlimit\n");

2400 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2404 
osf_æimô
 
osf_æ
;

2405 
æimô
 
æ
;

2408 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2409 &
osf_æ
, (
osf_æimô
));

2412 
æ
.
æim_cur
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_cur
);

2413 
æ
.
æim_max
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_max
);

2416 i‡(
syscode
 =
OSF_SYS_gëæimô
)

2417  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2418 
	`gëæimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2420  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2421 
	`£ålimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2424 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2425 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2428 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2429 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2433 
osf_æ
.
osf_æim_cur
 = 
	`MD_SWAPQ
(
æ
.
æim_cur
);

2434 
osf_æ
.
osf_æim_max
 = 
	`MD_SWAPQ
(
æ
.
æim_max
);

2437 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2438 &
osf_æ
, (
osf_æimô
));

2443 
OSF_SYS_sig¥ocmask
:

2445 
fú°
 = 
TRUE
;

2447 i‡(
fú°
)

2449 
	`w¨n
("partially supported sigprocmask() call...");

2450 
fú°
 = 
FALSE
;

2462 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
sigmask
;

2463 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2465 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2467 
OSF_SIG_BLOCK
:

2468 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2470 
OSF_SIG_UNBLOCK
:

2471 
sigmask
 &~
ªgs
->
ªgs_R
[
MD_REG_A1
];

2473 
OSF_SIG_SETMASK
:

2474 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2477 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EINVAL
;

2478 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 1;

2482 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > 0x10000000)

2483 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

2484 &
sigmask
, (sigmask));

2486 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2488 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2490 
OSF_SIG_BLOCK
:

2491 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2493 
OSF_SIG_UNBLOCK
:

2494 
sigmask
 &
ªgs
->
ªgs_R
[
MD_REG_A1
];

2496 
OSF_SIG_SETMASK
:

2497 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2500 
	`∑nic
("illegal how valueÅo sigprocmask()");

2503 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2504 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2509 
OSF_SYS_siga˘i⁄
:

2511 
signum
;

2512 
fú°
 = 
TRUE
;

2514 i‡(
fú°
)

2516 
	`w¨n
("partially supported sigaction() call...");

2517 
fú°
 = 
FALSE
;

2520 
signum
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2521 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2522 
siga˘i⁄_¨øy
[
signum
] = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2524 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

2525 
ªgs
->
ªgs_R
[
MD_REG_A2
] = 
siga˘i⁄_¨øy
[
signum
];

2527 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2530 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2540 
OSF_SYS_sig°ack
:

2541 
	`w¨n
("unsupported sigstack() call...");

2542 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2545 
OSF_SYS_sigªtu∫
:

2547 
i
;

2548 
osf_sigc⁄ãxt
 
sc
;

2549 
fú°
 = 
TRUE
;

2551 i‡(
fú°
)

2553 
	`w¨n
("partially supported sigreturn() call...");

2554 
fú°
 = 
FALSE
;

2557 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2558 &
sc
, (
osf_sigc⁄ãxt
));

2560 
sigmask
 = 
	`MD_SWAPQ
(
sc
.
sc_mask
);

2561 
ªgs
->
ªgs_NPC
 = 
	`MD_SWAPQ
(
sc
.
sc_pc
);

2565 
i
=0; i < 32; ++i)

2566 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

2567 
i
=0; i < 32; ++i)

2568 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

2569 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

2573 
OSF_SYS_uswôch
:

2574 
	`w¨n
("unsupported uswitch() call...");

2575 
ªgs
->
ªgs_R
[
MD_REG_V0
] =Ñegs->ªgs_R[
MD_REG_A1
];

2578 
OSF_SYS_£tsysöfo
:

2579 
	`w¨n
("unsupported setsysinfo() call...");

2580 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2583 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2584 
OSF_SYS_gëdúíåõs
:

2586 
i
, 
˙t
, 
osf_˙t
;

2587 
dúít
 *
p
;

2588 
sw‹d_t
 
fd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2589 
md_addr_t
 
osf_buf
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2590 *
buf
;

2591 
sw‹d_t
 
osf_nbyãs
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2592 
md_addr_t
 
osf_pba£
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

2593 
sqw‹d_t
 
osf_ba£
;

2594 
ba£
 = 0;

2597 i‡(!
osf_nbyãs
)

2598 
	`w¨n
("attemptingÅo get 0 directoryÉntries...");

2601 
buf
 = 
	`ˇŒoc
(1, 
osf_nbyãs
);

2602 i‡(!
buf
)

2603 
	`Áèl
("out of virtual memory");

2606 #i‡
	`deföed
(
__svr4__
)

2607 
ba£
 = 
	`l£ek
 (()
fd
, (
off_t
)0, 
SEEK_CUR
);

2608 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2609 
	`gëdíts
(()
fd
, (
dúít
 *)
buf
, (
size_t
)
osf_nbyãs
);

2611 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2612 
	`gëdúíåõs
(()
fd
, 
buf
, (
size_t
)
osf_nbyãs
, &
ba£
);

2616 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2618 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2621 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] > 0)

2624 
i
=0, 
˙t
=0, 
osf_˙t
=0, 
p
=(
dúít
 *)
buf
;

2625 
˙t
 < 
ªgs
->
ªgs_R
[
MD_REG_V0
] && 
p
->
d_ª˛í
 > 0;

2626 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

2628 
osf_dúít
 osf_dirent;

2630 
osf_dúít
.
d_öo
 = 
	`MD_SWAPW
(
p
->d_ino);

2631 
osf_dúít
.
d_«mÀn
 = 
	`MD_SWAPH
(
	`°æí
(
p
->
d_«me
));

2632 
	`°r˝y
(
osf_dúít
.
d_«me
, 
p
->d_name);

2633 
osf_dúít
.
d_ª˛í
 = 
	`MD_SWAPH
(
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2635 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2636 
osf_buf
 + 
osf_˙t
,

2637 &
osf_dúít
, 
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2638 
osf_˙t
 +
	`OSF_DIRENT_SZ
(
p
->
d_«me
);

2641 i‡(
osf_pba£
 != 0)

2643 
osf_ba£
 = (
sqw‹d_t
)
ba£
;

2644 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
osf_pba£
,

2645 &
osf_ba£
, (osf_base));

2649 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
osf_˙t
;

2654 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2655 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2658 
	`‰ì
(
buf
);

2663 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2664 
OSF_SYS_åunˇã
:

2666 
buf
[
MAXBUFSIZE
];

2669 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2672  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2673 
	`åunˇã
(
buf
, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2676 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2677 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2680 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2681 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2687 #i‡ !
	`deföed
(
_MSC_VER
)

2688 
OSF_SYS_·runˇã
:

2690  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2691 
	`·runˇã
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2692  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2695 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2696 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2699 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2700 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2705 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2706 
OSF_SYS_°©fs
:

2708 
buf
[
MAXBUFSIZE
];

2709 
osf_°©fs
 
osf_sbuf
;

2710 
°©fs
 
sbuf
;

2713 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2716  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©fs
(
buf
, &
sbuf
);

2719 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2720 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2723 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2724 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2728 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__osf__
)

2729 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(0x6969) ;

2731 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(
sbuf
.f_type);

2733 
osf_sbuf
.
f_fsize
 = 
	`MD_SWAPW
(
sbuf
.
f_bsize
);

2734 
osf_sbuf
.
f_blocks
 = 
	`MD_SWAPW
(
sbuf
.f_blocks);

2735 
osf_sbuf
.
f_b‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_bfree);

2736 
osf_sbuf
.
f_bavaû
 = 
	`MD_SWAPW
(
sbuf
.f_bavail);

2737 
osf_sbuf
.
f_fûes
 = 
	`MD_SWAPW
(
sbuf
.f_files);

2738 
osf_sbuf
.
f_f‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_ffree);

2742 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2743 &
osf_sbuf
, (
osf_°©buf
));

2748 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2749 
OSF_SYS_£åegid
:

2752  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2753 
	`£åegid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2754  (
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2757 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2758 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2761 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2762 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2767 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2768 
OSF_SYS_£åeuid
:

2771  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2772 
	`£åeuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2773  (
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2776 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2777 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2780 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2781 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2786 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2787 
OSF_SYS_sockë
:

2790  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2791 
	`sockë
–
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2792 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2794  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

2795 
sockty≥_m≠
, 
	`N_ELT
(socktype_map),

2797  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

2798 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2802 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2803 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2806 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2807 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2812 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2813 
OSF_SYS_c⁄√˘
:

2815 
osf_sockaddr
 
osf_ß
;

2820 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > (
osf_sockaddr
))

2822 
	`Áèl
("sockaddr size overflow:áddrlen = %d",

2823 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2826 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2827 &
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2829 
i
;

2830 
ß
.
ß_Ámûy
 = 
osf_ß
.sa_family;

2831 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2832 
ß
.
ß_d©a
[
i
] = 
osf_ß
.sa_data[i];

2834  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2835 
	`c⁄√˘
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2836 (*)&
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2839 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2840 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2843 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2844 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2850 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2851 
OSF_SYS_u«me
:

2854 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2855 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EPERM
;

2859 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2860 
OSF_SYS_wrôev
:

2862 
i
;

2863 *
buf
;

2864 
iovec
 *
iov
;

2867 
iov
 =

2868 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[
MD_REG_A2
]

2869 * (
iovec
));

2870 i‡(!
iov
)

2871 
	`Áèl
("out of virtual memory in SYS_writev");

2874 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2876 
osf_iovec
 
osf_iov
;

2879 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2880 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2881 + 
i
*(
osf_iovec
)),

2882 &
osf_iov
, (
osf_iovec
));

2884 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
.iov_len);

2885 i‡(
osf_iov
.
iov_ba£
 !0 && osf_iov.
iov_Àn
 != 0)

2887 
buf
 = (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
.
iov_Àn
), ());

2888 i‡(!
buf
)

2889 
	`Áèl
("out of virtual memory in SYS_writev");

2890 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
	`MD_SWAPQ
(
osf_iov
.
iov_ba£
),

2891 
buf
, 
	`MD_SWAPW
(
osf_iov
.
iov_Àn
));

2892 
iov
[
i
].
iov_ba£
 = 
buf
;

2895 
iov
[
i
].
iov_ba£
 = 
NULL
;

2900  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2901 
	`wrôev
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2902  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2903 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2904 && 
î∫o
 =
EAGAIN
);

2907 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2908 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2911 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2912 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2916 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2918 i‡(
iov
[
i
].
iov_ba£
)

2920 
	`‰ì
(
iov
[
i
].
iov_ba£
);

2921 
iov
[
i
].
iov_ba£
 = 
NULL
;

2924 
	`‰ì
(
iov
);

2929 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2930 
OSF_SYS_ªadv
:

2932 
i
;

2933 *
buf
 = 
NULL
;

2934 
osf_iovec
 *
osf_iov
;

2935 
iovec
 *
iov
;

2938 
osf_iov
 =

2939 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
],

2940 (
osf_iovec
));

2941 i‡(!
osf_iov
)

2942 
	`Áèl
("out of virtual memory in SYS_readv");

2944 
iov
 =

2945 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], (
iovec
));

2946 i‡(!
iov
)

2947 
	`Áèl
("out of virtual memory in SYS_readv");

2950 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2953 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2954 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2955 + 
i
*(
osf_iovec
)),

2956 &
osf_iov
[
i
], (
osf_iovec
));

2958 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
[i].iov_len);

2959 i‡(
osf_iov
[
i
].
iov_ba£
 !0 && osf_iov[i].
iov_Àn
 != 0)

2961 
buf
 =

2962 (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
[
i
].
iov_Àn
), ());

2963 i‡(!
buf
)

2964 
	`Áèl
("out of virtual memory in SYS_readv");

2965 
iov
[
i
].
iov_ba£
 = 
buf
;

2968 
iov
[
i
].
iov_ba£
 = 
NULL
;

2973  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2974 
	`ªadv
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2975  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2976 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2977 && 
î∫o
 =
EAGAIN
);

2980 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2982 i‡(
osf_iov
[
i
].
iov_ba£
 != 0)

2984 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
osf_iov
[
i
].
iov_ba£
),

2985 
iov
[
i
].
iov_ba£
, 
	`MD_SWAPW
(
osf_iov
[i].
iov_Àn
));

2990 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2991 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2994 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2995 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2999 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3001 i‡(
iov
[
i
].
iov_ba£
)

3003 
	`‰ì
(
iov
[
i
].
iov_ba£
);

3004 
iov
[
i
].
iov_ba£
 = 
NULL
;

3008 i‡(
osf_iov
)

3009 
	`‰ì
(
osf_iov
);

3010 i‡(
iov
)

3011 
	`‰ì
(
iov
);

3016 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3017 
OSF_SYS_£tsock›t
:

3019 *
buf
;

3020 
xœã_èbÀ_t
 *
m≠
;

3021 
nm≠
;

3026 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0

3027 && 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3029 
buf
 = 
	`ˇŒoc
(1, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3030 i‡(!
buf
)

3031 
	`Áèl
("cannotállocate memory in OSF_SYS_setsockopt");

3034 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3035  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3036 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3039 
buf
 = 
NULL
;

3042 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_SOCKET
)

3044 
m≠
 = 
sock›t_m≠
;

3045 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3047 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_TCP
)

3049 
m≠
 = 
t˝›t_m≠
;

3050 
nm≠
 = 
	`N_ELT
(
t˝›t_m≠
);

3054 
	`w¨n
("noÅranslation mapávailable for `setsockopt()': %d",

3055 ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3056 
m≠
 = 
sock›t_m≠
;

3057 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3060  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3061 
	`£tsock›t
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3062  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3063 
sockÀvñ_m≠
, 
	`N_ELT
(socklevel_map),

3065  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

3066 
m≠
, 
nm≠
,

3068  
buf
,

3069  
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3072 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3073 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3076 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3077 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3080 i‡(
buf
 !
NULL
)

3081 
	`‰ì
(
buf
);

3086 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3087 
OSF_SYS_ﬁd_gësock«me
:

3090 *
buf
;

3091 
w‹d_t
 
osf_addæí
;

3092 
addæí
;

3095 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3096  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3097 &
osf_addæí
, (osf_addrlen));

3098 
addæí
 = ()
osf_addæí
;

3099 i‡(
addæí
 != 0)

3101 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3102 i‡(!
buf
)

3103 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3106 
buf
 = 
NULL
;

3108  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3109 
	`gësock«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3110  (
sockaddr
 *)
buf
,

3111  &
addæí
);

3114 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3115 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3118 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3119 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3123 i‡(
addæí
 != 0)

3124 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3125  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3126 
buf
, 
addæí
);

3127 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3128 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3129  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3130 &
osf_addæí
, (osf_addrlen));

3132 i‡(
buf
 !
NULL
)

3133 
	`‰ì
(
buf
);

3138 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3139 
OSF_SYS_ﬁd_gë≥î«me
:

3142 *
buf
;

3143 
w‹d_t
 
osf_addæí
;

3144 
addæí
;

3147 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3148  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3149 &
osf_addæí
, (osf_addrlen));

3150 
addæí
 = ()
osf_addæí
;

3151 i‡(
addæí
 != 0)

3153 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3154 i‡(!
buf
)

3155 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3158 
buf
 = 
NULL
;

3160  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3161 
	`gë≥î«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3162  (
sockaddr
 *)
buf
,

3163  &
addæí
);

3166 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3167 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3170 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3171 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3175 i‡(
addæí
 != 0)

3176 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3177  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3178 
buf
, 
addæí
);

3179 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3180 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3181  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3182 &
osf_addæí
, (osf_addrlen));

3184 i‡(
buf
 !
NULL
)

3185 
	`‰ì
(
buf
);

3190 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3191 
OSF_SYS_£tgid
:

3194  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3195 
	`£tgid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3198 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3199 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3202 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3203 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3208 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3209 
OSF_SYS_£tuid
:

3212  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3213 
	`£tuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3216 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3217 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3220 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3221 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3226 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3227 
OSF_SYS_gë¥i‹ôy
:

3230  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3231 
	`gë¥i‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3232  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3235 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3236 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3239 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3240 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3245 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3246 
OSF_SYS_£çri‹ôy
:

3249  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3250 
	`£çri‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3251  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3252  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3255 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3256 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3259 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3260 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3265 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3266 
OSF_SYS_£À˘
:

3268 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

3269 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

3270 
timevÆ
 
timeout
, *
timeouç
;

3273 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3275 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3276  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3277 &
ªadfd
, (
fd_£t
));

3278 
ªadfdp
 = &
ªadfd
;

3281 
ªadfdp
 = 
NULL
;

3284 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3286 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3287  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3288 &
wrôefd
, (
fd_£t
));

3289 
wrôefdp
 = &
wrôefd
;

3292 
wrôefdp
 = 
NULL
;

3295 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3297 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3298  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3299 &
ex˚±fd
, (
fd_£t
));

3300 
ex˚±fdp
 = &
ex˚±fd
;

3303 
ex˚±fdp
 = 
NULL
;

3306 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3308 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3309  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3310 &
timeout
, (
timevÆ
));

3311 
timeouç
 = &
timeout
;

3314 
timeouç
 = 
NULL
;

3316 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

3318  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3319 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3320 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

3323  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3324 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3325 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

3329 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3330 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3333 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3334 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3338 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3339 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3340  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3341 &
ªadfd
, (
fd_£t
));

3344 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3345 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3346  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3347 &
wrôefd
, (
fd_£t
));

3350 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3351 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3352  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3353 &
ex˚±fd
, (
fd_£t
));

3356 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3357 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3358  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3359 &
timeout
, (
timevÆ
));

3364 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3365 
OSF_SYS_shutdown
:

3368  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3369 
	`shutdown
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3370  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3373 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3374 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3377 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3378 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3383 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3384 
OSF_SYS_pﬁl
:

3386 
i
;

3387 
pﬁlfd
 *
fds
;

3390 
fds
 = 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A1
], (
pﬁlfd
));

3391 i‡(!
fds
)

3392 
	`Áèl
("out of virtual memory in SYS_poll");

3395 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3398 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3399 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3400 + 
i
*(
pﬁlfd
)),

3401 &
fds
[
i
], (
pﬁlfd
));

3405  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3406 
	`pﬁl
–
fds
,

3407  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3408  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3411 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3412 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3415 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3416 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3420 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3423 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3424 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3425 + 
i
*(
pﬁlfd
)),

3426 &
fds
[
i
], (
pﬁlfd
));

3430 
	`‰ì
(
fds
);

3435 
OSF_SYS_u¶ìp_thªad
:

3437 
	`Ârötf
(
°dîr
, "u¶ìp(%d)\n", ()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3439 #ifde‡
Æpha


3440 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u¶ìp
((Ïegs->ªgs_R[
MD_REG_A0
]);

3442 
	`u¶ìp
(()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3443 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3446 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3447 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3450 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3451 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3454 
	`w¨n
("unsupported usleep_thread() call...");

3455 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3459 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3460 
OSF_SYS_gëho°«me
:

3463 *
buf
;

3465 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3466 i‡(!
buf
)

3467 
	`Áèl
("out of virtual memory in gethostname()");

3469  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3470 
	`gëho°«me
–
buf
,

3471  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3474 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3475 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3478 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3479 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3483 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3484  
ªgs
->
ªgs_R
[
MD_REG_A0
],

3485 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3490 
OSF_SYS_madvi£
:

3491 
	`w¨n
("unsupported madvise() call ignored...");

3492 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3496 
	`w¨n
("invalid/unimplemented syscall %ld, PC=0x%08p, RA=0x%08p, winging it",

3497 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

3498 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3499 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3501 
	`Áèl
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

3505 i‡(
vîbo£
)

3506 
	`Ârötf
(
°dîr
, "syscall(%d):Ñeturned %d:%d...\n",

3507 ()
syscode
, ()
ªgs
->
ªgs_R
[
MD_REG_A3
],

3508 ()
ªgs
->
ªgs_R
[
MD_REG_V0
]);

3509 
	}
}

	@syscall.h

52 #i‚de‡
SYSCALL_H


53 
	#SYSCALL_H


	)

55 
	~<sys/ty≥s.h
>

56 #ifde‡
_MSC_VER


57 
	~<time.h
>

59 
	~<sys/time.h
>

62 
	~"ho°.h
"

63 
	~"misc.h
"

64 
	~"machöe.h
"

93 
sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

94 
mem_ac˚ss_‚
 
mem_‚
,

95 
mem_t
 *
mem
,

96 
md_ö°_t
 
ö°
,

97 
åa˚abÀ
);

	@sysprobe.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 #i‚de‡
_MSC_VER


55 
	~<uni°d.h
>

57 
	#ac˚ss
 
_ac˚ss


	)

58 
	#X_OK
 4

	)

61 
	~"ho°.h
"

62 
	~"misc.h
"

64 *
	ggzù_∑ths
[] =

72 
NULL


75 
	#HOST_ONLY


	)

76 
	~"ídün.c
"

78 
	#CAT
(
a
,
b
Ë®
	)
b

80 
	#MSB
 0x80000000

	)

82 
	$Á°_SRL
()

84 
w‹d_t
 
ui
;

86 i‡((
ui
) != 4)

89  
FALSE
;

92 
ui
 = (
w‹d_t
)
MSB
;

93 i‡(((
ui
 >> 1Ë& 
MSB
) != 0)

96  
FALSE
;

101  
TRUE
;

103 
	}
}

106 
	$Á°_SRA
()

108 
sw‹d_t
 
si
;

110 i‡((
si
) != 4)

113  
FALSE
;

116 
si
 = (
sw‹d_t
)
MSB
;

117 i‡((
si
 >> 1Ë& 
MSB
)

120  
TRUE
;

125  
FALSE
;

127 
	}
}

130 
	$maö
(
¨gc
, **
¨gv
)

132 
lôée_byãs
 = 0, 
lôée_w‹ds
 = 0;

134 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-s"))

136 
	`ídün_ho°_byã_‹dî
())

138 
ídün_big
:

139 
	`Ârötf
(
°dout
, "big\n");

141 
ídün_lôée
:

142 
	`Ârötf
(
°dout
, "little\n");

144 
ídün_unknown
:

145 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

146 
	`exô
(1);

148 
	`ab‹t
();

151 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-libs"))

153 #ifde‡
BFD_LOADER


154 
	`Ârötf
(
°dout
, "-lbfd -liberty ");

157 #ifde‡
löux


159 #ñi‡
	`deföed
(
__USLC__
Ë|| (deföed(
__svr4__
Ë&& deföed(
__i386__
Ë&& deföed(
__unix__
))

160 
	`Ârötf
(
°dout
, "-L/usr/ucblib -lucb ");

164 
	`Ârötf
(
°dout
, " \n");

166 i‡(
¨gc
 =1 || (¨g¯=2 && !
	`°rcmp
(
¨gv
[1], "-flags")))

168 
	`ídün_ho°_byã_‹dî
())

170 
ídün_big
:

171 
	`Ârötf
(
°dout
, "-DBYTES_BIG_ENDIAN ");

173 
ídün_lôée
:

174 
	`Ârötf
(
°dout
, "-DBYTES_LITTLE_ENDIAN ");

175 
lôée_byãs
 = 1;

177 
ídün_unknown
:

178 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

179 
	`exô
(1);

181 
	`ab‹t
();

184 
	`ídün_ho°_w‹d_‹dî
())

186 
ídün_big
:

187 
	`Ârötf
(
°dout
, "-DWORDS_BIG_ENDIAN ");

189 
ídün_lôée
:

190 
	`Ârötf
(
°dout
, "-DWORDS_LITTLE_ENDIAN ");

191 
lôée_w‹ds
 = 1;

193 
ídün_unknown
:

194 
	`Ârötf
(
°dîr
, "\nerror: cannot determine word order!\n");

195 
	`exô
(1);

197 
	`ab‹t
();

200 #ifde‡
_AIX


201 
	`Ârötf
(
°dout
, "-D_ALL_SOURCE ");

204 #i‡(
	`deföed
(
hpux
Ë|| deföed(
__hpux
)Ë&& !deföed(
__GNUC__
)

205 
	`Ârötf
(
°dout
, "-D_INCLUDE_HPUX_SOURCE -D_INCLUDE_XOPEN_SOURCE -D_INCLUDE_AES_SOURCE ");

208 #i‚de‡
__GNUC__


212 
i
 = 5, 
j
;

214 
j
 = 
	`CAT
(-,-
i
);

216 i‡(
j
 == 4)

219 
	`Ârötf
(
°dout
, "-DOLD_SYMCAT ");

221 i‡(
j
 == 5)

230 
	`Ârötf
(
°dîr
, "\nerror: cannot grok symbol concat method!\n");

231 
	`exô
(1);

236 #i‚de‡
SLOW_SHIFTS


238 i‡(
	`Á°_SRL
())

239 
	`Ârötf
(
°dout
, "-DFAST_SRL ");

240 i‡(
	`Á°_SRA
())

241 
	`Ârötf
(
°dout
, "-DFAST_SRA ");

245 #i‚de‡
GZIP_PATH


247 
i
;

249 
i
=0; 
gzù_∑ths
[i] !
NULL
; i++)

251 i‡(
	`ac˚ss
(
gzù_∑ths
[
i
], 
X_OK
) == 0)

253 
	`Ârötf
(
°dout
, "-DGZIP_PATH=\"%s\" ", 
gzù_∑ths
[
i
]);

261 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-t"))

263 
	`Ârötf
(
°dout
, "sizeof(int) = %d\n", ());

264 
	`Ârötf
(
°dout
, "sizeof(long) = %d\n", ());

269 i‡(
lôée_byãs
 !
lôée_w‹ds
)

271 
	`Ârötf
(
°dîr
,

273 
	`exô
(1);

275 
	`exô
(0);

277 
	}
}

	@target-alpha/alpha.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

63 #i‡!
deföed
(
BYTES_LITTLE_ENDIAN
Ë|| !deföed(
WORDS_LITTLE_ENDIAN
)

64 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
lôée
-
ídün
 
machöes
...

69 #i‡!
deföed
(
HOST_HAS_QWORD
)

70 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
ho°s
 
wôh
 
buûtö
 
qw‹d
 
suµ‹t
...

71 #îr‹ 
Try
 
buûdög
 
wôh
 
GNU
 
GCC
, 
as
 
ô
 
suµ‹ts
 
qw‹ds
 
⁄
 
mo°
 
machöes
.

75 
md_ö°_t
 
	gMD_NOP_INST
 = 0x43ff041f;

78 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

79 
	gmd_›off£t
[
OP_MAX
];

82 
	gmd_›mask
[
OP_MAX
] = {

84 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

85 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËMASK,

	)

86 
	#CONNECT
(
OP
)

	)

87 
	~"machöe.def
"

91 
	gmd_›shi·
[
OP_MAX
] = {

93 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

94 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËSHIFT,

	)

95 
	#CONNECT
(
OP
)

	)

96 
	~"machöe.def
"

100 *
	gmd_›2«me
[
OP_MAX
] = {

101 
NULL
,

102 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

103 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

104 
	#CONNECT
(
OP
)

	)

105 
	~"machöe.def
"

109 *
	gmd_›2f‹m©
[
OP_MAX
] = {

110 
NULL
,

111 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

112 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

113 
	#CONNECT
(
OP
)

	)

114 
	~"machöe.def
"

118 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

119 
FUCœmd_NA
,

120 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

121 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœmd_NA
,

	)

122 
	#CONNECT
(
OP
)

	)

123 
	~"machöe.def
"

127 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

128 
NULL
,

142 *
	gmd_amode_°r
[
md_amode_NUM
] =

153 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

158 { "$r0", 
π_g¥
, 0 },

159 { "$v0", 
π_g¥
, 0 },

160 { "$r1", 
π_g¥
, 1 },

161 { "$r2", 
π_g¥
, 2 },

162 { "$r3", 
π_g¥
, 3 },

163 { "$r4", 
π_g¥
, 4 },

164 { "$r5", 
π_g¥
, 5 },

165 { "$r6", 
π_g¥
, 6 },

166 { "$r7", 
π_g¥
, 7 },

167 { "$îr", 
π_g¥
, 7 },

168 { "$r8", 
π_g¥
, 8 },

169 { "$r9", 
π_g¥
, 9 },

170 { "$r10", 
π_g¥
, 10 },

171 { "$r11", 
π_g¥
, 11 },

172 { "$r12", 
π_g¥
, 12 },

173 { "$r13", 
π_g¥
, 13 },

174 { "$r14", 
π_g¥
, 14 },

175 { "$r15", 
π_g¥
, 15 },

176 { "$Â", 
π_g¥
, 15 },

177 { "$r16", 
π_g¥
, 16 },

178 { "$a0", 
π_g¥
, 16 },

179 { "$r17", 
π_g¥
, 17 },

180 { "$a1", 
π_g¥
, 17 },

181 { "$r18", 
π_g¥
, 18 },

182 { "$a2", 
π_g¥
, 18 },

183 { "$r19", 
π_g¥
, 19 },

184 { "$a3", 
π_g¥
, 19 },

185 { "$r20", 
π_g¥
, 20 },

186 { "$a4", 
π_g¥
, 20 },

187 { "$r21", 
π_g¥
, 21 },

188 { "$a5", 
π_g¥
, 21 },

189 { "$r22", 
π_g¥
, 22 },

190 { "$r23", 
π_g¥
, 23 },

191 { "$r24", 
π_g¥
, 24 },

192 { "$r25", 
π_g¥
, 25 },

193 { "$r26", 
π_g¥
, 26 },

194 { "$ø", 
π_g¥
, 26 },

195 { "$r27", 
π_g¥
, 27 },

196 { "$r28", 
π_g¥
, 28 },

197 { "$r29", 
π_g¥
, 29 },

198 { "$gp", 
π_g¥
, 29 },

199 { "$r30", 
π_g¥
, 30 },

200 { "$•", 
π_g¥
, 30 },

201 { "$r31", 
π_g¥
, 31 },

202 { "$zîo", 
π_g¥
, 31 },

205 { "$f0", 
π_Âr
, 0 },

206 { "$f1", 
π_Âr
, 1 },

207 { "$f2", 
π_Âr
, 2 },

208 { "$f3", 
π_Âr
, 3 },

209 { "$f4", 
π_Âr
, 4 },

210 { "$f5", 
π_Âr
, 5 },

211 { "$f6", 
π_Âr
, 6 },

212 { "$f7", 
π_Âr
, 7 },

213 { "$f8", 
π_Âr
, 8 },

214 { "$f9", 
π_Âr
, 9 },

215 { "$f10", 
π_Âr
, 10 },

216 { "$f11", 
π_Âr
, 11 },

217 { "$f12", 
π_Âr
, 12 },

218 { "$f13", 
π_Âr
, 13 },

219 { "$f14", 
π_Âr
, 14 },

220 { "$f15", 
π_Âr
, 15 },

221 { "$f16", 
π_Âr
, 16 },

222 { "$f17", 
π_Âr
, 17 },

223 { "$f18", 
π_Âr
, 18 },

224 { "$f19", 
π_Âr
, 19 },

225 { "$f20", 
π_Âr
, 20 },

226 { "$f21", 
π_Âr
, 21 },

227 { "$f22", 
π_Âr
, 22 },

228 { "$f23", 
π_Âr
, 23 },

229 { "$f24", 
π_Âr
, 24 },

230 { "$f25", 
π_Âr
, 25 },

231 { "$f26", 
π_Âr
, 26 },

232 { "$f27", 
π_Âr
, 27 },

233 { "$f28", 
π_Âr
, 28 },

234 { "$f29", 
π_Âr
, 29 },

235 { "$f30", 
π_Âr
, 30 },

236 { "$f31", 
π_Âr
, 31 },

239 { "$l0", 
π_Õr
, 0 },

240 { "$l1", 
π_Õr
, 1 },

241 { "$l2", 
π_Õr
, 2 },

242 { "$l3", 
π_Õr
, 3 },

243 { "$l4", 
π_Õr
, 4 },

244 { "$l5", 
π_Õr
, 5 },

245 { "$l6", 
π_Õr
, 6 },

246 { "$l7", 
π_Õr
, 7 },

247 { "$l8", 
π_Õr
, 8 },

248 { "$l9", 
π_Õr
, 9 },

249 { "$l10", 
π_Õr
, 10 },

250 { "$l11", 
π_Õr
, 11 },

251 { "$l12", 
π_Õr
, 12 },

252 { "$l13", 
π_Õr
, 13 },

253 { "$l14", 
π_Õr
, 14 },

254 { "$l15", 
π_Õr
, 15 },

255 { "$l16", 
π_Õr
, 16 },

256 { "$l17", 
π_Õr
, 17 },

257 { "$l18", 
π_Õr
, 18 },

258 { "$l19", 
π_Õr
, 19 },

259 { "$l20", 
π_Õr
, 20 },

260 { "$l21", 
π_Õr
, 21 },

261 { "$l22", 
π_Õr
, 22 },

262 { "$l23", 
π_Õr
, 23 },

263 { "$l24", 
π_Õr
, 24 },

264 { "$l25", 
π_Õr
, 25 },

265 { "$l26", 
π_Õr
, 26 },

266 { "$l27", 
π_Õr
, 27 },

267 { "$l28", 
π_Õr
, 28 },

268 { "$l29", 
π_Õr
, 29 },

269 { "$l30", 
π_Õr
, 30 },

270 { "$l31", 
π_Õr
, 31 },

273 { "$Â¸", 
π_˘æ
, 0 },

274 { "$uniq", 
π_˘æ
, 1 },

277 { "$pc", 
π_PC
, 0 },

278 { "$≈c", 
π_NPC
, 0 },

281 { 
NULL
, 
π_g¥
, 0 }

286 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

288 
i
;

290 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

292 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

293  
md_ªg_«mes
[
i
].
°r
;

297  
NULL
;

298 
	}
}

301 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

302 
is_wrôe
,

303 
md_ªg_ty≥
 
π
,

304 
ªg
,

305 
evÆ_vÆue_t
 *
vÆ
)

307 
π
)

309 
π_g¥
:

310 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

313 i‡(!
is_wrôe
)

315 
vÆ
->
ty≥
 = 
ë_qw‹d
;

316 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_R
[
ªg
];

319 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

322 
π_Õr
:

323 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

326 i‡(!
is_wrôe
)

328 
vÆ
->
ty≥
 = 
ë_qw‹d
;

329 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

332 
ªgs
->
ªgs_F
.
q
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

335 
π_Âr
:

336 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

339 i‡(!
is_wrôe
)

341 
vÆ
->
ty≥
 = 
ë_doubÀ
;

342 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

345 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

348 
π_˘æ
:

349 
ªg
)

352 i‡(!
is_wrôe
)

354 
vÆ
->
ty≥
 = 
ë_qw‹d
;

355 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
Â¸
;

358 
ªgs
->
ªgs_C
.
Â¸
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

362 i‡(!
is_wrôe
)

364 
vÆ
->
ty≥
 = 
ë_qw‹d
;

365 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
uniq
;

368 
ªgs
->
ªgs_C
.
uniq
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

376 
π_PC
:

377 i‡(!
is_wrôe
)

379 
vÆ
->
ty≥
 = 
ë_addr
;

380 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

383 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

386 
π_NPC
:

387 i‡(!
is_wrôe
)

389 
vÆ
->
ty≥
 = 
ë_addr
;

390 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

393 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

397 
	`∑nic
("bogusÑegister bank");

401  
NULL
;

402 
	}
}

406 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

408 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx",

409 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

410 
	}
}

413 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

415 
i
;

417 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

419 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

420 
	`Ârötf
(
°ªam
, " ");

421 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

422 
	`Ârötf
(
°ªam
, "\n");

424 
	}
}

428 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

430 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx/%f",

431 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
q
[ªg],Ñegs.q[ªg],Ñegs.
d
[reg]);

432 
	}
}

435 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

437 
i
;

440 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

442 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

443 
	`Ârötf
(
°ªam
, "\n");

445 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

446 
	`Ârötf
(
°ªam
, "\n");

448 
	}
}

451 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

454 
ªg
)

457 
	`myÂrötf
(
°ªam
, "FPCR: 0x%012lx", 
ªgs
.
Â¸
);

461 
	`myÂrötf
(
°ªam
, "UNIQ: 0x%012lx", 
ªgs
.
uniq
);

465 
	`∑nic
("bogus controlÑegister index");

467 
	}
}

470 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

472 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

473 
	`Ârötf
(
°ªam
, " ");

474 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

476 
	}
}

479 
w‹d_t


480 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

482 
i
;

483 
qw‹d_t
 
checksum
 = 0;

485 
i
=0; i < (
MD_NUM_IREGS
-1); i++)

486 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

488 
i
=0; i < (
MD_NUM_FREGS
-1); i++)

489 
checksum
 ^
ªgs
->
ªgs_F
.
q
[
i
];

491 
checksum
 ^
ªgs
->
ªgs_C
.
Â¸
;

492 
checksum
 ^
ªgs
->
ªgs_C
.
uniq
;

493 
checksum
 ^
ªgs
->
ªgs_PC
;

494 
checksum
 ^
ªgs
->
ªgs_NPC
;

496  (
w‹d_t
)((
checksum
 >> 32) ^ checksum);

497 
	}
}

501 
	gmd_›2Êags
[
OP_MAX
] = {

502 
NA
,

503 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

504 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

505 
	#CONNECT
(
OP
)

	)

506 
	~"machöe.def
"

512 
	$md_öô_decodî
()

514 
max_off£t
 = 0;

515 
off£t
 = 0;

517 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

518 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

519 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

520 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

521 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

522 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

524 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
) \

525 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

526 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

527 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

528 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

529 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`MAX
(max_off£t,(MSK)+off£t);

	)

531 
	#CONNECT
(
OP
) \

532 
off£t
 = 
max_off£t
+1; 
md_›off£t
[
OP
] = off£t;

	)

534 
	~"machöe.def
"

536 i‡(
max_off£t
 >
MD_MAX_MASK
)

537 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", 
max_off£t
);

538 
	}
}

542 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

543 
md_addr_t
 
pc
,

544 
FILE
 *
°ªam
)

546 
md_›code
 
›
;

549 i‡(!
°ªam
)

550 
°ªam
 = 
°dîr
;

553 
	`MD_SET_OPCODE
(
›
, 
ö°
);

556 i‡(
›
 <
OP_NA
 || o∞>
OP_MAX
)

559 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x>", 
ö°
);

563 *
s
;

566 
	`Ârötf
(
°ªam
, "%†", 
	`MD_OP_NAME
(
›
));

568 
s
 = 
	`MD_OP_FORMAT
(
›
);

569 *
s
) {

570 *
s
) {

572 
	`Ârötf
(
°ªam
, "r%d", 
RA
);

575 
	`Ârötf
(
°ªam
, "r%d", 
RB
);

578 
	`Ârötf
(
°ªam
, "r%d", 
RC
);

581 
	`Ârötf
(
°ªam
, "f%d", 
RA
);

584 
	`Ârötf
(
°ªam
, "f%d", 
RB
);

587 
	`Ârötf
(
°ªam
, "f%d", 
RC
);

590 
	`Ârötf
(
°ªam
, "%d", (
sw‹d_t
)
	`SEXT
(
OFS
));

593 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT
(
OFS
) << 2) + 4);

596 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT21
(
TARG
) << 2) + 4);

599 
	`Ârötf
(
°ªam
, "%d", (
w‹d_t
)
IMM
);

603 
	`Âutc
(*
s
, 
°ªam
);

605 
s
++;

608 
	}
}

	@target-alpha/alpha.h

52 #i‚de‡
ALPHA_H


53 
	#ALPHA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

69 
	#TARGET_ALPHA


	)

72 #i‡
deföed
(
BYTES_BIG_ENDIAN
)

73 
	#MD_CROSS_ENDIAN


	)

77 
	#NA
 0

	)

84 
	#MD_QWORD_ADDRS


	)

87 
qw‹d_t
 
	tmd_addr_t
;

95 
	#MD_PAGE_SIZE
 8192

	)

96 
	#MD_LOG_PAGE_SIZE
 13

	)

103 
	emd_Áu…_ty≥
 {

104 
	mmd_Áu…_n⁄e
 = 0,

105 
	mmd_Áu…_ac˚ss
,

106 
	mmd_Áu…_Æignmít
,

107 
	mmd_Áu…_ovîÊow
,

108 
	mmd_Áu…_div0
,

109 
	mmd_Áu…_övÆid
,

111 
	mmd_Áu…_bªak
,

112 
	mmd_Áu…_unim∂
,

113 
	mmd_Áu…_öã∫Æ


122 
	#MD_NUM_IREGS
 32

	)

125 
	#MD_NUM_FREGS
 32

	)

128 
	#MD_NUM_CREGS
 2

	)

131 
	#MD_TOTAL_REGS
 \

132 –32 + 32 + 2 + 1 + 1 + 1)

	)

135 
qw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

139 
qw‹d_t
 
	mq
[
MD_NUM_FREGS
];

140 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
];

141 } 
	tmd_Âr_t
;

145 
qw‹d_t
 
	mÂ¸
;

146 
qw‹d_t
 
	muniq
;

147 } 
	tmd_˘æ_t
;

150 
	emd_ªg_«mes
 {

151 
	mMD_REG_V0
 = 0,

152 
	mMD_REG_ERR
 = 7,

153 
	mMD_REG_FP
 = 15,

154 
	mMD_REG_A0
 = 16,

155 
	mMD_REG_A1
 = 17,

156 
	mMD_REG_A2
 = 18,

157 
	mMD_REG_A3
 = 19,

158 
	mMD_REG_A4
 = 20,

159 
	mMD_REG_A5
 = 21,

160 
	mMD_REG_RA
 = 26,

161 
	mMD_REG_GP
 = 29,

162 
	mMD_REG_SP
 = 30,

163 
	mMD_REG_ZERO
 = 31

172 
w‹d_t
 
	tmd_ö°_t
;

175 
md_ö°_t
 
MD_NOP_INST
;

178 #ifde‡
MD_CROSS_ENDIAN


180 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

181 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

182 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

183 
	#MD_SWAPI
(
X
Ë
	`SWAP_WORD
(X)

	)

187 
	#MD_SWAPH
(
X
Ë(X)

	)

188 
	#MD_SWAPW
(
X
Ë(X)

	)

189 
	#MD_SWAPQ
(
X
Ë(X)

	)

190 
	#MD_SWAPD
(
X
Ë(X)

	)

191 
	#MD_SWAPI
(
X
Ë(X)

	)

196 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

197 { (
INST
Ë
	`MEM_READ_WORD
((
MEM
), (
PC
)); }

	)

204 
	#MD_MAX_ENVIRON
 16384

	)

212 
	#MD_TOP_OP
(
INST
Ë(((INSTË>> 26Ë& 0x3f)

	)

213 
	#MD_SET_OPCODE
(
OP
, 
INST
) \

214 { 
OP
 = 
md_mask2›
[
	`MD_TOP_OP
(
INST
)]; \

215 
md_›mask
[
OP
]) \

216 
OP
 = 
md_mask2›
[((
INST
 >> 
md_›shi·
[OP]Ë& 
md_›mask
[OP]) \

217 + 
md_›off£t
[
OP
]]; }

	)

221 
	#MD_MAX_MASK
 2048

	)

224 
	emd_›code
 {

225 
	mOP_NA
 = 0,

226 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

227 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

228 
	#CONNECT
(
OP
)

	)

229 
	~"machöe.def
"

230 
	mOP_MAX


234 
md_›code
 
md_mask2›
[];

235 
md_›off£t
[];

236 
md_›mask
[];

237 
md_›shi·
[];

240 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

241 *
md_›2«me
[];

244 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

245 *
md_›2f‹m©
[];

248 
	emd_fu_˛ass
 {

249 
	mFUCœmd_NA
 = 0,

250 
	mI¡ALU
,

251 
	mI¡MULT
,

252 
	mI¡DIV
,

253 
	mFlﬂtADD
,

254 
	mFlﬂtCMP
,

255 
	mFlﬂtCVT
,

256 
	mFlﬂtMULT
,

257 
	mFlﬂtDIV
,

258 
	mFlﬂtSQRT
,

259 
	mRdP‹t
,

260 
	mWrP‹t
,

261 
	mNUM_FU_CLASSES


265 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

266 
md_fu_˛ass
 
md_›2fu
[];

269 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

270 *
md_fu2«me
[];

273 
	#F_ICOMP
 0x00000001

	)

274 
	#F_FCOMP
 0x00000002

	)

275 
	#F_CTRL
 0x00000004

	)

276 
	#F_UNCOND
 0x00000008

	)

277 
	#F_COND
 0x00000010

	)

278 
	#F_MEM
 0x00000020

	)

279 
	#F_LOAD
 0x00000040

	)

280 
	#F_STORE
 0x00000080

	)

281 
	#F_DISP
 0x00000100

	)

282 
	#F_RR
 0x00000200

	)

283 
	#F_DIRECT
 0x00000400

	)

284 
	#F_TRAP
 0x00000800

	)

285 
	#F_LONGLAT
 0x00001000

	)

286 
	#F_DIRJMP
 0x00002000

	)

287 
	#F_INDIRJMP
 0x00004000

	)

288 
	#F_CALL
 0x00008000

	)

289 
	#F_FPCOND
 0x00010000

	)

290 
	#F_IMM
 0x00020000

	)

293 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

294 
md_›2Êags
[];

298 
	#RA
 ((
ö°
 >> 21Ë& 0x1fË

	)

299 
	#RB
 ((
ö°
 >> 16Ë& 0x1fË

	)

300 
	#RC
 (
ö°
 & 0x1fË

	)

303 
	#IMM
 ((
qw‹d_t
)((
ö°
 >> 13Ë& 0xff))

	)

306 
	#TARG
 (
ö°
 & 0x1fffff)

	)

309 
	#OFS
 (
ö°
 & 0xffff)

	)

312 
	#SEXT
(
X
) \

313 (((
X
Ë& 0x8000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xffffffffffff0000)Ë: (sqw‹d_t)(X))

	)

315 
	#SEXT21
(
X
) \

316 (((
X
Ë& 0x100000Ë? ((
sqw‹d_t
)(XË| 
	`LL
(0xfffffffff„00000)Ë: (sqw‹d_t)(X))

	)

318 
	#SEXT32
(
X
) \

319 (((
X
Ë& 0x80000000Ë? ((
sqw‹d_t
)(X)|
	`LL
(0xffffffff00000000)Ë: (sqw‹d_t)(X))

	)

322 
	#ARITH_OVFL
(
RESULT
, 
OP1
, 
OP2
Ë((RESULTË< (OP1Ë|| (RESULTË< (OP2))

	)

325 
	#IEEEFP_DBL_SIGN
(
Q
Ë((QË>> 63)

	)

326 
	#IEEEFP_DBL_EXPONENT
(
Q
Ë(((QË>> 52Ë& 0x7ff)

	)

327 
	#IEEEFP_DBL_FRACTION
(
Q
Ë((QË& 
	`ULL
(0xfffffffffffff))

	)

328 
	#IS_IEEEFP_DBL_NAN
(
Q
) \

329 ((
	`IEEEFP_DBL_EXPONENT
(
Q
Ë=0x7ffË&& (
	`IEEEFP_DBL_FRACTION
(Q)))

	)

332 #i‚de‡
SET_TPC


333 
	#SET_TPC
(
PC
Ë()0

	)

342 
	#OSF_SYS_exô
 1

	)

343 
	#MD_EXIT_SYSCALL
(
REGS
) \

344 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_exô
)

	)

347 
	#OSF_SYS_wrôe
 4

	)

348 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

349 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_wrôe
 \

350 && ((
REGS
)->
ªgs_R
[
MD_REG_A0
] == 1 \

351 || (
REGS
)->
ªgs_R
[
MD_REG_A0
] = 2))

	)

354 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[
MD_REG_A0
])

	)

357 
	#MD_IS_CALL
(
OP
Ë((OPË=
JSR
 || (OPË=
BSR
)

	)

360 
	#MD_IS_RETURN
(
OP
Ë((OPË=
RETN
)

	)

363 
	#MD_IS_INDIR
(
OP
) \

364 ((
OP
Ë=
JMP
 || (OPË=
JSR
 || (OPË=
RETN
 || (OPË=
JSR_COROUTINE
)

	)

367 
	emd_amode_ty≥
 {

368 
	mmd_amode_imm
,

369 
	mmd_amode_gp
,

370 
	mmd_amode_•
,

371 
	mmd_amode_Â
,

372 
	mmd_amode_di•
,

373 
	mmd_amode_º
,

374 
	mmd_amode_NUM


376 *
md_amode_°r
[
md_amode_NUM
];

379 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë{ (FSMË0; }

	)

382 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

384 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

386 i‡((
RB
Ë=
MD_REG_GP
) \

387 (
AM
Ë
md_amode_gp
; \

388 i‡((
RB
Ë=
MD_REG_SP
) \

389 (
AM
Ë
md_amode_•
; \

390 i‡((
RB
Ë=
MD_REG_FP
) \

391 (
AM
Ë
md_amode_Â
; \

393 (
AM
Ë
md_amode_di•
; \

395 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

396 (
AM
Ë
md_amode_º
; \

398 
	`∑nic
("cannot decodeáddressing mode"); \

399 }

	)

402 
	#MD_AMODE_POSTPROBE
(
FSM
Ë

	)

410 
	#MD_EIO_FILE_FORMAT
 
EIO_ALPHA_FORMAT


	)

412 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

413 
	`exo_√w
(
ec_li°
, \

414  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

415  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

416  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

417  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
Â¸
),\

418  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
uniq
),\

419 
NULL
)

	)

421 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

422 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

424 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

425 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
q
[
IDX
])

	)

427 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

429 i‡(!
exo
 \

430 || 
exo
->
ec
 !
ec_li°
 \

431 || !
exo
->
as_li°
.
hód
 \

432 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

433 || !
exo
->
as_li°
.
hód
->
√xt
 \

434 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

435 || !
exo
->
as_li°
.
hód
->
√xt
->next \

436 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

437 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

438 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

439 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

440 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

441 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xà!
NULL
) \

442 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

443 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

444 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
; \

445 (
REGS
)->
ªgs_NPC
 = \

446 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
; \

447 (
REGS
)->
ªgs_C
.
Â¸
 = \

448 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

449 (
REGS
)->
ªgs_C
.
uniq
 = \

450 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

452 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

453 ((
REGS
)->
ªgs_R
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

455 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

456 ((
REGS
)->
ªgs_F
.
q
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

458 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

459 ((
REGS
)->
ªgs_R
[
IDX
] !(
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

461 
	#MD_FIRST_IN_REG
 0

	)

462 
	#MD_LAST_IN_REG
 21

	)

464 
	#MD_FIRST_OUT_REG
 0

	)

465 
	#MD_LAST_OUT_REG
 21

	)

473 
qw‹d_t
 
	texo_addªss_t
;

476 
qw‹d_t
 
	texo_öãgî_t
;

479 
	texo_Êﬂt_t
;

487 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

488 
	#sc_cou¡î
 
sc_sqw‹d


	)

489 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

492 
	#°©_ªg_addr
 
°©_ªg_qw‹d


	)

500 
	emd_ªg_ty≥
 {

501 
	mπ_g¥
,

502 
	mπ_Õr
,

503 
	mπ_Âr
,

504 
	mπ_d¥
,

505 
	mπ_˘æ
,

506 
	mπ_PC
,

507 
	mπ_NPC
,

508 
	mπ_NUM


512 
	smd_ªg_«mes_t
 {

513 *
	m°r
;

514 
md_ªg_ty≥
 
	mfûe
;

515 
	mªg
;

519 
md_ªg_«mes_t
 
md_ªg_«mes
[];

522 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

525 
	gevÆ_vÆue_t
;

526 
	gªgs_t
;

528 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

529 
is_wrôe
,

530 
md_ªg_ty≥
 
π
,

531 
ªg
,

532 
evÆ_vÆue_t
 *
vÆ
);

535 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

536 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

539 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

540 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

543 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

544 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

547 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

555 
	#MD_AGEN_OP
 
ADDQ


	)

558 
	#MD_NOP_OP
 
OP_NA


	)

562 
	#MD_VALID_ADDR
(
ADDR
) \

563 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

564 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_brk_poöt
) \

565 || ((
ADDR
Ë>(
ld_°ack_ba£
 - 16*1024*1024Ë&& (ADDRË<Üd_°ack_ba£))

	)

573 
	#MD_BR_SHIFT
 2

	)

581 
md_öô_decodî
();

585 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

586 
md_addr_t
 
pc
,

587 
FILE
 *
°ªam
);

600 
qw‹d_t
 
	tMD_ADDR_TYPE
;

601 
qw‹d_t
 
	tMD_PTR_TYPE
;

602 
w‹d_t
 
	tMD_INST_TYPE
;

603 
	#MD_INST_SIZE
 (
MD_INST_TYPE
)

	)

606 
	#MD_TEXT_BASE
 0x20000000ULL

	)

607 
	#MD_STACK_BASE
 (
MD_TEXT_BASE
 - (409600+4096))

	)

610 íum { 
	mREG_V0
, 
	mREG_A0
=16, 
	mREG_A1
, 
	mREG_A2
, 
	mREG_A3
, 
	mREG_A4
, 
	mREG_A5
, 
	mREG_ERR
=7,

611 
	mREG_GP
=29, 
	mREG_SP
, 
	mREG_ZERO
, 
	mREG_RA
=26 };

614 
	#MD_TOTAL_REGS
 \

615 (
MD_NUM_REGS
+MD_NUM_REGS+ 1+ 1+ 1+ 1)

	)

618 #i‚de‡
NO_ICHECKS


624 #i‚de‡
IFAIL


625 
	#IFAIL
(
S
Ë
	`Áèl
(S)

	)

629 
	#OVER
(
X
,
Y
) (((((X) > 0) && ((Y) > 0) \

630 && (
MAXINT_VAL
 - (
X
Ë< (
Y
))) \

631 ? 
	`IFAIL
("+ overflow") : ()0), \

632 ((((
X
Ë< 0Ë&& ((
Y
) < 0) \

633 && (-
MAXINT_VAL
 - (
X
Ë> (
Y
))) \

634 ? 
	`IFAIL
("+ undîÊow"Ë: ()0))

	)

637 
	#UNDER
(
X
,
Y
) (((((X) > 0) && ((Y) < 0) \

638 && (
MAXINT_VAL
 + (
Y
Ë< (
X
))) \

639 ? 
	`IFAIL
("- overflow") : ()0), \

640 ((((
X
Ë< 0Ë&& ((
Y
) > 0) \

641 && (-
MAXINT_VAL
 + (
Y
Ë> (
X
))) \

642 ? 
	`IFAIL
("- undîÊow"Ë: ()0))

	)

645 
	#DIV0
(
N
Ë(((NË=0Ë? 
	`IFAIL
("dividêby 0"Ë: ()0)

	)

648 
	#INTALIGN
(
N
) (((N) & 01) \

649 ? 
	`IFAIL
("bad INTÑegi°îálignmít"Ë: ()0)

	)

652 
	#FPALIGN
(
N
) (((N) & 01) \

653 ? 
	`IFAIL
("bad FPÑegi°îálignmít"Ë: ()0)

	)

656 
	#TALIGN
(
TARG
) (((TARG) & 0x7) \

657 ? 
	`IFAIL
("bad jum∞Æignmít"Ë: ()0)

	)

662 
	#OVER
(
X
,
Y
Ë(()0)

	)

663 
	#UNDER
(
X
,
Y
Ë(()0)

	)

664 
	#DIV0
(
N
Ë(()0)

	)

665 
	#INTALIGN
(
N
Ë(()0)

	)

666 
	#FPALIGN
(
N
Ë(()0)

	)

667 
	#TALIGN
(
TARG
Ë(()0)

	)

674 
	#IDIV
(
A
, 
B
Ë((AË/ (B))

	)

675 
	#IMOD
(
A
, 
B
Ë((AË% (B))

	)

676 
	#FDIV
(
A
, 
B
Ë((AË/ (B))

	)

677 
	#FINT
(
A
Ë(()A)

	)

	@target-alpha/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-alpha/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	~"Æpha.h
"

59 
	#ECOFF_EB_MAGIC
 0x0160

	)

60 
	#ECOFF_EB_OTHER
 0x6001

	)

61 
	#ECOFF_EL_MAGIC
 0x0162

	)

62 
	#ECOFF_EL_OTHER
 0x6201

	)

63 
	#ECOFF_ALPHAMAGIC
 0603

	)

65 
	secoff_fûehdr
 {

66 
hÆf_t
 
	mf_magic
;

67 
hÆf_t
 
	mf_ns˙s
;

68 
sw‹d_t
 
	mf_timd©
;

69 
qw‹d_t
 
	mf_sym±r
;

70 
sw‹d_t
 
	mf_nsyms
;

71 
hÆf_t
 
	mf_›thdr
;

72 
hÆf_t
 
	mf_Êags
;

75 
	secoff_aouthdr
 {

76 
hÆf_t
 
	mmagic
;

77 
hÆf_t
 
	mv°amp
;

78 
hÆf_t
 
	mbldªv
;

79 
hÆf_t
 
	m∑d˚Œ
;

80 
qw‹d_t
 
	mtsize
;

81 
qw‹d_t
 
	mdsize
;

82 
qw‹d_t
 
	mbsize
;

83 
qw‹d_t
 
	míåy
;

84 
qw‹d_t
 
	mãxt_°¨t
;

85 
qw‹d_t
 
	md©a_°¨t
;

86 
qw‹d_t
 
	mbss_°¨t
;

87 
sw‹d_t
 
	mg¥mask
;

88 
sw‹d_t
 
	mÂrmask
;

89 
qw‹d_t
 
	mgp_vÆue
;

92 
	secoff_s˙hdr
 {

93 
	ms_«me
[8];

94 
qw‹d_t
 
	ms_∑ddr
;

95 
qw‹d_t
 
	ms_vaddr
;

96 
qw‹d_t
 
	ms_size
;

97 
qw‹d_t
 
	ms_s˙±r
;

98 
qw‹d_t
 
	ms_ªÕå
;

99 
qw‹d_t
 
	ms_ n›å
;

100 
hÆf_t
 
	ms_ƒñoc
;

101 
hÆf_t
 
	ms_∆¬o
;

102 
sw‹d_t
 
	ms_Êags
;

105 
	secoff_symhdr_t
 {

106 
hÆf_t
 
	mmagic
;

107 
hÆf_t
 
	mv°amp
;

109 
sw‹d_t
 
	mûöeMax
;

110 
sw‹d_t
 
	midnMax
;

111 
sw‹d_t
 
	mùdMax
;

112 
sw‹d_t
 
	misymMax
;

113 
sw‹d_t
 
	mi›tMax
;

114 
sw‹d_t
 
	müuxMax
;

115 
sw‹d_t
 
	missMax
;

116 
sw‹d_t
 
	missExtMax
;

117 
sw‹d_t
 
	mifdMax
;

118 
sw‹d_t
 
	m¸fd
;

119 
sw‹d_t
 
	mõxtMax
;

120 
qw‹d_t
 
	mcbLöe
;

121 
qw‹d_t
 
	mcbLöeOff£t
;

122 
qw‹d_t
 
	mcbDnOff£t
;

123 
qw‹d_t
 
	mcbPdOff£t
;

124 
qw‹d_t
 
	mcbSymOff£t
;

125 
qw‹d_t
 
	mcbO±Off£t
;

126 
qw‹d_t
 
	mcbAuxOff£t
;

127 
qw‹d_t
 
	mcbSsOff£t
;

128 
qw‹d_t
 
	mcbSsExtOff£t
;

129 
qw‹d_t
 
	mcbFdOff£t
;

130 
qw‹d_t
 
	mcbRfdOff£t
;

131 
qw‹d_t
 
	mcbExtOff£t
;

132 } 
	tecoff_HDRR
;

134 
	#ECOFF_magicSym
 0x1992

	)

136 
	secoff_fdr
 {

137 
w‹d_t
 
	madr
;

138 
sw‹d_t
 
	mrss
;

139 
sw‹d_t
 
	missBa£
;

140 
sw‹d_t
 
	mcbSs
;

141 
sw‹d_t
 
	misymBa£
;

142 
sw‹d_t
 
	mcsym
;

143 
sw‹d_t
 
	mûöeBa£
;

144 
sw‹d_t
 
	m˛öe
;

145 
sw‹d_t
 
	mi›tBa£
;

146 
sw‹d_t
 
	mc›t
;

147 
hÆf_t
 
	mùdFú°
;

148 
hÆf_t
 
	m˝d
;

149 
sw‹d_t
 
	müuxBa£
;

150 
sw‹d_t
 
	mˇux
;

151 
sw‹d_t
 
	mrfdBa£
;

152 
sw‹d_t
 
	m¸fd
;

153 
	mœng
 :5;

154 
	mfMîge
 :1;

155 
	mfRódö
 :1;

156 
	mfBigídün
 :1;

157 
	mª£rved
 :24;

158 
sw‹d_t
 
	mcbLöeOff£t
;

159 
sw‹d_t
 
	mcbLöe
;

160 } 
	tecoff_FDR
;

162 
	secoff_pdr
 {

163 
w‹d_t
 
	madr
;

164 
sw‹d_t
 
	misym
;

165 
sw‹d_t
 
	mûöe
;

166 
sw‹d_t
 
	mªgmask
;

167 
sw‹d_t
 
	mªgoff£t
;

168 
sw‹d_t
 
	mi›t
;

169 
sw‹d_t
 
	m‰egmask
;

170 
sw‹d_t
 
	m‰egoff£t
;

171 
sw‹d_t
 
	m‰ameoff£t
;

172 
hÆf_t
 
	m‰amîeg
;

173 
hÆf_t
 
	mp¸eg
;

174 
sw‹d_t
 
	m Low
;

175 
sw‹d_t
 
	m High
;

176 
sw‹d_t
 
	mcbLöeOff£t
;

177 } 
	tecoff_PDR
;

179 
	secoff_SYMR
 {

180 
qw‹d_t
 
	mvÆue
;

181 
sw‹d_t
 
	miss
;

182 
	m°
 :6;

183 
	msc
 :5;

184 
	mª£rved
 :1;

185 
	mödex
 :20;

186 } 
	tecoff_SYMR
;

188 
	secoff_EXTR
 {

189 
ecoff_SYMR
 
	masym
;

190 
sw‹d_t
 
	mifd
;

191 
sw‹d_t
 
	mª£rved
;

192 } 
	tecoff_EXTR
;

194 
	#ECOFF_R_SN_TEXT
 1

	)

195 
	#ECOFF_R_SN_RDATA
 2

	)

196 
	#ECOFF_R_SN_DATA
 3

	)

197 
	#ECOFF_R_SN_SDATA
 4

	)

198 
	#ECOFF_R_SN_SBSS
 5

	)

199 
	#ECOFF_R_SN_BSS
 6

	)

201 
	#ECOFF_STYP_TEXT
 0x0020

	)

202 
	#ECOFF_STYP_RDATA
 0x0100

	)

203 
	#ECOFF_STYP_DATA
 0x0040

	)

204 
	#ECOFF_STYP_SDATA
 0x0200

	)

205 
	#ECOFF_STYP_SBSS
 0x0400

	)

206 
	#ECOFF_STYP_BSS
 0x0080

	)

207 
	#ECOFF_STYP_INIT
 0x80000000

	)

209 
	#ECOFF_STYP_FINI
 0x01000000

	)

210 
	#ECOFF_STYP_RCONST
 0x02200000

	)

211 
	#ECOFF_STYP_LITA
 0x04000000

	)

212 
	#ECOFF_STYP_LIT8
 0x08000000

	)

213 
	#ECOFF_STYP_LIT4
 0x10000000

	)

214 
	#ECOFF_STYP_XDATA
 0x02400000

	)

215 
	#ECOFF_STYP_PDATA
 0x02800000

	)

217 
	#ECOFF_°Nû
 0

	)

218 
	#ECOFF_°GlobÆ
 1

	)

219 
	#ECOFF_°Sètic
 2

	)

220 
	#ECOFF_°P¨am
 3

	)

221 
	#ECOFF_°Loˇl
 4

	)

222 
	#ECOFF_°Labñ
 5

	)

223 
	#ECOFF_°Proc
 6

	)

224 
	#ECOFF_°Block
 7

	)

225 
	#ECOFF_°End
 8

	)

226 
	#ECOFF_°Membî
 9

	)

227 
	#ECOFF_°Ty≥def
 10

	)

228 
	#ECOFF_°Fûe
 11

	)

229 
	#ECOFF_°RegRñoc
 12

	)

230 
	#ECOFF_°F‹w¨d
 13

	)

231 
	#ECOFF_°SèticProc
 14

	)

232 
	#ECOFF_°C⁄°™t
 15

	)

	@target-alpha/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-Æpha/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 0

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
md_addr_t
 
	gld_brk_poöt
 = 0;

87 
	gld_d©a_size
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 0;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = -1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, "0x%010p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, "0x%010p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, "0x%010p");

130 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

132 &
ld_°ack_mö
,Üd_stack_min, "0x%010p");

134 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

136 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, "0x%010p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, "0x%010p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
qw‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

219 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

220 
	`w¨n
("****************************************");

221 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

222 
	`w¨n
("****************************************");

224 
	`Áèl
("SimpleScalar/Alpha only supports binaryÉxecution on\n"

230 i‡(
sim_chk±_‚ame
 !
NULL
)

231 
	`Áèl
("checkpoints only supported while EIOÅracing");

233 #ifde‡
BFD_LOADER


236 
bfd
 *
abfd
;

237 
a£˘i⁄
 *
£˘
;

241 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

242 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

243 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

246 
ld_ívú⁄_ba£
 = 
•
;

249 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

250 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

251 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

256 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

258 
	`bfd_˛o£
(
abfd
);

259 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

263 
ld_¥og_‚ame
 = 
¨gv
[0];

266 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

268 
	`debug
("processing %d sections in `%s'...",

269 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

272 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

274 *
p
;

276 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

277 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

278 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

281 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

282 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

283 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

284 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

287 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

288 i‡(!
p
)

289 
	`Áèl
("cannotállocate %d bytes for section `%s'",

290 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

291 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

294 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

295 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

296 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

299 
	`mem_bc›y
(
mem_‚
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

300 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

303 
	`‰ì
(
p
);

306 i‡(
zîo_bss_£gs


307 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

308 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

309 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

312 
	`mem_bzîo
(
mem_‚
,

313 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

314 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

319 
	`debug
("ignoring section `%s' duringÜoad...",

320 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

324 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

327 
ld_ãxt_size
 =

328 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

329 - 
MD_TEXT_BASE
)

330 + 
TEXT_TAIL_PADDING
;

334 
	`mem_bzîo
(
mem_‚
,

335 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

336 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

337 
TEXT_TAIL_PADDING
);

341 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

342 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

343 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

344 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

345 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

348 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

349 
d©a_bªak
)

350 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

351 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

356 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

357 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

358 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

363 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

364 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

365 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

366 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

369 i‡(!
	`bfd_˛o£
(
abfd
))

370 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

376 
FILE
 *
fobj
;

377 
Êoc
;

378 
ecoff_fûehdr
 
fhdr
;

379 
ecoff_aouthdr
 
ahdr
;

380 
ecoff_s˙hdr
 
shdr
;

383 
ld_¥og_‚ame
 = 
¨gv
[0];

386 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

387 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

389 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

391 i‡(!
fobj
)

392 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

394 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

395 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

398 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_ALPHAMAGIC
))

399 
ld_èrgë_big_ídün
 = 
FALSE
;

400 i‡(
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_MAGIC
)

401 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_MAGIC
)

402 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EB_OTHER
)

403 || 
fhdr
.
f_magic
 =
	`MD_SWAPH
(
ECOFF_EL_OTHER
))

404 
	`Áèl
("AÕh®simuœt‹ c™nŸÑu¿PISA bö¨y `%s'", 
¨gv
[0]);

406 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable)",

407 
¨gv
[0]);

409 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

410 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

412 
ld_ãxt_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
ãxt_°¨t
);

413 
ld_ãxt_size
 = 
	`MD_SWAPQ
(
ahdr
.
tsize
);

414 
ld_¥og_íåy
 = 
	`MD_SWAPQ
(
ahdr
.
íåy
);

415 
ld_d©a_ba£
 = 
	`MD_SWAPQ
(
ahdr
.
d©a_°¨t
);

416 
ld_d©a_size
 = 
	`MD_SWAPQ
(
ahdr
.
dsize
Ë+ MD_SWAPQ◊hdr.
bsize
);

417 
ªgs
->
ªgs_R
[
MD_REG_GP
] = 
	`MD_SWAPQ
(
ahdr
.
gp_vÆue
);

420 
d©a_bªak
 = 
ld_d©a_ba£
 + 
ld_d©a_size
;

425 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
	`MD_SWAPH
(
fhdr
.
f_›thdr
), 0);

427 
	`debug
("processing %d sections in `%s'...",

428 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
), 
¨gv
[0]);

431 
Êoc
 = 
	`·ñl
(
fobj
);

432 
i
 = 0; i < 
	`MD_SWAPH
(
fhdr
.
f_ns˙s
); i++)

434 *
p
;

436 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

437 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

438 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

439 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

440 
Êoc
 = 
	`·ñl
(
fobj
);

442 
	`MD_SWAPW
(
shdr
.
s_Êags
))

444 
ECOFF_STYP_TEXT
:

445 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

446 i‡(!
p
)

447 
	`Áèl
("out of virtual memory");

449 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

450 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

451 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

452 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

455 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
,

456 
	`MD_SWAPQ
(
shdr
.
s_vaddr
), 
p
, MD_SWAPQ(shdr.
s_size
));

460 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

461 
	`MD_SWAPQ
(
shdr
.
s_vaddr
Ë+ MD_SWAPQ(shdr.
s_size
),

462 
TEXT_TAIL_PADDING
);

466 
	`‰ì
(
p
);

469 
Text_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

470 
Text_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

471 
Text_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
) / 4;

473 
Text_size
 += 10;

474 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

479 
ECOFF_STYP_INIT
:

480 
ECOFF_STYP_FINI
:

481 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

483 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

484 i‡(!
p
)

485 
	`Áèl
("out of virtual memory");

487 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

488 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

489 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

490 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

493 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

494 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

495 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

498 
	`‰ì
(
p
);

501 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

504 
ECOFF_STYP_LITA
:

505 
ECOFF_STYP_LIT8
:

506 
ECOFF_STYP_LIT4
:

507 
ECOFF_STYP_XDATA
:

508 
ECOFF_STYP_PDATA
:

509 
ECOFF_STYP_RCONST
:

512 
ECOFF_STYP_RDATA
:

517 
Rd©a_°¨t
 = 
	`MD_SWAPQ
(
shdr
.
s_vaddr
);

518 
Rd©a_size
 = 
	`MD_SWAPQ
(
shdr
.
s_size
);

519 
Rd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

522 
ECOFF_STYP_DATA
:

524 
D©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

527 
ECOFF_STYP_SDATA
:

529 
Sd©a_£ek
 = 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
);

531 i‡(
	`MD_SWAPQ
(
shdr
.
s_size
) > 0)

533 
p
 = 
	`ˇŒoc
(
	`MD_SWAPQ
(
shdr
.
s_size
), ());

534 i‡(!
p
)

535 
	`Áèl
("out of virtual memory");

537 i‡(
	`f£ek
(
fobj
, 
	`MD_SWAPQ
(
shdr
.
s_s˙±r
), 0) == -1)

538 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

539 i‡(
	`‰ód
(
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
), 1, 
fobj
) < 1)

540 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

543 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
,

544 
Wrôe
, 
	`MD_SWAPQ
(
shdr
.
s_vaddr
),

545 
p
, 
	`MD_SWAPQ
(
shdr
.
s_size
));

548 
	`‰ì
(
p
);

551 
	`w¨n
("£˘i⁄ `%s' i†em±y...", 
shdr
.
s_«me
);

554 
ECOFF_STYP_BSS
:

555 
ECOFF_STYP_SBSS
:

560 
	`w¨n
("£˘i⁄ `%s' ign‹ed...", 
shdr
.
s_«me
);

565 i‡(
	`f˛o£
(
fobj
))

566 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

572 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

573 
	`Áèl
("executable is missingá `.text' section");

574 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

575 
	`Áèl
("executable is missingá `.data' section");

576 i‡(!
ld_¥og_íåy
)

577 
	`Áèl
("programÉntryÖointÇot specified");

580 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

581 i‡(
sim_sw≠_byãs
)

586 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

587 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

589 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

592 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

593 i‡(
sim_sw≠_w‹ds
)

598 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

599 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

601 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

607 
ld_°ack_ba£
 = 
ld_ãxt_ba£
 - (409600+4096);

609 
•
 = 
	`ROUND_DOWN
(
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
, (
MD_DOUBLE_TYPE
));

611 
•
 = 
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
;

612 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

615 
ld_ívú⁄_ba£
 = 
•
;

618 
ãmp
 = 
	`MD_SWAPQ
(
¨gc
);

619 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
qw‹d_t
));

620 
ªgs
->
ªgs_R
[
MD_REG_A0
] = 
ãmp
;

621 
•
 +(
qw‹d_t
);

624 
¨gv_addr
 = 
•
;

625 
ªgs
->
ªgs_R
[
MD_REG_A1
] = 
¨gv_addr
;

626 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

629 
ívp_addr
 = 
•
;

630 
i
=0; 
ívp
[i]; i++)

631 
•
 +(
md_addr_t
);

632 
•
 +(
md_addr_t
);

635 
i
=0; i<
¨gc
; i++)

638 
ãmp
 = 
	`MD_SWAPQ
(
•
);

639 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

640 &
ãmp
, (
md_addr_t
));

642 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

643 
•
 +
	`°æí
(
¨gv
[
i
])+1;

646 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

647 &
nuŒ_±r
, (
md_addr_t
));

650 
i
 = 0; 
ívp
[i]; i++)

653 
ãmp
 = 
	`MD_SWAPQ
(
•
);

654 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

655 &
ãmp
, (
md_addr_t
));

657 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

658 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

661 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

662 &
nuŒ_±r
, (
md_addr_t
));

665 i‡(
•
 > 
ld_°ack_ba£
)

670 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON inálpha.h");

674 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

677 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

679 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

680 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

682 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

683 
ld_ãxt_ba£
, 
ld_ãxt_size
);

684 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

685 
ld_d©a_ba£
, 
ld_d©a_size
);

686 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

687 
ld_°ack_ba£
, 
ld_°ack_size
);

688 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

689 
	}
}

	@target-alpha/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"lﬂdî.h
"

58 
	~"symbﬁ.h
"

60 #ifde‡
BFD_LOADER


61 
	~<bfd.h
>

63 
	~"èrgë-Æpha/ecoff.h
"

69 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

72 
	gsym_nsyms
 = 0;

73 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

76 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

79 
	gsym_¡extsyms
 = 0;

80 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

83 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

86 
	gsym_nd©asyms
 = 0;

87 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

90 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

93 
	gsyms_lﬂded
 = 
FALSE
;

95 #ifde‡
PRINT_SYMS


98 
	$Êags2°r
(
Êags
)

100 
buf
[256];

101 *
p
;

103 i‡(!
Êags
)

106 
p
 = 
buf
;

107 *
p
 = '\0';

109 i‡(
Êags
 & 
BSF_LOCAL
)

111 *
p
++ = 'L';

112 *
p
++ = '|';

114 i‡(
Êags
 & 
BSF_GLOBAL
)

116 *
p
++ = 'G';

117 *
p
++ = '|';

119 i‡(
Êags
 & 
BSF_DEBUGGING
)

121 *
p
++ = 'D';

122 *
p
++ = '|';

124 i‡(
Êags
 & 
BSF_FUNCTION
)

126 *
p
++ = 'F';

127 *
p
++ = '|';

129 i‡(
Êags
 & 
BSF_KEEP
)

131 *
p
++ = 'K';

132 *
p
++ = '|';

134 i‡(
Êags
 & 
BSF_KEEP_G
)

136 *
p
++ = 'k'; *p++ = '|';

138 i‡(
Êags
 & 
BSF_WEAK
)

140 *
p
++ = 'W';

141 *
p
++ = '|';

143 i‡(
Êags
 & 
BSF_SECTION_SYM
)

145 *
p
++ = 'S'; *p++ = '|';

147 i‡(
Êags
 & 
BSF_OLD_COMMON
)

149 *
p
++ = 'O';

150 *
p
++ = '|';

152 i‡(
Êags
 & 
BSF_NOT_AT_END
)

154 *
p
++ = 'N';

155 *
p
++ = '|';

157 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

159 *
p
++ = 'C';

160 *
p
++ = '|';

162 i‡(
Êags
 & 
BSF_WARNING
)

164 *
p
++ = 'w';

165 *
p
++ = '|';

167 i‡(
Êags
 & 
BSF_INDIRECT
)

169 *
p
++ = 'I';

170 *
p
++ = '|';

172 i‡(
Êags
 & 
BSF_FILE
)

174 *
p
++ = 'f';

175 *
p
++ = '|';

178 i‡(
p
 =
buf
)

179 
	`∑nic
("no flags detected");

181 *--
p
 = '\0';

182  
buf
;

183 
	}
}

188 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

190  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

191 
	}
}

195 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

197  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

198 
	}
}

200 
	#RELEVANT_SCOPE
(
SYM
) \

202 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

204 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

205 && (
SYM
)->
«me
[0] != '$') \

207 
lﬂd_loˇls
 \

209 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

210 && (
SYM
)->
«me
[0] == '$') \

212 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

213 && (
SYM
)->
«me
[0] ='$'))))

	)

218 
	$sym_lﬂdsyms
(*
‚ame
,

219 
lﬂd_loˇls
)

221 
i
, 
debug_˙t
;

222 #ifde‡
BFD_LOADER


223 
bfd
 *
abfd
;

224 
asymbﬁ
 **
syms
;

225 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

227 
Àn
;

228 
FILE
 *
fobj
;

229 
ecoff_fûehdr
 
fhdr
;

230 
ecoff_aouthdr
 
ahdr
;

231 
ecoff_symhdr_t
 
symhdr
;

232 *
°πab
 = 
NULL
;

233 
ecoff_EXTR
 *
exå
;

236 i‡(
syms_lﬂded
)

243 #ifde‡
BFD_LOADER


246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

247 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

248 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

253 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

255 
	`bfd_˛o£
(
abfd
);

256 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

260 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

261 
	`∑nic
("binaryÉndian changed");

263 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

266 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

267 i‡(
°‹age
 <= 0)

268 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

270 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

271 i‡(!
syms
)

272 
	`Áèl
("out of virtual memory");

274 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

275 i‡(
nsyms
 <= 0)

276 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

283 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

284 
i
=0; i < 
nsyms
; i++)

286 
asymbﬁ
 *
sym
 = 
syms
[
i
];

290 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

294 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

296 && 
	`RELEVANT_SCOPE
(
sym
))

299 
sym_nd©asyms
++;

300 #ifde‡
PRINT_SYMS


301 
	`Ârötf
(
°dîr
,

303 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

304 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

308 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

310 && 
	`RELEVANT_SCOPE
(
sym
))

313 
sym_¡extsyms
++;

314 #ifde‡
PRINT_SYMS


315 
	`Ârötf
(
°dîr
,

317 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

318 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

324 #ifde‡
PRINT_SYMS


325 
	`Ârötf
(
°dîr
,

327 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

328 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

332 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

333 i‡(
sym_nsyms
 <= 0)

334 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

337 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

338 i‡(!
sym_db
)

339 
	`Áèl
("out of virtual memory");

342 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

344 
asymbﬁ
 *
sym
 = 
syms
[
i
];

348 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

352 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

354 && 
	`RELEVANT_SCOPE
(
sym
))

357 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

358 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

359 
sym_db
[
debug_˙t
].
öôülized
 =

360 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

362 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

363 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

364 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

365 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

367 
debug_˙t
++;

370 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

372 && 
	`RELEVANT_SCOPE
(
sym
))

375 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

376 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

377 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

378 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

379 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

380 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

382 
debug_˙t
++;

390 i‡(
debug_˙t
 !
sym_nsyms
)

391 
	`∑nic
("couldÇotÜocateáll counted symbols");

394 
	`‰ì
(
syms
);

398 i‡(!
	`bfd_˛o£
(
abfd
))

399 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

404 #i‡
	`deföed
(
_MSC_VER
)

405 
fobj
 = 
	`f›í
(
‚ame
, "rb");

407 
fobj
 = 
	`f›í
(
‚ame
, "r");

409 i‡(!
fobj
)

410 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

412 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

413 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

416 i‡(
fhdr
.
f_magic
 !
ECOFF_ALPHAMAGIC
)

417 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

419 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

420 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

423 
	`f£ek
(
fobj
, ()
fhdr
.
f_sym±r
, 0);

425 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

426 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

428 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

429 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

432 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

433 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

434 i‡(!
°πab
)

435 
	`Áèl
("out of virtual memory");

438 
	`f£ek
(
fobj
, ()
symhdr
.
cbSsExtOff£t
 , 0);

439 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

440 
	`Áèl
("error whileÑeading symbolÅableÇames");

443 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

444 i‡(
Àn
 <= 0)

445 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

446 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

447 i‡(!
sym_db
)

448 
	`Áèl
("out of virtual memory");

451 
exå
 =

452 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

453 i‡(!
exå
)

454 
	`Áèl
("out of virtual memory");

456 
	`f£ek
(
fobj
, ()
symhdr
.
cbExtOff£t
, 0);

457 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

458 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

460 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

463 
i
=0; i < 
symhdr
.
õxtMax
; i++)

465 
°r_off£t
;

467 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

470 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

472 
i
, 
exå
[i].
ifd
,

473 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

474 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

475 
exå
[
i
].
asym
.
ödex
);

476 
	`¥ötf
(" %08x %2d %2d %s\n",

477 
exå
[
i
].
asym
.
vÆue
,

478 
exå
[
i
].
asym
.
°
,

479 
exå
[
i
].
asym
.
sc
,

480 &
°πab
[
°r_off£t
]);

483 
exå
[
i
].
asym
.
°
)

485 
ECOFF_°GlobÆ
:

486 
ECOFF_°Sètic
:

488 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

489 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

490 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

492 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

493 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

494 
sym_nsyms
++;

495 
sym_nd©asyms
++;

498 
ECOFF_°Proc
:

499 
ECOFF_°SèticProc
:

500 
ECOFF_°Labñ
:

502 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

503 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

504 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

505 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

506 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

507 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

508 
sym_nsyms
++;

509 
sym_¡extsyms
++;

515 
	`Ârötf
(
°dîr
, "** skùpög: %s...\n", &
°πab
[
°r_off£t
]);

520 
	`‰ì
(
exå
);

523 i‡(
	`f˛o£
(
fobj
))

524 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

533 
sym_syms
 =

534 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

535 i‡(!
sym_syms
)

536 
	`Áèl
("out of virtual memory");

538 
sym_syms_by_«me
 =

539 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

540 i‡(!
sym_syms_by_«me
)

541 
	`Áèl
("out of virtual memory");

543 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

545 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

546 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

547 
debug_˙t
++;

550 i‡(
debug_˙t
 !
sym_nsyms
)

551 
	`∑nic
("couldÇotÜocateáll symbols");

554 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

557 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

560 
sym_ãxtsyms
 =

561 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

562 i‡(!
sym_ãxtsyms
)

563 
	`Áèl
("out of virtual memory");

565 
sym_ãxtsyms_by_«me
 =

566 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

567 i‡(!
sym_ãxtsyms_by_«me
)

568 
	`Áèl
("out of virtual memory");

570 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

572 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

574 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

575 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

576 
debug_˙t
++;

580 i‡(
debug_˙t
 !
sym_¡extsyms
)

581 
	`∑nic
("couldÇotÜocateállÅext symbols");

584 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

587 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

588 (
sym_sym_t
 *), (*)
ncmp
);

591 
sym_d©asyms
 =

592 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

593 i‡(!
sym_d©asyms
)

594 
	`Áèl
("out of virtual memory");

596 
sym_d©asyms_by_«me
 =

597 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

598 i‡(!
sym_d©asyms_by_«me
)

599 
	`Áèl
("out of virtual memory");

601 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

603 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

605 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

606 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

607 
debug_˙t
++;

611 i‡(
debug_˙t
 !
sym_nd©asyms
)

612 
	`∑nic
("couldÇotÜocateáll data symbols");

615 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

618 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

619 (
sym_sym_t
 *), (*)
ncmp
);

622 
i
=0; i<
sym_¡extsyms
; i++)

624 
sym_ãxtsyms
[
i
]->
size
 =

625 (
i
 !(
sym_¡extsyms
 - 1)

626 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

627 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

629 
i
=0; i<
sym_nd©asyms
; i++)

631 
sym_d©asyms
[
i
]->
size
 =

632 (
i
 !(
sym_nd©asyms
 - 1)

633 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

634 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

638 
syms_lﬂded
 = 
TRUE
;

639 
	}
}

643 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

644 
FILE
 *
fd
)

646 
	`myÂrötf
(
fd
,

648 
sym
->
«me
,

649 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

650 
sym
->
öôülized
 ? "y" : "n",

651 
sym
->
pub
 ? "y" : "n",

652 
sym
->
loˇl
 ? "y" : "n",

653 
sym
->
addr
,

654 
sym
->
size
);

655 
	}
}

659 
	$sym_dumpsyms
(
FILE
 *
fd
)

661 
i
;

663 
i
=0; i < 
sym_nsyms
; i++)

664 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

665 
	}
}

669 
	$sym_dump°©e
(
FILE
 *
fd
)

671 
i
;

673 i‡(
fd
 =
NULL
)

674 
fd
 = 
°dîr
;

676 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

677 
i
=0; i < 
sym_nsyms
; i++)

678 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

680 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

681 
i
=0; i < 
sym_nsyms
; i++)

682 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

684 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

685 
i
=0; i < 
sym_¡extsyms
; i++)

686 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

688 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

689 
i
=0; i < 
sym_¡extsyms
; i++)

690 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

692 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

693 
i
=0; i < 
sym_nd©asyms
; i++)

694 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

696 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

697 
i
=0; i < 
sym_nd©asyms
; i++)

698 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

699 
	}
}

705 
sym_sym_t
 *

706 
	$sym_böd_addr
(
md_addr_t
 
addr
,

707 *
pödex
,

708 
exa˘
,

709 
sym_db_t
 
db
)

711 
nsyms
, 
low
, 
high
, 
pos
;

712 
sym_sym_t
 **
syms
;

714 
db
)

716 
sdb_™y
:

717 
syms
 = 
sym_syms
;

718 
nsyms
 = 
sym_nsyms
;

720 
sdb_ãxt
:

721 
syms
 = 
sym_ãxtsyms
;

722 
nsyms
 = 
sym_¡extsyms
;

724 
sdb_d©a
:

725 
syms
 = 
sym_d©asyms
;

726 
nsyms
 = 
sym_nd©asyms
;

729 
	`∑nic
("bogus symbol database");

733 i‡(!
nsyms
)

735 i‡(
pödex
)

736 *
pödex
 = -1;

737  
NULL
;

741 
low
 = 0;

742 
high
 = 
nsyms
-1;

743 
pos
 = (
low
 + 
high
) >> 1;

745 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

747 || (!
exa˘


748 && 
syms
[
pos
]->
addr
 <=áddr

749 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

751 i‡(
addr
 < 
syms
[
pos
]->addr)

752 
high
 = 
pos
 - 1;

754 
low
 = 
pos
 + 1;

755 i‡(
high
 >
low
)

756 
pos
 = (
low
 + 
high
) >> 1;

759 i‡(
pödex
)

760 *
pödex
 = -1;

761  
NULL
;

766 i‡(
pödex
)

767 *
pödex
 = 
pos
;

768  
syms
[
pos
];

769 
	}
}

774 
sym_sym_t
 *

775 
	$sym_böd_«me
(*
«me
,

776 *
pödex
,

777 
sym_db_t
 
db
)

779 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

780 
sym_sym_t
 **
syms
;

782 
db
)

784 
sdb_™y
:

785 
syms
 = 
sym_syms_by_«me
;

786 
nsyms
 = 
sym_nsyms
;

788 
sdb_ãxt
:

789 
syms
 = 
sym_ãxtsyms_by_«me
;

790 
nsyms
 = 
sym_¡extsyms
;

792 
sdb_d©a
:

793 
syms
 = 
sym_d©asyms_by_«me
;

794 
nsyms
 = 
sym_nd©asyms
;

797 
	`∑nic
("bogus symbol database");

801 i‡(!
nsyms
)

803 i‡(
pödex
)

804 *
pödex
 = -1;

805  
NULL
;

809 
low
 = 0;

810 
high
 = 
nsyms
-1;

811 
pos
 = (
low
 + 
high
) >> 1;

812 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

814 i‡(
cmp
 > 0)

815 
high
 = 
pos
 - 1;

817 
low
 = 
pos
 + 1;

818 i‡(
high
 >
low
)

819 
pos
 = (
low
 + 
high
) >> 1;

822 i‡(
pödex
)

823 *
pödex
 = -1;

824  
NULL
;

829 i‡(
pödex
)

830 *
pödex
 = 
pos
;

831  
syms
[
pos
];

832 
	}
}

	@target-alpha/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

57 #i‚de‡
MIN_SYSCALL_MODE


58 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

59 
	#MIN_SYSCALL_MODE


	)

64 #ifde‡
_MSC_VER


65 
	~<io.h
>

67 
	~<uni°d.h
>

69 
	~<f˙é.h
>

70 
	~<sys/ty≥s.h
>

71 #i‚de‡
_MSC_VER


72 
	~<sys/∑øm.h
>

74 
	~<î∫o.h
>

75 
	~<time.h
>

76 #i‚de‡
_MSC_VER


77 
	~<sys/time.h
>

79 #i‚de‡
_MSC_VER


80 
	~<sys/ªsour˚.h
>

82 
	~<sig«l.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/fûe.h
>

86 
	~<sys/°©.h
>

87 #i‚de‡
_MSC_VER


88 
	~<sys/uio.h
>

90 
	~<£tjmp.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/times.h
>

94 
	~<limôs.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/io˘l.h
>

98 #i‡
deföed
(
löux
)

99 
	~<utime.h
>

100 
	~<dúít.h
>

101 
	~<sys/vfs.h
>

103 #i‡
deföed
(
_AIX
)

104 
	~<sys/°©fs.h
>

106 #i‚de‡
_MSC_VER


107 
	~<sys/mou¡.h
>

110 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

111 #i‚de‡
_MSC_VER


112 
	~<sys/£À˘.h
>

115 #ifde‡
löux


116 
	~<sgây.h
>

117 
	~<√töë/t˝.h
>

118 
	~<√töë/udp.h
>

119 
	~<√töë/ö.h
>

122 #i‡
deföed
(
__svr4__
)

123 
	~<sys/dúít.h
>

124 
	~<sys/fûio.h
>

125 #ñi‡
deföed
(
__osf__
)

126 
	~<dúít.h
>

131 
gëdúíåõs
(
fd
, *
buf
, 
nbyãs
, *
ba£p
);

134 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

135 
	~<sys/°©vfs.h
>

136 
	#°©fs
 
°©vfs


	)

137 
	~<sys/time.h
>

138 
	~<utime.h
>

139 
	~<sgây.h
>

140 
	~<√töë/ö.h
>

141 
	~<√töë/t˝.h
>

144 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

145 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

146 
	~<dúít.h
>

148 
	~<sys/dú.h
>

152 #unde‡
NL0


153 #unde‡
NL1


154 #unde‡
CR0


155 #unde‡
CR1


156 #unde‡
CR2


157 #unde‡
CR3


158 #unde‡
TAB0


159 #unde‡
TAB1


160 #unde‡
TAB2


161 #unde‡
XTABS


162 #unde‡
BS0


163 #unde‡
BS1


164 #unde‡
FF0


165 #unde‡
FF1


166 #unde‡
ECHO


167 #unde‡
NOFLSH


168 #unde‡
TOSTOP


169 #unde‡
FLUSHO


170 #unde‡
PENDIN


173 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

174 #unde‡
CR0


177 #ifde‡
__FªeBSD__


178 
	~<sys/io˘l_com∑t.h
>

180 #i‚de‡
_MSC_VER


181 
	~<ãrmio.h
>

185 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

187 #unde‡
HUPCL


188 #unde‡
ECHO


189 #unde‡
B50


190 #unde‡
B75


191 #unde‡
B110


192 #unde‡
B134


193 #unde‡
B150


194 #unde‡
B200


195 #unde‡
B300


196 #unde‡
B600


197 #unde‡
B1200


198 #unde‡
B1800


199 #unde‡
B2400


200 #unde‡
B4800


201 #unde‡
B9600


202 #unde‡
B19200


203 #unde‡
B38400


204 #unde‡
NL0


205 #unde‡
NL1


206 #unde‡
CR0


207 #unde‡
CR1


208 #unde‡
CR2


209 #unde‡
CR3


210 #unde‡
TAB0


211 #unde‡
TAB1


212 #unde‡
BS0


213 #unde‡
BS1


214 #unde‡
FF0


215 #unde‡
FF1


216 #unde‡
EXTA


217 #unde‡
EXTB


218 #unde‡
B900


219 #unde‡
B3600


220 #unde‡
B7200


221 #unde‡
XTABS


222 
	~<sgây.h
>

223 
	~<utime.h
>

226 
	~<sys/sockë.h
>

227 
	~<sys/pﬁl.h
>

229 #ifde‡
_MSC_VER


230 
	#ac˚ss
 
_ac˚ss


	)

231 
	#chmod
 
_chmod


	)

232 
	#chdú
 
_chdú


	)

233 
	#u∆ök
 
_u∆ök


	)

234 
	#›í
 
_›í


	)

235 
	#¸ót
 
_¸ót


	)

236 
	#pùe
 
_pùe


	)

237 
	#dup
 
_dup


	)

238 
	#dup2
 
_dup2


	)

239 
	#°©
 
_°©


	)

240 
	#f°©
 
_f°©


	)

241 
	#l£ek
 
_l£ek


	)

242 
	#ªad
 
_ªad


	)

243 
	#wrôe
 
_wrôe


	)

244 
	#˛o£
 
_˛o£


	)

245 
	#gëpid
 
_gëpid


	)

246 
	#utime
 
_utime


	)

247 
	~<sys/utime.h
>

250 
	~"ho°.h
"

251 
	~"misc.h
"

252 
	~"machöe.h
"

253 
	~"ªgs.h
"

254 
	~"mem‹y.h
"

255 
	~"lﬂdî.h
"

256 
	~"sim.h
"

257 
	~"ídün.h
"

258 
	~"eio.h
"

259 
	~"sysˇŒ.h
"

261 
	#OSF_SYS_sysˇŒ
 0

	)

263 
	#OSF_SYS_f‹k
 2

	)

264 
	#OSF_SYS_ªad
 3

	)

266 
	#OSF_SYS_ﬁd_›í
 5

	)

267 
	#OSF_SYS_˛o£
 6

	)

268 
	#OSF_SYS_waô4
 7

	)

269 
	#OSF_SYS_ﬁd_¸ót
 8

	)

270 
	#OSF_SYS_lök
 9

	)

271 
	#OSF_SYS_u∆ök
 10

	)

272 
	#OSF_SYS_execv
 11

	)

273 
	#OSF_SYS_chdú
 12

	)

274 
	#OSF_SYS_fchdú
 13

	)

275 
	#OSF_SYS_mknod
 14

	)

276 
	#OSF_SYS_chmod
 15

	)

277 
	#OSF_SYS_chown
 16

	)

278 
	#OSF_SYS_obªak
 17

	)

279 
	#OSF_SYS_gëfs°©
 18

	)

280 
	#OSF_SYS_l£ek
 19

	)

281 
	#OSF_SYS_gëpid
 20

	)

282 
	#OSF_SYS_mou¡
 21

	)

283 
	#OSF_SYS_unmou¡
 22

	)

284 
	#OSF_SYS_£tuid
 23

	)

285 
	#OSF_SYS_gëuid
 24

	)

286 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

287 
	#OSF_SYS_±ø˚
 26

	)

288 #ifde‡ 
COMPAT_43


289 
	#OSF_SYS_ƒecvmsg
 27

	)

290 
	#OSF_SYS_n£ndmsg
 28

	)

291 
	#OSF_SYS_ƒecv‰om
 29

	)

292 
	#OSF_SYS_«c˚±
 30

	)

293 
	#OSF_SYS_ngë≥î«me
 31

	)

294 
	#OSF_SYS_ngësock«me
 32

	)

296 
	#OSF_SYS_ªcvmsg
 27

	)

297 
	#OSF_SYS_£ndmsg
 28

	)

298 
	#OSF_SYS_ªcv‰om
 29

	)

299 
	#OSF_SYS_ac˚±
 30

	)

300 
	#OSF_SYS_gë≥î«me
 31

	)

301 
	#OSF_SYS_gësock«me
 32

	)

303 
	#OSF_SYS_ac˚ss
 33

	)

304 
	#OSF_SYS_chÊags
 34

	)

305 
	#OSF_SYS_fchÊags
 35

	)

306 
	#OSF_SYS_sync
 36

	)

307 
	#OSF_SYS_kûl
 37

	)

308 
	#OSF_SYS_ﬁd_°©
 38

	)

309 
	#OSF_SYS_£çgid
 39

	)

310 
	#OSF_SYS_ﬁd_l°©
 40

	)

311 
	#OSF_SYS_dup
 41

	)

312 
	#OSF_SYS_pùe
 42

	)

313 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

314 
	#OSF_SYS_¥ofû
 44

	)

315 
	#OSF_SYS_›í
 45

	)

317 
	#OSF_SYS_gëgid
 47

	)

318 
	#OSF_SYS_sig¥ocmask
 48

	)

319 
	#OSF_SYS_gëlogö
 49

	)

320 
	#OSF_SYS_£éogö
 50

	)

321 
	#OSF_SYS_ac˘
 51

	)

322 
	#OSF_SYS_sig≥ndög
 52

	)

323 
	#OSF_SYS_io˘l
 54

	)

324 
	#OSF_SYS_ªboŸ
 55

	)

325 
	#OSF_SYS_ªvoke
 56

	)

326 
	#OSF_SYS_symlök
 57

	)

327 
	#OSF_SYS_ªadlök
 58

	)

328 
	#OSF_SYS_execve
 59

	)

329 
	#OSF_SYS_umask
 60

	)

330 
	#OSF_SYS_chroŸ
 61

	)

331 
	#OSF_SYS_ﬁd_f°©
 62

	)

332 
	#OSF_SYS_gëpgΩ
 63

	)

333 
	#OSF_SYS_gë∑gesize
 64

	)

334 
	#OSF_SYS_mªm≠
 65

	)

335 
	#OSF_SYS_vf‹k
 66

	)

336 
	#OSF_SYS_°©
 67

	)

337 
	#OSF_SYS_l°©
 68

	)

338 
	#OSF_SYS_sbrk
 69

	)

339 
	#OSF_SYS_s°k
 70

	)

340 
	#OSF_SYS_mm≠
 71

	)

341 
	#OSF_SYS_ovadvi£
 72

	)

342 
	#OSF_SYS_munm≠
 73

	)

343 
	#OSF_SYS_m¥Ÿe˘
 74

	)

344 
	#OSF_SYS_madvi£
 75

	)

345 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

346 
	#OSF_SYS_kmodˇŒ
 77

	)

347 
	#OSF_SYS_möc‹e
 78

	)

348 
	#OSF_SYS_gëgroups
 79

	)

349 
	#OSF_SYS_£tgroups
 80

	)

350 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

351 
	#OSF_SYS_£çgΩ
 82

	)

352 
	#OSF_SYS_£tôimî
 83

	)

353 
	#OSF_SYS_ﬁd_waô
 84

	)

354 
	#OSF_SYS_èbÀ
 85

	)

355 
	#OSF_SYS_gëôimî
 86

	)

356 
	#OSF_SYS_gëho°«me
 87

	)

357 
	#OSF_SYS_£tho°«me
 88

	)

358 
	#OSF_SYS_gëdèbÀsize
 89

	)

359 
	#OSF_SYS_dup2
 90

	)

360 
	#OSF_SYS_f°©
 91

	)

361 
	#OSF_SYS_f˙é
 92

	)

362 
	#OSF_SYS_£À˘
 93

	)

363 
	#OSF_SYS_pﬁl
 94

	)

364 
	#OSF_SYS_fsync
 95

	)

365 
	#OSF_SYS_£çri‹ôy
 96

	)

366 
	#OSF_SYS_sockë
 97

	)

367 
	#OSF_SYS_c⁄√˘
 98

	)

368 #ifde‡ 
COMPAT_43


369 
	#OSF_SYS_ac˚±
 99

	)

371 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

373 
	#OSF_SYS_gë¥i‹ôy
 100

	)

374 #ifde‡ 
COMPAT_43


375 
	#OSF_SYS_£nd
 101

	)

376 
	#OSF_SYS_ªcv
 102

	)

378 
	#OSF_SYS_ﬁd_£nd
 101

	)

379 
	#OSF_SYS_ﬁd_ªcv
 102

	)

381 
	#OSF_SYS_sigªtu∫
 103

	)

382 
	#OSF_SYS_böd
 104

	)

383 
	#OSF_SYS_£tsock›t
 105

	)

384 
	#OSF_SYS_li°í
 106

	)

385 
	#OSF_SYS_∂ock
 107

	)

386 
	#OSF_SYS_ﬁd_sigvec
 108

	)

387 
	#OSF_SYS_ﬁd_sigblock
 109

	)

388 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

389 
	#OSF_SYS_sigsu•íd
 111

	)

390 
	#OSF_SYS_sig°ack
 112

	)

391 #ifde‡ 
COMPAT_43


392 
	#OSF_SYS_ªcvmsg
 113

	)

393 
	#OSF_SYS_£ndmsg
 114

	)

395 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

396 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

399 
	#OSF_SYS_gëtimeofday
 116

	)

400 
	#OSF_SYS_gërußge
 117

	)

401 
	#OSF_SYS_gësock›t
 118

	)

402 
	#OSF_SYS_ªadv
 120

	)

403 
	#OSF_SYS_wrôev
 121

	)

404 
	#OSF_SYS_£âimeofday
 122

	)

405 
	#OSF_SYS_fchown
 123

	)

406 
	#OSF_SYS_fchmod
 124

	)

407 #ifde‡ 
COMPAT_43


408 
	#OSF_SYS_ªcv‰om
 125

	)

410 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

412 
	#OSF_SYS_£åeuid
 126

	)

413 
	#OSF_SYS_£åegid
 127

	)

414 
	#OSF_SYS_ª«me
 128

	)

415 
	#OSF_SYS_åunˇã
 129

	)

416 
	#OSF_SYS_·runˇã
 130

	)

417 
	#OSF_SYS_Êock
 131

	)

418 
	#OSF_SYS_£tgid
 132

	)

419 
	#OSF_SYS_£ndto
 133

	)

420 
	#OSF_SYS_shutdown
 134

	)

421 
	#OSF_SYS_sockë∑ú
 135

	)

422 
	#OSF_SYS_mkdú
 136

	)

423 
	#OSF_SYS_rmdú
 137

	)

424 
	#OSF_SYS_utimes
 138

	)

426 
	#OSF_SYS_adjtime
 140

	)

427 #ifde‡ 
COMPAT_43


428 
	#OSF_SYS_gë≥î«me
 141

	)

430 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

432 
	#OSF_SYS_gëho°id
 142

	)

433 
	#OSF_SYS_£tho°id
 143

	)

434 
	#OSF_SYS_gëæimô
 144

	)

435 
	#OSF_SYS_£ålimô
 145

	)

436 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

437 
	#OSF_SYS_£tsid
 147

	)

438 
	#OSF_SYS_quŸa˘l
 148

	)

439 
	#OSF_SYS_ﬁdquŸa
 149

	)

440 #ifde‡ 
COMPAT_43


441 
	#OSF_SYS_gësock«me
 150

	)

443 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

445 
	#OSF_SYS_pid_block
 153

	)

446 
	#OSF_SYS_pid_unblock
 154

	)

447 
	#OSF_SYS_siga˘i⁄
 156

	)

448 
	#OSF_SYS_sigwaô¥im
 157

	)

449 
	#OSF_SYS_nfssvc
 158

	)

450 
	#OSF_SYS_gëdúíåõs
 159

	)

451 
	#OSF_SYS_°©fs
 160

	)

452 
	#OSF_SYS_f°©fs
 161

	)

453 
	#OSF_SYS_async_d´m⁄
 163

	)

454 
	#OSF_SYS_gëfh
 164

	)

455 
	#OSF_SYS_gëdomaö«me
 165

	)

456 
	#OSF_SYS_£tdomaö«me
 166

	)

457 
	#OSF_SYS_exp‹tfs
 169

	)

458 
	#OSF_SYS_Æt_∂ock
 181

	)

459 
	#OSF_SYS_gëm¡
 184

	)

460 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

461 
	#OSF_SYS_Æt_£tsid
 188

	)

462 
	#OSF_SYS_sw≠⁄
 199

	)

463 
	#OSF_SYS_msg˘l
 200

	)

464 
	#OSF_SYS_msggë
 201

	)

465 
	#OSF_SYS_msgrcv
 202

	)

466 
	#OSF_SYS_msg¢d
 203

	)

467 
	#OSF_SYS_£m˘l
 204

	)

468 
	#OSF_SYS_£mgë
 205

	)

469 
	#OSF_SYS_£m›
 206

	)

470 
	#OSF_SYS_u«me
 207

	)

471 
	#OSF_SYS_lchown
 208

	)

472 
	#OSF_SYS_shm©
 209

	)

473 
	#OSF_SYS_shm˘l
 210

	)

474 
	#OSF_SYS_shmdt
 211

	)

475 
	#OSF_SYS_shmgë
 212

	)

476 
	#OSF_SYS_mvÆid
 213

	)

477 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

478 
	#OSF_SYS_m¶ìp
 215

	)

479 
	#OSF_SYS_mwakeup
 216

	)

480 
	#OSF_SYS_msync
 217

	)

481 
	#OSF_SYS_sig«l
 218

	)

482 
	#OSF_SYS_utc_gëtime
 219

	)

483 
	#OSF_SYS_utc_adjtime
 220

	)

484 
	#OSF_SYS_£curôy
 222

	)

485 
	#OSF_SYS_klﬂdˇŒ
 223

	)

486 
	#OSF_SYS_gëpgid
 233

	)

487 
	#OSF_SYS_gësid
 234

	)

488 
	#OSF_SYS_sigÆt°ack
 235

	)

489 
	#OSF_SYS_waôid
 236

	)

490 
	#OSF_SYS_¥io˙é£t
 237

	)

491 
	#OSF_SYS_sig£nd£t
 238

	)

492 
	#OSF_SYS_£t_•ecuœtive
 239

	)

493 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

494 
	#OSF_SYS_sysöfo
 241

	)

495 
	#OSF_SYS_uadmö
 242

	)

496 
	#OSF_SYS_fu£r
 243

	)

497 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

498 
	#OSF_SYS_¡p_adjtime
 245

	)

499 
	#OSF_SYS_¡p_gëtime
 246

	)

500 
	#OSF_SYS_∑thc⁄f
 247

	)

501 
	#OSF_SYS_Â©hc⁄f
 248

	)

502 
	#OSF_SYS_uswôch
 250

	)

503 
	#OSF_SYS_u¶ìp_thªad
 251

	)

504 
	#OSF_SYS_aud˙é
 252

	)

505 
	#OSF_SYS_audgí
 253

	)

506 
	#OSF_SYS_sysfs
 254

	)

507 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

508 
	#OSF_SYS_gësysöfo
 256

	)

509 
	#OSF_SYS_£tsysöfo
 257

	)

510 
	#OSF_SYS_afs_sysˇŒ
 258

	)

511 
	#OSF_SYS_sw≠˘l
 259

	)

512 
	#OSF_SYS_mem˙é
 260

	)

513 
	#OSF_SYS_fd©async
 261

	)

516 
	sxœã_èbÀ_t


518 
	mèrgë_vÆ
;

519 
	mho°_vÆ
;

523 
	$xœã_¨g
(
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

525 
i
;

527 
i
=0; i < 
m≠_sz
; i++)

529 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

530  
m≠
[
i
].
ho°_vÆ
;

534 
	`w¨n
("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

535  
èrgë_vÆ
;

536 
	}
}

540 
	#MAXBUFSIZE
 1024

	)

546 
	#NUM_IOCTL_BYTES
 128

	)

549 
	#OSF_TIOCGETP
 0x40067408

	)

550 
	#OSF_FIONREAD
 0x4004667f

	)

554 
	sosf_°©buf


556 
w‹d_t
 
	mosf_°_dev
;

557 
w‹d_t
 
	mosf_°_öo
;

558 
w‹d_t
 
	mosf_°_mode
;

559 
hÆf_t
 
	mosf_°_∆ök
;

560 
hÆf_t
 
	m∑d0
;

561 
w‹d_t
 
	mosf_°_uid
;

562 
w‹d_t
 
	mosf_°_gid
;

563 
w‹d_t
 
	mosf_°_rdev
;

564 
w‹d_t
 
	m∑d1
;

565 
qw‹d_t
 
	mosf_°_size
;

566 
w‹d_t
 
	mosf_°_©ime
;

567 
w‹d_t
 
	mosf_°_•¨e1
;

568 
w‹d_t
 
	mosf_°_mtime
;

569 
w‹d_t
 
	mosf_°_•¨e2
;

570 
w‹d_t
 
	mosf_°_˘ime
;

571 
w‹d_t
 
	mosf_°_•¨e3
;

572 
w‹d_t
 
	mosf_°_blksize
;

573 
w‹d_t
 
	mosf_°_blocks
;

574 
w‹d_t
 
	mosf_°_gínum
;

575 
w‹d_t
 
	mosf_°_•¨e4
;

578 
	sosf_sgâyb
 {

579 
byã_t
 
	msg_i•ìd
;

580 
byã_t
 
	msg_o•ìd
;

581 
byã_t
 
	msg_îa£
;

582 
byã_t
 
	msg_kûl
;

583 
shÆf_t
 
	msg_Êags
;

586 
	#OSF_NSIG
 32

	)

588 
	#OSF_SIG_BLOCK
 1

	)

589 
	#OSF_SIG_UNBLOCK
 2

	)

590 
	#OSF_SIG_SETMASK
 3

	)

592 
	sosf_sigc⁄ãxt
 {

593 
qw‹d_t
 
	msc_⁄°ack
;

594 
qw‹d_t
 
	msc_mask
;

595 
qw‹d_t
 
	msc_pc
;

596 
qw‹d_t
 
	msc_ps
;

597 
qw‹d_t
 
	msc_ªgs
[32];

598 
qw‹d_t
 
	msc_ow√dÂ
;

599 
qw‹d_t
 
	msc_Âªgs
[32];

600 
qw‹d_t
 
	msc_Â¸
;

601 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

604 
	sosf_°©fs
 {

605 
shÆf_t
 
	mf_ty≥
;

606 
shÆf_t
 
	mf_Êags
;

607 
w‹d_t
 
	mf_fsize
;

608 
w‹d_t
 
	mf_bsize
;

609 
w‹d_t
 
	mf_blocks
;

611 
w‹d_t
 
	mf_b‰ì
;

612 
w‹d_t
 
	mf_bavaû
;

613 
w‹d_t
 
	mf_fûes
;

614 
w‹d_t
 
	mf_f‰ì
;

615 
qw‹d_t
 
	mf_fsid
;

616 
w‹d_t
 
	mf_•¨e
[9];

619 
	sosf_timevÆ


621 
sw‹d_t
 
	mosf_tv_£c
;

622 
sw‹d_t
 
	mosf_tv_u£c
;

625 
	sosf_timez⁄e


627 
sw‹d_t
 
	mosf_tz_möuãswe°
;

628 
sw‹d_t
 
	mosf_tz_d°time
;

633 
	sosf_rußge


635 
osf_timevÆ
 
	mosf_ru_utime
;

636 
osf_timevÆ
 
	mosf_ru_°ime
;

637 
sw‹d_t
 
	mosf_ru_maxrss
;

638 
sw‹d_t
 
	mosf_ru_ixrss
;

639 
sw‹d_t
 
	mosf_ru_idrss
;

640 
sw‹d_t
 
	mosf_ru_i§ss
;

641 
sw‹d_t
 
	mosf_ru_möÊt
;

642 
sw‹d_t
 
	mosf_ru_majÊt
;

643 
sw‹d_t
 
	mosf_ru_nsw≠
;

644 
sw‹d_t
 
	mosf_ru_öblock
;

645 
sw‹d_t
 
	mosf_ru_oublock
;

646 
sw‹d_t
 
	mosf_ru_msg¢d
;

647 
sw‹d_t
 
	mosf_ru_msgrcv
;

648 
sw‹d_t
 
	mosf_ru_nsig«ls
;

649 
sw‹d_t
 
	mosf_ru_nvcsw
;

650 
sw‹d_t
 
	mosf_ru_nivcsw
;

653 
	sosf_æimô


655 
qw‹d_t
 
	mosf_æim_cur
;

656 
qw‹d_t
 
	mosf_æim_max
;

659 
	sosf_sockaddr


661 
hÆf_t
 
	mß_Ámûy
;

662 
byã_t
 
	mß_d©a
[24];

665 
	sosf_iovec


667 
md_addr_t
 
	miov_ba£
;

668 
w‹d_t
 
	miov_Àn
;

669 
w‹d_t
 
	m∑d
;

673 
	#OSF_DIRENT_SZ
(
STR
) \

674 ((
w‹d_t
Ë+ 2*(
hÆf_t
Ë+ (((
	`°æí
(
STR
Ë+ 1Ë+ 3)/4)*4)

	)

677 
	sosf_dúít


679 
w‹d_t
 
	md_öo
;

680 
hÆf_t
 
	md_ª˛í
;

681 
hÆf_t
 
	md_«mÀn
;

682 
	md_«me
[256];

692 
	#OSF_O_RDONLY
 0x0000

	)

693 
	#OSF_O_WRONLY
 0x0001

	)

694 
	#OSF_O_RDWR
 0x0002

	)

695 
	#OSF_O_NONBLOCK
 0x0004

	)

696 
	#OSF_O_APPEND
 0x0008

	)

697 
	#OSF_O_CREAT
 0x0200

	)

698 
	#OSF_O_TRUNC
 0x0400

	)

699 
	#OSF_O_EXCL
 0x0800

	)

700 
	#OSF_O_NOCTTY
 0x1000

	)

701 
	#OSF_O_SYNC
 0x4000

	)

705 
	mosf_Êag
;

706 
	mloˇl_Êag
;

707 } 
	gosf_Êag_èbÀ
[] = {

709 #ifde‡
_MSC_VER


710 { 
OSF_O_RDONLY
, 
_O_RDONLY
 },

711 { 
OSF_O_WRONLY
, 
_O_WRONLY
 },

712 { 
OSF_O_RDWR
, 
_O_RDWR
 },

713 { 
OSF_O_APPEND
, 
_O_APPEND
 },

714 { 
OSF_O_CREAT
, 
_O_CREAT
 },

715 { 
OSF_O_TRUNC
, 
_O_TRUNC
 },

716 { 
OSF_O_EXCL
, 
_O_EXCL
 },

717 #ifde‡
_O_NONBLOCK


718 { 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
 },

720 #ifde‡
_O_NOCTTY


721 { 
OSF_O_NOCTTY
, 
_O_NOCTTY
 },

723 #ifde‡
_O_SYNC


724 { 
OSF_O_SYNC
, 
_O_SYNC
 },

727 { 
OSF_O_RDONLY
, 
O_RDONLY
 },

728 { 
OSF_O_WRONLY
, 
O_WRONLY
 },

729 { 
OSF_O_RDWR
, 
O_RDWR
 },

730 { 
OSF_O_APPEND
, 
O_APPEND
 },

731 { 
OSF_O_CREAT
, 
O_CREAT
 },

732 { 
OSF_O_TRUNC
, 
O_TRUNC
 },

733 { 
OSF_O_EXCL
, 
O_EXCL
 },

734 { 
OSF_O_NONBLOCK
, 
O_NONBLOCK
 },

735 { 
OSF_O_NOCTTY
, 
O_NOCTTY
 },

736 #ifde‡
O_SYNC


737 { 
OSF_O_SYNC
, 
O_SYNC
 },

741 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

743 
qw‹d_t
 
	gsigmask
 = 0;

745 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] =

749 
	#OSF_SO_DEBUG
 0x0001

	)

750 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

751 
	#OSF_SO_REUSEADDR
 0x0004

	)

752 
	#OSF_SO_KEEPALIVE
 0x0008

	)

753 
	#OSF_SO_DONTROUTE
 0x0010

	)

754 
	#OSF_SO_BROADCAST
 0x0020

	)

755 
	#OSF_SO_USELOOPBACK
 0x0040

	)

756 
	#OSF_SO_LINGER
 0x0080

	)

757 
	#OSF_SO_OOBINLINE
 0x0100

	)

758 
	#OSF_SO_REUSEPORT
 0x0200

	)

760 
xœã_èbÀ_t
 
	gsock›t_m≠
[] =

762 { 
OSF_SO_DEBUG
, 
SO_DEBUG
 },

763 #ifde‡
SO_ACCEPTCONN


764 { 
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
 },

766 { 
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
 },

767 { 
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
 },

768 { 
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
 },

769 { 
OSF_SO_BROADCAST
, 
SO_BROADCAST
 },

770 #ifde‡
SO_USELOOPBACK


771 { 
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
 },

773 { 
OSF_SO_LINGER
, 
SO_LINGER
 },

774 { 
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
 },

775 #ifde‡
SO_REUSEPORT


776 { 
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
 }

781 
	#OSF_TCP_NODELAY
 0x01

	)

782 
	#OSF_TCP_MAXSEG
 0x02

	)

783 
	#OSF_TCP_RPTR2RXT
 0x03

	)

784 
	#OSF_TCP_KEEPIDLE
 0x04

	)

785 
	#OSF_TCP_KEEPINTVL
 0x05

	)

786 
	#OSF_TCP_KEEPCNT
 0x06

	)

787 
	#OSF_TCP_KEEPINIT
 0x07

	)

788 
	#OSF_TCP_PUSH
 0x08

	)

789 
	#OSF_TCP_NODELACK
 0x09

	)

791 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] =

793 { 
OSF_TCP_NODELAY
, 
TCP_NODELAY
 },

794 { 
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
 },

795 #ifde‡
TCP_RPTR2RXT


796 { 
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
 },

798 #ifde‡
TCP_KEEPIDLE


799 { 
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
 },

801 #ifde‡
TCP_KEEPINTVL


802 { 
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
 },

804 #ifde‡
TCP_KEEPCNT


805 { 
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
 },

807 #ifde‡
TCP_KEEPINIT


808 { 
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
 },

810 #ifde‡
TCP_PUSH


811 { 
OSF_TCP_PUSH
, 
TCP_PUSH
 },

813 #ifde‡
TCP_NODELACK


814 { 
OSF_TCP_NODELACK
, 
TCP_NODELACK
 }

819 
	#OSF_SOL_SOCKET
 0xfff‡

	)

820 
	#OSF_SOL_IP
 0

	)

821 
	#OSF_SOL_TCP
 6

	)

822 
	#OSF_SOL_UDP
 17

	)

824 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] =

826 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

827 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

828 { 
OSF_SOL_IP
, 
IPPROTO_IP
 },

829 { 
OSF_SOL_TCP
, 
IPPROTO_TCP
 },

830 { 
OSF_SOL_UDP
, 
IPPROTO_UDP
 }

832 { 
OSF_SOL_SOCKET
, 
SOL_SOCKET
 },

833 { 
OSF_SOL_IP
, 
SOL_IP
 },

834 { 
OSF_SOL_TCP
, 
SOL_TCP
 },

835 { 
OSF_SOL_UDP
, 
SOL_UDP
 }

840 
	#OSF_AF_UNSPEC
 0

	)

841 
	#OSF_AF_UNIX
 1

	)

842 
	#OSF_AF_INET
 2

	)

843 
	#OSF_AF_IMPLINK
 3

	)

844 
	#OSF_AF_PUP
 4

	)

845 
	#OSF_AF_CHAOS
 5

	)

846 
	#OSF_AF_NS
 6

	)

847 
	#OSF_AF_ISO
 7

	)

849 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] =

851 { 
OSF_AF_UNSPEC
, 
AF_UNSPEC
 },

852 { 
OSF_AF_UNIX
, 
AF_UNIX
 },

853 { 
OSF_AF_INET
, 
AF_INET
 },

854 #ifde‡
AF_IMPLINK


855 { 
OSF_AF_IMPLINK
, 
AF_IMPLINK
 },

857 #ifde‡
AF_PUP


858 { 
OSF_AF_PUP
, 
AF_PUP
 },

860 #ifde‡
AF_CHAOS


861 { 
OSF_AF_CHAOS
, 
AF_CHAOS
 },

863 #ifde‡
AF_NS


864 { 
OSF_AF_NS
, 
AF_NS
 },

866 #ifde‡
AF_ISO


867 { 
OSF_AF_ISO
, 
AF_ISO
 }

872 
	#OSF_SOCK_STREAM
 1

	)

873 
	#OSF_SOCK_DGRAM
 2

	)

874 
	#OSF_SOCK_RAW
 3

	)

875 
	#OSF_SOCK_RDM
 4

	)

876 
	#OSF_SOCK_SEQPACKET
 5

	)

878 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] =

880 { 
OSF_SOCK_STREAM
, 
SOCK_STREAM
 },

881 { 
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
 },

882 { 
OSF_SOCK_RAW
, 
SOCK_RAW
 },

883 { 
OSF_SOCK_RDM
, 
SOCK_RDM
 },

884 { 
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
 }

888 
	#OSF_TBL_SYSINFO
 12

	)

889 
	sosf_tbl_sysöfo


891 
	msi_u£r
;

892 
	msi_ni˚
;

893 
	msi_sys
;

894 
	msi_idÀ
;

895 
	msi_hz
;

896 
	msi_phz
;

897 
	msi_boŸtime
;

898 
	mwaô
;

913 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

914 
mem_ac˚ss_‚
 
mem_‚
,

915 
mem_t
 *
mem
,

916 
md_ö°_t
 
ö°
,

917 
åa˚abÀ
)

919 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

922 i‡(
syscode
 =
OSF_SYS_sysˇŒ
)

923 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

926 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

928 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

931 i‡(
syscode
 =
OSF_SYS_sigªtu∫
)

933 
i
;

934 
osf_sigc⁄ãxt
 
sc
;

935 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

937 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
sc_addr
,

938 &
sc
, (
osf_sigc⁄ãxt
));

939 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

940 
i
=0; i < 32; ++i)

941 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

942 
i
=0; i < 32; ++i)

943 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

944 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

952 
syscode
)

954 
OSF_SYS_exô
:

956 
	`l⁄gjmp
(
sim_exô_buf
,

957  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

960 
OSF_SYS_ªad
:

962 *
buf
;

965 i‡(!(
buf
 =

966 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

967 
	`Áèl
("out of memory in SYS_read");

971  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

972 
	`ªad
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,

973  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

974 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

975 && 
î∫o
 =
EAGAIN
);

978 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

979 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

982 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

983 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

987 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

988  
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
]);

991 
	`‰ì
(
buf
);

995 
OSF_SYS_wrôe
:

997 *
buf
;

1000 i‡(!(
buf
 =

1001 (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], ())))

1002 
	`Áèl
("out of memory in SYS_write");

1005 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,

1006  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1009 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

1013  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1014 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
sim_¥ogfd
);

1021  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1022 
	`wrôe
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1023 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1024 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

1025 && 
î∫o
 =
EAGAIN
);

1029 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] =ªgs->ªgs_R[
MD_REG_A2
])

1030 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1033 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1034 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1038 
	`‰ì
(
buf
);

1042 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1044 
OSF_SYS_gëdomaö«me
:

1047 *
buf
;

1049 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1050 i‡(!
buf
)

1051 
	`Áèl
("out of virtual memory in gethostname()");

1053  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1054 
	`gëdomaö«me
–
buf
,

1055  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1058 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1059 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1062 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1063 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1067 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1068  
ªgs
->
ªgs_R
[
MD_REG_A0
],

1069 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1074 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1076 
OSF_SYS_Êock
:

1079 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1080 
	`Êock
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1081  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1084 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1085 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1088 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1089 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1095 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1097 
OSF_SYS_böd
:

1099 c⁄° 
sockaddr
 
a_sock
;

1101 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1102 (*)&
a_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1104 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1105 
	`böd
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1106 &
a_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1109 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1110 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1113 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1114 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1120 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1122 
OSF_SYS_£ndto
:

1124 *
buf
 = 
NULL
;

1125 
sockaddr
 
d_sock
;

1126 
buf_Àn
 = 0;

1128 
buf_Àn
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1130 i‡(
buf_Àn
 > 0)

1131 
buf
 = (*Ë
	`mÆloc
(
buf_Àn
*());

1133 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1134 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1136 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1137 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1138 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1140 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1141 
	`£ndto
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1142 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1143 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
],

1144 &
d_sock
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1146 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1147 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1150 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

1151 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1152 &
d_sock
, ()
ªgs
->
ªgs_R
[
MD_REG_A5
]);

1155 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1156 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1159 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1160 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1163 i‡(
buf
 !
NULL
)

1164 
	`‰ì
(
buf
);

1169 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1171 
OSF_SYS_ﬁd_ªcv‰om
:

1172 
OSF_SYS_ªcv‰om
:

1174 
addr_Àn
;

1175 *
buf
;

1176 
sockaddr
 *
a_sock
;

1178 
buf
 = (*Ë
	`mÆloc
(()*
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1180 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1181 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1183 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1184 &
addr_Àn
, ());

1186 
a_sock
 = (
sockaddr
 *)
	`mÆloc
(
addr_Àn
);

1188 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1189 
a_sock
, 
addr_Àn
);

1191 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1192 
	`ªcv‰om
((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

1193 
buf
,(Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

1194 (Ë
ªgs
->
ªgs_R
[
MD_REG_A3
], 
a_sock
,&
addr_Àn
);

1196 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1197 
buf
, (Ë
ªgs
->
ªgs_R
[
MD_REG_V0
]);

1199 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A5
],

1200 &
addr_Àn
, ());

1202 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
],

1203 
a_sock
, 
addr_Àn
);

1206 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1207 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1210 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1211 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1213 i‡(
buf
 !
NULL
)

1214 
	`‰ì
(
buf
);

1219 
OSF_SYS_›í
:

1221 
buf
[
MAXBUFSIZE
];

1222 
i
;

1223 
osf_Êags
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
loˇl_Êags
 = 0;

1226 
i
=0; i < 
OSF_NFLAGS
; i++)

1228 i‡(
osf_Êags
 & 
osf_Êag_èbÀ
[
i
].
osf_Êag
)

1230 
osf_Êags
 &~
osf_Êag_èbÀ
[
i
].
osf_Êag
;

1231 
loˇl_Êags
 |
osf_Êag_èbÀ
[
i
].
loˇl_Êag
;

1235 i‡(
osf_Êags
 != 0)

1236 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
osf_Êags
);

1239 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1242  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1243 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1246 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1247 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1250 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1251 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1256 
OSF_SYS_˛o£
:

1258 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0

1259 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1

1260 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 2)

1262 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1267 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`˛o£
–ªgs->ªgs_R[
MD_REG_A0
]);

1270 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1271 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1274 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1275 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1280 
OSF_SYS_¸ót
:

1282 
buf
[
MAXBUFSIZE
];

1285 
	`mem_°r˝y
(
mem_‚
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1288  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1289 
	`¸ót
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1292 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1293 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1296 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1297 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1303 
OSF_SYS_u∆ök
:

1305 
buf
[
MAXBUFSIZE
];

1308 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1311  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u∆ök
(
buf
);

1314 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1315 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1318 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1319 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1324 
OSF_SYS_chdú
:

1326 
buf
[
MAXBUFSIZE
];

1329 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1332  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`chdú
(
buf
);

1335 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1336 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1339 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1340 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1345 
OSF_SYS_chmod
:

1347 
buf
[
MAXBUFSIZE
];

1350 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1353  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1354 
	`chmod
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1357 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1358 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1361 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1362 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1367 
OSF_SYS_chown
:

1368 #ifde‡
_MSC_VER


1369 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

1370 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1373 
buf
[
MAXBUFSIZE
];

1376 
	`mem_°r˝y
(
mem_‚
, 
mem
,
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1379  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1380 
	`chown
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1381  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1384 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1385 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1388 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1389 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1395 
OSF_SYS_sbrk
:

1397 
sqw‹d_t
 
dñè
;

1398 
md_addr_t
 
addr
;

1400 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1401 
addr
 = 
ld_brk_poöt
 + 
dñè
;

1403 i‡(
vîbo£
)

1404 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

1406 
ld_brk_poöt
 = 
addr
;

1407 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1408 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1410 i‡(
vîbo£
)

1411 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1415 i‡–
addr
 < 
ªgs
->
ªgs_R
[
MD_REG_SP
])

1417 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1418 
ld_brk_poöt
 = 
addr
;

1423 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1429 
OSF_SYS_obªak
:

1431 
md_addr_t
 
addr
;

1435 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

1437 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1439 i‡(
vîbo£
)

1440 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

1442 
ld_brk_poöt
 = 
addr
;

1443 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

1444 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1446 i‡(
vîbo£
)

1447 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

1451 
OSF_SYS_l£ek
:

1453 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1454 
	`l£ek
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

1455  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

1458 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1459 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1462 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1463 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1467 
OSF_SYS_gëpid
:

1469  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëpid
();

1472 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1473 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1476 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1477 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1481 
OSF_SYS_gëuid
:

1482 #ifde‡
_MSC_VER


1483 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

1484 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1487  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëuid
();

1488  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëeuid
();

1491 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1492 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1495 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1496 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1501 
OSF_SYS_ac˚ss
:

1503 
buf
[
MAXBUFSIZE
];

1506 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1509  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1510 
	`ac˚ss
(
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1513 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1514 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1517 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1518 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1523 
OSF_SYS_°©
:

1524 
OSF_SYS_l°©
:

1526 
buf
[
MAXBUFSIZE
];

1527 
osf_°©buf
 
osf_sbuf
;

1528 #ifde‡
_MSC_VER


1529 
_°©
 
sbuf
;

1531 
°©
 
sbuf
;

1535 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

1538 i‡(
syscode
 =
OSF_SYS_°©
)

1539  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©
(
buf
, &
sbuf
);

1542 #ifde‡
_MSC_VER


1543 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1544 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1547  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l°©
(
buf
, &
sbuf
);

1552 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1553 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1556 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1557 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1561 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1562 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1563 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1564 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1565 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1566 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1567 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1568 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1569 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1570 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1571 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1572 #i‚de‡
_MSC_VER


1573 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1574 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1578 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1579 &
osf_sbuf
, (
osf_°©buf
));

1583 
OSF_SYS_dup
:

1585  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup
–ªgs->ªgs_R[
MD_REG_A0
]);

1588 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1589 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1592 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1593 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1598 
OSF_SYS_pùe
:

1600 
fd
[2];

1603 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

1604 
fd
, (fd));

1607  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1610  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
fd
[0];

1611  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1614 i‡(
ªgs
->
ªgs_R
[7] =(
qw‹d_t
)-1)

1616 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1617 
ªgs
->
ªgs_R
[7] = 1;

1623 
OSF_SYS_gëgid
:

1624 #ifde‡
_MSC_VER


1625 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1626 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1629  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëgid
();

1630  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëegid
();

1633 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1634 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1637 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1638 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1643 
OSF_SYS_io˘l
:

1644  
ªgs
->
ªgs_R
[
MD_REG_A1
])

1646 #i‡!
	`deföed
(
TIOCGETP
Ë&& (deföed(
löux
Ë|| deföed(
__CYGWIN32__
))

1647 
OSF_TIOCGETP
:

1649 
ãrmios
 
lbuf
;

1650 
osf_sgâyb
 
buf
;

1652  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1653 
	`tcgë©å
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1654 &
lbuf
);

1657 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1658 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1659 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1660 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1661 
buf
.
sg_Êags
 = 0;

1663 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1664  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1665 (
osf_sgâyb
));

1667 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1668 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1671 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1672 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1677 #ifde‡
TIOCGETP


1678 
OSF_TIOCGETP
:

1680 
sgâyb
 
lbuf
;

1681 
osf_sgâyb
 
buf
;

1683  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1684 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1685  
TIOCGETP
,

1686 &
lbuf
);

1689 
buf
.
sg_i•ìd
 = 
lbuf
.sg_ispeed;

1690 
buf
.
sg_o•ìd
 = 
lbuf
.sg_ospeed;

1691 
buf
.
sg_îa£
 = 
lbuf
.sg_erase;

1692 
buf
.
sg_kûl
 = 
lbuf
.sg_kill;

1693 
buf
.
sg_Êags
 = 
lbuf
.sg_flags;

1694 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1695  
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,

1696 (
osf_sgâyb
));

1698 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1699 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1702 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1703 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1708 #ifde‡
FIONREAD


1709 
OSF_FIONREAD
:

1711 
ƒód
;

1713  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1714 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1715  
FIONREAD
,

1716  &
ƒód
);

1718 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1719  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1720 &
ƒód
, (nread));

1722 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1723 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1726 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1727 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1732 #ifde‡
FIONBIO


1733 
FIONBIO
:

1735 
¨g
 = 0;

1737 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1738 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

1739  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1740 &
¨g
, (arg));

1742 #ifde‡
NOTNOW


1743 
	`Ârötf
(
°dîr
, "FIONBIO: %d, %d\n",

1744 ()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1745 
¨g
);

1747  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1748 
	`io˘l
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

1749  
FIONBIO
,

1750  &
¨g
);

1752 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

1753 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1754  
ªgs
->
ªgs_R
[
MD_REG_A2
],

1755 &
¨g
, (arg));

1757 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1758 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1761 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1762 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1768 
	`w¨n
("unsupported ioctl call: ioctl(%ld, ...)",

1769 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1770 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1777 
buf
[
NUM_IOCTL_BYTES
];

1778 
loˇl_ªq
 = 0;

1781  
ªgs
->
ªgs_R
[
MD_REG_A1
]) {

1783 
SS_IOCTL_TIOCGETP
:

1784 
loˇl_ªq
 = 
TIOCGETP
;

1786 
SS_IOCTL_TIOCSETP
:

1787 
loˇl_ªq
 = 
TIOCSETP
;

1789 
SS_IOCTL_TCGETP
:

1790 
loˇl_ªq
 = 
TIOCGETP
;

1793 #ifde‡
TCGETA


1794 
SS_IOCTL_TCGETA
:

1795 
loˇl_ªq
 = 
TCGETA
;

1798 #ifde‡
TIOCGLTC


1799 
SS_IOCTL_TIOCGLTC
:

1800 
loˇl_ªq
 = 
TIOCGLTC
;

1803 #ifde‡
TIOCSLTC


1804 
SS_IOCTL_TIOCSLTC
:

1805 
loˇl_ªq
 = 
TIOCSLTC
;

1808 
SS_IOCTL_TIOCGWINSZ
:

1809 
loˇl_ªq
 = 
TIOCGWINSZ
;

1811 #ifde‡
TCSETAW


1812 
SS_IOCTL_TCSETAW
:

1813 
loˇl_ªq
 = 
TCSETAW
;

1816 #ifde‡
TIOCGETC


1817 
SS_IOCTL_TIOCGETC
:

1818 
loˇl_ªq
 = 
TIOCGETC
;

1821 #ifde‡
TIOCSETC


1822 
SS_IOCTL_TIOCSETC
:

1823 
loˇl_ªq
 = 
TIOCSETC
;

1826 #ifde‡
TIOCLBIC


1827 
SS_IOCTL_TIOCLBIC
:

1828 
loˇl_ªq
 = 
TIOCLBIC
;

1831 #ifde‡
TIOCLBIS


1832 
SS_IOCTL_TIOCLBIS
:

1833 
loˇl_ªq
 = 
TIOCLBIS
;

1836 #ifde‡
TIOCLGET


1837 
SS_IOCTL_TIOCLGET
:

1838 
loˇl_ªq
 = 
TIOCLGET
;

1841 #ifde‡
TIOCLSET


1842 
SS_IOCTL_TIOCLSET
:

1843 
loˇl_ªq
 = 
TIOCLSET
;

1848 i‡(!
loˇl_ªq
)

1852 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1853 
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

1854 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

1855 
ªgs
->
ªgs_R
[7] = 0;

1862 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1863 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1864 
buf
, 
NUM_IOCTL_BYTES
);

1867  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1868 
	`io˘l
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
loˇl_ªq
, 
buf
);

1871 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

1872 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

1873 
buf
, 
NUM_IOCTL_BYTES
);

1876 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1877 
ªgs
->
ªgs_R
[7] = 0;

1881 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1882 
ªgs
->
ªgs_R
[7] = 1;

1889 
OSF_SYS_f°©
:

1891 
osf_°©buf
 
osf_sbuf
;

1892 #ifde‡
_MSC_VER


1893 
_°©
 
sbuf
;

1895 
°©
 
sbuf
;

1899  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1900 
	`f°©
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sbuf
);

1903 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1904 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1907 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1908 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1912 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
(
sbuf
.
°_dev
);

1913 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1914 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
(
sbuf
.
°_mode
);

1915 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1916 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
(
sbuf
.
°_uid
);

1917 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
(
sbuf
.
°_gid
);

1918 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
(
sbuf
.
°_rdev
);

1919 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
(
sbuf
.
°_size
);

1920 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1921 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1922 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1923 #i‚de‡
_MSC_VER


1924 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1925 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1929 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

1930 &
osf_sbuf
, (
osf_°©buf
));

1934 
OSF_SYS_gë∑gesize
:

1936 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
MD_PAGE_SIZE
;

1939 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

1940 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1943 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1944 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1948 
OSF_SYS_£tôimî
:

1950 
	`w¨n
("syscall: setitimer ignored");

1951 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1954 
OSF_SYS_èbÀ
:

1956 
qw‹d_t
 
èbÀ_id
, 
èbÀ_ödex
, 
buf_addr
, 
num_ñem
, 
size_ñem
;

1957 
osf_tbl_sysöfo
 
sysöfo
;

1959 
èbÀ_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

1960 
èbÀ_ödex
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

1961 
buf_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

1962 
num_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A4
];

1963 
size_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A5
];

1965 
èbÀ_id
)

1967 
OSF_TBL_SYSINFO
:

1968 i‡(
èbÀ_ödex
 != 0)

1970 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 0 index, got %08d",

1971 
èbÀ_ödex
 );

1973 i‡(
num_ñem
 != 1)

1975 
	`∑nic
("table:Åable id TBL_SYSINFOÑequires 1Élts, got %08d",

1976 
num_ñem
 );

1980 
rußge
 
rußge_öfo
;

1983 i‡(
	`gërußge
(
RUSAGE_SELF
, &
rußge_öfo
) < 0)

1986 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1989 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1994 
sysöfo
.
si_hz
 = 
	`sysc⁄f
(
_SC_CLK_TCK
);

1997 
sysöfo
.
si_u£r
 = 
rußge_öfo
.
ru_utime
.
tv_£c
 * sysöfo.
si_hz
 +

1998 (
rußge_öfo
.
ru_utime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

1999 
sysöfo
.
si_sys
 = 
rußge_öfo
.
ru_°ime
.
tv_£c
 * sysöfo.
si_hz
 +

2000 (
rußge_öfo
.
ru_°ime
.
tv_u£c
 * 
sysöfo
.
si_hz
) / 1000000UL;

2004 
sysöfo
.
si_ni˚
 = 0;

2005 
sysöfo
.
si_idÀ
 = 0;

2006 
sysöfo
.
si_phz
 = 0;

2007 
sysöfo
.
si_boŸtime
 = 0;

2008 
sysöfo
.
waô
 = 0;

2011 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
buf_addr
,

2012 &
sysöfo
, (
osf_tbl_sysöfo
));

2015 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2020 
	`w¨n
("èbÀ: unsuµ‹ãdÅabÀ id %dÑeque°ed, ign‹ed", 
èbÀ_id
);

2021 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2026 
OSF_SYS_gëdèbÀsize
:

2027 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__Æpha
)

2029 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdèbÀsize
();

2032 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2033 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2036 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2037 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2039 #ñi‡
	`deföed
(
u…rix
)

2042 
	`w¨n
("syscall: called getdtablesize\n");

2043 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2044 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2046 #ñi‡
	`deföed
(
MIN_SYSCALL_MODE
)

2049 
	`w¨n
("syscall: called getdtablesize\n");

2050 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2051 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2055 
æimô
 
æ
;

2058 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
Ë!(
qw‹d_t
)-1)

2060 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
æ
.
æim_cur
;

2061 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2065 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2066 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2072 
OSF_SYS_dup2
:

2074 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2075 
	`dup2
–
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

2078 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2079 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2082 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2083 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2087 
OSF_SYS_f˙é
:

2088 #ifde‡
_MSC_VER


2089 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

2090 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2093 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2094 
	`f˙é
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

2095  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

2098 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2099 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2102 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2103 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2109 
OSF_SYS_sigvec
:

2111 
	`w¨n
("syscall: sigvec ignored");

2112 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2117 
OSF_SYS_sigblock
:

2119 
	`w¨n
("syscall: sigblock ignored");

2120 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2125 
OSF_SYS_sig£tmask
:

2127 
	`w¨n
("syscall: sigsetmask ignored");

2128 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2132 
OSF_SYS_gëtimeofday
:

2133 #ifde‡
_MSC_VER


2134 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

2135 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2138 
osf_timevÆ
 
osf_tv
;

2139 
timevÆ
 
tv
, *
tvp
;

2140 
osf_timez⁄e
 
osf_tz
;

2141 
timez⁄e
 
tz
, *
tzp
;

2143 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2146 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2147 &
osf_tv
, (
osf_timevÆ
));

2150 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_£c
);

2151 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
osf_tv
.
osf_tv_u£c
);

2152 
tvp
 = &
tv
;

2155 
tvp
 = 
NULL
;

2157 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2160 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2161 &
osf_tz
, (
osf_timez⁄e
));

2164 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_möuãswe°
);

2165 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
osf_tz
.
osf_tz_d°time
);

2166 
tzp
 = &
tz
;

2169 
tzp
 = 
NULL
;

2172  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëtimeofday
(
tvp
, 
tzp
);

2175 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2176 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2179 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2180 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2183 i‡–
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

2186 
osf_tv
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

2187 
osf_tv
.
osf_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

2190 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2191 &
osf_tv
, (
osf_timevÆ
));

2194 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2197 
osf_tz
.
osf_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

2198 
osf_tz
.
osf_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

2201 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2202 &
osf_tz
, (
osf_timez⁄e
));

2208 
OSF_SYS_gërußge
:

2209 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

2211 
tms
 
tms_buf
;

2212 
osf_rußge
 
rußge
;

2215 i‡(
	`times
(&
tms_buf
Ë!(
qw‹d_t
)-1)

2218 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2219 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2223 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2224 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2228 #i‡
	`deföed
(
__svr4__
)

2229 
	`mem£t
(&
rußge
, '\0', (
osf_rußge
));

2231 
	`bzîo
(&
rußge
, (
osf_rußge
));

2235 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_utime
/
CLK_TCK
);

2236 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2237 
	`MD_SWAPW
(
rußge
.
osf_ru_utime
.
osf_tv_£c
);

2238 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 0;

2239 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
(
tms_buf
.
tms_°ime
/
CLK_TCK
);

2240 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2241 
	`MD_SWAPW
(
rußge
.
osf_ru_°ime
.
osf_tv_£c
);

2242 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 0;

2245 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2246 &
rußge
, (
osf_rußge
));

2248 #ñi‡
	`deföed
(
__unix__
)

2250 
rußge
 
loˇl_rußge
;

2251 
osf_rußge
 
rußge
;

2254  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2255 
	`gërußge
–
ªgs
->
ªgs_R
[
MD_REG_A0
], &
loˇl_rußge
);

2258 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2259 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2262 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2263 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2267 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2268 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2269 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2270 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2271 
rußge
.
osf_ru_utime
.
osf_tv_£c
 =

2272 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

2273 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 =

2274 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

2275 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2276 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2277 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2278 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2279 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 =

2280 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

2281 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 =

2282 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

2283 
rußge
.
osf_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

2284 
rußge
.
osf_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

2285 
rußge
.
osf_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

2286 
rußge
.
osf_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

2287 
rußge
.
osf_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

2288 
rußge
.
osf_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

2289 
rußge
.
osf_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

2290 
rußge
.
osf_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

2291 
rußge
.
osf_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

2292 
rußge
.
osf_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

2293 
rußge
.
osf_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

2294 
rußge
.
osf_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

2295 
rußge
.
osf_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

2296 
rußge
.
osf_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

2299 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2300 &
rußge
, (
osf_rußge
));

2302 #ñi‡ 
	`deföed
(
_MSC_VER
)

2303 
	`w¨n
("syscall: called getrusage\n");

2304 
ªgs
->
ªgs_R
[7] = 0;

2306 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

2310 
OSF_SYS_utimes
:

2312 
buf
[
MAXBUFSIZE
];

2315 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2317 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] == 0)

2319 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
löux
)

2321  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2322 #ñi‡
	`deföed
(
_MSC_VER
)

2324  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, 
NULL
);

2325 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2326  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
NULL
);

2327 #ñi‡
	`deföed
(
__CYGWIN32__
)

2328 
	`w¨n
("syscall: called utimes\n");

2330 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2335 
osf_timevÆ
 
osf_tvÆ
[2];

2336 #i‚de‡
_MSC_VER


2337 
timevÆ
 
tvÆ
[2];

2341 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2342 
osf_tvÆ
, 2*(
osf_timevÆ
));

2344 #i‚de‡
_MSC_VER


2346 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2347 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_u£c
);

2348 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2349 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_u£c
);

2352 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

2355 
utimbuf
 
ubuf
;

2357 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
tvÆ
[0].
tv_£c
);

2358 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
tvÆ
[1].
tv_£c
);

2360  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2362 #ñi‡
	`deföed
(
_MSC_VER
)

2365 
_utimbuf
 
ubuf
;

2367 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
(
osf_tvÆ
[0].
osf_tv_£c
);

2368 
ubuf
.
modtime
 = 
	`MD_SWAPW
(
osf_tvÆ
[1].
osf_tv_£c
);

2370  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
(
buf
, &
ubuf
);

2372 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

2373  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
(
buf
, 
tvÆ
);

2374 #ñi‡
	`deföed
(
__CYGWIN32__
)

2375 
	`w¨n
("syscall: called utimes\n");

2377 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

2382 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2383 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2386 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2387 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2392 
OSF_SYS_gëæimô
:

2393 
OSF_SYS_£ålimô
:

2394 #ifde‡
_MSC_VER


2395 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

2396 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2397 #ñi‡
	`deföed
(
__CYGWIN32__
)

2399 
	`w¨n
("syscall: called get/setrlimit\n");

2400 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2404 
osf_æimô
 
osf_æ
;

2405 
æimô
 
æ
;

2408 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2409 &
osf_æ
, (
osf_æimô
));

2412 
æ
.
æim_cur
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_cur
);

2413 
æ
.
æim_max
 = 
	`MD_SWAPQ
(
osf_æ
.
osf_æim_max
);

2416 i‡(
syscode
 =
OSF_SYS_gëæimô
)

2417  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2418 
	`gëæimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2420  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2421 
	`£ålimô
(
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

2424 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2425 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2428 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2429 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2433 
osf_æ
.
osf_æim_cur
 = 
	`MD_SWAPQ
(
æ
.
æim_cur
);

2434 
osf_æ
.
osf_æim_max
 = 
	`MD_SWAPQ
(
æ
.
æim_max
);

2437 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2438 &
osf_æ
, (
osf_æimô
));

2443 
OSF_SYS_sig¥ocmask
:

2445 
fú°
 = 
TRUE
;

2447 i‡(
fú°
)

2449 
	`w¨n
("partially supported sigprocmask() call...");

2450 
fú°
 = 
FALSE
;

2462 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
sigmask
;

2463 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2465 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2467 
OSF_SIG_BLOCK
:

2468 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2470 
OSF_SIG_UNBLOCK
:

2471 
sigmask
 &~
ªgs
->
ªgs_R
[
MD_REG_A1
];

2473 
OSF_SIG_SETMASK
:

2474 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2477 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EINVAL
;

2478 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 1;

2482 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > 0x10000000)

2483 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

2484 &
sigmask
, (sigmask));

2486 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2488 
ªgs
->
ªgs_R
[
MD_REG_A0
])

2490 
OSF_SIG_BLOCK
:

2491 
sigmask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

2493 
OSF_SIG_UNBLOCK
:

2494 
sigmask
 &
ªgs
->
ªgs_R
[
MD_REG_A1
];

2496 
OSF_SIG_SETMASK
:

2497 
sigmask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2500 
	`∑nic
("illegal how valueÅo sigprocmask()");

2503 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2504 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2509 
OSF_SYS_siga˘i⁄
:

2511 
signum
;

2512 
fú°
 = 
TRUE
;

2514 i‡(
fú°
)

2516 
	`w¨n
("partially supported sigaction() call...");

2517 
fú°
 = 
FALSE
;

2520 
signum
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2521 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

2522 
siga˘i⁄_¨øy
[
signum
] = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2524 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

2525 
ªgs
->
ªgs_R
[
MD_REG_A2
] = 
siga˘i⁄_¨øy
[
signum
];

2527 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2530 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2540 
OSF_SYS_sig°ack
:

2541 
	`w¨n
("unsupported sigstack() call...");

2542 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2545 
OSF_SYS_sigªtu∫
:

2547 
i
;

2548 
osf_sigc⁄ãxt
 
sc
;

2549 
fú°
 = 
TRUE
;

2551 i‡(
fú°
)

2553 
	`w¨n
("partially supported sigreturn() call...");

2554 
fú°
 = 
FALSE
;

2557 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2558 &
sc
, (
osf_sigc⁄ãxt
));

2560 
sigmask
 = 
	`MD_SWAPQ
(
sc
.
sc_mask
);

2561 
ªgs
->
ªgs_NPC
 = 
	`MD_SWAPQ
(
sc
.
sc_pc
);

2565 
i
=0; i < 32; ++i)

2566 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

2567 
i
=0; i < 32; ++i)

2568 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

2569 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

2573 
OSF_SYS_uswôch
:

2574 
	`w¨n
("unsupported uswitch() call...");

2575 
ªgs
->
ªgs_R
[
MD_REG_V0
] =Ñegs->ªgs_R[
MD_REG_A1
];

2578 
OSF_SYS_£tsysöfo
:

2579 
	`w¨n
("unsupported setsysinfo() call...");

2580 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2583 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2584 
OSF_SYS_gëdúíåõs
:

2586 
i
, 
˙t
, 
osf_˙t
;

2587 
dúít
 *
p
;

2588 
sw‹d_t
 
fd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2589 
md_addr_t
 
osf_buf
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2590 *
buf
;

2591 
sw‹d_t
 
osf_nbyãs
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2592 
md_addr_t
 
osf_pba£
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

2593 
sqw‹d_t
 
osf_ba£
;

2594 
ba£
 = 0;

2597 i‡(!
osf_nbyãs
)

2598 
	`w¨n
("attemptingÅo get 0 directoryÉntries...");

2601 
buf
 = 
	`ˇŒoc
(1, 
osf_nbyãs
);

2602 i‡(!
buf
)

2603 
	`Áèl
("out of virtual memory");

2606 #i‡
	`deföed
(
__svr4__
)

2607 
ba£
 = 
	`l£ek
 (()
fd
, (
off_t
)0, 
SEEK_CUR
);

2608 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2609 
	`gëdíts
(()
fd
, (
dúít
 *)
buf
, (
size_t
)
osf_nbyãs
);

2611 
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2612 
	`gëdúíåõs
(()
fd
, 
buf
, (
size_t
)
osf_nbyãs
, &
ba£
);

2616 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2618 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2621 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] > 0)

2624 
i
=0, 
˙t
=0, 
osf_˙t
=0, 
p
=(
dúít
 *)
buf
;

2625 
˙t
 < 
ªgs
->
ªgs_R
[
MD_REG_V0
] && 
p
->
d_ª˛í
 > 0;

2626 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

2628 
osf_dúít
 osf_dirent;

2630 
osf_dúít
.
d_öo
 = 
	`MD_SWAPW
(
p
->d_ino);

2631 
osf_dúít
.
d_«mÀn
 = 
	`MD_SWAPH
(
	`°æí
(
p
->
d_«me
));

2632 
	`°r˝y
(
osf_dúít
.
d_«me
, 
p
->d_name);

2633 
osf_dúít
.
d_ª˛í
 = 
	`MD_SWAPH
(
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2635 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2636 
osf_buf
 + 
osf_˙t
,

2637 &
osf_dúít
, 
	`OSF_DIRENT_SZ
(
p
->
d_«me
));

2638 
osf_˙t
 +
	`OSF_DIRENT_SZ
(
p
->
d_«me
);

2641 i‡(
osf_pba£
 != 0)

2643 
osf_ba£
 = (
sqw‹d_t
)
ba£
;

2644 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
osf_pba£
,

2645 &
osf_ba£
, (osf_base));

2649 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
osf_˙t
;

2654 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2655 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2658 
	`‰ì
(
buf
);

2663 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2664 
OSF_SYS_åunˇã
:

2666 
buf
[
MAXBUFSIZE
];

2669 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2672  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2673 
	`åunˇã
(
buf
, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2676 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2677 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2680 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2681 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2687 #i‡ !
	`deföed
(
_MSC_VER
)

2688 
OSF_SYS_·runˇã
:

2690  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2691 
	`·runˇã
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2692  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2695 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2696 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2699 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2700 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2705 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2706 
OSF_SYS_°©fs
:

2708 
buf
[
MAXBUFSIZE
];

2709 
osf_°©fs
 
osf_sbuf
;

2710 
°©fs
 
sbuf
;

2713 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2716  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©fs
(
buf
, &
sbuf
);

2719 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2720 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2723 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2724 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2728 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__osf__
)

2729 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(0x6969) ;

2731 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
(
sbuf
.f_type);

2733 
osf_sbuf
.
f_fsize
 = 
	`MD_SWAPW
(
sbuf
.
f_bsize
);

2734 
osf_sbuf
.
f_blocks
 = 
	`MD_SWAPW
(
sbuf
.f_blocks);

2735 
osf_sbuf
.
f_b‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_bfree);

2736 
osf_sbuf
.
f_bavaû
 = 
	`MD_SWAPW
(
sbuf
.f_bavail);

2737 
osf_sbuf
.
f_fûes
 = 
	`MD_SWAPW
(
sbuf
.f_files);

2738 
osf_sbuf
.
f_f‰ì
 = 
	`MD_SWAPW
(
sbuf
.f_ffree);

2742 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2743 &
osf_sbuf
, (
osf_°©buf
));

2748 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2749 
OSF_SYS_£åegid
:

2752  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2753 
	`£åegid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2754  (
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2757 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2758 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2761 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2762 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2767 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2768 
OSF_SYS_£åeuid
:

2771  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2772 
	`£åeuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
],

2773  (
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2776 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2777 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2780 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2781 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2786 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2787 
OSF_SYS_sockë
:

2790  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2791 
	`sockë
–
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2792 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2794  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

2795 
sockty≥_m≠
, 
	`N_ELT
(socktype_map),

2797  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

2798 
Ámûy_m≠
, 
	`N_ELT
(family_map),

2802 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2803 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2806 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2807 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2812 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2813 
OSF_SYS_c⁄√˘
:

2815 
osf_sockaddr
 
osf_ß
;

2820 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > (
osf_sockaddr
))

2822 
	`Áèl
("sockaddr size overflow:áddrlen = %d",

2823 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2826 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2827 &
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2829 
i
;

2830 
ß
.
ß_Ámûy
 = 
osf_ß
.sa_family;

2831 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2832 
ß
.
ß_d©a
[
i
] = 
osf_ß
.sa_data[i];

2834  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2835 
	`c⁄√˘
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

2836 (*)&
osf_ß
, ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2839 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2840 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2843 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2844 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2850 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2851 
OSF_SYS_u«me
:

2854 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2855 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EPERM
;

2859 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2860 
OSF_SYS_wrôev
:

2862 
i
;

2863 *
buf
;

2864 
iovec
 *
iov
;

2867 
iov
 =

2868 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[
MD_REG_A2
]

2869 * (
iovec
));

2870 i‡(!
iov
)

2871 
	`Áèl
("out of virtual memory in SYS_writev");

2874 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2876 
osf_iovec
 
osf_iov
;

2879 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2880 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2881 + 
i
*(
osf_iovec
)),

2882 &
osf_iov
, (
osf_iovec
));

2884 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
.iov_len);

2885 i‡(
osf_iov
.
iov_ba£
 !0 && osf_iov.
iov_Àn
 != 0)

2887 
buf
 = (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
.
iov_Àn
), ());

2888 i‡(!
buf
)

2889 
	`Áèl
("out of virtual memory in SYS_writev");

2890 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
	`MD_SWAPQ
(
osf_iov
.
iov_ba£
),

2891 
buf
, 
	`MD_SWAPW
(
osf_iov
.
iov_Àn
));

2892 
iov
[
i
].
iov_ba£
 = 
buf
;

2895 
iov
[
i
].
iov_ba£
 = 
NULL
;

2900  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2901 
	`wrôev
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2902  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2903 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2904 && 
î∫o
 =
EAGAIN
);

2907 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2908 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2911 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2912 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2916 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2918 i‡(
iov
[
i
].
iov_ba£
)

2920 
	`‰ì
(
iov
[
i
].
iov_ba£
);

2921 
iov
[
i
].
iov_ba£
 = 
NULL
;

2924 
	`‰ì
(
iov
);

2929 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2930 
OSF_SYS_ªadv
:

2932 
i
;

2933 *
buf
 = 
NULL
;

2934 
osf_iovec
 *
osf_iov
;

2935 
iovec
 *
iov
;

2938 
osf_iov
 =

2939 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
],

2940 (
osf_iovec
));

2941 i‡(!
osf_iov
)

2942 
	`Áèl
("out of virtual memory in SYS_readv");

2944 
iov
 =

2945 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A2
], (
iovec
));

2946 i‡(!
iov
)

2947 
	`Áèl
("out of virtual memory in SYS_readv");

2950 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2953 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2954 –
ªgs
->
ªgs_R
[
MD_REG_A1
]

2955 + 
i
*(
osf_iovec
)),

2956 &
osf_iov
[
i
], (
osf_iovec
));

2958 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(
osf_iov
[i].iov_len);

2959 i‡(
osf_iov
[
i
].
iov_ba£
 !0 && osf_iov[i].
iov_Àn
 != 0)

2961 
buf
 =

2962 (*)
	`ˇŒoc
(
	`MD_SWAPW
(
osf_iov
[
i
].
iov_Àn
), ());

2963 i‡(!
buf
)

2964 
	`Áèl
("out of virtual memory in SYS_readv");

2965 
iov
[
i
].
iov_ba£
 = 
buf
;

2968 
iov
[
i
].
iov_ba£
 = 
NULL
;

2973  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2974 
	`ªadv
–()
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

2975  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2976 }  
ªgs
->
ªgs_R
[
MD_REG_V0
] == -1

2977 && 
î∫o
 =
EAGAIN
);

2980 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

2982 i‡(
osf_iov
[
i
].
iov_ba£
 != 0)

2984 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
osf_iov
[
i
].
iov_ba£
),

2985 
iov
[
i
].
iov_ba£
, 
	`MD_SWAPW
(
osf_iov
[i].
iov_Àn
));

2990 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

2991 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2994 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2995 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2999 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3001 i‡(
iov
[
i
].
iov_ba£
)

3003 
	`‰ì
(
iov
[
i
].
iov_ba£
);

3004 
iov
[
i
].
iov_ba£
 = 
NULL
;

3008 i‡(
osf_iov
)

3009 
	`‰ì
(
osf_iov
);

3010 i‡(
iov
)

3011 
	`‰ì
(
iov
);

3016 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3017 
OSF_SYS_£tsock›t
:

3019 *
buf
;

3020 
xœã_èbÀ_t
 *
m≠
;

3021 
nm≠
;

3026 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0

3027 && 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3029 
buf
 = 
	`ˇŒoc
(1, (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3030 i‡(!
buf
)

3031 
	`Áèl
("cannotállocate memory in OSF_SYS_setsockopt");

3034 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3035  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3036 
buf
, ()
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3039 
buf
 = 
NULL
;

3042 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_SOCKET
)

3044 
m≠
 = 
sock›t_m≠
;

3045 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3047 i‡(()
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_TCP
)

3049 
m≠
 = 
t˝›t_m≠
;

3050 
nm≠
 = 
	`N_ELT
(
t˝›t_m≠
);

3054 
	`w¨n
("noÅranslation mapávailable for `setsockopt()': %d",

3055 ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3056 
m≠
 = 
sock›t_m≠
;

3057 
nm≠
 = 
	`N_ELT
(
sock›t_m≠
);

3060  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3061 
	`£tsock›t
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3062  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3063 
sockÀvñ_m≠
, 
	`N_ELT
(socklevel_map),

3065  
	`xœã_¨g
(()
ªgs
->
ªgs_R
[
MD_REG_A2
],

3066 
m≠
, 
nm≠
,

3068  
buf
,

3069  
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3072 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3073 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3076 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3077 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3080 i‡(
buf
 !
NULL
)

3081 
	`‰ì
(
buf
);

3086 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3087 
OSF_SYS_ﬁd_gësock«me
:

3090 *
buf
;

3091 
w‹d_t
 
osf_addæí
;

3092 
addæí
;

3095 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3096  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3097 &
osf_addæí
, (osf_addrlen));

3098 
addæí
 = ()
osf_addæí
;

3099 i‡(
addæí
 != 0)

3101 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3102 i‡(!
buf
)

3103 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3106 
buf
 = 
NULL
;

3108  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3109 
	`gësock«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3110  (
sockaddr
 *)
buf
,

3111  &
addæí
);

3114 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3115 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3118 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3119 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3123 i‡(
addæí
 != 0)

3124 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3125  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3126 
buf
, 
addæí
);

3127 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3128 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3129  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3130 &
osf_addæí
, (osf_addrlen));

3132 i‡(
buf
 !
NULL
)

3133 
	`‰ì
(
buf
);

3138 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3139 
OSF_SYS_ﬁd_gë≥î«me
:

3142 *
buf
;

3143 
w‹d_t
 
osf_addæí
;

3144 
addæí
;

3147 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3148  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3149 &
osf_addæí
, (osf_addrlen));

3150 
addæí
 = ()
osf_addæí
;

3151 i‡(
addæí
 != 0)

3153 
buf
 = 
	`ˇŒoc
(1, 
addæí
);

3154 i‡(!
buf
)

3155 
	`Áèl
("cannotállocate memory in OSF_SYS_old_getsockname");

3158 
buf
 = 
NULL
;

3160  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3161 
	`gë≥î«me
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3162  (
sockaddr
 *)
buf
,

3163  &
addæí
);

3166 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3167 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3170 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3171 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3175 i‡(
addæí
 != 0)

3176 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3177  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3178 
buf
, 
addæí
);

3179 
osf_addæí
 = (
qw‹d_t
)
addæí
;

3180 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3181  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3182 &
osf_addæí
, (osf_addrlen));

3184 i‡(
buf
 !
NULL
)

3185 
	`‰ì
(
buf
);

3190 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3191 
OSF_SYS_£tgid
:

3194  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3195 
	`£tgid
–(
gid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3198 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3199 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3202 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3203 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3208 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3209 
OSF_SYS_£tuid
:

3212  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3213 
	`£tuid
–(
uid_t
)
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3216 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3217 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3220 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3221 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3226 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3227 
OSF_SYS_gë¥i‹ôy
:

3230  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3231 
	`gë¥i‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3232  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3235 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3236 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3239 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3240 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3245 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3246 
OSF_SYS_£çri‹ôy
:

3249  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3250 
	`£çri‹ôy
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3251  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3252  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3255 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3256 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3259 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3260 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3265 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3266 
OSF_SYS_£À˘
:

3268 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

3269 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

3270 
timevÆ
 
timeout
, *
timeouç
;

3273 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3275 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3276  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3277 &
ªadfd
, (
fd_£t
));

3278 
ªadfdp
 = &
ªadfd
;

3281 
ªadfdp
 = 
NULL
;

3284 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3286 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3287  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3288 &
wrôefd
, (
fd_£t
));

3289 
wrôefdp
 = &
wrôefd
;

3292 
wrôefdp
 = 
NULL
;

3295 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3297 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3298  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3299 &
ex˚±fd
, (
fd_£t
));

3300 
ex˚±fdp
 = &
ex˚±fd
;

3303 
ex˚±fdp
 = 
NULL
;

3306 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3308 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3309  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3310 &
timeout
, (
timevÆ
));

3311 
timeouç
 = &
timeout
;

3314 
timeouç
 = 
NULL
;

3316 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

3318  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3319 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3320 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

3323  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3324 
	`£À˘
–
ªgs
->
ªgs_R
[
MD_REG_A0
],

3325 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

3329 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3330 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3333 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3334 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3338 i‡–
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3339 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3340  
ªgs
->
ªgs_R
[
MD_REG_A1
],

3341 &
ªadfd
, (
fd_£t
));

3344 i‡–
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

3345 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3346  
ªgs
->
ªgs_R
[
MD_REG_A2
],

3347 &
wrôefd
, (
fd_£t
));

3350 i‡–
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

3351 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3352  
ªgs
->
ªgs_R
[
MD_REG_A3
],

3353 &
ex˚±fd
, (
fd_£t
));

3356 i‡–
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3357 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3358  
ªgs
->
ªgs_R
[
MD_REG_A4
],

3359 &
timeout
, (
timevÆ
));

3364 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3365 
OSF_SYS_shutdown
:

3368  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3369 
	`shutdown
–()
ªgs
->
ªgs_R
[
MD_REG_A0
],

3370  ()
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3373 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3374 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3377 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3378 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3383 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3384 
OSF_SYS_pﬁl
:

3386 
i
;

3387 
pﬁlfd
 *
fds
;

3390 
fds
 = 
	`ˇŒoc
–
ªgs
->
ªgs_R
[
MD_REG_A1
], (
pﬁlfd
));

3391 i‡(!
fds
)

3392 
	`Áèl
("out of virtual memory in SYS_poll");

3395 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3398 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3399 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3400 + 
i
*(
pﬁlfd
)),

3401 &
fds
[
i
], (
pﬁlfd
));

3405  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3406 
	`pﬁl
–
fds
,

3407  ()
ªgs
->
ªgs_R
[
MD_REG_A1
],

3408  ()
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3411 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3412 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3415 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3416 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3420 
i
=0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

3423 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3424 –
ªgs
->
ªgs_R
[
MD_REG_A0
]

3425 + 
i
*(
pﬁlfd
)),

3426 &
fds
[
i
], (
pﬁlfd
));

3430 
	`‰ì
(
fds
);

3435 
OSF_SYS_u¶ìp_thªad
:

3437 
	`Ârötf
(
°dîr
, "u¶ìp(%d)\n", ()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3439 #ifde‡
Æpha


3440 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u¶ìp
((Ïegs->ªgs_R[
MD_REG_A0
]);

3442 
	`u¶ìp
(()
ªgs
->
ªgs_R
[
MD_REG_A0
]);

3443 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3446 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3447 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3450 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3451 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3454 
	`w¨n
("unsupported usleep_thread() call...");

3455 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3459 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3460 
OSF_SYS_gëho°«me
:

3463 *
buf
;

3465 
buf
 = 
	`mÆloc
–(
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3466 i‡(!
buf
)

3467 
	`Áèl
("out of virtual memory in gethostname()");

3469  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3470 
	`gëho°«me
–
buf
,

3471  (
size_t
)
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3474 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
)-1)

3475 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3478 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3479 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3483 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3484  
ªgs
->
ªgs_R
[
MD_REG_A0
],

3485 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3490 
OSF_SYS_madvi£
:

3491 
	`w¨n
("unsupported madvise() call ignored...");

3492 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3496 
	`w¨n
("invalid/unimplemented syscall %ld, PC=0x%08p, RA=0x%08p, winging it",

3497 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

3498 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3499 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3501 
	`Áèl
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

3505 i‡(
vîbo£
)

3506 
	`Ârötf
(
°dîr
, "syscall(%d):Ñeturned %d:%d...\n",

3507 ()
syscode
, ()
ªgs
->
ªgs_R
[
MD_REG_A3
],

3508 ()
ªgs
->
ªgs_R
[
MD_REG_V0
]);

3509 
	}
}

	@target-pisa/config.h

52 #i‚de‡
CONFIG_H


53 
	#CONFIG_H


	)

	@target-pisa/configbig.h

52 #i‚de‡
CONFIGBIG_H


53 
	#CONFIGBIG_H


	)

56 
	#TARGET_PISA_BIG


	)

	@target-pisa/configlit.h

52 #i‚de‡
CONFIGLIT_H


53 
	#CONFIGLIT_H


	)

56 
	#TARGET_PISA_LITTLE


	)

	@target-pisa/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	#ECOFF_EB_MAGIC
 0x0160

	)

58 
	#ECOFF_EB_OTHER
 0x6001

	)

59 
	#ECOFF_EL_MAGIC
 0x0162

	)

60 
	#ECOFF_EL_OTHER
 0x6201

	)

61 
	#ECOFF_ALPHAMAGIC
 0603

	)

63 
	secoff_fûehdr
 {

64 
hÆf_t
 
	mf_magic
;

65 
hÆf_t
 
	mf_ns˙s
;

66 
sw‹d_t
 
	mf_timd©
;

67 
sw‹d_t
 
	mf_sym±r
;

68 
sw‹d_t
 
	mf_nsyms
;

69 
hÆf_t
 
	mf_›thdr
;

70 
hÆf_t
 
	mf_Êags
;

73 
	secoff_aouthdr
 {

74 
shÆf_t
 
	mmagic
;

75 
shÆf_t
 
	mv°amp
;

76 
sw‹d_t
 
	mtsize
;

77 
sw‹d_t
 
	mdsize
;

78 
sw‹d_t
 
	mbsize
;

79 
sw‹d_t
 
	míåy
;

80 
sw‹d_t
 
	mãxt_°¨t
;

81 
sw‹d_t
 
	md©a_°¨t
;

82 
sw‹d_t
 
	mbss_°¨t
;

83 
sw‹d_t
 
	mg¥mask
;

84 
sw‹d_t
 
	m˝rmask
[4];

85 
sw‹d_t
 
	mgp_vÆue
;

88 
	secoff_s˙hdr
 {

89 
	ms_«me
[8];

90 
sw‹d_t
 
	ms_∑ddr
;

91 
sw‹d_t
 
	ms_vaddr
;

92 
sw‹d_t
 
	ms_size
;

93 
sw‹d_t
 
	ms_s˙±r
;

94 
sw‹d_t
 
	ms_ªÕå
;

95 
sw‹d_t
 
	ms_ n›å
;

96 
hÆf_t
 
	ms_ƒñoc
;

97 
hÆf_t
 
	ms_∆¬o
;

98 
sw‹d_t
 
	ms_Êags
;

101 
	secoff_symhdr_t
 {

102 
shÆf_t
 
	mmagic
;

103 
shÆf_t
 
	mv°amp
;

104 
sw‹d_t
 
	mûöeMax
;

105 
sw‹d_t
 
	mcbLöe
;

106 
sw‹d_t
 
	mcbLöeOff£t
;

107 
sw‹d_t
 
	midnMax
;

108 
sw‹d_t
 
	mcbDnOff£t
;

109 
sw‹d_t
 
	mùdMax
;

110 
sw‹d_t
 
	mcbPdOff£t
;

111 
sw‹d_t
 
	misymMax
;

112 
sw‹d_t
 
	mcbSymOff£t
;

113 
sw‹d_t
 
	mi›tMax
;

114 
sw‹d_t
 
	mcbO±Off£t
;

115 
sw‹d_t
 
	müuxMax
;

116 
sw‹d_t
 
	mcbAuxOff£t
;

117 
sw‹d_t
 
	missMax
;

118 
sw‹d_t
 
	mcbSsOff£t
;

119 
sw‹d_t
 
	missExtMax
;

120 
sw‹d_t
 
	mcbSsExtOff£t
;

121 
sw‹d_t
 
	mifdMax
;

122 
sw‹d_t
 
	mcbFdOff£t
;

123 
sw‹d_t
 
	m¸fd
;

124 
sw‹d_t
 
	mcbRfdOff£t
;

125 
sw‹d_t
 
	mõxtMax
;

126 
sw‹d_t
 
	mcbExtOff£t
;

127 } 
	tecoff_HDRR
;

129 
	#ECOFF_magicSym
 0x7009

	)

131 
	secoff_fdr
 {

132 
w‹d_t
 
	madr
;

133 
sw‹d_t
 
	mrss
;

134 
sw‹d_t
 
	missBa£
;

135 
sw‹d_t
 
	mcbSs
;

136 
sw‹d_t
 
	misymBa£
;

137 
sw‹d_t
 
	mcsym
;

138 
sw‹d_t
 
	mûöeBa£
;

139 
sw‹d_t
 
	m˛öe
;

140 
sw‹d_t
 
	mi›tBa£
;

141 
sw‹d_t
 
	mc›t
;

142 
hÆf_t
 
	mùdFú°
;

143 
hÆf_t
 
	m˝d
;

144 
sw‹d_t
 
	müuxBa£
;

145 
sw‹d_t
 
	mˇux
;

146 
sw‹d_t
 
	mrfdBa£
;

147 
sw‹d_t
 
	m¸fd
;

148 
	mœng
 :5;

149 
	mfMîge
 :1;

150 
	mfRódö
 :1;

151 
	mfBigídün
 :1;

152 
	mª£rved
 :24;

153 
sw‹d_t
 
	mcbLöeOff£t
;

154 
sw‹d_t
 
	mcbLöe
;

155 } 
	tecoff_FDR
;

157 
	secoff_pdr
 {

158 
w‹d_t
 
	madr
;

159 
sw‹d_t
 
	misym
;

160 
sw‹d_t
 
	mûöe
;

161 
sw‹d_t
 
	mªgmask
;

162 
sw‹d_t
 
	mªgoff£t
;

163 
sw‹d_t
 
	mi›t
;

164 
sw‹d_t
 
	m‰egmask
;

165 
sw‹d_t
 
	m‰egoff£t
;

166 
sw‹d_t
 
	m‰ameoff£t
;

167 
shÆf_t
 
	m‰amîeg
;

168 
shÆf_t
 
	mp¸eg
;

169 
sw‹d_t
 
	m Low
;

170 
sw‹d_t
 
	m High
;

171 
sw‹d_t
 
	mcbLöeOff£t
;

172 } 
	tecoff_PDR
;

174 
	secoff_SYMR
 {

175 
sw‹d_t
 
	miss
;

176 
sw‹d_t
 
	mvÆue
;

177 
	m°
 :6;

178 
	msc
 :5;

179 
	mª£rved
 :1;

180 
	mödex
 :20;

181 } 
	tecoff_SYMR
;

183 
	secoff_EXTR
 {

184 
shÆf_t
 
	mª£rved
;

185 
shÆf_t
 
	mifd
;

186 
ecoff_SYMR
 
	masym
;

187 } 
	tecoff_EXTR
;

189 
	#ECOFF_R_SN_TEXT
 1

	)

190 
	#ECOFF_R_SN_RDATA
 2

	)

191 
	#ECOFF_R_SN_DATA
 3

	)

192 
	#ECOFF_R_SN_SDATA
 4

	)

193 
	#ECOFF_R_SN_SBSS
 5

	)

194 
	#ECOFF_R_SN_BSS
 6

	)

196 
	#ECOFF_STYP_TEXT
 0x0020

	)

197 
	#ECOFF_STYP_RDATA
 0x0100

	)

198 
	#ECOFF_STYP_DATA
 0x0040

	)

199 
	#ECOFF_STYP_SDATA
 0x0200

	)

200 
	#ECOFF_STYP_SBSS
 0x0400

	)

201 
	#ECOFF_STYP_BSS
 0x0080

	)

203 
	#ECOFF_°Nû
 0

	)

204 
	#ECOFF_°GlobÆ
 1

	)

205 
	#ECOFF_°Sètic
 2

	)

206 
	#ECOFF_°P¨am
 3

	)

207 
	#ECOFF_°Loˇl
 4

	)

208 
	#ECOFF_°Labñ
 5

	)

209 
	#ECOFF_°Proc
 6

	)

210 
	#ECOFF_°Block
 7

	)

211 
	#ECOFF_°End
 8

	)

212 
	#ECOFF_°Membî
 9

	)

213 
	#ECOFF_°Ty≥def
 10

	)

214 
	#ECOFF_°Fûe
 11

	)

215 
	#ECOFF_°RegRñoc
 12

	)

216 
	#ECOFF_°F‹w¨d
 13

	)

217 
	#ECOFF_°SèticProc
 14

	)

218 
	#ECOFF_°C⁄°™t
 15

	)

	@target-pisa/loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
BFD_LOADER


66 
	~<bfd.h
>

68 
	~"èrgë-piß/ecoff.h
"

72 
	#TEXT_TAIL_PADDING
 128

	)

75 
md_addr_t
 
	gld_ãxt_ba£
 = 0;

78 
	gld_ãxt_size
 = 0;

81 
md_addr_t
 
	gld_d©a_ba£
 = 0;

84 
	gld_d©a_size
 = 0;

87 
md_addr_t
 
	gld_brk_poöt
 = 0;

90 
md_addr_t
 
	gld_°ack_ba£
 = 
MD_STACK_BASE
;

93 
	gld_°ack_size
 = 0;

96 
md_addr_t
 
	gld_°ack_mö
 = (md_addr_t)-1;

99 *
	gld_¥og_‚ame
 = 
NULL
;

102 
md_addr_t
 
	gld_¥og_íåy
 = 0;

105 
md_addr_t
 
	gld_ívú⁄_ba£
 = 0;

108 
	gld_èrgë_big_ídün
;

112 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
)

114 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

116 &
ld_ãxt_ba£
,Üd_text_base, " 0x%08p");

117 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

119 &
ld_ãxt_size
,Üd_ãxt_size, 
NULL
);

120 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

122 &
ld_d©a_ba£
,Üd_data_base, " 0x%08p");

123 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

125 &
ld_d©a_size
,Üd_d©a_size, 
NULL
);

126 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

128 &
ld_°ack_ba£
,Üd_stack_base, " 0x%08p");

129 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

131 &
ld_°ack_size
,Üd_°ack_size, 
NULL
);

133 
	`°©_ªg_addr
(
sdb
, "ld_stack_min",

135 &
ld_°ack_mö
,Üd_stack_min, " 0x%08p");

137 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

139 &
ld_¥og_íåy
,Üd_prog_entry, " 0x%08p");

140 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

142 &
ld_ívú⁄_ba£
,Üd_environ_base, " 0x%08p");

143 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

145 &
ld_èrgë_big_ídün
,Üd_èrgë_big_ídün, 
NULL
);

146 
	}
}

152 
	$ld_lﬂd_¥og
(*
‚ame
,

153 
¨gc
, **
¨gv
,

154 **
ívp
,

155 
ªgs_t
 *
ªgs
,

156 
mem_t
 *
mem
,

157 
zîo_bss_£gs
)

159 
i
;

160 
w‹d_t
 
ãmp
;

161 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

163 i‡(
	`eio_vÆid
(
‚ame
))

165 i‡(
¨gc
 != 1)

167 
	`Ârötf
(
°dîr
, "error: EIO file hasárguments\n");

168 
	`exô
(1);

171 
	`Ârötf
(
°dîr
, "sim:Üﬂdög EIO fûe: %s\n", 
‚ame
);

173 
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

176 
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

179 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
sim_eio_fd
) != -1)

180 
	`Áèl
("bad initial checkpoint in EIO file");

183 i‡(
sim_chk±_‚ame
 !
NULL
)

185 
cou¡î_t
 
ª°‹e_i˙t
;

187 
FILE
 *
chk±_fd
;

189 
	`Ârötf
(
°dîr
, "sim:Üoading checkpoint file: %s\n",

190 
sim_chk±_‚ame
);

192 i‡(!
	`eio_vÆid
(
sim_chk±_‚ame
))

193 
	`Áèl
("file `%s' doesÇotáppearÅo beá checkpoint file",

194 
sim_chk±_‚ame
);

197 
chk±_fd
 = 
	`eio_›í
(
sim_chk±_‚ame
);

200 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

203 
	`myÂrötf
(
°dîr
, "sim: fast forwardingÅo instruction %n\n",

204 
ª°‹e_i˙t
);

205 
	`eio_Á°_f‹w¨d
(
sim_eio_fd
, 
ª°‹e_i˙t
);

209 
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

210 
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

215 #ifde‡
MD_CROSS_ENDIAN


218 
	`Áèl
("SimpleScalar/PISA only supports binaryÉxecution on\n"

224 i‡(
sim_chk±_‚ame
 !
NULL
)

225 
	`Áèl
("checkpoints only supported while EIOÅracing");

227 #ifde‡
BFD_LOADER


230 
bfd
 *
abfd
;

231 
a£˘i⁄
 *
£˘
;

235 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

236 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
dÊﬂt_t
));

237 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

240 
ld_ívú⁄_ba£
 = 
•
;

243 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-big")))

244 i‡(!(
abfd
 = 
	`bfd_›ír
(
¨gv
[0], "ss-coff-little")))

245 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

250 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

252 
	`bfd_˛o£
(
abfd
);

253 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

257 
ld_¥og_‚ame
 = 
¨gv
[0];

260 
ld_èrgë_big_ídün
 = 
abfd
->
xvec
->
byã‹dî_big_p
;

262 
	`debug
("processing %d sections in `%s'...",

263 
	`bfd_cou¡_£˘i⁄s
(
abfd
), 
¨gv
[0]);

266 
£˘
=
abfd
->
£˘i⁄s
; se˘; se˘=£˘->
√xt
)

268 *
p
;

270 
	`debug
("processing section `%s', %d bytes @ 0x%08x...",

271 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

272 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

275 i‡((
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_ALLOC
)

276 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

277 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

278 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

281 
p
 = 
	`ˇŒoc
(
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
), ());

282 i‡(!
p
)

283 
	`Áèl
("cannotállocate %d bytes for section `%s'",

284 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

285 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

287 i‡(!
	`bfd_gë_£˘i⁄_c⁄ã¡s
(
abfd
, 
£˘
, 
p
, (
fûe_±r
)0,

288 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
)))

289 
	`Áèl
("couldÇotÑeadÉntire `%s' section fromÉxecutable",

290 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

293 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

294 
p
, 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

297 
	`‰ì
(
p
);

300 i‡(
zîo_bss_£gs


301 && (
	`bfd_gë_£˘i⁄_Êags
(
abfd
, 
£˘
Ë& 
SEC_LOAD
)

302 && 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

303 && 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
))

306 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

307 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
),

308 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

313 
	`debug
("ignoring section `%s' duringÜoad...",

314 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
));

318 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".text"))

321 
ld_ãxt_size
 =

322 ((
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect))

323 - 
MD_TEXT_BASE
)

324 + 
TEXT_TAIL_PADDING
;

327 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

328 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
)

329 + 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
),

330 
TEXT_TAIL_PADDING
);

333 i‡(!
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".rdata")

334 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".data")

335 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sdata")

336 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".bss")

337 || !
	`°rcmp
(
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), ".sbss"))

340 i‡(
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
Ë+ 
	`bfd_£˘i⁄_size
(abfd, sect) >

341 
d©a_bªak
)

342 
d©a_bªak
 = (
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
) +

343 
	`bfd_£˘i⁄_size
(
abfd
, 
£˘
));

348 
	`Áèl
("encountered unknown section `%s', %d bytes @ 0x%08x",

349 
	`bfd_£˘i⁄_«me
(
abfd
, 
£˘
), 
	`bfd_£˘i⁄_size
(abfd, sect),

350 
	`bfd_£˘i⁄_vma
(
abfd
, 
£˘
));

355 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

356 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

357 
ld_¥og_íåy
 = 
	`bfd_gë_°¨t_addªss
(
abfd
);

358 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

361 i‡(!
	`bfd_˛o£
(
abfd
))

362 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

368 
FILE
 *
fobj
;

369 
Êoc
;

370 
ecoff_fûehdr
 
fhdr
;

371 
ecoff_aouthdr
 
ahdr
;

372 
ecoff_s˙hdr
 
shdr
;

376 
ld_°ack_ba£
 = 
MD_STACK_BASE
;

377 
•
 = 
	`ROUND_DOWN
(
MD_STACK_BASE
 - 
MD_MAX_ENVIRON
, (
dÊﬂt_t
));

378 
ld_°ack_size
 = 
ld_°ack_ba£
 - 
•
;

381 
ld_ívú⁄_ba£
 = 
•
;

384 
ld_¥og_‚ame
 = 
¨gv
[0];

387 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

388 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

390 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

392 i‡(!
fobj
)

393 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
¨gv
[0]);

395 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

396 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

399 i‡(
fhdr
.
f_magic
 =
ECOFF_EB_MAGIC
)

400 
ld_èrgë_big_ídün
 = 
TRUE
;

401 i‡(
fhdr
.
f_magic
 =
ECOFF_EL_MAGIC
)

402 
ld_èrgë_big_ídün
 = 
FALSE
;

403 i‡(
fhdr
.
f_magic
 =
ECOFF_EB_OTHER
 || fhdr.f_magi¯=
ECOFF_EL_OTHER
)

404 
	`Áèl
("PISA bö¨y `%s' ha†wr⁄gÉndü¿f‹m©", 
¨gv
[0]);

405 i‡(
fhdr
.
f_magic
 =
ECOFF_ALPHAMAGIC
)

406 
	`Áèl
("PISA simuœt‹ c™nŸÑu¿AÕh®bö¨y `%s'", 
¨gv
[0]);

408 
	`Áèl
("bad magicÇumber inÉxecutable `%s' (notánÉxecutable?)",

409 
¨gv
[0]);

411 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

412 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
¨gv
[0]);

414 
d©a_bªak
 = 
MD_DATA_BASE
 + 
ahdr
.
dsize
 +áhdr.
bsize
;

417 
D©a_°¨t
 = 
ahdr
.
d©a_°¨t
;

418 
D©a_size
 = 
ahdr
.
dsize
;

419 
Bss_size
 = 
ahdr
.
bsize
;

420 
Bss_°¨t
 = 
ahdr
.
bss_°¨t
;

421 
Gp_vÆue
 = 
ahdr
.
gp_vÆue
;

422 
Text_íåy
 = 
ahdr
.
íåy
;

428 
	`f£ek
(
fobj
, (
ecoff_fûehdr
Ë+ 
fhdr
.
f_›thdr
, 0);

430 
	`debug
("¥o˚ssög %d se˘i⁄†ö `%s'...", 
fhdr
.
f_ns˙s
, 
¨gv
[0]);

433 
Êoc
 = 
	`·ñl
(
fobj
);

434 
i
 = 0; i < 
fhdr
.
f_ns˙s
; i++)

436 *
p
;

438 i‡(
	`f£ek
(
fobj
, 
Êoc
, 0) == -1)

439 
	`Áèl
("couldÇotÑesetÜocation inÉxecutable");

440 i‡(
	`‰ód
(&
shdr
, (
ecoff_s˙hdr
), 1, 
fobj
) < 1)

441 
	`Áèl
("couldÇŸÑód se˘i⁄ %d fromÉxecuèbÀ", 
i
);

442 
Êoc
 = 
	`·ñl
(
fobj
);

444 
shdr
.
s_Êags
)

446 
ECOFF_STYP_TEXT
:

447 
ld_ãxt_size
 = ((
shdr
.
s_vaddr
 + shdr.
s_size
Ë- 
MD_TEXT_BASE
)

448 + 
TEXT_TAIL_PADDING
;

450 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

451 i‡(!
p
)

452 
	`Áèl
("out of virtual memory");

454 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

455 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

456 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

457 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

460 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
shdr
.
s_vaddr
, 
p
, shdr.
s_size
);

463 
	`mem_bzîo
(
mem_ac˚ss
, 
mem
,

464 
shdr
.
s_vaddr
 + shdr.
s_size
, 
TEXT_TAIL_PADDING
);

467 
	`‰ì
(
p
);

470 
Text_£ek
 = 
shdr
.
s_s˙±r
;

471 
Text_°¨t
 = 
shdr
.
s_vaddr
;

472 
Text_size
 = 
shdr
.
s_size
 / 4;

474 
Text_size
 += 10;

475 
Text_íd
 = 
Text_°¨t
 + 
Text_size
 * 4;

480 
ECOFF_STYP_RDATA
:

485 
Rd©a_°¨t
 = 
shdr
.
s_vaddr
;

486 
Rd©a_size
 = 
shdr
.
s_size
;

487 
Rd©a_£ek
 = 
shdr
.
s_s˙±r
;

490 
ECOFF_STYP_DATA
:

492 
D©a_£ek
 = 
shdr
.
s_s˙±r
;

495 
ECOFF_STYP_SDATA
:

497 
Sd©a_£ek
 = 
shdr
.
s_s˙±r
;

500 
p
 = 
	`ˇŒoc
(
shdr
.
s_size
, ());

501 i‡(!
p
)

502 
	`Áèl
("out of virtual memory");

504 i‡(
	`f£ek
(
fobj
, 
shdr
.
s_s˙±r
, 0) == -1)

505 
	`Áèl
("couldÇŸÑód `.ãxt' fromÉxecuèbÀ", 
i
);

506 i‡(
	`‰ód
(
p
, 
shdr
.
s_size
, 1, 
fobj
) < 1)

507 
	`Áèl
("couldÇotÑeadÅext section fromÉxecutable");

510 
	`mem_bc›y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
shdr
.
s_vaddr
, 
p
, shdr.
s_size
);

513 
	`‰ì
(
p
);

517 
ECOFF_STYP_BSS
:

520 
ECOFF_STYP_SBSS
:

526 
ld_ãxt_ba£
 = 
MD_TEXT_BASE
;

527 
ld_d©a_ba£
 = 
MD_DATA_BASE
;

528 
ld_¥og_íåy
 = 
ahdr
.
íåy
;

529 
ld_d©a_size
 = 
d©a_bªak
 - 
ld_d©a_ba£
;

532 i‡(
	`f˛o£
(
fobj
))

533 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

538 i‡(!
ld_ãxt_ba£
 || !
ld_ãxt_size
)

539 
	`Áèl
("executable is missingá `.text' section");

540 i‡(!
ld_d©a_ba£
 || !
ld_d©a_size
)

541 
	`Áèl
("executable is missingá `.data' section");

542 i‡(!
ld_¥og_íåy
)

543 
	`Áèl
("programÉntryÖointÇot specified");

546 
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
());

547 i‡(
sim_sw≠_byãs
)

552 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping bytesÅo match host...\n");

553 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

555 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

558 
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
());

559 i‡(
sim_sw≠_w‹ds
)

564 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping wordsÅo match host...\n");

565 
	`Ârötf
(
°dîr
, "sim: *WARNING*: swapping may break yourÖrogram!\n");

567 
	`Áèl
("binaryÉndian doesÇot match hostÉndian");

572 
ãmp
 = 
	`MD_SWAPW
(
¨gc
);

573 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
•
, &
ãmp
, (
w‹d_t
));

574 
•
 +(
w‹d_t
);

577 
¨gv_addr
 = 
•
;

578 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

581 
ívp_addr
 = 
•
;

582 
i
=0; 
ívp
[i]; i++)

583 
•
 +(
md_addr_t
);

584 
•
 +(
md_addr_t
);

587 
i
=0; i<
¨gc
; i++)

590 
ãmp
 = 
	`MD_SWAPW
(
•
);

591 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

592 &
ãmp
, (
md_addr_t
));

594 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
]);

595 
•
 +
	`°æí
(
¨gv
[
i
]) + 1;

598 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
),

599 &
nuŒ_±r
, (
md_addr_t
));

602 
i
 = 0; 
ívp
[i]; i++)

605 
ãmp
 = 
	`MD_SWAPW
(
•
);

606 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

607 &
ãmp
, (
md_addr_t
));

609 
	`mem_°r˝y
(
mem_ac˚ss
, 
mem
, 
Wrôe
, 
•
, 
ívp
[
i
]);

610 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

613 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
),

614 &
nuŒ_±r
, (
md_addr_t
));

617 i‡(
•
 > 
ld_°ack_ba£
)

622 
	`Áèl
("environment overflow, increase MD_MAX_ENVIRON in ss.h");

626 
ld_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
MD_PAGE_SIZE
);

629 
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

632 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
ld_ívú⁄_ba£
;

633 
ªgs
->
ªgs_PC
 = 
ld_¥og_íåy
;

635 
	`debug
("ld_text_base: 0x%08xÜd_text_size: 0x%08x",

636 
ld_ãxt_ba£
, 
ld_ãxt_size
);

637 
	`debug
("ld_data_base: 0x%08xÜd_data_size: 0x%08x",

638 
ld_d©a_ba£
, 
ld_d©a_size
);

639 
	`debug
("ld_stack_base: 0x%08xÜd_stack_size: 0x%08x",

640 
ld_°ack_ba£
, 
ld_°ack_size
);

641 
	`debug
("ld_¥og_íåy: 0x%08x", 
ld_¥og_íåy
);

645 
md_addr_t
 
addr
;

646 
md_ö°_t
 
ö°
;

647 
md_Áu…_ty≥
 
Áu…
;

649 i‡(
OP_MAX
 > 255)

650 
	`Áèl
("cannotÖerform fast decoding,Åoo many opcodes");

652 
	`debug
("sim: decodingÅext segment...");

653 
addr
=
ld_ãxt_ba£
;

654 
addr
 < (
ld_ãxt_ba£
+
ld_ãxt_size
);

655 
addr
 +(
md_ö°_t
))

657 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
ö°
, (inst));

658 i‡(
Áu…
 !
md_Áu…_n⁄e
)

659 
	`Áèl
("couldÇotÑead instruction memory");

660 
ö°
.
a
 = (ö°.®& ~0xffË| (
w‹d_t
)
	`MD_OP_ENUM
(
	`MD_OPFIELD
(inst));

661 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Wrôe
, 
addr
, &
ö°
, (inst));

662 i‡(
Áu…
 !
md_Áu…_n⁄e
)

663 
	`Áèl
("couldÇot write instruction memory");

666 
	}
}

	@target-pisa/pisa.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"evÆ.h
"

59 
	~"ªgs.h
"

62 
md_ö°_t
 
	gMD_NOP_INST
 = { 
NOP
, 0 };

65 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

68 *
	gmd_›2«me
[
OP_MAX
] = {

69 
NULL
,

70 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

71 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

72 
	#CONNECT
(
OP
)

	)

73 
	~"machöe.def
"

77 *
	gmd_›2f‹m©
[
OP_MAX
] = {

78 
NULL
,

79 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

80 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

81 
	#CONNECT
(
OP
)

	)

82 
	~"machöe.def
"

86 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

87 
FUCœss_NA
,

88 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

89 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœss_NA
,

	)

90 
	#CONNECT
(
OP
)

	)

91 
	~"machöe.def
"

95 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

96 
NULL
,

111 
	gmd_›2Êags
[
OP_MAX
] = {

112 
NA
,

113 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

114 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

115 
	#CONNECT
(
OP
)

	)

116 
	~"machöe.def
"

120 
w‹d_t
 
	gmd_Ã_masks
[] = {

121 #ifde‡
BYTES_BIG_ENDIAN


136 *
	gmd_amode_°r
[
md_amode_NUM
] =

147 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

152 { "$r0", 
π_g¥
, 0 },

153 { "$zîo", 
π_g¥
, 0 },

154 { "$r1", 
π_g¥
, 1 },

155 { "$r2", 
π_g¥
, 2 },

156 { "$r3", 
π_g¥
, 3 },

157 { "$r4", 
π_g¥
, 4 },

158 { "$r5", 
π_g¥
, 5 },

159 { "$r6", 
π_g¥
, 6 },

160 { "$r7", 
π_g¥
, 7 },

161 { "$r8", 
π_g¥
, 8 },

162 { "$r9", 
π_g¥
, 9 },

163 { "$r10", 
π_g¥
, 10 },

164 { "$r11", 
π_g¥
, 11 },

165 { "$r12", 
π_g¥
, 12 },

166 { "$r13", 
π_g¥
, 13 },

167 { "$r14", 
π_g¥
, 14 },

168 { "$r15", 
π_g¥
, 15 },

169 { "$r16", 
π_g¥
, 16 },

170 { "$r17", 
π_g¥
, 17 },

171 { "$r18", 
π_g¥
, 18 },

172 { "$r19", 
π_g¥
, 19 },

173 { "$r20", 
π_g¥
, 20 },

174 { "$r21", 
π_g¥
, 21 },

175 { "$r22", 
π_g¥
, 22 },

176 { "$r23", 
π_g¥
, 23 },

177 { "$r24", 
π_g¥
, 24 },

178 { "$r25", 
π_g¥
, 25 },

179 { "$r26", 
π_g¥
, 26 },

180 { "$r27", 
π_g¥
, 27 },

181 { "$r28", 
π_g¥
, 28 },

182 { "$gp", 
π_g¥
, 28 },

183 { "$r29", 
π_g¥
, 29 },

184 { "$•", 
π_g¥
, 29 },

185 { "$r30", 
π_g¥
, 30 },

186 { "$Â", 
π_g¥
, 30 },

187 { "$r31", 
π_g¥
, 31 },

190 { "$f0", 
π_Âr
, 0 },

191 { "$f1", 
π_Âr
, 1 },

192 { "$f2", 
π_Âr
, 2 },

193 { "$f3", 
π_Âr
, 3 },

194 { "$f4", 
π_Âr
, 4 },

195 { "$f5", 
π_Âr
, 5 },

196 { "$f6", 
π_Âr
, 6 },

197 { "$f7", 
π_Âr
, 7 },

198 { "$f8", 
π_Âr
, 8 },

199 { "$f9", 
π_Âr
, 9 },

200 { "$f10", 
π_Âr
, 10 },

201 { "$f11", 
π_Âr
, 11 },

202 { "$f12", 
π_Âr
, 12 },

203 { "$f13", 
π_Âr
, 13 },

204 { "$f14", 
π_Âr
, 14 },

205 { "$f15", 
π_Âr
, 15 },

206 { "$f16", 
π_Âr
, 16 },

207 { "$f17", 
π_Âr
, 17 },

208 { "$f18", 
π_Âr
, 18 },

209 { "$f19", 
π_Âr
, 19 },

210 { "$f20", 
π_Âr
, 20 },

211 { "$f21", 
π_Âr
, 21 },

212 { "$f22", 
π_Âr
, 22 },

213 { "$f23", 
π_Âr
, 23 },

214 { "$f24", 
π_Âr
, 24 },

215 { "$f25", 
π_Âr
, 25 },

216 { "$f26", 
π_Âr
, 26 },

217 { "$f27", 
π_Âr
, 27 },

218 { "$f28", 
π_Âr
, 28 },

219 { "$f29", 
π_Âr
, 29 },

220 { "$f30", 
π_Âr
, 30 },

221 { "$f31", 
π_Âr
, 31 },

224 { "$d0", 
π_d¥
, 0 },

225 { "$d1", 
π_d¥
, 1 },

226 { "$d2", 
π_d¥
, 2 },

227 { "$d3", 
π_d¥
, 3 },

228 { "$d4", 
π_d¥
, 4 },

229 { "$d5", 
π_d¥
, 5 },

230 { "$d6", 
π_d¥
, 6 },

231 { "$d7", 
π_d¥
, 7 },

232 { "$d8", 
π_d¥
, 8 },

233 { "$d9", 
π_d¥
, 9 },

234 { "$d10", 
π_d¥
, 10 },

235 { "$d11", 
π_d¥
, 11 },

236 { "$d12", 
π_d¥
, 12 },

237 { "$d13", 
π_d¥
, 13 },

238 { "$d14", 
π_d¥
, 14 },

239 { "$d15", 
π_d¥
, 15 },

242 { "$l0", 
π_Õr
, 0 },

243 { "$l1", 
π_Õr
, 1 },

244 { "$l2", 
π_Õr
, 2 },

245 { "$l3", 
π_Õr
, 3 },

246 { "$l4", 
π_Õr
, 4 },

247 { "$l5", 
π_Õr
, 5 },

248 { "$l6", 
π_Õr
, 6 },

249 { "$l7", 
π_Õr
, 7 },

250 { "$l8", 
π_Õr
, 8 },

251 { "$l9", 
π_Õr
, 9 },

252 { "$l10", 
π_Õr
, 10 },

253 { "$l11", 
π_Õr
, 11 },

254 { "$l12", 
π_Õr
, 12 },

255 { "$l13", 
π_Õr
, 13 },

256 { "$l14", 
π_Õr
, 14 },

257 { "$l15", 
π_Õr
, 15 },

258 { "$l16", 
π_Õr
, 16 },

259 { "$l17", 
π_Õr
, 17 },

260 { "$l18", 
π_Õr
, 18 },

261 { "$l19", 
π_Õr
, 19 },

262 { "$l20", 
π_Õr
, 20 },

263 { "$l21", 
π_Õr
, 21 },

264 { "$l22", 
π_Õr
, 22 },

265 { "$l23", 
π_Õr
, 23 },

266 { "$l24", 
π_Õr
, 24 },

267 { "$l25", 
π_Õr
, 25 },

268 { "$l26", 
π_Õr
, 26 },

269 { "$l27", 
π_Õr
, 27 },

270 { "$l28", 
π_Õr
, 28 },

271 { "$l29", 
π_Õr
, 29 },

272 { "$l30", 
π_Õr
, 30 },

273 { "$l31", 
π_Õr
, 31 },

276 { "$hi", 
π_˘æ
, 0 },

277 { "$lo", 
π_˘æ
, 1 },

278 { "$fcc", 
π_˘æ
, 2 },

281 { "$pc", 
π_PC
, 0 },

282 { "$≈c", 
π_NPC
, 0 },

285 { 
NULL
, 
π_g¥
, 0 }

290 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

292 
i
;

294 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

296 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

297  
md_ªg_«mes
[
i
].
°r
;

301  
NULL
;

302 
	}
}

305 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

306 
is_wrôe
,

307 
md_ªg_ty≥
 
π
,

308 
ªg
,

309 
evÆ_vÆue_t
 *
vÆ
)

311 
π
)

313 
π_g¥
:

314 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

317 i‡(!
is_wrôe
)

319 
vÆ
->
ty≥
 = 
ë_uöt
;

320 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_R
[
ªg
];

323 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

326 
π_Õr
:

327 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

330 i‡(!
is_wrôe
)

332 
vÆ
->
ty≥
 = 
ë_uöt
;

333 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_F
.
l
[
ªg
];

336 
ªgs
->
ªgs_F
.
l
[
ªg
] = 
	`evÆ_as_uöt
(*
vÆ
);

339 
π_Âr
:

340 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

343 i‡(!
is_wrôe
)

345 
vÆ
->
ty≥
 = 
ë_Êﬂt
;

346 
vÆ
->
vÆue
.
as_Êﬂt
 = 
ªgs
->
ªgs_F
.
f
[
ªg
];

349 
ªgs
->
ªgs_F
.
f
[
ªg
] = 
	`evÆ_as_Êﬂt
(*
vÆ
);

352 
π_d¥
:

353 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
/2)

356 i‡(!
is_wrôe
)

358 
vÆ
->
ty≥
 = 
ë_doubÀ
;

359 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

362 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

365 
π_˘æ
:

366 
ªg
)

369 i‡(!
is_wrôe
)

371 
vÆ
->
ty≥
 = 
ë_uöt
;

372 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
hi
;

375 
ªgs
->
ªgs_C
.
hi
 = 
	`evÆ_as_uöt
(*
vÆ
);

379 i‡(!
is_wrôe
)

381 
vÆ
->
ty≥
 = 
ë_uöt
;

382 
vÆ
->
vÆue
.
as_uöt
 = 
ªgs
->
ªgs_C
.
lo
;

385 
ªgs
->
ªgs_C
.
lo
 = 
	`evÆ_as_uöt
(*
vÆ
);

389 i‡(!
is_wrôe
)

391 
vÆ
->
ty≥
 = 
ë_öt
;

392 
vÆ
->
vÆue
.
as_öt
 = 
ªgs
->
ªgs_C
.
fcc
;

395 
ªgs
->
ªgs_C
.
fcc
 = 
	`evÆ_as_uöt
(*
vÆ
);

403 
π_PC
:

404 i‡(!
is_wrôe
)

406 
vÆ
->
ty≥
 = 
ë_addr
;

407 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

410 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

413 
π_NPC
:

414 i‡(!
is_wrôe
)

416 
vÆ
->
ty≥
 = 
ë_addr
;

417 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

420 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

424 
	`∑nic
("bogusÑegister bank");

428  
NULL
;

429 
	}
}

433 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

435 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x",

436 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

437 
	}
}

440 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

442 
i
;

444 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

446 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

447 
	`Ârötf
(
°ªam
, " ");

448 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

449 
	`Ârötf
(
°ªam
, "\n");

451 
	}
}

455 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

457 
	`Ârötf
(
°ªam
, "%4s: %12d/0x%08x/%f",

458 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
l
[ªg],Ñegs.l[ªg],Ñegs.
f
[reg]);

459 i‡–!(
ªg
 & 1))

461 
	`Ârötf
(
°ªam
, " (%4sás double: %f)",

462 
	`md_ªg_«me
(
π_d¥
, 
ªg
/2), 
ªgs
.
d
[reg/2]);

464 
	}
}

467 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

469 
i
;

472 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

474 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

475 
	`Ârötf
(
°ªam
, "\n");

477 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

478 
	`Ârötf
(
°ªam
, "\n");

480 
	}
}

483 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

486 
ªg
)

489 
	`Ârötf
(
°ªam
, "HI: 0x%08x", 
ªgs
.
hi
);

493 
	`Ârötf
(
°ªam
, "LO: 0x%08x", 
ªgs
.
lo
);

497 
	`Ârötf
(
°ªam
, "FCC: 0x%08x", 
ªgs
.
fcc
);

501 
	`∑nic
("bogus controlÑegister index");

503 
	}
}

506 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

508 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

509 
	`Ârötf
(
°ªam
, " ");

510 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

511 
	`Ârötf
(
°ªam
, " ");

512 
	`md_¥öt_¸eg
(
ªgs
, 2, 
°ªam
);

513 
	`Ârötf
(
°ªam
, "\n");

514 
	}
}

517 
w‹d_t


518 
	$md_¸c_ªgs
(
ªgs_t
 *
ªgs
)

520 
i
;

521 
w‹d_t
 
¸c_accum
 = 0;

523 
i
=0; i < 
MD_NUM_IREGS
; i++)

524 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_R
[
i
]);

526 
i
=0; i < 
MD_NUM_FREGS
; i++)

527 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_F
.
l
[
i
]);

529 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
hi
);

530 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
lo
);

531 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_C
.
fcc
);

532 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_PC
);

533 
¸c_accum
 = 
	`¸c
(¸c_accum, 
ªgs
->
ªgs_NPC
);

535  
¸c_accum
;

536 
	}
}

539 
w‹d_t


540 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

542 
i
;

543 
w‹d_t
 
checksum
 = 0;

545 
i
=0; i < 
MD_NUM_IREGS
; i++)

546 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

548 
i
=0; i < 
MD_NUM_FREGS
; i++)

549 
checksum
 ^
ªgs
->
ªgs_F
.
l
[
i
];

551 
checksum
 ^
ªgs
->
ªgs_C
.
hi
;

552 
checksum
 ^
ªgs
->
ªgs_C
.
lo
;

553 
checksum
 ^
ªgs
->
ªgs_C
.
fcc
;

554 
checksum
 ^
ªgs
->
ªgs_PC
;

555 
checksum
 ^
ªgs
->
ªgs_NPC
;

557  
checksum
;

558 
	}
}

562 
	$md_öô_decodî
()

565 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
) \

566 i‡(
md_mask2›
[(
MSK
)]Ë
	`Áèl
("doubly defined mask value"); \

567 i‡((
MSK
Ë>
MD_MAX_MASK
Ë
	`Áèl
("mask value isÅooÜarge"); \

568 
md_mask2›
[(
MSK
)]=(
OP
);

	)

570 
	~"machöe.def
"

571 
	}
}

575 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

576 
md_addr_t
 
pc
,

577 
FILE
 *
°ªam
)

579 
md_›code
 
›
;

582 i‡(!
°ªam
)

583 
°ªam
 = 
°dîr
;

586 
	`MD_SET_OPCODE
(
›
, 
ö°
);

589 i‡(
›
 =
OP_NA
 || o∞>
OP_MAX
)

592 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x:%08x>", 
ö°
.
a
, in°.
b
);

596 *
s
;

598 
	`Ârötf
(
°ªam
, "%-10s", 
	`MD_OP_NAME
(
›
));

600 
s
 = 
	`MD_OP_FORMAT
(
›
);

601 *
s
) {

602 *
s
) {

604 
	`Ârötf
(
°ªam
, "r%d", 
RD
);

607 
	`Ârötf
(
°ªam
, "r%d", 
RS
);

610 
	`Ârötf
(
°ªam
, "r%d", 
RT
);

613 
	`Ârötf
(
°ªam
, "r%d", 
BS
);

616 
	`Ârötf
(
°ªam
, "f%d", 
FD
);

619 
	`Ârötf
(
°ªam
, "f%d", 
FS
);

622 
	`Ârötf
(
°ªam
, "f%d", 
FT
);

625 
	`Ârötf
(
°ªam
, "0x%x", (
pc
 + 8 + (
OFS
 << 2)));

629 
	`Ârötf
(
°ªam
, "%d", 
IMM
);

632 
	`Ârötf
(
°ªam
, "%d", 
SHAMT
);

635 
	`Ârötf
(
°ªam
, "%u", 
UIMM
);

638 
	`Ârötf
(
°ªam
, "0x%x", 
UIMM
);

641 
	`Ârötf
(
°ªam
, "0x%x", ((
pc
 & 036000000000Ë| (
TARG
 << 2)));

644 
	`Ârötf
(
°ªam
, "0x%x", 
BCODE
);

649 i‡(
SS_COMP_OP
 =
SS_COMP_NOP
)

650 
	`Ârötf
(
°ªam
, ")");

651 i‡(
SS_COMP_OP
 =
SS_COMP_POST_INC
)

652 
	`Ârötf
(
°ªam
, ")+");

653 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DEC
)

654 
	`Ârötf
(
°ªam
, ")-");

655 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_INC
)

656 
	`Ârötf
(
°ªam
, ")^+");

657 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DEC
)

658 
	`Ârötf
(
°ªam
, ")^-");

659 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_INC
)

660 
	`Ârötf
(
°ªam
, ")++");

661 i‡(
SS_COMP_OP
 =
SS_COMP_POST_DBL_DEC
)

662 
	`Ârötf
(
°ªam
, ")--");

663 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_INC
)

664 
	`Ârötf
(
°ªam
, ")^++");

665 i‡(
SS_COMP_OP
 =
SS_COMP_PRE_DBL_DEC
)

666 
	`Ârötf
(
°ªam
, ")^--");

668 
	`∑nic
("bogus SS_COMP_OP");

673 
	`Âutc
(*
s
, 
°ªam
);

675 
s
++;

678 
	}
}

687 
	#XX
 0x6bababab

	)

690 
	gss_f‹e_èb
[ 8][ 5] = {

694  { 
XX
, XX, XX, XX, XX, },

696  { 
XX
, XX, XX, XX, XX, },

697  { 
XX
, XX, XX, XX, XX, },

698  { 
XX
, XX, XX, XX, XX, },

703 
	gss_a·_èb
[ 8][ 5] = {

707  { 
XX
, XX, XX, XX, XX, },

709  { 
XX
, XX, XX, XX, XX, },

710  { 
XX
, XX, XX, XX, XX, },

711  { 
XX
, XX, XX, XX, XX, },

716 
md_addr_t
 
	gss_Ã_ãmp
;

719 
md_addr_t
 
	gãmp_bs
, 
	gãmp_rd
;

	@target-pisa/pisa.h

52 #i‚de‡
PISA_H


53 
	#PISA_H


	)

55 
	~<°dio.h
>

57 
	~"ho°.h
"

58 
	~"misc.h
"

59 
	~"c⁄fig.h
"

60 
	~"ídün.h
"

68 
	#TARGET_PISA


	)

70 #i‚de‡
TARGET_PISA_BIG


71 #i‚de‡
TARGET_PISA_LITTLE


73 #ifde‡
BYTES_BIG_ENDIAN


74 
	#TARGET_PISA_BIG


	)

76 
	#TARGET_PISA_LITTLE


	)

82 #i‡
deföed
(
BYTES_BIG_ENDIAN
Ë&& deföed(
TARGET_PISA_LITTLE
)

83 
	#MD_CROSS_ENDIAN


	)

85 #i‡
deföed
(
BYTES_LITTLE_ENDIAN
Ë&& deföed(
TARGET_PISA_BIG
)

86 
	#MD_CROSS_ENDIAN


	)

90 
	#NA
 0

	)

97 #unde‡
MD_QWORD_ADDRS


100 
w‹d_t
 
	tmd_addr_t
;

108 
	#MD_PAGE_SIZE
 4096

	)

109 
	#MD_LOG_PAGE_SIZE
 12

	)

116 
	emd_Áu…_ty≥
 {

117 
	mmd_Áu…_n⁄e
 = 0,

118 
	mmd_Áu…_ac˚ss
,

119 
	mmd_Áu…_Æignmít
,

120 
	mmd_Áu…_ovîÊow
,

121 
	mmd_Áu…_div0
,

122 
	mmd_Áu…_bªak
,

123 
	mmd_Áu…_unim∂
,

124 
	mmd_Áu…_öã∫Æ


133 
	#MD_NUM_IREGS
 32

	)

136 
	#MD_NUM_FREGS
 32

	)

139 
	#MD_NUM_CREGS
 3

	)

142 
	#MD_TOTAL_REGS
 \

143 –32 + 32 + 3 + 1 + 1 + 1)

	)

146 
sw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

150 
sw‹d_t
 
	ml
[
MD_NUM_FREGS
];

151 
sÊﬂt_t
 
	mf
[
MD_NUM_FREGS
];

152 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
/2];

153 } 
	tmd_Âr_t
;

157 
sw‹d_t
 
	mhi
, 
	mlo
;

158 
	mfcc
;

159 } 
	tmd_˘æ_t
;

162 
	emd_ªg_«mes
 {

163 
	mMD_REG_ZERO
 = 0,

164 
	mMD_REG_GP
 = 28,

165 
	mMD_REG_SP
 = 29,

166 
	mMD_REG_FP
 = 30

176 
w‹d_t
 
	ma
;

177 
w‹d_t
 
	mb
;

178 } 
	tmd_ö°_t
;

181 
md_ö°_t
 
MD_NOP_INST
;

184 #ifde‡
MD_CROSS_ENDIAN


186 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

187 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

188 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

189 
	#MD_SWAPI
(
X
Ë((X).
a
 = 
	`SWAP_WORD
((X).a), \

190 (
X
).
b
 = 
	`SWAP_WORD
((X).b))

	)

194 
	#MD_SWAPH
(
X
Ë(X)

	)

195 
	#MD_SWAPW
(
X
Ë(X)

	)

196 
	#MD_SWAPQ
(
X
Ë(X)

	)

197 
	#MD_SWAPD
(
X
Ë(X)

	)

198 
	#MD_SWAPI
(
X
Ë(X)

	)

203 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
) \

204 { 
ö°
.
a
 = 
	`MEM_READ_WORD
(
mem
, (
PC
)); \

205 
ö°
.
b
 = 
	`MEM_READ_WORD
(
mem
, (
PC
Ë+ (
w‹d_t
)); }

	)

212 
	#MD_TEXT_BASE
 0x00400000

	)

213 
	#MD_DATA_BASE
 0x10000000

	)

214 
	#MD_STACK_BASE
 0x7fffc000

	)

217 
	#MD_MAX_ENVIRON
 16384

	)

225 
	#MD_OPFIELD
(
INST
Ë(INST.
a
 & 0xff)

	)

226 
	#MD_SET_OPCODE
(
OP
, 
INST
Ë((OPË((INST).
a
 & 0xff))

	)

230 
	#MD_MAX_MASK
 255

	)

233 
	emd_›code
 {

234 
	mOP_NA
 = 0,

235 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

236 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

237 
	#CONNECT
(
OP
)

	)

238 
	~"machöe.def
"

239 
	mOP_MAX


243 
	#MD_OP_ENUM
(
MSK
Ë(
md_mask2›
[MSK])

	)

244 
md_›code
 
md_mask2›
[];

247 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

248 *
md_›2«me
[];

251 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

252 *
md_›2f‹m©
[];

255 
	emd_fu_˛ass
 {

256 
	mFUCœss_NA
 = 0,

257 
	mI¡ALU
,

258 
	mI¡MULT
,

259 
	mI¡DIV
,

260 
	mFlﬂtADD
,

261 
	mFlﬂtCMP
,

262 
	mFlﬂtCVT
,

263 
	mFlﬂtMULT
,

264 
	mFlﬂtDIV
,

265 
	mFlﬂtSQRT
,

266 
	mRdP‹t
,

267 
	mWrP‹t
,

268 
	mNUM_FU_CLASSES


272 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

273 
md_fu_˛ass
 
md_›2fu
[];

276 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

277 *
md_fu2«me
[];

280 
	#F_ICOMP
 0x00000001

	)

281 
	#F_FCOMP
 0x00000002

	)

282 
	#F_CTRL
 0x00000004

	)

283 
	#F_UNCOND
 0x00000008

	)

284 
	#F_COND
 0x00000010

	)

285 
	#F_MEM
 0x00000020

	)

286 
	#F_LOAD
 0x00000040

	)

287 
	#F_STORE
 0x00000080

	)

288 
	#F_DISP
 0x00000100

	)

289 
	#F_RR
 0x00000200

	)

290 
	#F_DIRECT
 0x00000400

	)

291 
	#F_TRAP
 0x00000800

	)

292 
	#F_LONGLAT
 0x00001000

	)

293 
	#F_DIRJMP
 0x00002000

	)

294 
	#F_INDIRJMP
 0x00004000

	)

295 
	#F_CALL
 0x00008000

	)

296 
	#F_FPCOND
 0x00010000

	)

297 
	#F_IMM
 0x00020000

	)

300 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

301 
md_›2Êags
[];

304 #unde‡
RS


305 
	#RS
 (
ö°
.
b
 >> 24Ë

	)

306 
	#RT
 ((
ö°
.
b
 >> 16Ë& 0xffË

	)

307 
	#RD
 ((
ö°
.
b
 >> 8Ë& 0xffË

	)

310 
	#SHAMT
 (
ö°
.
b
 & 0xff)

	)

313 
	#FS
 
RS


	)

314 
	#FT
 
RT


	)

315 
	#FD
 
RD


	)

318 
	#IMM
 (()(–)(
ö°
.
b
 & 0xffff)))

	)

321 
	#UIMM
 (
ö°
.
b
 & 0xffff)

	)

324 
	#TARG
 (
ö°
.
b
 & 0x3ffffff)

	)

327 
	#BCODE
 (
ö°
.
b
 & 0xfffff)

	)

330 
	#OFS
 
IMM


	)

333 
	#BS
 
RS


	)

336 
	#MAXINT_VAL
 0x7fffffff

	)

339 
	#OVER
(
X
,
Y
) \

340 ((((
X
Ë> 0Ë&& ((
Y
Ë> 0Ë&& (
MAXINT_VAL
 - (X) < (Y))) \

341 || (((
X
Ë< 0Ë&& ((
Y
Ë< 0Ë&& (-
MAXINT_VAL
 - (XË> (Y))))

	)

344 
	#UNDER
(
X
,
Y
) \

345 ((((
X
Ë> 0Ë&& ((
Y
Ë< 0Ë&& (
MAXINT_VAL
 + (Y) < (X))) \

346 || (((
X
Ë< 0Ë&& ((
Y
Ë> 0Ë&& (-
MAXINT_VAL
 + (YË> (X))))

	)

349 #i‚de‡
SET_TPC


350 
	#SET_TPC
(
PC
Ë()0

	)

353 #ifde‡
BYTES_BIG_ENDIAN


355 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

356 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

357 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

358 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

359 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

362 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

363 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

364 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

365 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

366 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

369 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

370 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

371 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

372 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

373 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

376 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

377 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

378 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

379 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

380 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

384 
w‹d_t
 
md_Ã_masks
[];

388 
	#WL_SIZE
(
ADDR
Ë(4-((ADDRË& 0x03))

	)

389 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

390 
	#WL_PROT_MASK
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

393 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

394 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

395 
	#WR_PROT_MASK
(
ADDR
Ë(~(
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

398 
	#WL_SIZE
(
ADDR
Ë((ADDRË& 0x03)

	)

399 
	#WL_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

400 
	#WL_PROT_MASK1
(
ADDR
Ë(
md_Ã_masks
[
	`WL_SIZE
(ADDR)])

	)

401 
	#WL_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WL_SIZE
(ADDR)])

	)

404 
	#WR_SIZE
(
ADDR
Ë(((ADDRË& 0x03)+1)

	)

405 
	#WR_BASE
(
ADDR
Ë((ADDRË& ~0x03)

	)

406 
	#WR_PROT_MASK1
(
ADDR
Ë((
md_Ã_masks
[
	`WR_SIZE
(ADDR)]))

	)

407 
	#WR_PROT_MASK2
(
ADDR
Ë(
md_Ã_masks
[4-
	`WR_SIZE
(ADDR)])

	)

416 
	#SS_SYS_exô
 1

	)

417 
	#MD_EXIT_SYSCALL
(
REGS
Ë((REGS)->
ªgs_R
[2] =
SS_SYS_exô
)

	)

420 
	#SS_SYS_wrôe
 4

	)

421 
	#MD_OUTPUT_SYSCALL
(
REGS
) \

422 ((
REGS
)->
ªgs_R
[2] =
SS_SYS_wrôe
 \

423 && ((
REGS
)->
ªgs_R
[4] == 1 \

424 || (
REGS
)->
ªgs_R
[4] = 2))

	)

427 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[4])

	)

430 
	#MD_IS_CALL
(
OP
) \

431 ((
	`MD_OP_FLAGS
(
OP
Ë& (
F_CTRL
|
F_CALL
)Ë=(F_CTRL|F_CALL))

	)

434 
	#MD_IS_RETURN
(
OP
Ë((OPË=
JR
 && (
RS
Ë=31)

	)

437 
	#MD_IS_INDIR
(
OP
Ë((OPË=
JR
)

	)

440 
	emd_amode_ty≥
 {

441 
	mmd_amode_imm
,

442 
	mmd_amode_gp
,

443 
	mmd_amode_•
,

444 
	mmd_amode_Â
,

445 
	mmd_amode_di•
,

446 
	mmd_amode_º
,

447 
	mmd_amode_NUM


449 *
md_amode_°r
[
md_amode_NUM
];

452 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
) \

453 { i‡((
OP
Ë=
LUI
Ë(
FSM
Ë(
RT
); }

	)

456 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
) \

458 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_DISP
) \

460 i‡((
BS
Ë=(
FSM
)) \

461 (
AM
Ë
md_amode_imm
; \

462 i‡((
BS
Ë=
MD_REG_GP
) \

463 (
AM
Ë
md_amode_gp
; \

464 i‡((
BS
Ë=
MD_REG_SP
) \

465 (
AM
Ë
md_amode_•
; \

466 i‡((
BS
Ë=
MD_REG_FP
) \

467 (
AM
Ë
md_amode_Â
; \

469 (
AM
Ë
md_amode_di•
; \

471 i‡(
	`MD_OP_FLAGS
(
OP
Ë& 
F_RR
) \

472 (
AM
Ë
md_amode_º
; \

474 
	`∑nic
("cannot decodeáddressing mode"); \

475 }

	)

478 
	#MD_AMODE_POSTPROBE
(
FSM
) \

479 { (
FSM
Ë
MD_REG_ZERO
; }

	)

487 
	#MD_EIO_FILE_FORMAT
 
EIO_PISA_FORMAT


	)

489 
	#MD_MISC_REGS_TO_EXO
(
REGS
) \

490 
	`exo_√w
(
ec_li°
, \

491  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

492  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

493  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

494  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
hi
), \

495  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
lo
), \

496  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
fcc
),\

497 
NULL
)

	)

499 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
) \

500 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

	)

502 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
) \

503 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
l
[
IDX
])

	)

505 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
) \

507 i‡(!
exo
 \

508 || 
exo
->
ec
 !
ec_li°
 \

509 || !
exo
->
as_li°
.
hód
 \

510 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

511 || !
exo
->
as_li°
.
hód
->
√xt
 \

512 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

513 || !
exo
->
as_li°
.
hód
->
√xt
->next \

514 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

515 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

516 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

517 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

518 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

519 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next->next \

520 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
ec
 !
ec_öãgî
\

521 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->√xà!
NULL
) \

522 
	`Áèl
("couldÇotÑead EIO miscÑegs"); \

523 (
ICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

524 (
REGS
)->
ªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
; \

525 (
REGS
)->
ªgs_NPC
 = \

526 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
; \

527 (
REGS
)->
ªgs_C
.
hi
 = \

528 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

529 (
REGS
)->
ªgs_C
.
lo
 = \

530 (
w‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
; \

531 (
REGS
)->
ªgs_C
.
fcc
 = \

532 ()
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

	)

534 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
) \

535 ((
REGS
)->
ªgs_R
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

537 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
) \

538 ((
REGS
)->
ªgs_F
.
l
[
IDX
] = (
w‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

540 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
) \

541 ((
REGS
)->
ªgs_R
[
IDX
] !(
sw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

	)

543 
	#MD_FIRST_IN_REG
 2

	)

544 
	#MD_LAST_IN_REG
 7

	)

546 
	#MD_FIRST_OUT_REG
 2

	)

547 
	#MD_LAST_OUT_REG
 7

	)

555 
qw‹d_t
 
	texo_addªss_t
;

558 
qw‹d_t
 
	texo_öãgî_t
;

561 
	texo_Êﬂt_t
;

569 #ifde‡
HOST_HAS_QWORD


570 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

571 
	#sc_cou¡î
 
sc_sqw‹d


	)

572 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

574 
	#°©_ªg_cou¡î
 
°©_ªg_doubÀ


	)

575 
	#sc_cou¡î
 
sc_doubÀ


	)

576 
	#f‹_cou¡î
 
f‹_doubÀ


	)

580 
	#°©_ªg_addr
 
°©_ªg_uöt


	)

588 
	emd_ªg_ty≥
 {

589 
	mπ_g¥
,

590 
	mπ_Õr
,

591 
	mπ_Âr
,

592 
	mπ_d¥
,

593 
	mπ_˘æ
,

594 
	mπ_PC
,

595 
	mπ_NPC
,

596 
	mπ_NUM


600 
	smd_ªg_«mes_t
 {

601 *
	m°r
;

602 
md_ªg_ty≥
 
	mfûe
;

603 
	mªg
;

607 
md_ªg_«mes_t
 
md_ªg_«mes
[];

610 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

613 
	gevÆ_vÆue_t
;

614 
	gªgs_t
;

616 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

617 
is_wrôe
,

618 
md_ªg_ty≥
 
π
,

619 
ªg
,

620 
evÆ_vÆue_t
 *
vÆ
);

623 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

624 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

627 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

628 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

631 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

632 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

635 
w‹d_t
 
md_¸c_ªgs
(
ªgs_t
 *
ªgs
);

638 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

646 
	#MD_AGEN_OP
 
ADD


	)

649 
	#MD_NOP_OP
 
NOP


	)

653 
	#MD_VALID_ADDR
(
ADDR
) \

654 (((
ADDR
Ë>
ld_ãxt_ba£
 && (ADDRË< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

655 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_°ack_ba£
))

	)

664 
	#MD_BR_SHIFT
 3

	)

672 
md_öô_decodî
();

676 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

677 
md_addr_t
 
pc
,

678 
FILE
 *
°ªam
);

701 
	#SS_PAGE_SIZE
 4096

	)

704 
	#SS_NUM_REGS
 32

	)

707 
	#SS_TOTAL_REGS
 \

708 (
SS_NUM_REGS
+SS_NUM_REGS+ 1+ 1+ 1+ 1+ \

709  1+ 1)

	)

712 
	#SS_COMP_OP
 ((
ö°
.
a
 & 0xff00Ë>> 8)

	)

715 
	#SS_COMP_NOP
 0x00

	)

716 
	#SS_COMP_POST_INC
 0x01

	)

717 
	#SS_COMP_POST_DEC
 0x02

	)

718 
	#SS_COMP_PRE_INC
 0x03

	)

719 
	#SS_COMP_PRE_DEC
 0x04

	)

720 
	#SS_COMP_POST_DBL_INC
 0x05

	)

721 
	#SS_COMP_POST_DBL_DEC
 0x06

	)

722 
	#SS_COMP_PRE_DBL_INC
 0x07

	)

723 
	#SS_COMP_PRE_DBL_DEC
 0x08

	)

730 
	#INC_DEC
(
EXPR
, 
REG
, 
SIZE
) \

731 (
	`SET_GPR
((
REG
), 
	`GPR
(REGË+ 
ss_f‹e_èb
[(
SIZE
)-1][
SS_COMP_OP
]), \

732 (
EXPR
), \

733 
	`SET_GPR
((
REG
), 
	`GPR
(REGË+ 
ss_a·_èb
[(
SIZE
)-1][
SS_COMP_OP
]))

	)

736 
ss_f‹e_èb
[8][5];

737 
ss_a·_èb
[8][5];

740 
	#Rgp
 28

	)

741 
	#R•
 29

	)

742 
	#RÂ
 30

	)

745 
SS_ADDR_TYPE
 
ss_Ã_ãmp
;

748 
SS_ADDR_TYPE
 
ãmp_bs
, 
ãmp_rd
;

754 #i‚de‡
IFAIL


755 
	#IFAIL
(
S
Ë
	`Áèl
(S)

	)

759 
	#DIV0
(
N
Ë(((NË=0Ë? 
	`IFAIL
("dividêby 0"Ë: ()0)

	)

762 
	#INTALIGN
(
N
) (((N) & 01) \

763 ? 
	`IFAIL
("bad INTÑegi°îálignmít"Ë: ()0)

	)

766 
	#FPALIGN
(
N
) (((N) & 01) \

767 ? 
	`IFAIL
("bad FPÑegi°îálignmít"Ë: ()0)

	)

770 
	#TALIGN
(
TARG
) (((TARG) & 0x7) \

771 ? 
	`IFAIL
("bad jum∞Æignmít"Ë: ()0)

	)

773 
	#OVER
(
X
,
Y
Ë(()0)

	)

774 
	#UNDER
(
X
,
Y
Ë(()0)

	)

775 
	#DIV0
(
N
Ë(()0)

	)

776 
	#INTALIGN
(
N
Ë(()0)

	)

777 
	#FPALIGN
(
N
Ë(()0)

	)

778 
	#TALIGN
(
TARG
Ë(()0)

	)

783 
	#IDIV
(
A
, 
B
Ë((AË/ (B))

	)

784 
	#IMOD
(
A
, 
B
Ë((AË% (B))

	)

785 
	#FDIV
(
A
, 
B
Ë((AË/ (B))

	)

786 
	#FINT
(
A
Ë(()A)

	)

	@target-pisa/symbol.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 #ifde‡
BFD_LOADER


58 
	~<bfd.h
>

60 
	~"èrgë-piß/ecoff.h
"

62 
	~"lﬂdî.h
"

63 
	~"symbﬁ.h
"

68 
sym_sym_t
 *
	gsym_db
 = 
NULL
;

71 
	gsym_nsyms
 = 0;

72 
sym_sym_t
 **
	gsym_syms
 = 
NULL
;

75 
sym_sym_t
 **
	gsym_syms_by_«me
 = 
NULL
;

78 
	gsym_¡extsyms
 = 0;

79 
sym_sym_t
 **
	gsym_ãxtsyms
 = 
NULL
;

82 
sym_sym_t
 **
	gsym_ãxtsyms_by_«me
 = 
NULL
;

85 
	gsym_nd©asyms
 = 0;

86 
sym_sym_t
 **
	gsym_d©asyms
 = 
NULL
;

89 
sym_sym_t
 **
	gsym_d©asyms_by_«me
 = 
NULL
;

92 
	gsyms_lﬂded
 = 
FALSE
;

94 #ifde‡
PRINT_SYMS


97 
	$Êags2°r
(
Êags
)

99 
buf
[256];

100 *
p
;

102 i‡(!
Êags
)

105 
p
 = 
buf
;

106 *
p
 = '\0';

108 i‡(
Êags
 & 
BSF_LOCAL
)

110 *
p
++ = 'L';

111 *
p
++ = '|';

113 i‡(
Êags
 & 
BSF_GLOBAL
)

115 *
p
++ = 'G';

116 *
p
++ = '|';

118 i‡(
Êags
 & 
BSF_DEBUGGING
)

120 *
p
++ = 'D';

121 *
p
++ = '|';

123 i‡(
Êags
 & 
BSF_FUNCTION
)

125 *
p
++ = 'F';

126 *
p
++ = '|';

128 i‡(
Êags
 & 
BSF_KEEP
)

130 *
p
++ = 'K';

131 *
p
++ = '|';

133 i‡(
Êags
 & 
BSF_KEEP_G
)

135 *
p
++ = 'k'; *p++ = '|';

137 i‡(
Êags
 & 
BSF_WEAK
)

139 *
p
++ = 'W';

140 *
p
++ = '|';

142 i‡(
Êags
 & 
BSF_SECTION_SYM
)

144 *
p
++ = 'S'; *p++ = '|';

146 i‡(
Êags
 & 
BSF_OLD_COMMON
)

148 *
p
++ = 'O';

149 *
p
++ = '|';

151 i‡(
Êags
 & 
BSF_NOT_AT_END
)

153 *
p
++ = 'N';

154 *
p
++ = '|';

156 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

158 *
p
++ = 'C';

159 *
p
++ = '|';

161 i‡(
Êags
 & 
BSF_WARNING
)

163 *
p
++ = 'w';

164 *
p
++ = '|';

166 i‡(
Êags
 & 
BSF_INDIRECT
)

168 *
p
++ = 'I';

169 *
p
++ = '|';

171 i‡(
Êags
 & 
BSF_FILE
)

173 *
p
++ = 'f';

174 *
p
++ = '|';

177 i‡(
p
 =
buf
)

178 
	`∑nic
("no flags detected");

180 *--
p
 = '\0';

181  
buf
;

182 
	}
}

187 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

189  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

190 
	}
}

194 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

196  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

197 
	}
}

199 
	#RELEVANT_SCOPE
(
SYM
) \

201 ((
SYM
)->
Êags
 & 
BSF_GLOBAL
) \

203 (((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == BSF_LOCAL) \

204 && (
SYM
)->
«me
[0] != '$') \

206 
lﬂd_loˇls
 \

208 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

209 && (
SYM
)->
«me
[0] == '$') \

211 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

212 && (
SYM
)->
«me
[0] ='$'))))

	)

217 
	$sym_lﬂdsyms
(*
‚ame
,

218 
lﬂd_loˇls
)

220 
i
, 
debug_˙t
;

221 #ifde‡
BFD_LOADER


222 
bfd
 *
abfd
;

223 
asymbﬁ
 **
syms
;

224 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

226 
Àn
;

227 
FILE
 *
fobj
;

228 
ecoff_fûehdr
 
fhdr
;

229 
ecoff_aouthdr
 
ahdr
;

230 
ecoff_symhdr_t
 
symhdr
;

231 *
°πab
 = 
NULL
;

232 
ecoff_EXTR
 *
exå
;

235 i‡(
syms_lﬂded
)

242 #ifde‡
BFD_LOADER


245 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

246 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

247 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

252 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

254 
	`bfd_˛o£
(
abfd
);

255 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

259 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

260 
	`∑nic
("binaryÉndian changed");

262 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

265 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

266 i‡(
°‹age
 <= 0)

267 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

269 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

270 i‡(!
syms
)

271 
	`Áèl
("out of virtual memory");

273 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

274 i‡(
nsyms
 <= 0)

275 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

282 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

283 
i
=0; i < 
nsyms
; i++)

285 
asymbﬁ
 *
sym
 = 
syms
[
i
];

289 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

290 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

291 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

292 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

293 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

295 && 
	`RELEVANT_SCOPE
(
sym
))

298 
sym_nd©asyms
++;

299 #ifde‡
PRINT_SYMS


300 
	`Ârötf
(
°dîr
,

302 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

303 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

307 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

309 && 
	`RELEVANT_SCOPE
(
sym
))

312 
sym_¡extsyms
++;

313 #ifde‡
PRINT_SYMS


314 
	`Ârötf
(
°dîr
,

316 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

317 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

323 #ifde‡
PRINT_SYMS


324 
	`Ârötf
(
°dîr
,

326 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

327 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

331 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

332 i‡(
sym_nsyms
 <= 0)

333 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

336 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

337 i‡(!
sym_db
)

338 
	`Áèl
("out of virtual memory");

341 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

343 
asymbﬁ
 *
sym
 = 
syms
[
i
];

347 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

348 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

349 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

350 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

351 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

353 && 
	`RELEVANT_SCOPE
(
sym
))

356 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

357 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

358 
sym_db
[
debug_˙t
].
öôülized
 =

359 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

360 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

361 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

362 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

363 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

364 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

366 
debug_˙t
++;

369 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

371 && 
	`RELEVANT_SCOPE
(
sym
))

374 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

375 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

376 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

377 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

378 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

379 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

381 
debug_˙t
++;

389 i‡(
debug_˙t
 !
sym_nsyms
)

390 
	`∑nic
("couldÇotÜocateáll counted symbols");

393 
	`‰ì
(
syms
);

397 i‡(!
	`bfd_˛o£
(
abfd
))

398 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

403 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

404 
fobj
 = 
	`f›í
(
‚ame
, "rb");

406 
fobj
 = 
	`f›í
(
‚ame
, "r");

408 i‡(!
fobj
)

409 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

411 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

412 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

415 i‡(
fhdr
.
f_magic
 !
ECOFF_EB_MAGIC
 && fhdr.f_magi¯!
ECOFF_EL_MAGIC
)

416 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

418 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

419 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

422 
	`f£ek
(
fobj
, 
fhdr
.
f_sym±r
, 0);

424 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

425 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

427 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

428 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

431 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

432 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

433 i‡(!
°πab
)

434 
	`Áèl
("out of virtual memory");

437 
	`f£ek
(
fobj
, 
symhdr
.
cbSsOff£t
, 0);

438 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 0)

439 
	`Áèl
("error whileÑeading symbolÅableÇames");

442 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

443 i‡(
Àn
 <= 0)

444 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

445 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

446 i‡(!
sym_db
)

447 
	`Áèl
("out of virtual memory");

450 
exå
 =

451 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

452 i‡(!
exå
)

453 
	`Áèl
("out of virtual memory");

455 
	`f£ek
(
fobj
, 
symhdr
.
cbExtOff£t
, 0);

456 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 0)

457 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

459 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

462 
i
=0; i < 
symhdr
.
õxtMax
; i++)

464 
°r_off£t
;

466 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

469 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

471 
i
, 
exå
[i].
ifd
,

472 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

473 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

474 
exå
[
i
].
asym
.
ödex
);

475 
	`¥ötf
(" %08x %2d %2d %s\n",

476 
exå
[
i
].
asym
.
vÆue
,

477 
exå
[
i
].
asym
.
°
,

478 
exå
[
i
].
asym
.
sc
,

479 &
°πab
[
°r_off£t
]);

482 
exå
[
i
].
asym
.
°
)

484 
ECOFF_°GlobÆ
:

485 
ECOFF_°Sètic
:

487 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

488 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

489 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

490 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

491 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

492 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

493 
sym_nsyms
++;

494 
sym_nd©asyms
++;

497 
ECOFF_°Proc
:

498 
ECOFF_°SèticProc
:

499 
ECOFF_°Labñ
:

501 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

502 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

503 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

504 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

505 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

506 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

507 
sym_nsyms
++;

508 
sym_¡extsyms
++;

515 
	`‰ì
(
exå
);

518 i‡(
	`f˛o£
(
fobj
))

519 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

528 
sym_syms
 =

529 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

530 i‡(!
sym_syms
)

531 
	`Áèl
("out of virtual memory");

533 
sym_syms_by_«me
 =

534 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

535 i‡(!
sym_syms_by_«me
)

536 
	`Áèl
("out of virtual memory");

538 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

540 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

541 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

542 
debug_˙t
++;

545 i‡(
debug_˙t
 !
sym_nsyms
)

546 
	`∑nic
("couldÇotÜocateáll symbols");

549 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
acmp
);

552 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (*)
ncmp
);

555 
sym_ãxtsyms
 =

556 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

557 i‡(!
sym_ãxtsyms
)

558 
	`Áèl
("out of virtual memory");

560 
sym_ãxtsyms_by_«me
 =

561 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

562 i‡(!
sym_ãxtsyms_by_«me
)

563 
	`Áèl
("out of virtual memory");

565 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

567 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

569 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

570 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

571 
debug_˙t
++;

575 i‡(
debug_˙t
 !
sym_¡extsyms
)

576 
	`∑nic
("couldÇotÜocateállÅext symbols");

579 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (*)
acmp
);

582 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
,

583 (
sym_sym_t
 *), (*)
ncmp
);

586 
sym_d©asyms
 =

587 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

588 i‡(!
sym_d©asyms
)

589 
	`Áèl
("out of virtual memory");

591 
sym_d©asyms_by_«me
 =

592 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

593 i‡(!
sym_d©asyms_by_«me
)

594 
	`Áèl
("out of virtual memory");

596 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

598 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

600 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

601 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

602 
debug_˙t
++;

606 i‡(
debug_˙t
 !
sym_nd©asyms
)

607 
	`∑nic
("couldÇotÜocateáll data symbols");

610 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (*)
acmp
);

613 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
,

614 (
sym_sym_t
 *), (*)
ncmp
);

617 
i
=0; i<
sym_¡extsyms
; i++)

619 
sym_ãxtsyms
[
i
]->
size
 =

620 (
i
 !(
sym_¡extsyms
 - 1)

621 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

622 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

624 
i
=0; i<
sym_nd©asyms
; i++)

626 
sym_d©asyms
[
i
]->
size
 =

627 (
i
 !(
sym_nd©asyms
 - 1)

628 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

629 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

633 
syms_lﬂded
 = 
TRUE
;

634 
	}
}

638 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

639 
FILE
 *
fd
)

641 
	`Ârötf
(
fd
,

643 
sym
->
«me
,

644 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

645 
sym
->
öôülized
 ? "y" : "n",

646 
sym
->
pub
 ? "y" : "n",

647 
sym
->
loˇl
 ? "y" : "n",

648 
sym
->
addr
,

649 
sym
->
size
);

650 
	}
}

654 
	$sym_dumpsyms
(
FILE
 *
fd
)

656 
i
;

658 
i
=0; i < 
sym_nsyms
; i++)

659 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

660 
	}
}

664 
	$sym_dump°©e
(
FILE
 *
fd
)

666 
i
;

668 i‡(
fd
 =
NULL
)

669 
fd
 = 
°dîr
;

671 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

672 
i
=0; i < 
sym_nsyms
; i++)

673 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

675 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

676 
i
=0; i < 
sym_nsyms
; i++)

677 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

679 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

680 
i
=0; i < 
sym_¡extsyms
; i++)

681 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

683 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

684 
i
=0; i < 
sym_¡extsyms
; i++)

685 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

687 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

688 
i
=0; i < 
sym_nd©asyms
; i++)

689 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

691 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

692 
i
=0; i < 
sym_nd©asyms
; i++)

693 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

694 
	}
}

700 
sym_sym_t
 *

701 
	$sym_böd_addr
(
md_addr_t
 
addr
,

702 *
pödex
,

703 
exa˘
,

704 
sym_db_t
 
db
)

706 
nsyms
, 
low
, 
high
, 
pos
;

707 
sym_sym_t
 **
syms
;

709 
db
)

711 
sdb_™y
:

712 
syms
 = 
sym_syms
;

713 
nsyms
 = 
sym_nsyms
;

715 
sdb_ãxt
:

716 
syms
 = 
sym_ãxtsyms
;

717 
nsyms
 = 
sym_¡extsyms
;

719 
sdb_d©a
:

720 
syms
 = 
sym_d©asyms
;

721 
nsyms
 = 
sym_nd©asyms
;

724 
	`∑nic
("bogus symbol database");

728 i‡(!
nsyms
)

730 i‡(
pödex
)

731 *
pödex
 = -1;

732  
NULL
;

736 
low
 = 0;

737 
high
 = 
nsyms
-1;

738 
pos
 = (
low
 + 
high
) >> 1;

740 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

742 || (!
exa˘


743 && 
syms
[
pos
]->
addr
 <=áddr

744 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`MAX
(1, syms[pos]->
size
)))))

746 i‡(
addr
 < 
syms
[
pos
]->addr)

747 
high
 = 
pos
 - 1;

749 
low
 = 
pos
 + 1;

750 i‡(
high
 >
low
)

751 
pos
 = (
low
 + 
high
) >> 1;

754 i‡(
pödex
)

755 *
pödex
 = -1;

756  
NULL
;

761 i‡(
pödex
)

762 *
pödex
 = 
pos
;

763  
syms
[
pos
];

764 
	}
}

769 
sym_sym_t
 *

770 
	$sym_böd_«me
(*
«me
,

771 *
pödex
,

772 
sym_db_t
 
db
)

774 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

775 
sym_sym_t
 **
syms
;

777 
db
)

779 
sdb_™y
:

780 
syms
 = 
sym_syms_by_«me
;

781 
nsyms
 = 
sym_nsyms
;

783 
sdb_ãxt
:

784 
syms
 = 
sym_ãxtsyms_by_«me
;

785 
nsyms
 = 
sym_¡extsyms
;

787 
sdb_d©a
:

788 
syms
 = 
sym_d©asyms_by_«me
;

789 
nsyms
 = 
sym_nd©asyms
;

792 
	`∑nic
("bogus symbol database");

796 i‡(!
nsyms
)

798 i‡(
pödex
)

799 *
pödex
 = -1;

800  
NULL
;

804 
low
 = 0;

805 
high
 = 
nsyms
-1;

806 
pos
 = (
low
 + 
high
) >> 1;

807 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

809 i‡(
cmp
 > 0)

810 
high
 = 
pos
 - 1;

812 
low
 = 
pos
 + 1;

813 i‡(
high
 >
low
)

814 
pos
 = (
low
 + 
high
) >> 1;

817 i‡(
pödex
)

818 *
pödex
 = -1;

819  
NULL
;

824 i‡(
pödex
)

825 *
pödex
 = 
pos
;

826  
syms
[
pos
];

827 
	}
}

	@target-pisa/syscall.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~"ho°.h
"

55 
	~"misc.h
"

56 
	~"machöe.h
"

57 
	~"ªgs.h
"

58 
	~"mem‹y.h
"

59 
	~"lﬂdî.h
"

60 
	~"sim.h
"

61 
	~"ídün.h
"

62 
	~"eio.h
"

63 
	~"sysˇŒ.h
"

66 #i‚de‡
MD_CROSS_ENDIAN


68 #ifde‡
_MSC_VER


69 
	~<io.h
>

71 
	~<uni°d.h
>

73 
	~<f˙é.h
>

74 
	~<sys/ty≥s.h
>

75 #i‚de‡
_MSC_VER


76 
	~<sys/∑øm.h
>

78 
	~<î∫o.h
>

79 
	~<time.h
>

80 #i‚de‡
_MSC_VER


81 
	~<sys/time.h
>

83 #i‚de‡
_MSC_VER


84 
	~<sys/ªsour˚.h
>

86 
	~<sig«l.h
>

90 
	~<sys/°©.h
>

91 #i‚de‡
_MSC_VER


92 
	~<sys/uio.h
>

94 
	~<£tjmp.h
>

95 #i‚de‡
_MSC_VER


96 
	~<sys/times.h
>

98 
	~<limôs.h
>

99 #i‚de‡
_MSC_VER


100 
	~<sys/io˘l.h
>

102 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

103 #i‚de‡
_MSC_VER


104 
	~<sys/£À˘.h
>

107 #ifde‡
löux


108 
	~<utime.h
>

109 
	~<sgây.h
>

112 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

113 
	~<sgây.h
>

116 #ifde‡
__svr4__


117 
	~"utime.h
"

120 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

121 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

122 
	~<dúít.h
>

124 
	~<sys/dú.h
>

128 #unde‡
NL0


129 #unde‡
NL1


130 #unde‡
CR0


131 #unde‡
CR1


132 #unde‡
CR2


133 #unde‡
CR3


134 #unde‡
TAB0


135 #unde‡
TAB1


136 #unde‡
TAB2


137 #unde‡
XTABS


138 #unde‡
BS0


139 #unde‡
BS1


140 #unde‡
FF0


141 #unde‡
FF1


142 #unde‡
ECHO


143 #unde‡
NOFLSH


144 #unde‡
TOSTOP


145 #unde‡
FLUSHO


146 #unde‡
PENDIN


149 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

150 #unde‡
CR0


153 #ifde‡
__FªeBSD__


154 
	~<sys/io˘l_com∑t.h
>

156 #i‚de‡
_MSC_VER


157 
	~<ãrmio.h
>

161 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

163 #unde‡
HUPCL


164 #unde‡
ECHO


165 #unde‡
B50


166 #unde‡
B75


167 #unde‡
B110


168 #unde‡
B134


169 #unde‡
B150


170 #unde‡
B200


171 #unde‡
B300


172 #unde‡
B600


173 #unde‡
B1200


174 #unde‡
B1800


175 #unde‡
B2400


176 #unde‡
B4800


177 #unde‡
B9600


178 #unde‡
B19200


179 #unde‡
B38400


180 #unde‡
NL0


181 #unde‡
NL1


182 #unde‡
CR0


183 #unde‡
CR1


184 #unde‡
CR2


185 #unde‡
CR3


186 #unde‡
TAB0


187 #unde‡
TAB1


188 #unde‡
BS0


189 #unde‡
BS1


190 #unde‡
FF0


191 #unde‡
FF1


192 #unde‡
EXTA


193 #unde‡
EXTB


194 #unde‡
B900


195 #unde‡
B3600


196 #unde‡
B7200


197 #unde‡
XTABS


198 
	~<sgây.h
>

199 
	~<utime.h
>

202 #ifde‡
_MSC_VER


203 
	#ac˚ss
 
_ac˚ss


	)

204 
	#chmod
 
_chmod


	)

205 
	#chdú
 
_chdú


	)

206 
	#u∆ök
 
_u∆ök


	)

207 
	#›í
 
_›í


	)

208 
	#¸ót
 
_¸ót


	)

209 
	#pùe
 
_pùe


	)

210 
	#dup
 
_dup


	)

211 
	#dup2
 
_dup2


	)

212 
	#°©
 
_°©


	)

213 
	#f°©
 
_f°©


	)

214 
	#l£ek
 
_l£ek


	)

215 
	#ªad
 
_ªad


	)

216 
	#wrôe
 
_wrôe


	)

217 
	#˛o£
 
_˛o£


	)

218 
	#gëpid
 
_gëpid


	)

219 
	#utime
 
_utime


	)

220 
	~<sys/utime.h
>

228 
	#SS_SYS_sysˇŒ
 0

	)

230 
	#SS_SYS_f‹k
 2

	)

231 
	#SS_SYS_ªad
 3

	)

233 
	#SS_SYS_›í
 5

	)

234 
	#SS_SYS_˛o£
 6

	)

236 
	#SS_SYS_¸ót
 8

	)

237 
	#SS_SYS_lök
 9

	)

238 
	#SS_SYS_u∆ök
 10

	)

239 
	#SS_SYS_execv
 11

	)

240 
	#SS_SYS_chdú
 12

	)

242 
	#SS_SYS_mknod
 14

	)

243 
	#SS_SYS_chmod
 15

	)

244 
	#SS_SYS_chown
 16

	)

245 
	#SS_SYS_brk
 17

	)

247 
	#SS_SYS_l£ek
 19

	)

248 
	#SS_SYS_gëpid
 20

	)

249 
	#SS_SYS_mou¡
 21

	)

250 
	#SS_SYS_umou¡
 22

	)

252 
	#SS_SYS_gëuid
 24

	)

254 
	#SS_SYS_±ø˚
 26

	)

261 
	#SS_SYS_ac˚ss
 33

	)

264 
	#SS_SYS_sync
 36

	)

265 
	#SS_SYS_kûl
 37

	)

266 
	#SS_SYS_°©
 38

	)

268 
	#SS_SYS_l°©
 40

	)

269 
	#SS_SYS_dup
 41

	)

270 
	#SS_SYS_pùe
 42

	)

272 
	#SS_SYS_¥ofû
 44

	)

275 
	#SS_SYS_gëgid
 47

	)

279 
	#SS_SYS_ac˘
 51

	)

282 
	#SS_SYS_io˘l
 54

	)

283 
	#SS_SYS_ªboŸ
 55

	)

285 
	#SS_SYS_symlök
 57

	)

286 
	#SS_SYS_ªadlök
 58

	)

287 
	#SS_SYS_execve
 59

	)

288 
	#SS_SYS_umask
 60

	)

289 
	#SS_SYS_chroŸ
 61

	)

290 
	#SS_SYS_f°©
 62

	)

292 
	#SS_SYS_gë∑gesize
 64

	)

293 
	#SS_SYS_mªm≠
 65

	)

294 
	#SS_SYS_vf‹k
 66

	)

297 
	#SS_SYS_sbrk
 69

	)

298 
	#SS_SYS_s°k
 70

	)

299 
	#SS_SYS_mm≠
 71

	)

300 
	#SS_SYS_vadvi£
 72

	)

301 
	#SS_SYS_munm≠
 73

	)

302 
	#SS_SYS_m¥Ÿe˘
 74

	)

303 
	#SS_SYS_madvi£
 75

	)

304 
	#SS_SYS_vh™gup
 76

	)

306 
	#SS_SYS_möc‹e
 78

	)

307 
	#SS_SYS_gëgroups
 79

	)

308 
	#SS_SYS_£tgroups
 80

	)

309 
	#SS_SYS_gëpgΩ
 81

	)

310 
	#SS_SYS_£çgΩ
 82

	)

311 
	#SS_SYS_£tôimî
 83

	)

312 
	#SS_SYS_waô3
 84

	)

313 
	#SS_SYS_waô
 
SYS_waô3


	)

314 
	#SS_SYS_sw≠⁄
 85

	)

315 
	#SS_SYS_gëôimî
 86

	)

316 
	#SS_SYS_gëho°«me
 87

	)

317 
	#SS_SYS_£tho°«me
 88

	)

318 
	#SS_SYS_gëdèbÀsize
 89

	)

319 
	#SS_SYS_dup2
 90

	)

320 
	#SS_SYS_gëd›t
 91

	)

321 
	#SS_SYS_f˙é
 92

	)

322 
	#SS_SYS_£À˘
 93

	)

323 
	#SS_SYS_£td›t
 94

	)

324 
	#SS_SYS_fsync
 95

	)

325 
	#SS_SYS_£çri‹ôy
 96

	)

326 
	#SS_SYS_sockë
 97

	)

327 
	#SS_SYS_c⁄√˘
 98

	)

328 
	#SS_SYS_ac˚±
 99

	)

329 
	#SS_SYS_gë¥i‹ôy
 100

	)

330 
	#SS_SYS_£nd
 101

	)

331 
	#SS_SYS_ªcv
 102

	)

332 
	#SS_SYS_sigªtu∫
 103

	)

334 
	#SS_SYS_böd
 104

	)

335 
	#SS_SYS_£tsock›t
 105

	)

336 
	#SS_SYS_li°í
 106

	)

338 
	#SS_SYS_sigvec
 108

	)

339 
	#SS_SYS_sigblock
 109

	)

340 
	#SS_SYS_sig£tmask
 110

	)

341 
	#SS_SYS_sig∑u£
 111

	)

342 
	#SS_SYS_sig°ack
 112

	)

343 
	#SS_SYS_ªcvmsg
 113

	)

344 
	#SS_SYS_£ndmsg
 114

	)

346 
	#SS_SYS_gëtimeofday
 116

	)

347 
	#SS_SYS_gërußge
 117

	)

348 
	#SS_SYS_gësock›t
 118

	)

350 
	#SS_SYS_ªadv
 120

	)

351 
	#SS_SYS_wrôev
 121

	)

352 
	#SS_SYS_£âimeofday
 122

	)

353 
	#SS_SYS_fchown
 123

	)

354 
	#SS_SYS_fchmod
 124

	)

355 
	#SS_SYS_ªcv‰om
 125

	)

356 
	#SS_SYS_£åeuid
 126

	)

357 
	#SS_SYS_£åegid
 127

	)

358 
	#SS_SYS_ª«me
 128

	)

359 
	#SS_SYS_åunˇã
 129

	)

360 
	#SS_SYS_·runˇã
 130

	)

361 
	#SS_SYS_Êock
 131

	)

363 
	#SS_SYS_£ndto
 133

	)

364 
	#SS_SYS_shutdown
 134

	)

365 
	#SS_SYS_sockë∑ú
 135

	)

366 
	#SS_SYS_mkdú
 136

	)

367 
	#SS_SYS_rmdú
 137

	)

368 
	#SS_SYS_utimes
 138

	)

369 
	#SS_SYS_sig˛ónup
 139

	)

371 
	#SS_SYS_adjtime
 140

	)

372 
	#SS_SYS_gë≥î«me
 141

	)

373 
	#SS_SYS_gëho°id
 142

	)

374 
	#SS_SYS_£tho°id
 143

	)

375 
	#SS_SYS_gëæimô
 144

	)

376 
	#SS_SYS_£ålimô
 145

	)

377 
	#SS_SYS_kûÕg
 146

	)

379 
	#SS_SYS_£tquŸa
 148

	)

380 
	#SS_SYS_quŸa
 149

	)

381 
	#SS_SYS_gësock«me
 150

	)

383 
	#SS_SYS_sysmùs
 151

	)

387 
	#SS_SYS_ˇcheÊush
 152

	)

388 
	#SS_SYS_ˇche˘l
 153

	)

389 
	#SS_SYS_©omic_›
 155

	)

392 
	#SS_SYS_debug
 154

	)

394 
	#SS_SYS_°©fs
 160

	)

395 
	#SS_SYS_f°©fs
 161

	)

396 
	#SS_SYS_unmou¡
 162

	)

398 
	#SS_SYS_quŸa˘l
 168

	)

401 
	#SS_SYS_hdwc⁄f
 171

	)

405 
	#SS_SYS_nfs_svc
 158

	)

406 
	#SS_SYS_nfssvc
 158

	)

407 
	#SS_SYS_nfs_biod
 163

	)

408 
	#SS_SYS_async_d´m⁄
 163

	)

409 
	#SS_SYS_nfs_gëfh
 164

	)

410 
	#SS_SYS_gëfh
 164

	)

411 
	#SS_SYS_gëdúíåõs
 159

	)

412 
	#SS_SYS_gëdomaö«me
 165

	)

413 
	#SS_SYS_£tdomaö«me
 166

	)

414 
	#SS_SYS_exp‹tfs
 169

	)

416 
	#SS_SYS_msg˘l
 172

	)

417 
	#SS_SYS_msggë
 173

	)

418 
	#SS_SYS_msgrcv
 174

	)

419 
	#SS_SYS_msg¢d
 175

	)

420 
	#SS_SYS_£m˘l
 176

	)

421 
	#SS_SYS_£mgë
 177

	)

422 
	#SS_SYS_£m›
 178

	)

423 
	#SS_SYS_u«me
 179

	)

424 
	#SS_SYS_shmsys
 180

	)

425 
	#SS_SYS_∂ock
 181

	)

426 
	#SS_SYS_lockf
 182

	)

427 
	#SS_SYS_u°©
 183

	)

428 
	#SS_SYS_gëm¡
 184

	)

429 
	#SS_SYS_sig≥ndög
 187

	)

430 
	#SS_SYS_£tsid
 188

	)

431 
	#SS_SYS_waôpid
 189

	)

433 
	#SS_SYS_utc_gëtime
 233

	)

434 
	#SS_SYS_utc_adjtime
 234

	)

435 
	#SS_SYS_aud˙é
 252

	)

436 
	#SS_SYS_audgí
 253

	)

437 
	#SS_SYS_°¨t˝u
 254

	)

438 
	#SS_SYS_°›˝u
 255

	)

439 
	#SS_SYS_gësysöfo
 256

	)

440 
	#SS_SYS_£tsysöfo
 257

	)

443 
	#SS_IOCTL_TIOCGETP
 1074164744

	)

444 
	#SS_IOCTL_TIOCSETP
 -2147060727

	)

445 
	#SS_IOCTL_TCGETP
 1076130901

	)

446 
	#SS_IOCTL_TCGETA
 1075082331

	)

447 
	#SS_IOCTL_TIOCGLTC
 1074164852

	)

448 
	#SS_IOCTL_TIOCSLTC
 -2147060619

	)

449 
	#SS_IOCTL_TIOCGWINSZ
 1074295912

	)

450 
	#SS_IOCTL_TCSETAW
 -2146143143

	)

451 
	#SS_IOCTL_TIOCGETC
 1074164754

	)

452 
	#SS_IOCTL_TIOCSETC
 -2147060719

	)

453 
	#SS_IOCTL_TIOCLBIC
 -2147191682

	)

454 
	#SS_IOCTL_TIOCLBIS
 -2147191681

	)

455 
	#SS_IOCTL_TIOCLGET
 0x4004747c

	)

456 
	#SS_IOCTL_TIOCLSET
 -2147191683

	)

460 
	#MAXBUFSIZE
 1024

	)

466 
	#NUM_IOCTL_BYTES
 128

	)

470 
	sss_°©buf


472 
shÆf_t
 
	mss_°_dev
;

473 
shÆf_t
 
	mss_∑d
;

474 
w‹d_t
 
	mss_°_öo
;

475 
hÆf_t
 
	mss_°_mode
;

476 
shÆf_t
 
	mss_°_∆ök
;

477 
shÆf_t
 
	mss_°_uid
;

478 
shÆf_t
 
	mss_°_gid
;

479 
shÆf_t
 
	mss_°_rdev
;

480 
shÆf_t
 
	mss_∑d1
;

481 
sw‹d_t
 
	mss_°_size
;

482 
sw‹d_t
 
	mss_°_©ime
;

483 
sw‹d_t
 
	mss_°_•¨e1
;

484 
sw‹d_t
 
	mss_°_mtime
;

485 
sw‹d_t
 
	mss_°_•¨e2
;

486 
sw‹d_t
 
	mss_°_˘ime
;

487 
sw‹d_t
 
	mss_°_•¨e3
;

488 
sw‹d_t
 
	mss_°_blksize
;

489 
sw‹d_t
 
	mss_°_blocks
;

490 
w‹d_t
 
	mss_°_gínum
;

491 
sw‹d_t
 
	mss_°_•¨e4
;

494 
	sss_sgâyb
 {

495 
byã_t
 
	msg_i•ìd
;

496 
byã_t
 
	msg_o•ìd
;

497 
byã_t
 
	msg_îa£
;

498 
byã_t
 
	msg_kûl
;

499 
shÆf_t
 
	msg_Êags
;

502 
	sss_timevÆ


504 
sw‹d_t
 
	mss_tv_£c
;

505 
sw‹d_t
 
	mss_tv_u£c
;

510 
	sss_rußge


512 
ss_timevÆ
 
	mss_ru_utime
;

513 
ss_timevÆ
 
	mss_ru_°ime
;

514 
sw‹d_t
 
	mss_ru_maxrss
;

515 
sw‹d_t
 
	mss_ru_ixrss
;

516 
sw‹d_t
 
	mss_ru_idrss
;

517 
sw‹d_t
 
	mss_ru_i§ss
;

518 
sw‹d_t
 
	mss_ru_möÊt
;

519 
sw‹d_t
 
	mss_ru_majÊt
;

520 
sw‹d_t
 
	mss_ru_nsw≠
;

521 
sw‹d_t
 
	mss_ru_öblock
;

522 
sw‹d_t
 
	mss_ru_oublock
;

523 
sw‹d_t
 
	mss_ru_msg¢d
;

524 
sw‹d_t
 
	mss_ru_msgrcv
;

525 
sw‹d_t
 
	mss_ru_nsig«ls
;

526 
sw‹d_t
 
	mss_ru_nvcsw
;

527 
sw‹d_t
 
	mss_ru_nivcsw
;

530 
	sss_timez⁄e


532 
sw‹d_t
 
	mss_tz_möuãswe°
;

533 
sw‹d_t
 
	mss_tz_d°time
;

536 
	sss_æimô


538 
	mss_æim_cur
;

539 
	mss_æim_max
;

544 
	#SS_O_RDONLY
 0

	)

545 
	#SS_O_WRONLY
 1

	)

546 
	#SS_O_RDWR
 2

	)

547 
	#SS_O_APPEND
 0x0008

	)

548 
	#SS_O_CREAT
 0x0200

	)

549 
	#SS_O_TRUNC
 0x0400

	)

550 
	#SS_O_EXCL
 0x0800

	)

551 
	#SS_O_NONBLOCK
 0x4000

	)

552 
	#SS_O_NOCTTY
 0x8000

	)

553 
	#SS_O_SYNC
 0x2000

	)

557 
	mss_Êag
;

558 
	mloˇl_Êag
;

559 } 
	gss_Êag_èbÀ
[] = {

561 #ifde‡
_MSC_VER


562 { 
SS_O_RDONLY
, 
_O_RDONLY
 },

563 { 
SS_O_WRONLY
, 
_O_WRONLY
 },

564 { 
SS_O_RDWR
, 
_O_RDWR
 },

565 { 
SS_O_APPEND
, 
_O_APPEND
 },

566 { 
SS_O_CREAT
, 
_O_CREAT
 },

567 { 
SS_O_TRUNC
, 
_O_TRUNC
 },

568 { 
SS_O_EXCL
, 
_O_EXCL
 },

569 #ifde‡
_O_NONBLOCK


570 { 
SS_O_NONBLOCK
, 
_O_NONBLOCK
 },

572 #ifde‡
_O_NOCTTY


573 { 
SS_O_NOCTTY
, 
_O_NOCTTY
 },

575 #ifde‡
_O_SYNC


576 { 
SS_O_SYNC
, 
_O_SYNC
 },

579 { 
SS_O_RDONLY
, 
O_RDONLY
 },

580 { 
SS_O_WRONLY
, 
O_WRONLY
 },

581 { 
SS_O_RDWR
, 
O_RDWR
 },

582 { 
SS_O_APPEND
, 
O_APPEND
 },

583 { 
SS_O_CREAT
, 
O_CREAT
 },

584 { 
SS_O_TRUNC
, 
O_TRUNC
 },

585 { 
SS_O_EXCL
, 
O_EXCL
 },

586 { 
SS_O_NONBLOCK
, 
O_NONBLOCK
 },

587 { 
SS_O_NOCTTY
, 
O_NOCTTY
 },

588 #ifde‡
O_SYNC


589 { 
SS_O_SYNC
, 
O_SYNC
 },

593 
	#SS_NFLAGS
 ((
ss_Êag_èbÀ
)/(ss_Êag_èbÀ[0]))

	)

602 
	$sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

603 
mem_ac˚ss_‚
 
mem_‚
,

604 
mem_t
 *
mem
,

605 
md_ö°_t
 
ö°
,

606 
åa˚abÀ
)

608 
w‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[2];

611 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

613 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

618 #ifde‡
MD_CROSS_ENDIAN


619 i‡(
syscode
 =
SS_SYS_exô
)

622 
	`l⁄gjmp
(
sim_exô_buf
, 
ªgs
->
ªgs_R
[4]+1);

625 
	`Áèl
("cannotÉxecute PISA system call on cross-endian host");

630 
syscode
)

632 
SS_SYS_exô
:

634 
	`l⁄gjmp
(
sim_exô_buf
, 
ªgs
->
ªgs_R
[4]+1);

638 
SS_SYS_f‹k
:

640 
ªgs
->
ªgs_R
[2] = 
	`f‹k
();

641 i‡(
ªgs
->
ªgs_R
[2] != -1)

643 
ªgs
->
ªgs_R
[7] = 0;

645 i‡(
ªgs
->
ªgs_R
[2] != 0)

646 
ªgs
->
ªgs_R
[3] = 0;

649 
	`Áèl
("SYS_fork failed");

654 
SS_SYS_vf‹k
:

656 
r31_∑ª¡
 = 
ªgs
->
ªgs_R
[31];

657  
ªgs
->
ªgs_R
[2] = 
	`vf‹k
();

658 i‡(
ªgs
->
ªgs_R
[2] != -1)

659 
ªgs
->
ªgs_R
[7] = 0;

661 
	`Áèl
("vfork() in SYS_vfork failed");

662 i‡(
ªgs
->
ªgs_R
[2] != 0)

664 
ªgs
->
ªgs_R
[3] = 0;

665 
ªgs
->
ªgs_R
[7] = 0;

666 
ªgs
->
ªgs_R
[31] = 
r31_∑ª¡
;

671 
SS_SYS_ªad
:

673 *
buf
;

676 i‡(!(
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6], ())))

677 
	`Áèl
("out of memory in SYS_read");

680  
ªgs
->
ªgs_R
[2] =

681 
	`ªad
–
ªgs
->
ªgs_R
[4], 
buf
,Ñegs->regs_R[6]);

684 i‡(
ªgs
->
ªgs_R
[2] != -1)

685 
ªgs
->
ªgs_R
[7] = 0;

689 
ªgs
->
ªgs_R
[2] = 
î∫o
;

690 
ªgs
->
ªgs_R
[7] = 1;

694 
	`mem_bc›y
(
mem_‚
, 
mem
,

695 
Wrôe
, 
ªgs
->
ªgs_R
[5],

696 
buf
, 
ªgs
->
ªgs_R
[2]);

699 
	`‰ì
(
buf
);

703 
SS_SYS_wrôe
:

705 *
buf
;

708 i‡(!(
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6], ())))

709 
	`Áèl
("out of memory in SYS_write");

712 
	`mem_bc›y
(
mem_‚
, 
mem
,

713 
Ród
, 
ªgs
->
ªgs_R
[5],

714 
buf
, 
ªgs
->
ªgs_R
[6]);

717 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
(
ªgs
))

721  
ªgs
->
ªgs_R
[2] =

722 
	`fwrôe
(
buf
, 1, 
ªgs
->
ªgs_R
[6], 
sim_¥ogfd
);

728  
ªgs
->
ªgs_R
[2] =

729 
	`wrôe
–
ªgs
->
ªgs_R
[4],

730 
buf
, 
ªgs
->
ªgs_R
[6]);

734 i‡(
ªgs
->
ªgs_R
[2] ==Ñegs->regs_R[6])

735  
ªgs
->
ªgs_R
[7] = 0;

739 
ªgs
->
ªgs_R
[2] = 
î∫o
;

740 
ªgs
->
ªgs_R
[7] = 1;

744 
	`‰ì
(
buf
);

748 
SS_SYS_›í
:

750 
buf
[
MAXBUFSIZE
];

751 
i
;

752 
ss_Êags
 = 
ªgs
->
ªgs_R
[5], 
loˇl_Êags
 = 0;

755 
i
=0; i<
SS_NFLAGS
; i++)

757 i‡(
ss_Êags
 & 
ss_Êag_èbÀ
[
i
].
ss_Êag
)

759 
ss_Êags
 &~
ss_Êag_èbÀ
[
i
].
ss_Êag
;

760 
loˇl_Êags
 |
ss_Êag_èbÀ
[
i
].
loˇl_Êag
;

764 i‡(
ss_Êags
 != 0)

765 
	`Áèl
("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
ss_Êags
);

768 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

771  
ªgs
->
ªgs_R
[2] =

772 
	`›í
(
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[6]);

775 i‡(
ªgs
->
ªgs_R
[2] != -1)

776 
ªgs
->
ªgs_R
[7] = 0;

780 
ªgs
->
ªgs_R
[2] = 
î∫o
;

781 
ªgs
->
ªgs_R
[7] = 1;

786 
SS_SYS_˛o£
:

788 i‡–
ªgs
->
ªgs_R
[4] == 0

789 || 
ªgs
->
ªgs_R
[4] == 1

790 || 
ªgs
->
ªgs_R
[4] == 2)

792 
ªgs
->
ªgs_R
[7] = 0;

797 
ªgs
->
ªgs_R
[2] = 
	`˛o£
(Ñegs->regs_R[4]);

800 i‡(
ªgs
->
ªgs_R
[2] != -1)

801 
ªgs
->
ªgs_R
[7] = 0;

805 
ªgs
->
ªgs_R
[2] = 
î∫o
;

806 
ªgs
->
ªgs_R
[7] = 1;

810 
SS_SYS_¸ót
:

812 
buf
[
MAXBUFSIZE
];

815 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

818  
ªgs
->
ªgs_R
[2] = 
	`¸ót
(
buf
,Ñegs->regs_R[5]);

821 i‡(
ªgs
->
ªgs_R
[2] != -1)

822 
ªgs
->
ªgs_R
[7] = 0;

826 
ªgs
->
ªgs_R
[2] = 
î∫o
;

827 
ªgs
->
ªgs_R
[7] = 1;

832 
SS_SYS_u∆ök
:

834 
buf
[
MAXBUFSIZE
];

837 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

840  
ªgs
->
ªgs_R
[2] = 
	`u∆ök
(
buf
);

843 i‡(
ªgs
->
ªgs_R
[2] != -1)

844 
ªgs
->
ªgs_R
[7] = 0;

848 
ªgs
->
ªgs_R
[2] = 
î∫o
;

849 
ªgs
->
ªgs_R
[7] = 1;

854 
SS_SYS_chdú
:

856 
buf
[
MAXBUFSIZE
];

859 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

862  
ªgs
->
ªgs_R
[2] = 
	`chdú
(
buf
);

865 i‡(
ªgs
->
ªgs_R
[2] != -1)

866 
ªgs
->
ªgs_R
[7] = 0;

870 
ªgs
->
ªgs_R
[2] = 
î∫o
;

871 
ªgs
->
ªgs_R
[7] = 1;

876 
SS_SYS_chmod
:

878 
buf
[
MAXBUFSIZE
];

881 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

884  
ªgs
->
ªgs_R
[2] = 
	`chmod
(
buf
,Ñegs->regs_R[5]);

887 i‡(
ªgs
->
ªgs_R
[2] != -1)

888 
ªgs
->
ªgs_R
[7] = 0;

892 
ªgs
->
ªgs_R
[2] = 
î∫o
;

893 
ªgs
->
ªgs_R
[7] = 1;

898 
SS_SYS_chown
:

899 #ifde‡
_MSC_VER


900 
	`w¨n
("syscall chown()Çot yet implemented for MSC...");

901 
ªgs
->
ªgs_R
[7] = 0;

904 
buf
[
MAXBUFSIZE
];

907 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

910  
ªgs
->
ªgs_R
[2] = 
	`chown
(
buf
,Ñegs->regs_R[5],

911  
ªgs
->
ªgs_R
[6]);

914 i‡(
ªgs
->
ªgs_R
[2] != -1)

915 
ªgs
->
ªgs_R
[7] = 0;

919 
ªgs
->
ªgs_R
[2] = 
î∫o
;

920 
ªgs
->
ªgs_R
[7] = 1;

926 
SS_SYS_brk
:

928 
md_addr_t
 
addr
;

931 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[4], 
MD_PAGE_SIZE
);

934 i‡(
addr
 >
ld_brk_poöt
 &&ádd∏< (
md_addr_t
)
ªgs
->
ªgs_R
[29])

936 
ªgs
->
ªgs_R
[2] = 0;

937 
ªgs
->
ªgs_R
[7] = 0;

938 
ld_brk_poöt
 = 
addr
;

943 
ªgs
->
ªgs_R
[2] = 
ENOMEM
;

944 
ªgs
->
ªgs_R
[7] = 1;

949 
SS_SYS_l£ek
:

951 
ªgs
->
ªgs_R
[2] =

952 
	`l£ek
–
ªgs
->
ªgs_R
[4],

953  
ªgs
->
ªgs_R
[5],Ñegs->regs_R[6]);

956 i‡(
ªgs
->
ªgs_R
[2] != -1)

957 
ªgs
->
ªgs_R
[7] = 0;

961 
ªgs
->
ªgs_R
[2] = 
î∫o
;

962 
ªgs
->
ªgs_R
[7] = 1;

966 
SS_SYS_gëpid
:

968  
ªgs
->
ªgs_R
[2] = 
	`gëpid
();

971 i‡(
ªgs
->
ªgs_R
[2] != -1)

972 
ªgs
->
ªgs_R
[7] = 0;

976 
ªgs
->
ªgs_R
[2] = 
î∫o
;

977 
ªgs
->
ªgs_R
[7] = 1;

981 
SS_SYS_gëuid
:

982 #ifde‡
_MSC_VER


983 
	`w¨n
("syscall getuid()Çot yet implemented for MSC...");

984 
ªgs
->
ªgs_R
[7] = 0;

987  
ªgs
->
ªgs_R
[2] = 
	`gëuid
();

990  
ªgs
->
ªgs_R
[3] = 
	`gëeuid
();

993 i‡(
ªgs
->
ªgs_R
[2] != -1)

994 
ªgs
->
ªgs_R
[7] = 0;

998 
ªgs
->
ªgs_R
[2] = 
î∫o
;

999 
ªgs
->
ªgs_R
[7] = 1;

1004 
SS_SYS_ac˚ss
:

1006 
buf
[
MAXBUFSIZE
];

1009 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1012  
ªgs
->
ªgs_R
[2] = 
	`ac˚ss
(
buf
,Ñegs->regs_R[5]);

1015 i‡(
ªgs
->
ªgs_R
[2] != -1)

1016 
ªgs
->
ªgs_R
[7] = 0;

1020 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1021 
ªgs
->
ªgs_R
[7] = 1;

1026 
SS_SYS_°©
:

1027 
SS_SYS_l°©
:

1029 
buf
[
MAXBUFSIZE
];

1030 
ss_°©buf
 
ss_sbuf
;

1031 #ifde‡
_MSC_VER


1032 
_°©
 
sbuf
;

1034 
°©
 
sbuf
;

1038 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1041 i‡(
syscode
 =
SS_SYS_°©
)

1042  
ªgs
->
ªgs_R
[2] = 
	`°©
(
buf
, &
sbuf
);

1045 #ifde‡
_MSC_VER


1046 
	`w¨n
("syscallÜstat()Çot yet implemented for MSC...");

1047 
ªgs
->
ªgs_R
[7] = 0;

1050  
ªgs
->
ªgs_R
[2] = 
	`l°©
(
buf
, &
sbuf
);

1055 i‡(
ªgs
->
ªgs_R
[2] != -1)

1056 
ªgs
->
ªgs_R
[7] = 0;

1060 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1061 
ªgs
->
ªgs_R
[7] = 1;

1065 
ss_sbuf
.
ss_°_dev
 = 
	`MD_SWAPH
(
sbuf
.
°_dev
);

1066 
ss_sbuf
.
ss_∑d
 = 0;

1067 
ss_sbuf
.
ss_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1068 
ss_sbuf
.
ss_°_mode
 = 
	`MD_SWAPH
(
sbuf
.
°_mode
);

1069 
ss_sbuf
.
ss_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1070 
ss_sbuf
.
ss_°_uid
 = 
	`MD_SWAPH
(
sbuf
.
°_uid
);

1071 
ss_sbuf
.
ss_°_gid
 = 
	`MD_SWAPH
(
sbuf
.
°_gid
);

1072 
ss_sbuf
.
ss_°_rdev
 = 
	`MD_SWAPH
(
sbuf
.
°_rdev
);

1073 
ss_sbuf
.
ss_∑d1
 = 0;

1074 
ss_sbuf
.
ss_°_size
 = 
	`MD_SWAPW
(
sbuf
.
°_size
);

1075 
ss_sbuf
.
ss_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1076 
ss_sbuf
.
ss_°_•¨e1
 = 0;

1077 
ss_sbuf
.
ss_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1078 
ss_sbuf
.
ss_°_•¨e2
 = 0;

1079 
ss_sbuf
.
ss_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1080 
ss_sbuf
.
ss_°_•¨e3
 = 0;

1081 #i‚de‡
_MSC_VER


1082 
ss_sbuf
.
ss_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1083 
ss_sbuf
.
ss_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1085 
ss_sbuf
.
ss_°_gínum
 = 0;

1086 
ss_sbuf
.
ss_°_•¨e4
 = 0;

1089 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1090 &
ss_sbuf
, (
ss_°©buf
));

1094 
SS_SYS_dup
:

1096  
ªgs
->
ªgs_R
[2] = 
	`dup
(Ñegs->regs_R[4]);

1099 i‡(
ªgs
->
ªgs_R
[2] != -1)

1100 
ªgs
->
ªgs_R
[7] = 0;

1104 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1105 
ªgs
->
ªgs_R
[7] = 1;

1109 #i‚de‡
_MSC_VER


1110 
SS_SYS_pùe
:

1112 
fd
[2];

1115 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
fd
, (fd));

1118  
ªgs
->
ªgs_R
[7] = 
	`pùe
(
fd
);

1121  
ªgs
->
ªgs_R
[2] = 
fd
[0];

1122  
ªgs
->
ªgs_R
[3] = 
fd
[1];

1125 i‡(
ªgs
->
ªgs_R
[7] == -1)

1127 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1128 
ªgs
->
ªgs_R
[7] = 1;

1134 
SS_SYS_gëgid
:

1135 #ifde‡
_MSC_VER


1136 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1137 
ªgs
->
ªgs_R
[7] = 0;

1140  
ªgs
->
ªgs_R
[2] = 
	`gëgid
();

1143  
ªgs
->
ªgs_R
[3] = 
	`gëegid
();

1146 i‡(
ªgs
->
ªgs_R
[2] != -1)

1147 
ªgs
->
ªgs_R
[7] = 0;

1151 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1152 
ªgs
->
ªgs_R
[7] = 1;

1157 
SS_SYS_io˘l
:

1159 
buf
[
NUM_IOCTL_BYTES
];

1160 
loˇl_ªq
 = 0;

1163  
ªgs
->
ªgs_R
[5]) {

1164 #ifde‡
TIOCGETP


1165 
SS_IOCTL_TIOCGETP
:

1166 
loˇl_ªq
 = 
TIOCGETP
;

1169 #ifde‡
TIOCSETP


1170 
SS_IOCTL_TIOCSETP
:

1171 
loˇl_ªq
 = 
TIOCSETP
;

1174 #ifde‡
TIOCGETP


1175 
SS_IOCTL_TCGETP
:

1176 
loˇl_ªq
 = 
TIOCGETP
;

1179 #ifde‡
TCGETA


1180 
SS_IOCTL_TCGETA
:

1181 
loˇl_ªq
 = 
TCGETA
;

1184 #ifde‡
TIOCGLTC


1185 
SS_IOCTL_TIOCGLTC
:

1186 
loˇl_ªq
 = 
TIOCGLTC
;

1189 #ifde‡
TIOCSLTC


1190 
SS_IOCTL_TIOCSLTC
:

1191 
loˇl_ªq
 = 
TIOCSLTC
;

1194 #ifde‡
TIOCGWINSZ


1195 
SS_IOCTL_TIOCGWINSZ
:

1196 
loˇl_ªq
 = 
TIOCGWINSZ
;

1199 #ifde‡
TCSETAW


1200 
SS_IOCTL_TCSETAW
:

1201 
loˇl_ªq
 = 
TCSETAW
;

1204 #ifde‡
TIOCGETC


1205 
SS_IOCTL_TIOCGETC
:

1206 
loˇl_ªq
 = 
TIOCGETC
;

1209 #ifde‡
TIOCSETC


1210 
SS_IOCTL_TIOCSETC
:

1211 
loˇl_ªq
 = 
TIOCSETC
;

1214 #ifde‡
TIOCLBIC


1215 
SS_IOCTL_TIOCLBIC
:

1216 
loˇl_ªq
 = 
TIOCLBIC
;

1219 #ifde‡
TIOCLBIS


1220 
SS_IOCTL_TIOCLBIS
:

1221 
loˇl_ªq
 = 
TIOCLBIS
;

1224 #ifde‡
TIOCLGET


1225 
SS_IOCTL_TIOCLGET
:

1226 
loˇl_ªq
 = 
TIOCLGET
;

1229 #ifde‡
TIOCLSET


1230 
SS_IOCTL_TIOCLSET
:

1231 
loˇl_ªq
 = 
TIOCLSET
;

1236 #i‡!
	`deföed
(
TIOCGETP
Ë&& (deföed(
löux
Ë|| deföed(
__CYGWIN32__
))

1237 i‡(!
loˇl_ªq
 && 
ªgs
->
ªgs_R
[5] =
SS_IOCTL_TIOCGETP
)

1239 
ãrmios
 
lbuf
;

1240 
ss_sgâyb
 
buf
;

1242  
ªgs
->
ªgs_R
[2] =

1243 
	`tcgë©å
–()
ªgs
->
ªgs_R
[4], &
lbuf
);

1246 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

1247 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

1248 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

1249 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

1250 
buf
.
sg_Êags
 = 0;

1252 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

1253  
ªgs
->
ªgs_R
[6], &
buf
,

1254 (
ss_sgâyb
));

1256 i‡(
ªgs
->
ªgs_R
[2] != -1)

1257 
ªgs
->
ªgs_R
[7] = 0;

1260 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1261 
ªgs
->
ªgs_R
[7] = 1;

1267 i‡(!
loˇl_ªq
)

1271 
	`w¨n
("syscall: ioctl: ioctl codeÇot supported d=%d,Ñeq=%d",

1272 
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5]);

1273 
ªgs
->
ªgs_R
[2] = 0;

1274 
ªgs
->
ªgs_R
[7] = 0;

1278 #ifde‡
_MSC_VER


1279 
	`w¨n
("syscall getgid()Çot yet implemented for MSC...");

1280 
ªgs
->
ªgs_R
[7] = 0;

1285 #ifde‡
TIOCGETP


1286 i‡(
loˇl_ªq
 =
TIOCGETP
 && 
sim_¥ogfd
)

1292 
ªgs
->
ªgs_R
[2] = 
ENOTTY
;

1293 
ªgs
->
ªgs_R
[7] = 1;

1301 i‡–
ªgs
->
ªgs_R
[6] != 0)

1302 
	`mem_bc›y
(
mem_‚
, 
mem
,

1303 
Ród
, 
ªgs
->
ªgs_R
[6], 
buf
, 
NUM_IOCTL_BYTES
);

1306  
ªgs
->
ªgs_R
[2] =

1307 
	`io˘l
–
ªgs
->
ªgs_R
[4], 
loˇl_ªq
, 
buf
);

1310 i‡–
ªgs
->
ªgs_R
[6] != 0)

1311 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[6],

1312 
buf
, 
NUM_IOCTL_BYTES
);

1315 i‡(
ªgs
->
ªgs_R
[2] != -1)

1316 
ªgs
->
ªgs_R
[7] = 0;

1320 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1321 
ªgs
->
ªgs_R
[7] = 1;

1328 
SS_SYS_f°©
:

1330 
ss_°©buf
 
ss_sbuf
;

1331 #ifde‡
_MSC_VER


1332 
_°©
 
sbuf
;

1334 
°©
 
sbuf
;

1338  
ªgs
->
ªgs_R
[2] = 
	`f°©
–ªgs->ªgs_R[4], &
sbuf
);

1341 i‡(
ªgs
->
ªgs_R
[2] != -1)

1342 
ªgs
->
ªgs_R
[7] = 0;

1346 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1347 
ªgs
->
ªgs_R
[7] = 1;

1351 
ss_sbuf
.
ss_°_dev
 = 
	`MD_SWAPH
(
sbuf
.
°_dev
);

1352 
ss_sbuf
.
ss_∑d
 = 0;

1353 
ss_sbuf
.
ss_°_öo
 = 
	`MD_SWAPW
(
sbuf
.
°_öo
);

1354 
ss_sbuf
.
ss_°_mode
 = 
	`MD_SWAPH
(
sbuf
.
°_mode
);

1355 
ss_sbuf
.
ss_°_∆ök
 = 
	`MD_SWAPH
(
sbuf
.
°_∆ök
);

1356 
ss_sbuf
.
ss_°_uid
 = 
	`MD_SWAPH
(
sbuf
.
°_uid
);

1357 
ss_sbuf
.
ss_°_gid
 = 
	`MD_SWAPH
(
sbuf
.
°_gid
);

1358 
ss_sbuf
.
ss_°_rdev
 = 
	`MD_SWAPH
(
sbuf
.
°_rdev
);

1359 
ss_sbuf
.
ss_∑d1
 = 0;

1360 
ss_sbuf
.
ss_°_size
 = 
	`MD_SWAPW
(
sbuf
.
°_size
);

1361 
ss_sbuf
.
ss_°_©ime
 = 
	`MD_SWAPW
(
sbuf
.
°_©ime
);

1362 
ss_sbuf
.
ss_°_•¨e1
 = 0;

1363 
ss_sbuf
.
ss_°_mtime
 = 
	`MD_SWAPW
(
sbuf
.
°_mtime
);

1364 
ss_sbuf
.
ss_°_•¨e2
 = 0;

1365 
ss_sbuf
.
ss_°_˘ime
 = 
	`MD_SWAPW
(
sbuf
.
°_˘ime
);

1366 
ss_sbuf
.
ss_°_•¨e3
 = 0;

1367 #i‚de‡
_MSC_VER


1368 
ss_sbuf
.
ss_°_blksize
 = 
	`MD_SWAPW
(
sbuf
.
°_blksize
);

1369 
ss_sbuf
.
ss_°_blocks
 = 
	`MD_SWAPW
(
sbuf
.
°_blocks
);

1371 
ss_sbuf
.
ss_°_gínum
 = 0;

1372 
ss_sbuf
.
ss_°_•¨e4
 = 0;

1375 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1376 &
ss_sbuf
, (
ss_°©buf
));

1380 
SS_SYS_gë∑gesize
:

1382 
ªgs
->
ªgs_R
[2] = 
MD_PAGE_SIZE
;

1385 i‡(
ªgs
->
ªgs_R
[2] != -1)

1386 
ªgs
->
ªgs_R
[7] = 0;

1390 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1391 
ªgs
->
ªgs_R
[7] = 1;

1395 
SS_SYS_£tôimî
:

1397 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1398 
	`w¨n
("syscall: setitimer ignored");

1401 
SS_SYS_gëdèbÀsize
:

1402 #i‡
	`deföed
(
_AIX
)

1404 
ªgs
->
ªgs_R
[2] = 
	`gëdèbÀsize
();

1407 i‡(
ªgs
->
ªgs_R
[2] != -1)

1408 
ªgs
->
ªgs_R
[7] = 0;

1412 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1413 
ªgs
->
ªgs_R
[7] = 1;

1415 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
u…rix
Ë|| deföed(
_MSC_VER
)

1418 
	`w¨n
("syscall: called getdtablesize()\n");

1419 
ªgs
->
ªgs_R
[2] = 16;

1420 
ªgs
->
ªgs_R
[7] = 0;

1424 
æimô
 
æ
;

1427 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) != -1)

1429 
ªgs
->
ªgs_R
[2] = 
æ
.
æim_cur
;

1430 
ªgs
->
ªgs_R
[7] = 0;

1435 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1436 
ªgs
->
ªgs_R
[7] = 1;

1442 
SS_SYS_dup2
:

1444 
ªgs
->
ªgs_R
[2] =

1445 
	`dup2
–
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5]);

1448 i‡(
ªgs
->
ªgs_R
[2] != -1)

1449 
ªgs
->
ªgs_R
[7] = 0;

1453 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1454 
ªgs
->
ªgs_R
[7] = 1;

1458 
SS_SYS_f˙é
:

1459 #ifde‡
_MSC_VER


1460 
	`w¨n
("syscall fcntl()Çot yet implemented for MSC...");

1461 
ªgs
->
ªgs_R
[7] = 0;

1464 
ªgs
->
ªgs_R
[2] =

1465 
	`f˙é
–
ªgs
->
ªgs_R
[4],Ñegs->regs_R[5],

1466  
ªgs
->
ªgs_R
[6]);

1469 i‡(
ªgs
->
ªgs_R
[2] != -1)

1470 
ªgs
->
ªgs_R
[7] = 0;

1474 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1475 
ªgs
->
ªgs_R
[7] = 1;

1480 
SS_SYS_£À˘
:

1481 #ifde‡
_MSC_VER


1482 
	`w¨n
("syscall select()Çot yet implemented for MSC...");

1483 
ªgs
->
ªgs_R
[7] = 0;

1486 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

1487 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

1488 
timevÆ
 
timeout
, *
timeouç
;

1489 
w‹d_t
 
∑øm5
;

1494 
	`mem_bc›y
(
mem_‚
, 
mem
,

1495 
Ród
, 
ªgs
->
ªgs_R
[29]+16, &
∑øm5
, (
w‹d_t
));

1498 i‡–
ªgs
->
ªgs_R
[5] != 0)

1500 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1501 &
ªadfd
, (
fd_£t
));

1502 
ªadfdp
 = &
ªadfd
;

1505 
ªadfdp
 = 
NULL
;

1508 i‡–
ªgs
->
ªgs_R
[6] != 0)

1510 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[6],

1511 &
wrôefd
, (
fd_£t
));

1512 
wrôefdp
 = &
wrôefd
;

1515 
wrôefdp
 = 
NULL
;

1518 i‡–
ªgs
->
ªgs_R
[7] != 0)

1520 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[7],

1521 &
ex˚±fd
, (
fd_£t
));

1522 
ex˚±fdp
 = &
ex˚±fd
;

1525 
ex˚±fdp
 = 
NULL
;

1528 i‡–
∑øm5
 != 0)

1530 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
∑øm5
,

1531 &
timeout
, (
timevÆ
));

1532 
timeouç
 = &
timeout
;

1535 
timeouç
 = 
NULL
;

1537 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

1539  
ªgs
->
ªgs_R
[2] =

1540 
	`£À˘
–
ªgs
->
ªgs_R
[4],

1541 (*)
ªadfdp
, (*)
wrôefdp
, (*)
ex˚±fdp
, 
timeouç
);

1544  
ªgs
->
ªgs_R
[2] =

1545 
	`£À˘
–
ªgs
->
ªgs_R
[4],

1546 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

1550 i‡(
ªgs
->
ªgs_R
[2] != -1)

1551 
ªgs
->
ªgs_R
[7] = 0;

1555 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1556 
ªgs
->
ªgs_R
[7] = 1;

1560 i‡–
ªgs
->
ªgs_R
[5] != 0)

1561 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1562 &
ªadfd
, (
fd_£t
));

1565 i‡–
ªgs
->
ªgs_R
[6] != 0)

1566 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[6],

1567 &
wrôefd
, (
fd_£t
));

1570 i‡–
ªgs
->
ªgs_R
[7] != 0)

1571 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[7],

1572 &
ex˚±fd
, (
fd_£t
));

1575 i‡–
∑øm5
 != 0)

1576 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
∑øm5
,

1577 &
timeout
, (
timevÆ
));

1582 
SS_SYS_sigvec
:

1584 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1585 
	`w¨n
("syscall: sigvec ignored");

1588 
SS_SYS_sigblock
:

1590 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1591 
	`w¨n
("syscall: sigblock ignored");

1594 
SS_SYS_sig£tmask
:

1596 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1597 
	`w¨n
("syscall: sigsetmask ignored");

1601 
SS_SYS_sig°ack
:

1606 i‡(
ªgs
->
ªgs_R
[5] != 0)

1608 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[29]+28, (*)&
ãmp
, 4);

1609 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[5], (*)&
ãmp
, 4);

1611 
ªgs
->
ªgs_R
[2] =Ñegs->regs_R[7] = 0;

1615 
SS_SYS_gëtimeofday
:

1616 #ifde‡
_MSC_VER


1617 
	`w¨n
("syscall gettimeofday()Çot yet implemented for MSC...");

1618 
ªgs
->
ªgs_R
[7] = 0;

1621 
ss_timevÆ
 
ss_tv
;

1622 
timevÆ
 
tv
, *
tvp
;

1623 
ss_timez⁄e
 
ss_tz
;

1624 
timez⁄e
 
tz
, *
tzp
;

1626 i‡–
ªgs
->
ªgs_R
[4] != 0)

1629 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4],

1630 &
ss_tv
, (
ss_timevÆ
));

1633 
tv
.
tv_£c
 = 
	`MD_SWAPW
(
ss_tv
.
ss_tv_£c
);

1634 
tv
.
tv_u£c
 = 
	`MD_SWAPW
(
ss_tv
.
ss_tv_u£c
);

1635 
tvp
 = &
tv
;

1638 
tvp
 = 
NULL
;

1640 i‡–
ªgs
->
ªgs_R
[5] != 0)

1643 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1644 &
ss_tz
, (
ss_timez⁄e
));

1647 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
(
ss_tz
.
ss_tz_möuãswe°
);

1648 
tz
.
tz_d°time
 = 
	`MD_SWAPW
(
ss_tz
.
ss_tz_d°time
);

1649 
tzp
 = &
tz
;

1652 
tzp
 = 
NULL
;

1655  
ªgs
->
ªgs_R
[2] = 
	`gëtimeofday
(
tvp
, 
tzp
);

1658 i‡(
ªgs
->
ªgs_R
[2] != -1)

1659 
ªgs
->
ªgs_R
[7] = 0;

1663 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1664 
ªgs
->
ªgs_R
[7] = 1;

1667 i‡–
ªgs
->
ªgs_R
[4] != 0)

1670 
ss_tv
.
ss_tv_£c
 = 
	`MD_SWAPW
(
tv
.
tv_£c
);

1671 
ss_tv
.
ss_tv_u£c
 = 
	`MD_SWAPW
(
tv
.
tv_u£c
);

1674 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[4],

1675 &
ss_tv
, (
ss_timevÆ
));

1678 i‡–
ªgs
->
ªgs_R
[5] != 0)

1681 
ss_tz
.
ss_tz_möuãswe°
 = 
	`MD_SWAPW
(
tz
.
tz_möuãswe°
);

1682 
ss_tz
.
ss_tz_d°time
 = 
	`MD_SWAPW
(
tz
.
tz_d°time
);

1685 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1686 &
ss_tz
, (
ss_timez⁄e
));

1692 
SS_SYS_gërußge
:

1693 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

1695 
tms
 
tms_buf
;

1696 
ss_rußge
 
rußge
;

1699 i‡(
	`times
(&
tms_buf
) != -1)

1702 
ªgs
->
ªgs_R
[2] = 0;

1703 
ªgs
->
ªgs_R
[7] = 0;

1708 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1709 
ªgs
->
ªgs_R
[7] = 1;

1713 #i‡
	`deföed
(
__svr4__
)

1714 
	`mem£t
(&
rußge
, '\0', (
ss_rußge
));

1716 
	`bzîo
(&
rußge
, (
ss_rußge
));

1720 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
tms_buf
.
tms_utime
/
CLK_TCK
;

1721 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
	`MD_SWAPW
(rusage.ss_ru_utime.ss_tv_sec);

1722 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 = 0;

1723 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
tms_buf
.
tms_°ime
/
CLK_TCK
;

1724 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
	`MD_SWAPW
(rusage.ss_ru_stime.ss_tv_sec);

1725 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 = 0;

1728 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1729 &
rußge
, (
ss_rußge
));

1731 #ñi‡
	`deföed
(
__unix__
Ë|| deföed(
unix
)

1733 
rußge
 
loˇl_rußge
;

1734 
ss_rußge
 
rußge
;

1737  
ªgs
->
ªgs_R
[2] =

1738 
	`gërußge
–
ªgs
->
ªgs_R
[4], &
loˇl_rußge
);

1741 i‡(
ªgs
->
ªgs_R
[2] != -1)

1742 
ªgs
->
ªgs_R
[7] = 0;

1746 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1747 
ªgs
->
ªgs_R
[7] = 1;

1751 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
loˇl_rußge
.
ru_utime
.
tv_£c
;

1752 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 = 
loˇl_rußge
.
ru_utime
.
tv_u£c
;

1753 
rußge
.
ss_ru_utime
.
ss_tv_£c
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_£c
);

1754 
rußge
.
ss_ru_utime
.
ss_tv_u£c
 =

1755 
	`MD_SWAPW
(
loˇl_rußge
.
ru_utime
.
tv_u£c
);

1756 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 = 
loˇl_rußge
.
ru_°ime
.
tv_£c
;

1757 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 = 
loˇl_rußge
.
ru_°ime
.
tv_u£c
;

1758 
rußge
.
ss_ru_°ime
.
ss_tv_£c
 =

1759 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_£c
);

1760 
rußge
.
ss_ru_°ime
.
ss_tv_u£c
 =

1761 
	`MD_SWAPW
(
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

1762 
rußge
.
ss_ru_maxrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_maxrss
);

1763 
rußge
.
ss_ru_ixrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_ixrss
);

1764 
rußge
.
ss_ru_idrss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_idrss
);

1765 
rußge
.
ss_ru_i§ss
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_i§ss
);

1766 
rußge
.
ss_ru_möÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_möÊt
);

1767 
rußge
.
ss_ru_majÊt
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_majÊt
);

1768 
rußge
.
ss_ru_nsw≠
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsw≠
);

1769 
rußge
.
ss_ru_öblock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_öblock
);

1770 
rußge
.
ss_ru_oublock
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_oublock
);

1771 
rußge
.
ss_ru_msg¢d
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msg¢d
);

1772 
rußge
.
ss_ru_msgrcv
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_msgrcv
);

1773 
rußge
.
ss_ru_nsig«ls
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nsig«ls
);

1774 
rußge
.
ss_ru_nvcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nvcsw
);

1775 
rußge
.
ss_ru_nivcsw
 = 
	`MD_SWAPW
(
loˇl_rußge
.
ru_nivcsw
);

1778 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1779 &
rußge
, (
ss_rußge
));

1781 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

1782 
	`w¨n
("syscall: called getrusage()\n");

1783 
ªgs
->
ªgs_R
[7] = 0;

1785 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

1789 
SS_SYS_wrôev
:

1790 #ifde‡
_MSC_VER


1791 
	`w¨n
("syscall writev()Çot yet implemented for MSC...");

1792 
ªgs
->
ªgs_R
[7] = 0;

1795 
i
;

1796 *
buf
;

1797 
iovec
 *
iov
;

1800 
iov
 =

1801 (
iovec
 *)
	`mÆloc
–
ªgs
->
ªgs_R
[6]

1802 * (
iovec
));

1803 i‡(!
iov
)

1804 
	`Áèl
("out of virtual memory in SYS_writev");

1807 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1808 
iov
, 
ªgs
->
ªgs_R
[6] * (
iovec
));

1811 
i
=0; i < 
ªgs
->
ªgs_R
[6]; i++)

1813 
iov
[
i
].
iov_ba£
 = (*)
	`MD_SWAPW
(()iov[i].iov_base);

1814 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
(iov[i].iov_len);

1815 i‡(
iov
[
i
].
iov_ba£
 !
NULL
)

1817 
buf
 = (*)
	`ˇŒoc
(
iov
[
i
].
iov_Àn
, ());

1818 i‡(!
buf
)

1819 
	`Áèl
("out of virtual memory in SYS_writev");

1820 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, (
md_addr_t
)
iov
[
i
].
iov_ba£
,

1821 
buf
, 
iov
[
i
].
iov_Àn
);

1822 
iov
[
i
].
iov_ba£
 = 
buf
;

1827  
ªgs
->
ªgs_R
[2] =

1828 
	`wrôev
–
ªgs
->
ªgs_R
[4], 
iov
,Ñegs->regs_R[6]);

1831 i‡(
ªgs
->
ªgs_R
[2] != -1)

1832 
ªgs
->
ªgs_R
[7] = 0;

1836 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1837 
ªgs
->
ªgs_R
[7] = 1;

1841 
i
=0; i < 
ªgs
->
ªgs_R
[6]; i++)

1843 i‡(
iov
[
i
].
iov_ba£
)

1845 
	`‰ì
(
iov
[
i
].
iov_ba£
);

1846 
iov
[
i
].
iov_ba£
 = 
NULL
;

1849 
	`‰ì
(
iov
);

1854 
SS_SYS_utimes
:

1856 
buf
[
MAXBUFSIZE
];

1859 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[4], 
buf
);

1861 i‡–
ªgs
->
ªgs_R
[5] == 0)

1863 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
löux
)

1865  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, 
NULL
);

1866 #ñi‡
	`deföed
(
_MSC_VER
)

1868  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, 
NULL
);

1869 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

1870  
ªgs
->
ªgs_R
[2] = 
	`utimes
(
buf
, 
NULL
);

1871 #ñi‡
	`deföed
(
__CYGWIN32__
)

1872 
	`w¨n
("syscall: called utimes()\n");

1874 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

1879 
ss_timevÆ
 
ss_tvÆ
[2];

1880 #i‚de‡
_MSC_VER


1881 
timevÆ
 
tvÆ
[2];

1885 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1886 
ss_tvÆ
, 2*(
ss_timevÆ
));

1888 #i‚de‡
_MSC_VER


1890 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[0].
ss_tv_£c
);

1891 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[0].
ss_tv_u£c
);

1892 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[1].
ss_tv_£c
);

1893 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
(
ss_tvÆ
[1].
ss_tv_u£c
);

1896 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

1899 
utimbuf
 
ubuf
;

1901 
ubuf
.
a˘ime
 = 
tvÆ
[0].
tv_£c
;

1902 
ubuf
.
modtime
 = 
tvÆ
[1].
tv_£c
;

1904  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, &
ubuf
);

1906 #ñi‡
	`deföed
(
_MSC_VER
)

1909 
_utimbuf
 
ubuf
;

1911 
ubuf
.
a˘ime
 = 
ss_tvÆ
[0].
ss_tv_£c
;

1912 
ubuf
.
modtime
 = 
ss_tvÆ
[1].
ss_tv_£c
;

1914  
ªgs
->
ªgs_R
[2] = 
	`utime
(
buf
, &
ubuf
);

1916 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

1917  
ªgs
->
ªgs_R
[2] = 
	`utimes
(
buf
, 
tvÆ
);

1918 #ñi‡
	`deföed
(
__CYGWIN32__
)

1919 
	`w¨n
("syscall: called utimes()\n");

1921 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

1926 i‡(
ªgs
->
ªgs_R
[2] != -1)

1927 
ªgs
->
ªgs_R
[7] = 0;

1931 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1932 
ªgs
->
ªgs_R
[7] = 1;

1937 
SS_SYS_gëæimô
:

1938 
SS_SYS_£ålimô
:

1939 #ifde‡
_MSC_VER


1940 
	`w¨n
("syscall get/setrlimit()Çot yet implemented for MSC...");

1941 
ªgs
->
ªgs_R
[7] = 0;

1942 #ñi‡
	`deföed
(
__CYGWIN32__
)

1943 
	`w¨n
("syscall: called get/setrlimit()\n");

1944 
ªgs
->
ªgs_R
[7] = 0;

1948 
ss_æimô
 
ss_æ
;

1949 
æimô
 
æ
;

1952 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[5],

1953 &
ss_æ
, (
ss_æimô
));

1956 
æ
.
æim_cur
 = 
	`MD_SWAPW
(
ss_æ
.
ss_æim_cur
);

1957 
æ
.
æim_max
 = 
	`MD_SWAPW
(
ss_æ
.
ss_æim_max
);

1960 i‡(
syscode
 =
SS_SYS_gëæimô
)

1961  
ªgs
->
ªgs_R
[2] = 
	`gëæimô
‘egs->ªgs_R[4], &
æ
);

1963  
ªgs
->
ªgs_R
[2] = 
	`£ålimô
‘egs->ªgs_R[4], &
æ
);

1966 i‡(
ªgs
->
ªgs_R
[2] != -1)

1967 
ªgs
->
ªgs_R
[7] = 0;

1971 
ªgs
->
ªgs_R
[2] = 
î∫o
;

1972 
ªgs
->
ªgs_R
[7] = 1;

1976 
ss_æ
.
ss_æim_cur
 = 
	`MD_SWAPW
(
æ
.
æim_cur
);

1977 
ss_æ
.
ss_æim_max
 = 
	`MD_SWAPW
(
æ
.
æim_max
);

1980 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[5],

1981 &
ss_æ
, (
ss_æimô
));

1987 
SS_SYS_gëdúíåõs
:

1991 
i
;

1992 *
buf
;

1993 
ba£
;

1995 
buf
 = (*)
	`ˇŒoc
–
ªgs
->
ªgs_R
[6] + 1, ());

1996 i‡(!
buf
)

1997 
	`Áèl
("out of memory in SYS_getdirentries");

2000 
i
=0; i< 
ªgs
->
ªgs_R
[6]; i++)

2001 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[5]+
i
,

2002 (*)&
buf
[
i
], 1);

2003 (*
maf
)(
Ród
, 
ªgs
->
ªgs_R
[7], (*)&
ba£
, 4);

2005  
ªgs
->
ªgs_R
[2] =

2006 
	`gëdúíåõs
–
ªgs
->
ªgs_R
[4], 
buf
,

2007  
ªgs
->
ªgs_R
[6], &
ba£
);

2009 i‡(
ªgs
->
ªgs_R
[2] != -1)

2010 
ªgs
->
ªgs_R
[7] = 0;

2013 
ªgs
->
ªgs_R
[2] = 
î∫o
;

2014 
ªgs
->
ªgs_R
[7] = 1;

2018 
i
=0; i< 
ªgs
->
ªgs_R
[6]; i++)

2019 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[5]+
i
,

2020 (*)&
buf
[
i
], 1);

2021 (*
maf
)(
Wrôe
, 
ªgs
->
ªgs_R
[7], (*)&
ba£
, 4);

2023 
	`‰ì
(
buf
);

2029 
	`∑nic
("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

2034 
	}
}

	@tests-alpha/src/anagram.c

131 
	~<°dio.h
>

132 
	~<°dlib.h
>

133 
	~<˘y≥.h
>

134 
	~<sys/ty≥s.h
>

135 
	~<sys/°©.h
>

136 
	~<£tjmp.h
>

149 
	tQuad
;

150 
	#MASK_BITS
 32

	)

152 
	#MAX_QUADS
 2

	)

154 
	#MAXWORDS
 26000

	)

155 
	#MAXCAND
 5000

	)

156 
	#MAXSOL
 51

	)

158 
	#ALPHABET
 26

	)

159 
	#ch2i
(
ch
Ë((ch)-'a'Ë

	)

160 
	#i2ch
(
ch
Ë((ch)+'a'Ë

	)

175 
	#huge


	)

176 
	#Ár


	)

177 
	#SåögF‹m©
 "%15s%c"

	)

178 
	#bigmÆloc
 
mÆloc


	)

179 
	#smÆlmÆloc
 
mÆloc


	)

180 
	#smÆlmÆlocÁû
 (*)0

	)

181 
	#HÆtPro˚ssög
(Ë0

	)

182 
	#Cde˛


	)

187 #ifde‡
DEBUG


188 
	#Debug
(
x
Ë
	)
x

190 
	#Debug
(
x
)

	)

193 #ifde‡
STAT


194 
	#Sèt
(
x
Ë
	)
x

196 
	#Sèt
(
x
)

	)

201 
Quad
 
	maqMask
[
MAX_QUADS
];

202 * 
	mpchW‹d
;

203 
	mcchLígth
;

204 } 
	tW‹d
;

205 
W‹d
 * 
	tPW‹d
;

206 
W‹d
 * * 
	tPPW‹d
;

208 
PW‹d
 
	g≠wC™d
[
MAXCAND
];

209 
	g˝wC™d
;

217 
	muFªquícy
;

218 
	muShi·
;

219 
	muBôs
;

220 
	miq
;

221 } 
	tLëãr
;

222 
Lëãr
 * 
	tPLëãr
;

224 
Lëãr
 
	gÆPhø£
[
ALPHABET
];

225 
	#lPhø£
(
ch
Ë
ÆPhø£
[
	`ch2i
(ch)]

	)

227 
	gcchPhø£Lígth
;

229 
Quad
 
	gaqMaöMask
[
MAX_QUADS
];

230 
Quad
 
	gaqMaöSign
[
MAX_QUADS
];

232 
	gcchMöLígth
 = 3;

238 
	gauGlobÆFªquícy
[
ALPHABET
];

239 
	gachByFªquícy
[
ALPHABET
];

241 * 
	gpchDi˘i⁄¨y
;

243 
	#Zîo
(
t
Ë
	`mem£t
—, 0, —)Ë

	)

246 
	$F©Æ
(*
pchMsg
, 
u
) {

247 
	`Ârötf
(
°dout
, 
pchMsg
, 
u
);

248 
	`exô
(1);

249 
	}
}

263 
	$RódDi˘
(*
pchFûe
) {

264 
FILE
 *
Â
;

265 * 
pch
;

266 * 
pchBa£
;

267 
ulLí
;

268 
cW‹ds
 = 0;

269 
cLëãrs
;

270 
ch
;

271 
°©
 
°©Buf
;

273 i‡(
	`°©
(
pchFûe
, &
°©Buf
)Ë
	`F©Æ
("Cannot stat dictionary\n", 0);

275 
ulLí
 = 
°©Buf
.
°_size
 + 2 * ()
MAXWORDS
;

276 
pchBa£
 = 
pchDi˘i⁄¨y
 = (*)
	`mÆloc
(
ulLí
);

278 if(
pchDi˘i⁄¨y
 =
NULL
)

279 
	`F©Æ
("UnableÅoállocate memory for dictionary\n", 0);

281 i‡((
Â
 = 
	`f›í
(
pchFûe
, "r")Ë=
NULL
)

282 
	`F©Æ
("Cannot open dictionary\n", 0);

284 !
	`„of
(
Â
)) {

285 
pch
 = 
pchBa£
+2;

286 
cLëãrs
 = 0;

287 (
ch
 = 
	`fgëc
(
Â
)Ë!'\n' && ch !
EOF
) {

288 i‡(
	`ißÕha
(
ch
)Ë
cLëãrs
++;

289 *
pch
++ = 
ch
;

291 *
pch
++ = '\0';

292 *
pchBa£
 = 
pch
 -ÖchBase;

293 
pchBa£
[1] = 
cLëãrs
;

294 
pchBa£
 = 
pch
;

295 
cW‹ds
++;

297 
	`f˛o£
(
Â
);

299 *
pchBa£
++ = 0;

301 
	`Ârötf
(
°dout
, "maö di˘i⁄¨y ha†%uÉ¡rõs\n", 
cW‹ds
);

302 i‡(
cW‹ds
 >
MAXWORDS
)

303 
	`F©Æ
("DictionaryÅooÜarge; increase MAXWORDS\n", 0);

304 
	`Ârötf
(
°dout
, "%lu byã†wa°ed\n", 
ulLí
 - (
pchBa£
 - 
pchDi˘i⁄¨y
));

305 
	}
}

307 
	$BuûdMask
(* 
pchPhø£
) {

308 
i
;

309 
ch
;

310 
iq
;

311 
cbtU£d
;

312 
cbtNìd
;

313 
Quad
 
qNìd
;

315 
	`bzîo
(
ÆPhø£
, (
Lëãr
)*
ALPHABET
);

316 
	`bzîo
(
aqMaöMask
, (
Quad
)*
MAX_QUADS
);

317 
	`bzîo
(
aqMaöSign
, (
Quad
)*
MAX_QUADS
);

325 
cchPhø£Lígth
 = 0;

326 (
ch
 = *
pchPhø£
++) != '\0') {

327 i‡(
	`ißÕha
(
ch
)) {

328 
ch
 = 
	`tﬁowî
(ch);

329 
	`lPhø£
(
ch
).
uFªquícy
++;

330 
cchPhø£Lígth
++;

335 
iq
 = 0;

336 
cbtU£d
 = 0;

338 
i
 = 0; i < 
ALPHABET
; i++) {

339 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) {

340 
auGlobÆFªquícy
[
i
] = ~0;

342 
auGlobÆFªquícy
[
i
] = 0;

343 
cbtNìd
 = 1, 
qNìd
 = 1;

344 
ÆPhø£
[
i
].
uFªquícy
 >
qNìd
;

345 
cbtNìd
++, 
qNìd
 <<= 1);

346 i‡(
cbtU£d
 + 
cbtNìd
 > 
MASK_BITS
) {

347 i‡(++
iq
 >
MAX_QUADS
)

348 
	`F©Æ
("MAX_QUADSÇotÜargeÉnough\n", 0);

349 
cbtU£d
 = 0;

351 
ÆPhø£
[
i
].
uBôs
 = 
qNìd
-1;

352 i‡(
cbtU£d
)

353 
qNìd
 <<
cbtU£d
;

354 
aqMaöSign
[
iq
] |
qNìd
;

355 
aqMaöMask
[
iq
] |(
Quad
)
ÆPhø£
[
i
].
uFªquícy
 << 
cbtU£d
;

356 
ÆPhø£
[
i
].
uShi·
 = 
cbtU£d
;

357 
ÆPhø£
[
i
].
iq
 = iq;

358 
cbtU£d
 +
cbtNìd
;

361 
	}
}

363 
PW‹d


364 
	$NewW‹d
() {

365 
PW‹d
 
pw
;

367 
pw
 = (
W‹d
 *)
	`mÆloc
((Word));

368 i‡(
pw
 =
NULL
)

369 
	`F©Æ
("Ouào‡mem‹yá·î %d c™did©es\n", 
˝wC™d
);

370  
pw
;

371 
	}
}

378 
	$w¥öt
(* 
pch
) {

379 
	`¥ötf
("%†", 
pch
);

380 
	}
}

382 
PW‹d
 
NextW‹d
();

385 
PW‹d
 
	$NextW‹d
() {

386 
PW‹d
 
pw
;

387 i‡(
˝wC™d
 >
MAXCAND
)

388 
	`F©Æ
("Too many candidates\n", 0);

389 
pw
 = 
≠wC™d
[
˝wC™d
++];

390 i‡(
pw
 !
NULL
)

391  
pw
;

392 
≠wC™d
[
˝wC™d
-1] = 
	`NewW‹d
();

393  
≠wC™d
[
˝wC™d
-1];

394 
	}
}

399 
	$BuûdW‹d
(* 
pchW‹d
) {

400 
cchFªquícy
[
ALPHABET
];

401 
i
;

402 * 
pch
 = 
pchW‹d
;

403 
PW‹d
 
pw
;

404 
cchLígth
 = 0;

406 
	`bzîo
(
cchFªquícy
, ()*
ALPHABET
);

410 (
i
 = *
pch
++) != '\0') {

411 i‡(!
	`ißÕha
(
i
)) ;

412 
i
 = 
	`ch2i
(
	`tﬁowî
(i));

413 i‡(++
cchFªquícy
[
i
] > 
ÆPhø£
[i].
uFªquícy
)

415 ++
cchLígth
;

418 
	`Debug
(
	`w¥öt
(
pchW‹d
);)

421 
i
 = 0; i < 
ALPHABET
; i++)

422 
auGlobÆFªquícy
[
i
] +
cchFªquícy
[i];

427 
pw
 = 
	`NextW‹d
();

428 
	`bzîo
(
pw
->
aqMask
, (
Quad
)*
MAX_QUADS
);

430 
pw
->
pchW‹d
 =ÖchWord;

431 
pw
->
cchLígth
 = cchLength;

432 
i
 = 0; i < 
ALPHABET
; i++) {

433 
pw
->
aqMask
[
ÆPhø£
[
i
].
iq
] |=

434 (
Quad
)
cchFªquícy
[
i
] << 
ÆPhø£
[i].
uShi·
;

436 
	}
}

440 
	$AddW‹ds
() {

441 * 
pch
 = 
pchDi˘i⁄¨y
;

443 
˝wC™d
 = 0;

445 *
pch
) {

446 i‡((
pch
[1] >
cchMöLígth
 &&Öch[1]+cchMöLígth <
cchPhø£Lígth
)

447 || 
pch
[1] =
cchPhø£Lígth
)

448 
	`BuûdW‹d
(
pch
+2);

449 
pch
 += *pch;

452 
	`Ârötf
(
°dout
, "%d c™did©es\n", 
˝wC™d
);

453 
	}
}

455 
	$DumpC™did©es
() {

456 
u
;

458 
u
 = 0; u < 
˝wC™d
; u++)

459 
	`¥ötf
(
SåögF‹m©
, 
≠wC™d
[
u
]->
pchW‹d
, (u % 4 == 3) ? '\n' : ' ');

460 
	`¥ötf
("\n");

461 
	}
}

463 
PW‹d
 
	g≠wSﬁ
[
MAXSOL
];

464 
	g˝wLa°
;

466 
Debug
(

467 
	$DumpW‹d
(
Quad
 * 
pq
) {

468 
i
;

469 
Quad
 
q
;

470 
i
 = 0; i < 
ALPHABET
; i++) {

471 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) ;

472 
q
 = 
pq
[
ÆPhø£
[
i
].
iq
];

473 i‡(
ÆPhø£
[
i
].
uShi·
Ë
q
 >>=álPhrase[i].uShift;

474 
q
 &
ÆPhø£
[
i
].
uBôs
;

475 
q
--Ë
	`putch¨
('a'+
i
);

477 
	`putch¨
(' ');

478 
	}
}

481 
	$DumpW‹ds
() {

482 
i
;

483 
i
 = 0; i < 
˝wLa°
; i++Ë
	`w¥öt
(
≠wSﬁ
[i]->
pchW‹d
);

484 
	`¥ötf
("\n");

485 
	}
}

487 
Sèt
(
ulHighCou¡
; 
ulLowCou¡
;)

489 
jmp_buf
 
	gjbA«gøm
;

491 
	#O√Sãp
(
i
) \

492 i‡((
aqNext
[
i
] = 
pqMask
[i] - 
pw
->
aqMask
[i]Ë& 
aqMaöSign
[i]) { \

493 
µwSèπ
++; \

495 }

	)

499 
	$FödA«gøm
(
Quad
 * 
pqMask
, 
PPW‹d
 
µwSèπ
, 
iLëãr
)

501 
Quad
 
aqNext
[
MAX_QUADS
];

502 
PW‹d
 
pw
;

503 
Quad
 
qMask
;

504 
iq
;

505 
PPW‹d
 
µwEnd
 = &
≠wC™d
[0];

506 
µwEnd
 +
˝wC™d
;

510 i‡(
	`HÆtPro˚ssög
()Ë
	`l⁄gjmp
(
jbA«gøm
, 1);

512 
	`Debug
(
	`¥ötf
("Tryög :"); 
	`DumpW‹d
(
pqMask
);Örintf(":\n");)

515 
iq
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].iq;

516 
qMask
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uBôs
 <<

517 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uShi·
;

518 i‡(
pqMask
[
iq
] & 
qMask
) ;

519 
iLëãr
++;

522 
	`Debug
(
	`¥ötf
("PivŸög o¿%c\n", 
	`i2ch
(
achByFªquícy
[
iLëãr
]));)

524 
µwSèπ
 < 
µwEnd
) {

525 
pw
 = *
µwSèπ
;

527 
	`Sèt
(i‡(++
ulLowCou¡
 =0Ë++
ulHighCou¡
;)

529 #i‡
MAX_QUADS
 > 0

530 
	`O√Sãp
(0);

533 #i‡
MAX_QUADS
 > 1

534 
	`O√Sãp
(1);

537 #i‡
MAX_QUADS
 > 2

538 
	`O√Sãp
(2);

541 #i‡
MAX_QUADS
 > 3

542 
	`O√Sãp
(3);

545 #i‡
MAX_QUADS
 > 4

550 i‡((
pw
->
aqMask
[
iq
] & 
qMask
) == 0) {

551 *
µwSèπ
 = *--
µwEnd
;

552 *
µwEnd
 = 
pw
;

557 
≠wSﬁ
[
˝wLa°
++] = 
pw
;

558 i‡(
cchPhø£Lígth
 -
pw
->
cchLígth
) {

559 
	`Debug
(
	`DumpW‹ds
();)

563 
µwEnd
 = &
≠wC™d
[0];

564 
µwEnd
 +
˝wC™d
;

565 
	`FödA«gøm
(&
aqNext
[0],

566 
µwSèπ
, 
iLëãr
);

567 } 
	`DumpW‹ds
();

568 
cchPhø£Lígth
 +
pw
->
cchLígth
;

569 --
˝wLa°
;

570 
µwSèπ
++;

575 
	}
}

577 
Cde˛
 
	$Com∑ªFªquícy
(*
pch1
, *
pch2
) {

578  
auGlobÆFªquícy
[*
pch1
] <áuGlobÆFªquícy[*
pch2
]

580 
auGlobÆFªquícy
[*
pch1
] =auGlobÆFªquícy[*
pch2
]

582 
	}
}

584 
	$S‹tC™did©es
() {

585 
i
;

588 
i
 = 0; i < 
ALPHABET
; i++Ë
achByFªquícy
[i] = i;

589 
	`qs‹t
(
achByFªquícy
, 
ALPHABET
, (),

590 ((*)(c⁄° *, c⁄° *))
Com∑ªFªquícy
);

592 
	`Ârötf
(
°dout
, "Order of search will be ");

593 
i
 = 0; i < 
ALPHABET
; i++)

594 
	`Âutc
(
	`i2ch
(
achByFªquícy
[
i
]), 
°dout
);

595 
	`Âutc
('\n', 
°dout
);

596 
	}
}

598 
	gfI¡îa˘ive
;

600 * 
	$GëPhø£
(* 
pch
) {

601 i‡(
fI¡îa˘ive
Ë
	`¥ötf
(">");

602 
	`fÊush
(
°dout
);

603 i‡(
	`gës
(
pch
Ë=
NULL
) {

604 #ifde‡
PLUS_STATS


605 
	`PrötDîefSèts
(
°dout
);

606 
	`PrötHópSize
(
°dout
);

608 
	`exô
(0);

610 (
pch
);

611 
	}
}

613 
	gachPhø£
[255];

615 
Cde˛
 
	$maö
(
˝chArgc
, **
µchArgv
) {

617 i‡(
˝chArgc
 != 2 && cpchArgc != 3)

618 
	`F©Æ
("Usage:ánagram dictionary [length]\n", 0);

620 i‡(
˝chArgc
 == 3)

621 
cchMöLígth
 = 
	`©oi
(
µchArgv
[2]);

623 
fI¡îa˘ive
 = 
	`ißây
(1);

625 
	`RódDi˘
(
µchArgv
[1]);

627 
	`GëPhø£
(&
achPhø£
[0]Ë!
NULL
) {

628 i‡(
	`isdigô
(
achPhø£
[0])) {

629 
cchMöLígth
 = 
	`©oi
(
achPhø£
);

630 
	`¥ötf
("NewÜígth: %d\n", 
cchMöLígth
);

631 } i‡(
achPhø£
[0] == '?') {

632 
	`DumpC™did©es
();

634 
	`BuûdMask
(&
achPhø£
[0]);

635 
	`AddW‹ds
();

636 i‡(
˝wC™d
 =0 || 
cchPhø£Lígth
 == 0) ;

638 
	`Sèt
(
ulHighCou¡
 = 
ulLowCou¡
 = 0;)

639 
˝wLa°
 = 0;

640 
	`S‹tC™did©es
();

641 i‡(
	`£tjmp
(
jbA«gøm
) == 0)

642 
	`FödA«gøm
(&
aqMaöMask
[0], &
≠wC™d
[0], 0);

643 
	`Sèt
(
	`¥ötf
("%lu:%luÖrobes\n", 
ulHighCou¡
, 
ulLowCou¡
);)

647 
	}
}

	@tests-alpha/src/test-dirent.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<dúít.h
>

7 
	$maö
(
¨gc
, **
¨gv
)

9 *
buf
;

10 
dúít
 *
p
;

11 
i
, 
˙t
, 
dú
, 
nbyãs
;

12 
off_t
 
ba£
 = 0;

14 i‡(
¨gc
 != 2)

16 
	`Ârötf
(
°dîr
, "Usage:Åest-dirent <path>\n");

17 
	`exô
(1);

20 
buf
 = 
	`ˇŒoc
(1, 8192);

21 i‡(!
buf
)

23 
	`Ârötf
(
°dîr
, "error: out of virtual memory\n");

24 
	`exô
(1);

27 
	`Ârötf
(
°dout
, "ã°-dúít: o≥nög `%s'...\n", 
¨gv
[1]);

28 
dú
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
);

29 i‡(
dú
 == -1)

31 
	`Ârötf
(
°dîr
, "îr‹: c™nŸ o≥¿dúe˘‹y `%s'\n", 
¨gv
[1]);

32 
	`exô
(1);

35 
nbyãs
 = 
	`gëdúíåõs
(
dú
, 
buf
, 8192, &
ba£
);

36 
	`Ârötf
(
°dout
, "%d = getdirentries(%d, %p, %d, %d)\n",

37 
nbyãs
, 
dú
, 
buf
, 8192, 
ba£
);

40 
i
=0, 
˙t
=0, 
p
=(
dúít
 *)
buf
;

41 
˙t
 < 
nbyãs
 && 
p
->
d_ª˛í
 > 0;

42 
i
++, 
˙t
 +
p
->
d_ª˛í
,Ö=(
dúít
 *)(
buf
+cnt))

44 
	`Ârötf
(
°dout
, "rec #%2d: d_ino: %7d, d_reclen: %2d, d_name: %s\n",

45 
i
, 
p
->
d_öo
,Ö->
d_ª˛í
,Ö->
d_«me
);

48 i‡(
˙t
 !
nbyãs
)

49 
	`Ârötf
(
°dîr
, "warn: cnt !=Çbytes, cnt == %d,Çbytes == %d",

50 
˙t
, 
nbyãs
);

51 
	}
}

	@tests-alpha/src/test-fmath.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

5 
	gfoo1
=5.3, 
	gfoo2
=6.4;

6 
	gb¨1
=5.3, 
	gb¨2
=6.4;

7 
	gq
 = 4;

8 
	gx
 = 12;

9 
	gy
 = 29;

10 
	gz
;

11 
	gl
 = 6;

12 *
	gÕ
 = &
l
;

15 
	$maö
()

17 
	`¥ötf
("q=%d (öt)x=%d (öt)y=%d\n", 
q
, ()
x
, ()
y
);

18 
z
 = 
	`pow
(
x
, 2);

19 
	`¥ötf
("z=%d\n", ()
z
);

20 
z
 = 
	`pow
(
y
, 2);

21 
	`¥ötf
("z=%d\n", ()
z
);

22 
z
 = 13.21;

23 
	`¥ötf
("z=%d\n", ()
z
);

24 
z
 = ()13;

25 
	`¥ötf
("z=%d\n", ()
z
);

26 
	`¥ötf
("l=%d\n", ()
l
);

27 
l
 =Ü * 6;

28 
	`¥ötf
("l=%d\n", ()
l
);

29 *
Õ
 = *lp * 6;

30 
	`¥ötf
("*Õ=%d\n", ()*
Õ
);

31 
z
 = 
	`pow
(
x
, 2);

32 
	`¥ötf
("z=%f\n", 
z
);

34 
	`¥ötf
("q=%d x=%‡(öt)x=%d y=%‡(öt)y=%d\n", 
q
, 
x
, ()x, 
y
, ()y);

36 
x
 = 
foo1
+
foo2
;

37 
y
 = 2*
b¨1
+2*
b¨2
;

39 
q
 = q*4;

41 
	`¥ötf
("q = %d x = %‡ y = %f\n", 
q
, 
x
, 
y
);

44 
	}
}

	@tests-alpha/src/test-llong.c

1 
	~<°dio.h
>

3 
	gx
 = 0x100000000LL;

4 
	gy
 = 0x1ffffffffLL;

5 
	gz
 = 0x010000000LL;

6 
	gw
 = 0x01fffffffLL;

9 
	$maö
()

11 
	`Ârötf
(
°dout
, "x+1 = 0x%016Lx\n", 
x
+1);

12 
	`Ârötf
(
°dout
, "x-1 = 0x%016Lx\n", 
x
-1);

13 
	`Ârötf
(
°dout
, "y+1 = 0x%016Lx\n", 
y
+1);

14 
	`Ârötf
(
°dout
, "x+y = 0x%016Lx\n", 
x
+
y
);

15 
	`Ârötf
(
°dout
, "z*w = 0x%016Lx\n", 
z
*
w
);

16 
	`exô
(0);

17 
	}
}

	@tests-alpha/src/test-lswlr.c

1 
	~<°dio.h
>

4 
	$maö
()

6 
°r
[] = "Hello world...";

8 
	`Ârötf
(
°dout
, "°∏%s\n", 
°r
);

9 
	`exô
(0);

10 
	}
}

	@tests-alpha/src/test-math.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

6 
	$maö
()

8 
°r
[] = "123.456";

9 
x
,
h
,
li
,
Ã
,
a
,
Ãr
;

11 
	`¥ötf
("pow(12.0, 2.0Ë=%f\n", 
	`pow
(12.0, 2.0));

12 
	`¥ötf
("pow(10.0, 3.0Ë=%f\n", 
	`pow
(10.0, 3.0));

13 
	`¥ötf
("pow(10.0, -3.0Ë=%f\n", 
	`pow
(10.0, -3.0));

15 
	`¥ötf
("°r: %s\n", 
°r
);

16 
x
 = ()
	`©oi
 (
°r
);

17 
	`¥ötf
("x: %f\n", 
x
);

19 
	`¥ötf
("°r: %s\n", 
°r
);

20 
x
 = 
	`©of
 (
°r
);

21 
	`¥ötf
("x: %f\n", 
x
);

23 
	`¥ötf
("°r: %s\n", 
°r
);

24 
x
 = 
	`©of
 (
°r
);

25 
	`¥ötf
("x: %f\n", 
x
);

27 
	`¥ötf
 ("%g %‡%d %g\n", 
x
, x, ()x, 
	`pow
 (10.0, 3.0));

29 
x
 = 
	`söh
(2.0);

31 
	`¥ötf
("söh(2.0Ë%g\n", 
x
);

33 
x
 = 
	`söh
(3.0);

35 
	`¥ötf
("söh(3.0Ë%g\n", 
x
);

37 
h
 = 
	`hypŸ
(2.0,3.0);

39 
	`¥ötf
("h=%g\n", 
h
);

41 
a
 = 
	`©™2
(3.0, 2.0);

43 
	`¥ötf
("©™2(3,2Ë%g\n", 
a
);

45 
Ã
 = 
	`pow
(
h
,4.0);

47 
	`¥ötf
("pow(%g,4.0Ë%g\n", 
h
, 
Ã
);

49 
Ãr
 = 
Ã
;

51 
li
 = 4.0 * 
a
;

53 
Ã
 =Ü∏/ 
	`exp
(
a
*5.0);

55 
	`¥ötf
("%g /Éxp(%g * 5Ë%g\n", 
Ãr
, 
a
, 
Ã
);

57 
Ãr
 = 
li
;

59 
li
 +5.0 * 
	`log
(
h
);

61 
	`¥ötf
("%g + 5*log(%gË%g\n", 
Ãr
, 
h
, 
li
);

63 
	`¥ötf
("cos(%gË%g, sö(%gË%g\n", 
li
, 
	`cos
÷i),Üi, 
	`sö
(li));

66 
x
 = 
	`dªm
(10.3435,6.2831852);

68 
	`¥ötf
("dªm(10.3435,6.2831852Ë%g\n", 
x
);

70 
x
 = 
	`dªm
(-10.3435,6.2831852);

72 
	`¥ötf
("dªm(-10.3435,6.2831852Ë%g\n", 
x
);

74 
x
 = 
	`dªm
(-10.3435,-6.2831852);

76 
	`¥ötf
("dªm(-10.3435,-6.2831852Ë%g\n", 
x
);

78 
x
 = 
	`dªm
(10.3435,-6.2831852);

80 
	`¥ötf
("dªm(10.3435,-6.2831852Ë%g\n", 
x
);

83 
	`¥ötf
("x%8.6gx\n", .5);

84 
	`¥ötf
("x%-8.6gx\n", .5);

85 
	`¥ötf
("x%6.6gx\n", .5);

88 
x
 = 
	`©of
 ("-1e-17-");

89 
	`¥ötf
 ("%g %c= %g %s!\n",

90 
x
,

91 
x
 == -1e-17 ? '=' : '!',

93 
	`Ábs
(
x
 - -1e-17) < 0.000000001 ? "Worked" : "Failed");

97 
	}
}

	@tests-alpha/src/test-printf.c

19 #ifdef 
BSD


20 
	~</u§/ö˛ude/°dio.h
>

21 
	#EXIT_SUCCESS
 0

	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

31 
	ma
;

32 
	mb
;

33 
	mc
;

34 
	md
;

35 } 
	gxxyyz
[100];

37 
	gzzz
;

40 
	$FooB¨
(
a
)

42  
xxyyz
[
a
].
b
;

43 
	}
}

45 
	guxxe
[100];

48 
	$FooFoo
(
a
)

50 
zzz
++;

51  
uxxe
[
a
];

52 
	}
}

54 *
	gsccsid
 = "this isáÅest...";

57 
	$fmtchk
(*
fmt
)

59 *
sccsid
 = "this isáÅest...";

60 (Ë
	`Âuts
(
fmt
, 
°dout
);

61 (Ë
	`¥ötf
(":\t`");

62 (Ë
	`¥ötf
(
fmt
, 0x12);

63 (Ë
	`¥ötf
("'\n");

64 
	}
}

67 
	$fmt°1chk
(*
fmt
)

69 (Ë
	`Âuts
(
fmt
, 
°dout
);

70 (Ë
	`¥ötf
(":\t`");

71 (Ë
	`¥ötf
(
fmt
, 4, 0x12);

72 (Ë
	`¥ötf
("'\n");

73 
	}
}

76 
	$fmt°2chk
(*
fmt
)

78 (Ë
	`Âuts
(
fmt
, 
°dout
);

79 (Ë
	`¥ötf
(":\t`");

80 (Ë
	`¥ötf
(
fmt
, 4, 4, 0x12);

81 (Ë
	`¥ötf
("'\n");

82 
	}
}

98 
	#DEC
 -123

	)

99 
	#INT
 255

	)

100 
	#UNS
 (~0)

	)

108 
	$Â_ã°
()

110 
i
, 
j
, 
k
, 
l
;

111 
buf
[7];

112 *
¥efix
 = 
buf
;

113 
ç
[20];

115 
	`puts
("\nFormatted outputÅest");

116 
	`¥ötf
("prefix 6d 6o 6x 6X 6u\n");

117 
	`°r˝y
(
¥efix
, "%");

118 
i
 = 0; i < 2; i++) {

119 
j
 = 0; j < 2; j++) {

120 
k
 = 0; k < 2; k++) {

121 
l
 = 0;Ü < 2;Ü++) {

122 
	`°r˝y
(
¥efix
, "%");

123 i‡(
i
 =0Ë
	`°rˇt
(
¥efix
, "-");

124 i‡(
j
 =0Ë
	`°rˇt
(
¥efix
, "+");

125 i‡(
k
 =0Ë
	`°rˇt
(
¥efix
, "#");

126 i‡(
l
 =0Ë
	`°rˇt
(
¥efix
, "0");

127 
	`¥ötf
("%5†|", 
¥efix
);

128 
	`°r˝y
(
ç
, 
¥efix
);

129 
	`°rˇt
(
ç
, "6d |");

130 
	`¥ötf
(
ç
, 
DEC
);

131 
	`°r˝y
(
ç
, 
¥efix
);

132 
	`°rˇt
(
ç
, "6o |");

133 
	`¥ötf
(
ç
, 
INT
);

134 
	`°r˝y
(
ç
, 
¥efix
);

135 
	`°rˇt
(
ç
, "6x |");

136 
	`¥ötf
(
ç
, 
INT
);

137 
	`°r˝y
(
ç
, 
¥efix
);

138 
	`°rˇt
(
ç
, "6X |");

139 
	`¥ötf
(
ç
, 
INT
);

140 
	`°r˝y
(
ç
, 
¥efix
);

141 
	`°rˇt
(
ç
, "6u |");

142 
	`¥ötf
(
ç
, 
UNS
);

143 
	`¥ötf
("\n");

148 
	`¥ötf
("%10s\n", (*Ë
NULL
);

149 
	`¥ötf
("%-10s\n", (*Ë
NULL
);

150 
	}
}

153 
	$maö
()

155 
sh‹t°r
[] = "Hi, Z.";

156 
l⁄g°r
[] = "Good morning, Doctor Chandra. This is Hal. \
ámÑeady for my firstÜessonÅoday.";

159 
	`fmtchk
("%.4x");

160 
	`fmtchk
("%04x");

161 
	`fmtchk
("%4.4x");

162 
	`fmtchk
("%04.4x");

163 
	`fmtchk
("%4.3x");

164 
	`fmtchk
("%04.3x");

166 
	`fmt°1chk
("%.*x");

167 
	`fmt°1chk
("%0*x");

168 
	`fmt°2chk
("%*.*x");

169 
	`fmt°2chk
("%0*.*x");

171 #i‚def 
BSD


172 
	`¥ötf
("bad format:\t\"%z\"\n");

173 
	`¥ötf
("nûÖoöã∏’added):\t\"%10p\"\n", (*Ë
NULL
);

176 
	`¥ötf
("decimalÇegative:\t\"%d\"\n", -2345);

177 
	`¥ötf
("octalÇegative:\t\"%o\"\n", -2345);

178 
	`¥ötf
("hexÇegative:\t\"%x\"\n", -2345);

179 
	`¥ötf
("long decimalÇumber:\t\"%ld\"\n", -123456);

180 
	`¥ötf
("long octalÇegative:\t\"%lo\"\n", -2345L);

181 
	`¥ötf
("long unsigned decimalÇumber:\t\"%lu\"\n", -123456);

182 
	`¥ötf
("zero-padded LDN:\t\"%010ld\"\n", -123456);

183 
	`¥ötf
("left-adjusted ZLDN:\t\"%-010ld\"\n", -123456);

184 
	`¥ötf
("space-padded LDN:\t\"%10ld\"\n", -123456);

185 
	`¥ötf
("left-adjusted SLDN:\t\"%-10ld\"\n", -123456);

187 
	`¥ötf
("zîo-∑dded såög:\t\"%010s\"\n", 
sh‹t°r
);

188 
	`¥ötf
("À·-adju°ed Z såög:\t\"%-010s\"\n", 
sh‹t°r
);

189 
	`¥ötf
("•a˚-∑dded såög:\t\"%10s\"\n", 
sh‹t°r
);

190 
	`¥ötf
("À·-adju°ed S såög:\t\"%-10s\"\n", 
sh‹t°r
);

191 
	`¥ötf
("nuŒ såög:\t\"%s\"\n", (*)
NULL
);

193 
	`¥ötf
("limôed såög:\t\"%.22s\"\n", 
l⁄g°r
);

196 
	`¥ötf
("e-style >= 1:\t\"%e\"\n", 12.34);

197 
	`¥ötf
("e-style >= .1:\t\"%e\"\n", 0.1234);

198 
	`¥ötf
("e-style < .1:\t\"%e\"\n", 0.001234);

199 
	`¥ötf
("e-style big:\t\"%.60e\"\n", 1e20);

200 
	`¥ötf
 ("e-style == .1:\t\"%e\"\n", 0.1);

201 
	`¥ötf
("f-style >= 1:\t\"%f\"\n", 12.34);

202 
	`¥ötf
("f-style >= .1:\t\"%f\"\n", 0.1234);

203 
	`¥ötf
("f-style < .1:\t\"%f\"\n", 0.001234);

204 
	`¥ötf
("g-style >= 1:\t\"%g\"\n", 12.34);

205 
	`¥ötf
("g-style >= .1:\t\"%g\"\n", 0.1234);

206 
	`¥ötf
("g-style < .1:\t\"%g\"\n", 0.001234);

207 
	`¥ötf
("g-style big:\t\"%.60g\"\n", 1e20);

210 
buf
[128];

211 
	`•rötf
(
buf
, "newÅest: %.15g", 99.85);

212 
	`¥ötf
(":%s:\n", 
buf
);

215 
	`¥ötf
 (" %6.5lf\n", .099999999860301614);

216 
	`¥ötf
 (" %6.5lf\n", .1);

217 
	`¥ötf
 ("x%5.4lfx\n", .5);

219 
	`¥ötf
 ("%#03x\n", 1);

223 
d
 = 
FLT_MIN
;

224 
nôî
 = 17;

226 
nôî
-- != 0)

227 
	`¥ötf
 ("%.17e\n", 
d
 / 2);

228 
	`fÊush
 (
°dout
);

231 
	`¥ötf
 ("%15.5e\n", 4.9406564584124654e-324);

234 
	#FORMAT
 "|%12.4f|%12.4e|%12.4g|\n"

	)

235 
	`¥ötf
 (
FORMAT
, 0.0, 0.0, 0.0);

236 
	`¥ötf
 (
FORMAT
, 1.0, 1.0, 1.0);

237 
	`¥ötf
 (
FORMAT
, -1.0, -1.0, -1.0);

238 
	`¥ötf
 (
FORMAT
, 100.0, 100.0, 100.0);

239 
	`¥ötf
 (
FORMAT
, 1000.0, 1000.0, 1000.0);

240 
	`¥ötf
 (
FORMAT
, 10000.0, 10000.0, 10000.0);

241 
	`¥ötf
 (
FORMAT
, 12345.0, 12345.0, 12345.0);

242 
	`¥ötf
 (
FORMAT
, 100000.0, 100000.0, 100000.0);

243 
	`¥ötf
 (
FORMAT
, 123456.0, 123456.0, 123456.0);

244 #unde‡
FORMAT


248 
buf
[20];

249 
	`¥ötf
 ("snprintf (\"%%30s\", \"foo\") == %d, \"%.*s\"\n",

250 
	`¢¥ötf
 (
buf
,  (buf), "%30s", "foo"),  (buf), buf);

254 
	`Â_ã°
 ();

255 
	`Â_ã°
 ();

256 
	`Â_ã°
 ();

257 
	`Â_ã°
 ();

258 
	`Â_ã°
 ();

259 
	`Â_ã°
 ();

260 
	`Â_ã°
 ();

261 
	`Â_ã°
 ();

263 
	`¥ötf
 ("%e should be 1.234568e+06\n", 1234567.8);

264 
	`¥ötf
 ("%f should be 1234567.800000\n", 1234567.8);

265 
	`¥ötf
 ("%g should be 1.23457e+06\n", 1234567.8);

266 
	`¥ötf
 ("%g should be 123.456\n", 123.456);

267 
	`¥ötf
 ("%g should be 1e+06\n", 1000000.0);

268 
	`¥ötf
 ("%g should be 10\n", 10.0);

269 
	`¥ötf
 ("%g should be 0.02\n", 0.02);

272 
buf
[128];

273 
	`•rötf
(
buf
, "%#.*f", 4, ()0.70000);

274 
	`¥ötf
("ã°ögÖ¨amëri¯fõlds: %s\n", 
buf
);

278 
	}
}

	@tests-pisa/src/anagram.c

131 
	~<°dio.h
>

132 
	~<°dlib.h
>

133 
	~<˘y≥.h
>

134 
	~<sys/ty≥s.h
>

135 
	~<sys/°©.h
>

136 
	~<£tjmp.h
>

149 
	tQuad
;

150 
	#MASK_BITS
 32

	)

152 
	#MAX_QUADS
 2

	)

154 
	#MAXWORDS
 26000

	)

155 
	#MAXCAND
 5000

	)

156 
	#MAXSOL
 51

	)

158 
	#ALPHABET
 26

	)

159 
	#ch2i
(
ch
Ë((ch)-'a'Ë

	)

160 
	#i2ch
(
ch
Ë((ch)+'a'Ë

	)

175 
	#huge


	)

176 
	#Ár


	)

177 
	#SåögF‹m©
 "%15s%c"

	)

178 
	#bigmÆloc
 
mÆloc


	)

179 
	#smÆlmÆloc
 
mÆloc


	)

180 
	#smÆlmÆlocÁû
 (*)0

	)

181 
	#HÆtPro˚ssög
(Ë0

	)

182 
	#Cde˛


	)

187 #ifde‡
DEBUG


188 
	#Debug
(
x
Ë
	)
x

190 
	#Debug
(
x
)

	)

193 #ifde‡
STAT


194 
	#Sèt
(
x
Ë
	)
x

196 
	#Sèt
(
x
)

	)

201 
Quad
 
	maqMask
[
MAX_QUADS
];

202 * 
	mpchW‹d
;

203 
	mcchLígth
;

204 } 
	tW‹d
;

205 
W‹d
 * 
	tPW‹d
;

206 
W‹d
 * * 
	tPPW‹d
;

208 
PW‹d
 
	g≠wC™d
[
MAXCAND
];

209 
	g˝wC™d
;

217 
	muFªquícy
;

218 
	muShi·
;

219 
	muBôs
;

220 
	miq
;

221 } 
	tLëãr
;

222 
Lëãr
 * 
	tPLëãr
;

224 
Lëãr
 
	gÆPhø£
[
ALPHABET
];

225 
	#lPhø£
(
ch
Ë
ÆPhø£
[
	`ch2i
(ch)]

	)

227 
	gcchPhø£Lígth
;

229 
Quad
 
	gaqMaöMask
[
MAX_QUADS
];

230 
Quad
 
	gaqMaöSign
[
MAX_QUADS
];

232 
	gcchMöLígth
 = 3;

238 
	gauGlobÆFªquícy
[
ALPHABET
];

239 
	gachByFªquícy
[
ALPHABET
];

241 * 
	gpchDi˘i⁄¨y
;

243 
	#Zîo
(
t
Ë
	`mem£t
—, 0, —)Ë

	)

246 
	$F©Æ
(*
pchMsg
, 
u
) {

247 
	`Ârötf
(
°dout
, 
pchMsg
, 
u
);

248 
	`exô
(1);

249 
	}
}

263 
	$RódDi˘
(*
pchFûe
) {

264 
FILE
 *
Â
;

265 * 
pch
;

266 * 
pchBa£
;

267 
ulLí
;

268 
cW‹ds
 = 0;

269 
cLëãrs
;

270 
ch
;

271 
°©
 
°©Buf
;

273 i‡(
	`°©
(
pchFûe
, &
°©Buf
)Ë
	`F©Æ
("Cannot stat dictionary\n", 0);

275 
ulLí
 = 
°©Buf
.
°_size
 + 2 * ()
MAXWORDS
;

276 
pchBa£
 = 
pchDi˘i⁄¨y
 = (*)
	`mÆloc
(
ulLí
);

278 if(
pchDi˘i⁄¨y
 =
NULL
)

279 
	`F©Æ
("UnableÅoállocate memory for dictionary\n", 0);

281 i‡((
Â
 = 
	`f›í
(
pchFûe
, "r")Ë=
NULL
)

282 
	`F©Æ
("Cannot open dictionary\n", 0);

284 !
	`„of
(
Â
)) {

285 
pch
 = 
pchBa£
+2;

286 
cLëãrs
 = 0;

287 (
ch
 = 
	`fgëc
(
Â
)Ë!'\n' && ch !
EOF
) {

288 i‡(
	`ißÕha
(
ch
)Ë
cLëãrs
++;

289 *
pch
++ = 
ch
;

291 *
pch
++ = '\0';

292 *
pchBa£
 = 
pch
 -ÖchBase;

293 
pchBa£
[1] = 
cLëãrs
;

294 
pchBa£
 = 
pch
;

295 
cW‹ds
++;

297 
	`f˛o£
(
Â
);

299 *
pchBa£
++ = 0;

301 
	`Ârötf
(
°dout
, "maö di˘i⁄¨y ha†%uÉ¡rõs\n", 
cW‹ds
);

302 i‡(
cW‹ds
 >
MAXWORDS
)

303 
	`F©Æ
("DictionaryÅooÜarge; increase MAXWORDS\n", 0);

304 
	`Ârötf
(
°dout
, "%lu byã†wa°ed\n", 
ulLí
 - (
pchBa£
 - 
pchDi˘i⁄¨y
));

305 
	}
}

307 
	$BuûdMask
(* 
pchPhø£
) {

308 
i
;

309 
ch
;

310 
iq
;

311 
cbtU£d
;

312 
cbtNìd
;

313 
Quad
 
qNìd
;

315 
	`bzîo
(
ÆPhø£
, (
Lëãr
)*
ALPHABET
);

316 
	`bzîo
(
aqMaöMask
, (
Quad
)*
MAX_QUADS
);

317 
	`bzîo
(
aqMaöSign
, (
Quad
)*
MAX_QUADS
);

325 
cchPhø£Lígth
 = 0;

326 (
ch
 = *
pchPhø£
++) != '\0') {

327 i‡(
	`ißÕha
(
ch
)) {

328 
ch
 = 
	`tﬁowî
(ch);

329 
	`lPhø£
(
ch
).
uFªquícy
++;

330 
cchPhø£Lígth
++;

335 
iq
 = 0;

336 
cbtU£d
 = 0;

338 
i
 = 0; i < 
ALPHABET
; i++) {

339 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) {

340 
auGlobÆFªquícy
[
i
] = ~0;

342 
auGlobÆFªquícy
[
i
] = 0;

343 
cbtNìd
 = 1, 
qNìd
 = 1;

344 
ÆPhø£
[
i
].
uFªquícy
 >
qNìd
;

345 
cbtNìd
++, 
qNìd
 <<= 1);

346 i‡(
cbtU£d
 + 
cbtNìd
 > 
MASK_BITS
) {

347 i‡(++
iq
 >
MAX_QUADS
)

348 
	`F©Æ
("MAX_QUADSÇotÜargeÉnough\n", 0);

349 
cbtU£d
 = 0;

351 
ÆPhø£
[
i
].
uBôs
 = 
qNìd
-1;

352 i‡(
cbtU£d
)

353 
qNìd
 <<
cbtU£d
;

354 
aqMaöSign
[
iq
] |
qNìd
;

355 
aqMaöMask
[
iq
] |(
Quad
)
ÆPhø£
[
i
].
uFªquícy
 << 
cbtU£d
;

356 
ÆPhø£
[
i
].
uShi·
 = 
cbtU£d
;

357 
ÆPhø£
[
i
].
iq
 = iq;

358 
cbtU£d
 +
cbtNìd
;

361 
	}
}

363 
PW‹d


364 
	$NewW‹d
() {

365 
PW‹d
 
pw
;

367 
pw
 = (
W‹d
 *)
	`mÆloc
((Word));

368 i‡(
pw
 =
NULL
)

369 
	`F©Æ
("Ouào‡mem‹yá·î %d c™did©es\n", 
˝wC™d
);

370  
pw
;

371 
	}
}

378 
	$w¥öt
(* 
pch
) {

379 
	`¥ötf
("%†", 
pch
);

380 
	}
}

382 
PW‹d
 
NextW‹d
();

385 
PW‹d
 
	$NextW‹d
() {

386 
PW‹d
 
pw
;

387 i‡(
˝wC™d
 >
MAXCAND
)

388 
	`F©Æ
("Too many candidates\n", 0);

389 
pw
 = 
≠wC™d
[
˝wC™d
++];

390 i‡(
pw
 !
NULL
)

391  
pw
;

392 
≠wC™d
[
˝wC™d
-1] = 
	`NewW‹d
();

393  
≠wC™d
[
˝wC™d
-1];

394 
	}
}

399 
	$BuûdW‹d
(* 
pchW‹d
) {

400 
cchFªquícy
[
ALPHABET
];

401 
i
;

402 * 
pch
 = 
pchW‹d
;

403 
PW‹d
 
pw
;

404 
cchLígth
 = 0;

406 
	`bzîo
(
cchFªquícy
, ()*
ALPHABET
);

410 (
i
 = *
pch
++) != '\0') {

411 i‡(!
	`ißÕha
(
i
)) ;

412 
i
 = 
	`ch2i
(
	`tﬁowî
(i));

413 i‡(++
cchFªquícy
[
i
] > 
ÆPhø£
[i].
uFªquícy
)

415 ++
cchLígth
;

418 
	`Debug
(
	`w¥öt
(
pchW‹d
);)

421 
i
 = 0; i < 
ALPHABET
; i++)

422 
auGlobÆFªquícy
[
i
] +
cchFªquícy
[i];

427 
pw
 = 
	`NextW‹d
();

428 
	`bzîo
(
pw
->
aqMask
, (
Quad
)*
MAX_QUADS
);

430 
pw
->
pchW‹d
 =ÖchWord;

431 
pw
->
cchLígth
 = cchLength;

432 
i
 = 0; i < 
ALPHABET
; i++) {

433 
pw
->
aqMask
[
ÆPhø£
[
i
].
iq
] |=

434 (
Quad
)
cchFªquícy
[
i
] << 
ÆPhø£
[i].
uShi·
;

436 
	}
}

440 
	$AddW‹ds
() {

441 * 
pch
 = 
pchDi˘i⁄¨y
;

443 
˝wC™d
 = 0;

445 *
pch
) {

446 i‡((
pch
[1] >
cchMöLígth
 &&Öch[1]+cchMöLígth <
cchPhø£Lígth
)

447 || 
pch
[1] =
cchPhø£Lígth
)

448 
	`BuûdW‹d
(
pch
+2);

449 
pch
 += *pch;

452 
	`Ârötf
(
°dout
, "%d c™did©es\n", 
˝wC™d
);

453 
	}
}

455 
	$DumpC™did©es
() {

456 
u
;

458 
u
 = 0; u < 
˝wC™d
; u++)

459 
	`¥ötf
(
SåögF‹m©
, 
≠wC™d
[
u
]->
pchW‹d
, (u % 4 == 3) ? '\n' : ' ');

460 
	`¥ötf
("\n");

461 
	}
}

463 
PW‹d
 
	g≠wSﬁ
[
MAXSOL
];

464 
	g˝wLa°
;

466 
Debug
(

467 
	$DumpW‹d
(
Quad
 * 
pq
) {

468 
i
;

469 
Quad
 
q
;

470 
i
 = 0; i < 
ALPHABET
; i++) {

471 i‡(
ÆPhø£
[
i
].
uFªquícy
 == 0) ;

472 
q
 = 
pq
[
ÆPhø£
[
i
].
iq
];

473 i‡(
ÆPhø£
[
i
].
uShi·
Ë
q
 >>=álPhrase[i].uShift;

474 
q
 &
ÆPhø£
[
i
].
uBôs
;

475 
q
--Ë
	`putch¨
('a'+
i
);

477 
	`putch¨
(' ');

478 
	}
}

481 
	$DumpW‹ds
() {

482 
i
;

483 
i
 = 0; i < 
˝wLa°
; i++Ë
	`w¥öt
(
≠wSﬁ
[i]->
pchW‹d
);

484 
	`¥ötf
("\n");

485 
	}
}

487 
Sèt
(
ulHighCou¡
; 
ulLowCou¡
;)

489 
jmp_buf
 
	gjbA«gøm
;

491 
	#O√Sãp
(
i
) \

492 i‡((
aqNext
[
i
] = 
pqMask
[i] - 
pw
->
aqMask
[i]Ë& 
aqMaöSign
[i]) { \

493 
µwSèπ
++; \

495 }

	)

499 
	$FödA«gøm
(
Quad
 * 
pqMask
, 
PPW‹d
 
µwSèπ
, 
iLëãr
)

501 
Quad
 
aqNext
[
MAX_QUADS
];

502 
PW‹d
 
pw
;

503 
Quad
 
qMask
;

504 
iq
;

505 
PPW‹d
 
µwEnd
 = &
≠wC™d
[0];

506 
µwEnd
 +
˝wC™d
;

510 i‡(
	`HÆtPro˚ssög
()Ë
	`l⁄gjmp
(
jbA«gøm
, 1);

512 
	`Debug
(
	`¥ötf
("Tryög :"); 
	`DumpW‹d
(
pqMask
);Örintf(":\n");)

515 
iq
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].iq;

516 
qMask
 = 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uBôs
 <<

517 
ÆPhø£
[
achByFªquícy
[
iLëãr
]].
uShi·
;

518 i‡(
pqMask
[
iq
] & 
qMask
) ;

519 
iLëãr
++;

522 
	`Debug
(
	`¥ötf
("PivŸög o¿%c\n", 
	`i2ch
(
achByFªquícy
[
iLëãr
]));)

524 
µwSèπ
 < 
µwEnd
) {

525 
pw
 = *
µwSèπ
;

527 
	`Sèt
(i‡(++
ulLowCou¡
 =0Ë++
ulHighCou¡
;)

529 #i‡
MAX_QUADS
 > 0

530 
	`O√Sãp
(0);

533 #i‡
MAX_QUADS
 > 1

534 
	`O√Sãp
(1);

537 #i‡
MAX_QUADS
 > 2

538 
	`O√Sãp
(2);

541 #i‡
MAX_QUADS
 > 3

542 
	`O√Sãp
(3);

545 #i‡
MAX_QUADS
 > 4

550 i‡((
pw
->
aqMask
[
iq
] & 
qMask
) == 0) {

551 *
µwSèπ
 = *--
µwEnd
;

552 *
µwEnd
 = 
pw
;

557 
≠wSﬁ
[
˝wLa°
++] = 
pw
;

558 i‡(
cchPhø£Lígth
 -
pw
->
cchLígth
) {

559 
	`Debug
(
	`DumpW‹ds
();)

563 
µwEnd
 = &
≠wC™d
[0];

564 
µwEnd
 +
˝wC™d
;

565 
	`FödA«gøm
(&
aqNext
[0],

566 
µwSèπ
, 
iLëãr
);

567 } 
	`DumpW‹ds
();

568 
cchPhø£Lígth
 +
pw
->
cchLígth
;

569 --
˝wLa°
;

570 
µwSèπ
++;

575 
	}
}

577 
Cde˛
 
	$Com∑ªFªquícy
(*
pch1
, *
pch2
) {

578  
auGlobÆFªquícy
[*
pch1
] <áuGlobÆFªquícy[*
pch2
]

580 
auGlobÆFªquícy
[*
pch1
] =auGlobÆFªquícy[*
pch2
]

582 
	}
}

584 
	$S‹tC™did©es
() {

585 
i
;

588 
i
 = 0; i < 
ALPHABET
; i++Ë
achByFªquícy
[i] = i;

589 
	`qs‹t
(
achByFªquícy
, 
ALPHABET
, (),

590 ((*)(c⁄° *, c⁄° *))
Com∑ªFªquícy
);

592 
	`Ârötf
(
°dout
, "Order of search will be ");

593 
i
 = 0; i < 
ALPHABET
; i++)

594 
	`Âutc
(
	`i2ch
(
achByFªquícy
[
i
]), 
°dout
);

595 
	`Âutc
('\n', 
°dout
);

596 
	}
}

598 
	gfI¡îa˘ive
;

600 * 
	$GëPhø£
(* 
pch
) {

601 i‡(
fI¡îa˘ive
Ë
	`¥ötf
(">");

602 
	`fÊush
(
°dout
);

603 i‡(
	`gës
(
pch
Ë=
NULL
) {

604 #ifde‡
PLUS_STATS


605 
	`PrötDîefSèts
(
°dout
);

606 
	`PrötHópSize
(
°dout
);

608 
	`exô
(0);

610 (
pch
);

611 
	}
}

613 
	gachPhø£
[255];

615 
Cde˛
 
	$maö
(
˝chArgc
, **
µchArgv
) {

617 i‡(
˝chArgc
 != 2 && cpchArgc != 3)

618 
	`F©Æ
("Usage:ánagram dictionary [length]\n", 0);

620 i‡(
˝chArgc
 == 3)

621 
cchMöLígth
 = 
	`©oi
(
µchArgv
[2]);

623 
fI¡îa˘ive
 = 
	`ißây
(1);

625 
	`RódDi˘
(
µchArgv
[1]);

627 
	`GëPhø£
(&
achPhø£
[0]Ë!
NULL
) {

628 i‡(
	`isdigô
(
achPhø£
[0])) {

629 
cchMöLígth
 = 
	`©oi
(
achPhø£
);

630 
	`¥ötf
("NewÜígth: %d\n", 
cchMöLígth
);

631 } i‡(
achPhø£
[0] == '?') {

632 
	`DumpC™did©es
();

634 
	`BuûdMask
(&
achPhø£
[0]);

635 
	`AddW‹ds
();

636 i‡(
˝wC™d
 =0 || 
cchPhø£Lígth
 == 0) ;

638 
	`Sèt
(
ulHighCou¡
 = 
ulLowCou¡
 = 0;)

639 
˝wLa°
 = 0;

640 
	`S‹tC™did©es
();

641 i‡(
	`£tjmp
(
jbA«gøm
) == 0)

642 
	`FödA«gøm
(&
aqMaöMask
[0], &
≠wC™d
[0], 0);

643 
	`Sèt
(
	`¥ötf
("%lu:%luÖrobes\n", 
ulHighCou¡
, 
ulLowCou¡
);)

647 
	}
}

	@tests-pisa/src/test-fmath.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

5 
	gfoo1
=5.3, 
	gfoo2
=6.4;

6 
	gb¨1
=5.3, 
	gb¨2
=6.4;

7 
	gq
 = 4;

8 
	gx
 = 12;

9 
	gy
 = 29;

10 
	gz
;

11 
	gl
 = 6;

12 *
	gÕ
 = &
l
;

15 
	$maö
()

17 
	`¥ötf
("q=%d (öt)x=%d (öt)y=%d\n", 
q
, ()
x
, ()
y
);

18 
z
 = 
	`pow
(
x
, 2);

19 
	`¥ötf
("z=%d\n", ()
z
);

20 
z
 = 
	`pow
(
y
, 2);

21 
	`¥ötf
("z=%d\n", ()
z
);

22 
z
 = 13.21;

23 
	`¥ötf
("z=%d\n", ()
z
);

24 
z
 = ()13;

25 
	`¥ötf
("z=%d\n", ()
z
);

26 
	`¥ötf
("l=%d\n", ()
l
);

27 
l
 =Ü * 6;

28 
	`¥ötf
("l=%d\n", ()
l
);

29 *
Õ
 = *lp * 6;

30 
	`¥ötf
("*Õ=%d\n", ()*
Õ
);

31 
z
 = 
	`pow
(
x
, 2);

32 
	`¥ötf
("z=%f\n", 
z
);

34 
	`¥ötf
("q=%d x=%‡(öt)x=%d y=%‡(öt)y=%d\n", 
q
, 
x
, ()x, 
y
, ()y);

36 
x
 = 
foo1
+
foo2
;

37 
y
 = 2*
b¨1
+2*
b¨2
;

39 
q
 = q*4;

41 
	`¥ötf
("q = %d x = %‡ y = %f\n", 
q
, 
x
, 
y
);

44 
	}
}

	@tests-pisa/src/test-llong.c

1 
	~<°dio.h
>

3 
	gx
 = 0x100000000LL;

4 
	gy
 = 0x1ffffffffLL;

5 
	gz
 = 0x010000000LL;

6 
	gw
 = 0x01fffffffLL;

9 
	$maö
()

11 
	`Ârötf
(
°dout
, "x+1 = 0x%016Lx\n", 
x
+1);

12 
	`Ârötf
(
°dout
, "x-1 = 0x%016Lx\n", 
x
-1);

13 
	`Ârötf
(
°dout
, "y+1 = 0x%016Lx\n", 
y
+1);

14 
	`Ârötf
(
°dout
, "x+y = 0x%016Lx\n", 
x
+
y
);

15 
	`Ârötf
(
°dout
, "z*w = 0x%016Lx\n", 
z
*
w
);

16 
	`exô
(0);

17 
	}
}

	@tests-pisa/src/test-lswlr.c

1 
	~<°dio.h
>

4 
	$maö
()

6 
°r
[] = "Hello world...";

8 
	`Ârötf
(
°dout
, "°∏%s\n", 
°r
);

9 
	`exô
(0);

10 
	}
}

	@tests-pisa/src/test-math.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

6 
	$maö
()

8 
°r
[] = "123.456";

9 
x
,
h
,
li
,
Ã
,
a
,
Ãr
;

11 
	`¥ötf
("pow(12.0, 2.0Ë=%f\n", 
	`pow
(12.0, 2.0));

12 
	`¥ötf
("pow(10.0, 3.0Ë=%f\n", 
	`pow
(10.0, 3.0));

13 
	`¥ötf
("pow(10.0, -3.0Ë=%f\n", 
	`pow
(10.0, -3.0));

15 
	`¥ötf
("°r: %s\n", 
°r
);

16 
x
 = ()
	`©oi
 (
°r
);

17 
	`¥ötf
("x: %f\n", 
x
);

19 
	`¥ötf
("°r: %s\n", 
°r
);

20 
x
 = 
	`©of
 (
°r
);

21 
	`¥ötf
("x: %f\n", 
x
);

23 
	`¥ötf
("°r: %s\n", 
°r
);

24 
x
 = 
	`©of
 (
°r
);

25 
	`¥ötf
("x: %f\n", 
x
);

27 
	`¥ötf
 ("%g %‡%d %g\n", 
x
, x, ()x, 
	`pow
 (10.0, 3.0));

29 
x
 = 
	`söh
(2.0);

31 
	`¥ötf
("söh(2.0Ë%g\n", 
x
);

33 
x
 = 
	`söh
(3.0);

35 
	`¥ötf
("söh(3.0Ë%g\n", 
x
);

37 
h
 = 
	`hypŸ
(2.0,3.0);

39 
	`¥ötf
("h=%g\n", 
h
);

41 
a
 = 
	`©™2
(3.0, 2.0);

43 
	`¥ötf
("©™2(3,2Ë%g\n", 
a
);

45 
Ã
 = 
	`pow
(
h
,4.0);

47 
	`¥ötf
("pow(%g,4.0Ë%g\n", 
h
, 
Ã
);

49 
Ãr
 = 
Ã
;

51 
li
 = 4.0 * 
a
;

53 
Ã
 =Ü∏/ 
	`exp
(
a
*5.0);

55 
	`¥ötf
("%g /Éxp(%g * 5Ë%g\n", 
Ãr
, 
a
, 
Ã
);

57 
Ãr
 = 
li
;

59 
li
 +5.0 * 
	`log
(
h
);

61 
	`¥ötf
("%g + 5*log(%gË%g\n", 
Ãr
, 
h
, 
li
);

63 
	`¥ötf
("cos(%gË%g, sö(%gË%g\n", 
li
, 
	`cos
÷i),Üi, 
	`sö
(li));

66 
x
 = 
	`dªm
(10.3435,6.2831852);

68 
	`¥ötf
("dªm(10.3435,6.2831852Ë%g\n", 
x
);

70 
x
 = 
	`dªm
(-10.3435,6.2831852);

72 
	`¥ötf
("dªm(-10.3435,6.2831852Ë%g\n", 
x
);

74 
x
 = 
	`dªm
(-10.3435,-6.2831852);

76 
	`¥ötf
("dªm(-10.3435,-6.2831852Ë%g\n", 
x
);

78 
x
 = 
	`dªm
(10.3435,-6.2831852);

80 
	`¥ötf
("dªm(10.3435,-6.2831852Ë%g\n", 
x
);

83 
	`¥ötf
("x%8.6gx\n", .5);

84 
	`¥ötf
("x%-8.6gx\n", .5);

85 
	`¥ötf
("x%6.6gx\n", .5);

88 
x
 = 
	`©of
 ("-1e-17-");

89 
	`¥ötf
 ("%g %c= %g %s!\n",

90 
x
,

91 
x
 == -1e-17 ? '=' : '!',

93 
	`Ábs
(
x
 - -1e-17) < 0.000000001 ? "Worked" : "Failed");

97 
	}
}

	@tests-pisa/src/test-printf.c

19 #ifdef 
BSD


20 
	~</u§/ö˛ude/°dio.h
>

21 
	#EXIT_SUCCESS
 0

	)

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

31 
	ma
;

32 
	mb
;

33 
	mc
;

34 
	md
;

35 } 
	gxxyyz
[100];

37 
	gzzz
;

40 
	$FooB¨
(
a
)

42  
xxyyz
[
a
].
b
;

43 
	}
}

45 
	guxxe
[100];

48 
	$FooFoo
(
a
)

50 
zzz
++;

51  
uxxe
[
a
];

52 
	}
}

54 *
	gsccsid
 = "this isáÅest...";

57 
	$fmtchk
(*
fmt
)

59 *
sccsid
 = "this isáÅest...";

60 (Ë
	`Âuts
(
fmt
, 
°dout
);

61 (Ë
	`¥ötf
(":\t`");

62 (Ë
	`¥ötf
(
fmt
, 0x12);

63 (Ë
	`¥ötf
("'\n");

64 
	}
}

67 
	$fmt°1chk
(*
fmt
)

69 (Ë
	`Âuts
(
fmt
, 
°dout
);

70 (Ë
	`¥ötf
(":\t`");

71 (Ë
	`¥ötf
(
fmt
, 4, 0x12);

72 (Ë
	`¥ötf
("'\n");

73 
	}
}

76 
	$fmt°2chk
(*
fmt
)

78 (Ë
	`Âuts
(
fmt
, 
°dout
);

79 (Ë
	`¥ötf
(":\t`");

80 (Ë
	`¥ötf
(
fmt
, 4, 4, 0x12);

81 (Ë
	`¥ötf
("'\n");

82 
	}
}

98 
	#DEC
 -123

	)

99 
	#INT
 255

	)

100 
	#UNS
 (~0)

	)

108 
	$Â_ã°
()

110 
i
, 
j
, 
k
, 
l
;

111 
buf
[7];

112 *
¥efix
 = 
buf
;

113 
ç
[20];

115 
	`puts
("\nFormatted outputÅest");

116 
	`¥ötf
("prefix 6d 6o 6x 6X 6u\n");

117 
	`°r˝y
(
¥efix
, "%");

118 
i
 = 0; i < 2; i++) {

119 
j
 = 0; j < 2; j++) {

120 
k
 = 0; k < 2; k++) {

121 
l
 = 0;Ü < 2;Ü++) {

122 
	`°r˝y
(
¥efix
, "%");

123 i‡(
i
 =0Ë
	`°rˇt
(
¥efix
, "-");

124 i‡(
j
 =0Ë
	`°rˇt
(
¥efix
, "+");

125 i‡(
k
 =0Ë
	`°rˇt
(
¥efix
, "#");

126 i‡(
l
 =0Ë
	`°rˇt
(
¥efix
, "0");

127 
	`¥ötf
("%5†|", 
¥efix
);

128 
	`°r˝y
(
ç
, 
¥efix
);

129 
	`°rˇt
(
ç
, "6d |");

130 
	`¥ötf
(
ç
, 
DEC
);

131 
	`°r˝y
(
ç
, 
¥efix
);

132 
	`°rˇt
(
ç
, "6o |");

133 
	`¥ötf
(
ç
, 
INT
);

134 
	`°r˝y
(
ç
, 
¥efix
);

135 
	`°rˇt
(
ç
, "6x |");

136 
	`¥ötf
(
ç
, 
INT
);

137 
	`°r˝y
(
ç
, 
¥efix
);

138 
	`°rˇt
(
ç
, "6X |");

139 
	`¥ötf
(
ç
, 
INT
);

140 
	`°r˝y
(
ç
, 
¥efix
);

141 
	`°rˇt
(
ç
, "6u |");

142 
	`¥ötf
(
ç
, 
UNS
);

143 
	`¥ötf
("\n");

148 
	`¥ötf
("%10s\n", (*Ë
NULL
);

149 
	`¥ötf
("%-10s\n", (*Ë
NULL
);

150 
	}
}

153 
	$maö
()

155 
sh‹t°r
[] = "Hi, Z.";

156 
l⁄g°r
[] = "Good morning, Doctor Chandra. This is Hal. \
ámÑeady for my firstÜessonÅoday.";

159 
	`fmtchk
("%.4x");

160 
	`fmtchk
("%04x");

161 
	`fmtchk
("%4.4x");

162 
	`fmtchk
("%04.4x");

163 
	`fmtchk
("%4.3x");

164 
	`fmtchk
("%04.3x");

166 
	`fmt°1chk
("%.*x");

167 
	`fmt°1chk
("%0*x");

168 
	`fmt°2chk
("%*.*x");

169 
	`fmt°2chk
("%0*.*x");

171 #i‚def 
BSD


172 
	`¥ötf
("bad format:\t\"%z\"\n");

173 
	`¥ötf
("nûÖoöã∏’added):\t\"%10p\"\n", (*Ë
NULL
);

176 
	`¥ötf
("decimalÇegative:\t\"%d\"\n", -2345);

177 
	`¥ötf
("octalÇegative:\t\"%o\"\n", -2345);

178 
	`¥ötf
("hexÇegative:\t\"%x\"\n", -2345);

179 
	`¥ötf
("long decimalÇumber:\t\"%ld\"\n", -123456);

180 
	`¥ötf
("long octalÇegative:\t\"%lo\"\n", -2345L);

181 
	`¥ötf
("long unsigned decimalÇumber:\t\"%lu\"\n", -123456);

182 
	`¥ötf
("zero-padded LDN:\t\"%010ld\"\n", -123456);

183 
	`¥ötf
("left-adjusted ZLDN:\t\"%-010ld\"\n", -123456);

184 
	`¥ötf
("space-padded LDN:\t\"%10ld\"\n", -123456);

185 
	`¥ötf
("left-adjusted SLDN:\t\"%-10ld\"\n", -123456);

187 
	`¥ötf
("zîo-∑dded såög:\t\"%010s\"\n", 
sh‹t°r
);

188 
	`¥ötf
("À·-adju°ed Z såög:\t\"%-010s\"\n", 
sh‹t°r
);

189 
	`¥ötf
("•a˚-∑dded såög:\t\"%10s\"\n", 
sh‹t°r
);

190 
	`¥ötf
("À·-adju°ed S såög:\t\"%-10s\"\n", 
sh‹t°r
);

191 
	`¥ötf
("nuŒ såög:\t\"%s\"\n", (*)
NULL
);

193 
	`¥ötf
("limôed såög:\t\"%.22s\"\n", 
l⁄g°r
);

196 
	`¥ötf
("e-style >= 1:\t\"%e\"\n", 12.34);

197 
	`¥ötf
("e-style >= .1:\t\"%e\"\n", 0.1234);

198 
	`¥ötf
("e-style < .1:\t\"%e\"\n", 0.001234);

199 
	`¥ötf
("e-style big:\t\"%.60e\"\n", 1e20);

200 
	`¥ötf
 ("e-style == .1:\t\"%e\"\n", 0.1);

201 
	`¥ötf
("f-style >= 1:\t\"%f\"\n", 12.34);

202 
	`¥ötf
("f-style >= .1:\t\"%f\"\n", 0.1234);

203 
	`¥ötf
("f-style < .1:\t\"%f\"\n", 0.001234);

204 
	`¥ötf
("g-style >= 1:\t\"%g\"\n", 12.34);

205 
	`¥ötf
("g-style >= .1:\t\"%g\"\n", 0.1234);

206 
	`¥ötf
("g-style < .1:\t\"%g\"\n", 0.001234);

207 
	`¥ötf
("g-style big:\t\"%.60g\"\n", 1e20);

210 
buf
[128];

211 
	`•rötf
(
buf
, "newÅest: %.15g", 99.85);

212 
	`¥ötf
(":%s:\n", 
buf
);

215 
	`¥ötf
 (" %6.5lf\n", .099999999860301614);

216 
	`¥ötf
 (" %6.5lf\n", .1);

217 
	`¥ötf
 ("x%5.4lfx\n", .5);

219 
	`¥ötf
 ("%#03x\n", 1);

223 
d
 = 
FLT_MIN
;

224 
nôî
 = 17;

226 
nôî
-- != 0)

227 
	`¥ötf
 ("%.17e\n", 
d
 / 2);

228 
	`fÊush
 (
°dout
);

231 
	`¥ötf
 ("%15.5e\n", 4.9406564584124654e-324);

234 
	#FORMAT
 "|%12.4f|%12.4e|%12.4g|\n"

	)

235 
	`¥ötf
 (
FORMAT
, 0.0, 0.0, 0.0);

236 
	`¥ötf
 (
FORMAT
, 1.0, 1.0, 1.0);

237 
	`¥ötf
 (
FORMAT
, -1.0, -1.0, -1.0);

238 
	`¥ötf
 (
FORMAT
, 100.0, 100.0, 100.0);

239 
	`¥ötf
 (
FORMAT
, 1000.0, 1000.0, 1000.0);

240 
	`¥ötf
 (
FORMAT
, 10000.0, 10000.0, 10000.0);

241 
	`¥ötf
 (
FORMAT
, 12345.0, 12345.0, 12345.0);

242 
	`¥ötf
 (
FORMAT
, 100000.0, 100000.0, 100000.0);

243 
	`¥ötf
 (
FORMAT
, 123456.0, 123456.0, 123456.0);

244 #unde‡
FORMAT


248 
buf
[20];

249 
	`¥ötf
 ("snprintf (\"%%30s\", \"foo\") == %d, \"%.*s\"\n",

250 
	`¢¥ötf
 (
buf
,  (buf), "%30s", "foo"),  (buf), buf);

254 
	`Â_ã°
 ();

255 
	`Â_ã°
 ();

256 
	`Â_ã°
 ();

257 
	`Â_ã°
 ();

258 
	`Â_ã°
 ();

259 
	`Â_ã°
 ();

260 
	`Â_ã°
 ();

261 
	`Â_ã°
 ();

263 
	`¥ötf
 ("%e should be 1.234568e+06\n", 1234567.8);

264 
	`¥ötf
 ("%f should be 1234567.800000\n", 1234567.8);

265 
	`¥ötf
 ("%g should be 1.23457e+06\n", 1234567.8);

266 
	`¥ötf
 ("%g should be 123.456\n", 123.456);

267 
	`¥ötf
 ("%g should be 1e+06\n", 1000000.0);

268 
	`¥ötf
 ("%g should be 10\n", 10.0);

269 
	`¥ötf
 ("%g should be 0.02\n", 0.02);

272 
buf
[128];

273 
	`•rötf
(
buf
, "%#.*f", 4, ()0.70000);

274 
	`¥ötf
("ã°ögÖ¨amëri¯fõlds: %s\n", 
buf
);

278 
	}
}

	@version.h

52 #i‡
deföed
(
TARGET_PISA
)

53 
	#VER_TARGET
 "PISA"

	)

54 #ñi‡
deföed
(
TARGET_ALPHA
)

55 
	#VER_TARGET
 "AÕha"

	)

57 #îr‹ 
C™nŸ
 
decode
 
Sim∂eSˇœr
 
èrgë
...

60 
	#VER_MAJOR
 3

	)

61 
	#VER_MINOR
 0

	)

63 
	#VER_UPDATE
 "Augu°, 2003"

	)

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/bfd.h

32 #i‚de‡
__BFD_H_SEEN__


33 
	#__BFD_H_SEEN__


	)

35 #ifde‡
__˝lu•lus


39 
	~"™side˛.h
"

40 
	~<bôs/w‹dsize.h
>

41 
	~"symˇt.h
"

42 #i‡
deföed
 (
__STDC__
Ë|| deföed (
ALMOST_STDC
Ë|| deföed (
HAVE_STRINGIZE
)

43 #i‚de‡
SABER


49 #unde‡
CONCAT4


50 
	#CONCAT4
(
a
,
b
,
c
,
d
Ë
	`XCONCAT2
(
	`CONCAT2
◊,b),CONCAT2(c,d))

	)

58 
	#STRING_COMMA_LEN
(
STR
Ë(STR), ( (STRË- 1)

	)

68 
	#CONST_STRNEQ
(
STR1
,
STR2
Ë(
	`°∫cmp
 ((STR1), (STR2),  (STR2Ë- 1Ë=0)

	)

73 
	#LITMEMCPY
(
DEST
,
STR2
Ë
	`mem˝y
 ((DEST), (STR2),  (STR2Ë- 1)

	)

74 
	#LITSTRCPY
(
DEST
,
STR2
Ë
	`mem˝y
 ((DEST), (STR2),  (STR2))

	)

77 
	#BFD_SUPPORTS_PLUGINS
 0

	)

82 
	#BFD_ARCH_SIZE
 64

	)

85 
	#BFD_DEFAULT_TARGET_SIZE
 
__WORDSIZE


	)

87 
	#BFD_HOST_64BIT_LONG
 (
__WORDSIZE
 =64)

	)

88 
	#BFD_HOST_64BIT_LONG_LONG
 1

	)

90 #i‡
__WORDSIZE
 == 32

91 
	#BFD_HOST_64_BIT
 

	)

93 
	#BFD_HOST_64_BIT
 

	)

95 
	#BFD_HOST_U_64_BIT
 
BFD_HOST_64_BIT


	)

96 
BFD_HOST_64_BIT
 
	tbfd_öt64_t
;

97 
BFD_HOST_U_64_BIT
 
	tbfd_uöt64_t
;

100 #i‡
BFD_ARCH_SIZE
 >= 64

101 
	#BFD64


	)

104 #i‚de‡
INLINE


105 #i‡
__GNUC__
 >= 2

106 
	#INLINE
 
__ölöe__


	)

108 
	#INLINE


	)

113 
	#BFD_HOSTPTR_T
 

	)

114 
BFD_HOSTPTR_T
 
	tbfd_ho°±r_t
;

117 
bfd
 
	tbfd
;

128 
	tbfd_boﬁón
;

129 #unde‡
FALSE


130 #unde‡
TRUE


131 
	#FALSE
 0

	)

132 
	#TRUE
 1

	)

134 #ifde‡
BFD64


136 #i‚de‡
BFD_HOST_64_BIT


137 #îr‹ 
No
 64 
bô
 
öãgî
 
ty≥
 
avaûabÀ


140 
BFD_HOST_U_64_BIT
 
	tbfd_vma
;

141 
BFD_HOST_64_BIT
 
	tbfd_sig√d_vma
;

142 
BFD_HOST_U_64_BIT
 
	tbfd_size_ty≥
;

143 
BFD_HOST_U_64_BIT
 
	tsymvÆue
;

145 #i‡
BFD_HOST_64BIT_LONG


146 
	#BFD_VMA_FMT
 "l"

	)

147 #ñi‡
deföed
 (
__MSVCRT__
)

148 
	#BFD_VMA_FMT
 "I64"

	)

150 
	#BFD_VMA_FMT
 "Œ"

	)

153 #i‚de‡
Ârötf_vma


154 
	#•rötf_vma
(
s
,
x
Ë
	`•rötf
 (s, "%016" 
BFD_VMA_FMT
 "x", x)

	)

155 
	#Ârötf_vma
(
f
,
x
Ë
	`Ârötf
 (f, "%016" 
BFD_VMA_FMT
 "x", x)

	)

163 
	tbfd_vma
;

169 
	tbfd_sig√d_vma
;

171 
	tsymvÆue
;

172 
	tbfd_size_ty≥
;

175 
	#BFD_VMA_FMT
 "l"

	)

176 
	#Ârötf_vma
(
s
,
x
Ë
	`Ârötf
 (s, "%08" 
BFD_VMA_FMT
 "x", x)

	)

177 
	#•rötf_vma
(
s
,
x
Ë
	`•rötf
 (s, "%08" 
BFD_VMA_FMT
 "x", x)

	)

181 
	#HALF_BFD_SIZE_TYPE
 \

182 (((
bfd_size_ty≥
Ë1Ë<< (8 *  (bfd_size_ty≥Ë/ 2))

	)

184 #i‚de‡
BFD_HOST_64_BIT


189 
bfd_sig√d_vma
 
	tbfd_öt64_t
;

190 
bfd_vma
 
	tbfd_uöt64_t
;

195 
BFD_HOST_64_BIT
 
	tfûe_±r
;

196 
	tBFD_HOST_64_BIT
 
	tufûe_±r
;

198 
bfd_•rötf_vma
 (
bfd
 *, *, 
bfd_vma
);

199 
bfd_Ârötf_vma
 (
bfd
 *, *, 
bfd_vma
);

201 
	#¥ötf_vma
(
x
Ë
	`Ârötf_vma
(
°dout
,x)

	)

202 
	#bfd_¥ötf_vma
(
abfd
,
x
Ë
	`bfd_Ârötf_vma
 (abfd,
°dout
,x)

	)

204 
	tÊagw‹d
;

205 
	tbfd_byã
;

209 
	ebfd_f‹m©


211 
	gbfd_unknown
 = 0,

212 
	gbfd_obje˘
,

213 
	gbfd_¨chive
,

214 
	gbfd_c‹e
,

215 
	gbfd_ty≥_íd


217 
	tbfd_f‹m©
;

222 
	tsymödex
;

225 c⁄° 
	tªloc_howto_°ru˘
 
	tªloc_howto_ty≥
;

227 
	#BFD_NO_MORE_SYMBOLS
 ((
symödex
Ë~0)

	)

232 
	#bfd_gë_£˘i⁄
(
x
Ë((x)->
£˘i⁄
)

	)

233 
	#bfd_gë_ouçut_£˘i⁄
(
x
Ë((x)->
£˘i⁄
->
ouçut_£˘i⁄
)

	)

234 
	#bfd_£t_£˘i⁄
(
x
,
y
Ë((x)->
£˘i⁄
Ë(y)

	)

235 
	#bfd_asymbﬁ_ba£
(
x
Ë((x)->
£˘i⁄
->
vma
)

	)

236 
	#bfd_asymbﬁ_vÆue
(
x
Ë(
	`bfd_asymbﬁ_ba£
(xË+ (x)->
vÆue
)

	)

237 
	#bfd_asymbﬁ_«me
(
x
Ë((x)->
«me
)

	)

239 
	#bfd_asymbﬁ_bfd
(
x
Ë((x)->
the_bfd
)

	)

240 
	#bfd_asymbﬁ_Êavour
(
x
) \

241 (((
x
)->
Êags
 & 
BSF_SYNTHETIC
) != 0 \

242 ? 
bfd_èrgë_unknown_Êavour
 \

243 : 
	`bfd_asymbﬁ_bfd
 (
x
)->
xvec
->
Êavour
)

	)

247 
	sˇrsym


249 *
	g«me
;

250 
fûe_±r
 
	gfûe_off£t
;

252 
	tˇrsym
;

256 
	s‹l


258 **
	g«me
;

261 
fûe_±r
 
	gpos
;

262 
bfd
 *
	gabfd
;

263 } 
	gu
;

264 
	g«midx
;

268 
	slöío_ˇche_íåy


270 
	glöe_numbî
;

273 
bfd_symbﬁ
 *
	gsym
;

274 
bfd_vma
 
	goff£t
;

275 } 
	gu
;

277 
	tÆít
;

281 
	#Æign_powî
(
addr
, 
Æign
) \

282 (((
addr
Ë+ ((
bfd_vma
Ë1 << (
Æign
)Ë- 1Ë& ((bfd_vmaË-1 << (Æign)))

	)

284 
bfd_£˘i⁄
 *
	t£c_±r
;

286 
	#bfd_gë_£˘i⁄_«me
(
bfd
, 
±r
Ë(’å)->
«me
 + 0)

	)

287 
	#bfd_gë_£˘i⁄_vma
(
bfd
, 
±r
Ë(’å)->
vma
 + 0)

	)

288 
	#bfd_gë_£˘i⁄_lma
(
bfd
, 
±r
Ë(’å)->
lma
 + 0)

	)

289 
	#bfd_gë_£˘i⁄_Æignmít
(
bfd
, 
±r
Ë(’å)->
Æignmít_powî
 + 0)

	)

290 
	#bfd_£˘i⁄_«me
(
bfd
, 
±r
Ë(’å)->
«me
)

	)

291 
	#bfd_£˘i⁄_size
(
bfd
, 
±r
Ë(’å)->
size
)

	)

292 
	#bfd_gë_£˘i⁄_size
(
±r
Ë(’å)->
size
)

	)

293 
	#bfd_£˘i⁄_vma
(
bfd
, 
±r
Ë(’å)->
vma
)

	)

294 
	#bfd_£˘i⁄_lma
(
bfd
, 
±r
Ë(’å)->
lma
)

	)

295 
	#bfd_£˘i⁄_Æignmít
(
bfd
, 
±r
Ë(’å)->
Æignmít_powî
)

	)

296 
	#bfd_gë_£˘i⁄_Êags
(
bfd
, 
±r
Ë(’å)->
Êags
 + 0)

	)

297 
	#bfd_gë_£˘i⁄_u£rd©a
(
bfd
, 
±r
Ë(’å)->
u£rd©a
)

	)

299 
	#bfd_is_com_£˘i⁄
(
±r
Ë((’å)->
Êags
 & 
SEC_IS_COMMON
Ë!0)

	)

301 
	#bfd_£t_£˘i⁄_vma
(
bfd
, 
±r
, 
vÆ
Ë((’å)->
vma
 = (±r)->
lma
 = (vÆ)), (’å)->
u£r_£t_vma
 = 
TRUE
), TRUE)

	)

302 
	#bfd_£t_£˘i⁄_Æignmít
(
bfd
, 
±r
, 
vÆ
Ë((’å)->
Æignmít_powî
 = (vÆ)),
TRUE
)

	)

303 
	#bfd_£t_£˘i⁄_u£rd©a
(
bfd
, 
±r
, 
vÆ
Ë((’å)->
u£rd©a
 = (vÆ)),
TRUE
)

	)

305 
	#bfd_gë_£˘i⁄_limô
(
bfd
, 
£c
) \

306 (((
£c
)->
øwsize
 ? (£c)->øwsizê: (£c)->
size
) \

307 / 
	`bfd_o˘ës_≥r_byã
 (
bfd
))

	)

310 
	#ñf_disˇrded_£˘i⁄
(
£c
) \

311 (!
	`bfd_is_abs_£˘i⁄
 (
£c
) \

312 && 
	`bfd_is_abs_£˘i⁄
 ((
£c
)->
ouçut_£˘i⁄
) \

313 && (
£c
)->
£c_öfo_ty≥
 !
ELF_INFO_TYPE_MERGE
 \

314 && (
£c
)->
£c_öfo_ty≥
 !
ELF_INFO_TYPE_JUST_SYMS
)

	)

317 
	g°©
;

319 
	ebfd_¥öt_symbﬁ


321 
	gbfd_¥öt_symbﬁ_«me
,

322 
	gbfd_¥öt_symbﬁ_m‹e
,

323 
	gbfd_¥öt_symbﬁ_Æl


324 } 
	tbfd_¥öt_symbﬁ_ty≥
;

328 
	s_symbﬁ_öfo


330 
symvÆue
 
	gvÆue
;

331 
	gty≥
;

332 c⁄° *
	g«me
;

333 
	g°ab_ty≥
;

334 
	g°ab_Ÿhî
;

335 
	g°ab_desc
;

336 c⁄° *
	g°ab_«me
;

337 } 
	tsymbﬁ_öfo
;

341 c⁄° *
bfd_gë_°ab_«me
 ();

348 
	sbfd_hash_íåy


351 
bfd_hash_íåy
 *
	g√xt
;

353 c⁄° *
	g°rög
;

356 
	ghash
;

361 
	sbfd_hash_èbÀ


364 
bfd_hash_íåy
 **
	gèbÀ
;

372 
	gbfd_hash_íåy
 *(*
	g√wfunc
)

373 (
	gbfd_hash_íåy
 *, 
	gbfd_hash_èbÀ
 *, const *);

376 *
	gmem‹y
;

378 
	gsize
;

380 
	gcou¡
;

382 
	gítsize
;

384 
	g‰ozí
:1;

388 
bfd_boﬁón
 
bfd_hash_èbÀ_öô


389 (
bfd_hash_èbÀ
 *,

390 
bfd_hash_íåy
 *(*) (bfd_hash_entry *,

391 
bfd_hash_èbÀ
 *,

396 
bfd_boﬁón
 
bfd_hash_èbÀ_öô_n


397 (
bfd_hash_èbÀ
 *,

398 
bfd_hash_íåy
 *(*) (bfd_hash_entry *,

399 
bfd_hash_èbÀ
 *,

404 
bfd_hash_èbÀ_‰ì


405 (
bfd_hash_èbÀ
 *);

411 
bfd_hash_íåy
 *
bfd_hash_lookup


412 (
bfd_hash_èbÀ
 *, c⁄° *, 
bfd_boﬁón
 
¸óã
,

413 
bfd_boﬁón
 
c›y
);

416 
bfd_hash_íåy
 *
bfd_hash_ö£π


417 (
bfd_hash_èbÀ
 *, const *, );

420 
bfd_hash_ª∂a˚


421 (
bfd_hash_èbÀ
 *, 
bfd_hash_íåy
 *
ﬁd
,

422 
bfd_hash_íåy
 *
nw
);

425 
bfd_hash_íåy
 *
bfd_hash_√wfunc


426 (
bfd_hash_íåy
 *, 
bfd_hash_èbÀ
 *, const *);

429 *
bfd_hash_Æloˇã


430 (
bfd_hash_èbÀ
 *, );

435 
bfd_hash_åavî£


436 (
bfd_hash_èbÀ
 *,

437 
bfd_boﬁón
 (*Ë(
bfd_hash_íåy
 *, *),

438 *
öfo
);

443 
bfd_hash_£t_deÁu…_size
 (
bfd_size_ty≥
);

448 
	s°ab_öfo


451 
bfd_°πab_hash
 *
	g°rögs
;

453 
bfd_hash_èbÀ
 
	gö˛udes
;

455 
bfd_£˘i⁄
 *
	g°ab°r
;

458 
	#COFF_SWAP_TABLE
 (*Ë&
bfd_coff_°d_sw≠_èbÀ


	)

465 
bfd_size_ty≥
 
bfd_bªad
 (*, bfd_size_ty≥, 
bfd
 *);

466 
bfd_size_ty≥
 
bfd_bwrôe
 (c⁄° *, bfd_size_ty≥, 
bfd
 *);

467 
bfd_£ek
 (
bfd
 *, 
fûe_±r
, );

468 
fûe_±r
 
bfd_ãŒ
 (
bfd
 *);

469 
bfd_Êush
 (
bfd
 *);

470 
bfd_°©
 (
bfd
 *, 
°©
 *);

473 #i‡
__GNUC__


474 
	#bfd_ªad
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

475 (
	`w¨n_dïªˇãd
 ("bfd_ªad", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
), \

476 
	`bfd_bªad
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

477 
	#bfd_wrôe
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

478 (
	`w¨n_dïªˇãd
 ("bfd_wrôe", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
), \

479 
	`bfd_bwrôe
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

481 
	#bfd_ªad
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

482 (
	`w¨n_dïªˇãd
 ("bfd_read", (const *) 0, 0, (const *) 0), \

483 
	`bfd_bªad
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

484 
	#bfd_wrôe
(
BUF
, 
ELTSIZE
, 
NITEMS
, 
ABFD
) \

485 (
	`w¨n_dïªˇãd
 ("bfd_write", (const *) 0, 0, (const *) 0),\

486 
	`bfd_bwrôe
 ((
BUF
), (
ELTSIZE
Ë* (
NITEMS
), (
ABFD
)))

	)

488 
w¨n_dïªˇãd
 (const *, const *, , const *);

492 
	#bfd_gë_fûíame
(
abfd
Ë((*Ë◊bfd)->
fûíame
)

	)

493 
	#bfd_gë_ˇchóbÀ
(
abfd
Ë(◊bfd)->
ˇchóbÀ
)

	)

494 
	#bfd_gë_f‹m©
(
abfd
Ë(◊bfd)->
f‹m©
)

	)

495 
	#bfd_gë_èrgë
(
abfd
Ë(◊bfd)->
xvec
->
«me
)

	)

496 
	#bfd_gë_Êavour
(
abfd
Ë(◊bfd)->
xvec
->
Êavour
)

	)

497 
	#bfd_Ámûy_coff
(
abfd
) \

498 (
	`bfd_gë_Êavour
 (
abfd
Ë=
bfd_èrgë_coff_Êavour
 || \

499 
	`bfd_gë_Êavour
 (
abfd
Ë=
bfd_èrgë_xcoff_Êavour
)

	)

500 
	#bfd_big_ídün
(
abfd
Ë(◊bfd)->
xvec
->
byã‹dî
 =
BFD_ENDIAN_BIG
)

	)

501 
	#bfd_lôée_ídün
(
abfd
Ë(◊bfd)->
xvec
->
byã‹dî
 =
BFD_ENDIAN_LITTLE
)

	)

502 
	#bfd_hódî_big_ídün
(
abfd
) \

503 ((
abfd
)->
xvec
->
hódî_byã‹dî
 =
BFD_ENDIAN_BIG
)

	)

504 
	#bfd_hódî_lôée_ídün
(
abfd
) \

505 ((
abfd
)->
xvec
->
hódî_byã‹dî
 =
BFD_ENDIAN_LITTLE
)

	)

506 
	#bfd_gë_fûe_Êags
(
abfd
Ë(◊bfd)->
Êags
)

	)

507 
	#bfd_≠∂iˇbÀ_fûe_Êags
(
abfd
Ë(◊bfd)->
xvec
->
obje˘_Êags
)

	)

508 
	#bfd_≠∂iˇbÀ_£˘i⁄_Êags
(
abfd
Ë(◊bfd)->
xvec
->
£˘i⁄_Êags
)

	)

509 
	#bfd_my_¨chive
(
abfd
Ë(◊bfd)->
my_¨chive
)

	)

510 
	#bfd_has_m≠
(
abfd
Ë(◊bfd)->
has_¨m≠
)

	)

511 
	#bfd_is_thö_¨chive
(
abfd
Ë(◊bfd)->
is_thö_¨chive
)

	)

512 
	#bfd_has_g≠_ö_ñf_shndx
(
abfd
Ë(◊bfd)->
has_g≠_ö_ñf_shndx
)

	)

514 
	#bfd_vÆid_ªloc_ty≥s
(
abfd
Ë(◊bfd)->
xvec
->
vÆid_ªloc_ty≥s
)

	)

515 
	#bfd_u§d©a
(
abfd
Ë(◊bfd)->
u§d©a
)

	)

517 
	#bfd_gë_°¨t_addªss
(
abfd
Ë(◊bfd)->
°¨t_addªss
)

	)

518 
	#bfd_gë_symcou¡
(
abfd
Ë(◊bfd)->
symcou¡
)

	)

519 
	#bfd_gë_outsymbﬁs
(
abfd
Ë(◊bfd)->
outsymbﬁs
)

	)

520 
	#bfd_cou¡_£˘i⁄s
(
abfd
Ë(◊bfd)->
£˘i⁄_cou¡
)

	)

522 
	#bfd_gë_dy«mic_symcou¡
(
abfd
Ë(◊bfd)->
dynsymcou¡
)

	)

524 
	#bfd_gë_symbﬁ_Àadög_ch¨
(
abfd
Ë(◊bfd)->
xvec
->
symbﬁ_Àadög_ch¨
)

	)

526 
	#bfd_£t_ˇchóbÀ
(
abfd
,
boﬁ
Ë((◊bfd)->
ˇchóbÀ
 = boﬁ), 
TRUE
)

	)

528 
bfd_boﬁón
 
bfd_ˇche_˛o£


529 (
bfd
 *
abfd
);

532 
bfd_boﬁón
 
bfd_ˇche_˛o£_Æl
 ();

534 
bfd_boﬁón
 
bfd_ªc‹d_phdr


535 (
bfd
 *, , 
bfd_boﬁón
, 
Êagw‹d
, bfd_boﬁón, 
bfd_vma
,

536 
bfd_boﬁón
, bfd_boﬁón, , 
bfd_£˘i⁄
 **);

540 
bfd_uöt64_t
 
bfd_gëb64
 (const *);

541 
bfd_uöt64_t
 
bfd_gël64
 (const *);

542 
bfd_öt64_t
 
bfd_gëb_sig√d_64
 (const *);

543 
bfd_öt64_t
 
bfd_gël_sig√d_64
 (const *);

544 
bfd_vma
 
bfd_gëb32
 (const *);

545 
bfd_vma
 
bfd_gël32
 (const *);

546 
bfd_sig√d_vma
 
bfd_gëb_sig√d_32
 (const *);

547 
bfd_sig√d_vma
 
bfd_gël_sig√d_32
 (const *);

548 
bfd_vma
 
bfd_gëb16
 (const *);

549 
bfd_vma
 
bfd_gël16
 (const *);

550 
bfd_sig√d_vma
 
bfd_gëb_sig√d_16
 (const *);

551 
bfd_sig√d_vma
 
bfd_gël_sig√d_16
 (const *);

552 
bfd_putb64
 (
bfd_uöt64_t
, *);

553 
bfd_pué64
 (
bfd_uöt64_t
, *);

554 
bfd_putb32
 (
bfd_vma
, *);

555 
bfd_pué32
 (
bfd_vma
, *);

556 
bfd_putb16
 (
bfd_vma
, *);

557 
bfd_pué16
 (
bfd_vma
, *);

561 
bfd_uöt64_t
 
bfd_gë_bôs
 (c⁄° *, , 
bfd_boﬁón
);

562 
bfd_put_bôs
 (
bfd_uöt64_t
, *, , 
bfd_boﬁón
);

564 
bfd_boﬁón
 
bfd_£˘i⁄_Æªady_löked_èbÀ_öô
 ();

565 
bfd_£˘i⁄_Æªady_löked_èbÀ_‰ì
 ();

569 #i‡
deföed
(
__STDC__
Ë|| deföed(
ALMOST_STDC
)

570 
	gecoff_debug_öfo
;

571 
	gecoff_debug_sw≠
;

572 
	gecoff_exå
;

573 
	gbfd_symbﬁ
;

574 
	gbfd_lök_öfo
;

575 
	gbfd_lök_hash_íåy
;

576 
	gbfd_ñf_vîsi⁄_åì
;

578 
bfd_vma
 
bfd_ecoff_gë_gp_vÆue


579 (
bfd
 * 
abfd
);

580 
bfd_boﬁón
 
bfd_ecoff_£t_gp_vÆue


581 (
bfd
 *
abfd
, 
bfd_vma
 
gp_vÆue
);

582 
bfd_boﬁón
 
bfd_ecoff_£t_ªgmasks


583 (
bfd
 *
abfd
, 
g¥mask
, 
Ârmask
,

584 *
˝rmask
);

585 *
bfd_ecoff_debug_öô


586 (
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

587 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd_lök_öfo
 *);

588 
bfd_ecoff_debug_‰ì


589 (*
h™dÀ
, 
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

590 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd_lök_öfo
 *);

591 
bfd_boﬁón
 
bfd_ecoff_debug_accumuœã


592 (*
h™dÀ
, 
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

593 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd
 *
öput_bfd
,

594 
ecoff_debug_öfo
 *
öput_debug
,

595 c⁄° 
ecoff_debug_sw≠
 *
öput_sw≠
, 
bfd_lök_öfo
 *);

596 
bfd_boﬁón
 
bfd_ecoff_debug_accumuœã_Ÿhî


597 (*
h™dÀ
, 
bfd
 *
ouçut_bfd
, 
ecoff_debug_öfo
 *
ouçut_debug
,

598 c⁄° 
ecoff_debug_sw≠
 *
ouçut_sw≠
, 
bfd
 *
öput_bfd
,

599 
bfd_lök_öfo
 *);

600 
bfd_boﬁón
 
bfd_ecoff_debug_exã∫Æs


601 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

602 c⁄° 
ecoff_debug_sw≠
 *
sw≠
, 
bfd_boﬁón
 
ªloˇèbÀ
,

603 
bfd_boﬁón
 (*
gë_exå
Ë(
bfd_symbﬁ
 *, 
ecoff_exå
 *),

604 (*
£t_ödex
Ë(
bfd_symbﬁ
 *, 
bfd_size_ty≥
));

605 
bfd_boﬁón
 
bfd_ecoff_debug_⁄e_exã∫Æ


606 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

607 c⁄° 
ecoff_debug_sw≠
 *
sw≠
, c⁄° *
«me
,

608 
ecoff_exå
 *
esym
);

609 
bfd_size_ty≥
 
bfd_ecoff_debug_size


610 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

611 c⁄° 
ecoff_debug_sw≠
 *
sw≠
);

612 
bfd_boﬁón
 
bfd_ecoff_wrôe_debug


613 (
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

614 c⁄° 
ecoff_debug_sw≠
 *
sw≠
, 
fûe_±r
 
whîe
);

615 
bfd_boﬁón
 
bfd_ecoff_wrôe_accumuœãd_debug


616 (*
h™dÀ
, 
bfd
 *
abfd
, 
ecoff_debug_öfo
 *
debug
,

617 c⁄° 
ecoff_debug_sw≠
 *
sw≠
,

618 
bfd_lök_öfo
 *
öfo
, 
fûe_±r
 
whîe
);

622 
	sbfd_lök_√eded_li°


624 
bfd_lök_√eded_li°
 *
	g√xt
;

625 
bfd
 *
	gby
;

626 c⁄° *
	g«me
;

629 
	edy«mic_lib_lök_˛ass
 {

630 
	gDYN_NORMAL
 = 0,

631 
	gDYN_AS_NEEDED
 = 1,

632 
	gDYN_DT_NEEDED
 = 2,

633 
	gDYN_NO_ADD_NEEDED
 = 4,

634 
	gDYN_NO_NEEDED
 = 8

637 
	enŸi˚_a¢ìded_a˘i⁄
 {

638 
	gnŸi˚_as_√eded
,

639 
	gnŸi˚_nŸ_√eded
,

640 
	gnŸi˚_√eded


643 
bfd_boﬁón
 
bfd_ñf_ªc‹d_lök_assignmít


644 (
bfd
 *, 
bfd_lök_öfo
 *, c⁄° *, 
bfd_boﬁón
,

645 
bfd_boﬁón
);

646 
bfd_lök_√eded_li°
 *
bfd_ñf_gë_√eded_li°


647 (
bfd
 *, 
bfd_lök_öfo
 *);

648 
bfd_boﬁón
 
bfd_ñf_gë_bfd_√eded_li°


649 (
bfd
 *, 
bfd_lök_√eded_li°
 **);

650 
bfd_boﬁón
 
bfd_ñf_size_dy«mic_£˘i⁄s


651 (
bfd
 *, const *, const *, const *, const *, const *,

652 c⁄° * c⁄° *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 **,

653 
bfd_ñf_vîsi⁄_åì
 *);

654 
bfd_boﬁón
 
bfd_ñf_size_dynsym_hash_dyn°r


655 (
bfd
 *, 
bfd_lök_öfo
 *);

656 
bfd_ñf_£t_dt_√eded_«me


657 (
bfd
 *, const *);

658 c⁄° *
bfd_ñf_gë_dt_s⁄ame


659 (
bfd
 *);

660 
bfd_ñf_£t_dyn_lib_˛ass


661 (
bfd
 *, 
dy«mic_lib_lök_˛ass
);

662 
bfd_ñf_gë_dyn_lib_˛ass


663 (
bfd
 *);

664 
bfd_lök_√eded_li°
 *
bfd_ñf_gë_ru≈©h_li°


665 (
bfd
 *, 
bfd_lök_öfo
 *);

666 
bfd_boﬁón
 
bfd_ñf_disˇrd_öfo


667 (
bfd
 *, 
bfd_lök_öfo
 *);

668 
_bfd_ñf_deÁu…_a˘i⁄_disˇrded


669 (
bfd_£˘i⁄
 *);

674 
bfd_gë_ñf_phdr_uµî_bound


675 (
bfd
 *
abfd
);

684 
bfd_gë_ñf_phdrs


685 (
bfd
 *
abfd
, *
phdrs
);

699 
bfd
 *
bfd_ñf_bfd_‰om_ªmŸe_mem‹y


700 (
bfd
 *
ãm∂
, 
bfd_vma
 
ehdr_vma
, bfd_vm®*
lﬂdba£p
,

701 (*
èrgë_ªad_mem‹y
Ë(
bfd_vma
 
vma
, 
bfd_byã
 *
myaddr
, 
Àn
));

704 
bfd_gë_¨ch_size


705 (
bfd
 *);

708 
bfd_gë_sign_exãnd_vma


709 (
bfd
 *);

711 
bfd_£˘i⁄
 *
_bfd_ñf_és_£tup


712 (
bfd
 *, 
bfd_lök_öfo
 *);

714 
_bfd_fix_ex˛uded_£c_syms


715 (
bfd
 *, 
bfd_lök_öfo
 *);

717 
bfd_m68k_mach_to_„©uªs
 ();

719 
bfd_m68k_„©uªs_to_mach
 ();

721 
bfd_boﬁón
 
bfd_m68k_ñf32_¸óã_embedded_ªlocs


722 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *,

725 
bfd_ñf_m68k_£t_èrgë_›ti⁄s
 (
bfd_lök_öfo
 *, );

727 
bfd_boﬁón
 
bfd_bfö_ñf32_¸óã_embedded_ªlocs


728 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *,

731 
bfd_boﬁón
 
bfd_¸16_ñf32_¸óã_embedded_ªlocs


732 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *,

737 
bfd_lök_√eded_li°
 *
bfd_sunos_gë_√eded_li°


738 (
bfd
 *, 
bfd_lök_öfo
 *);

739 
bfd_boﬁón
 
bfd_sunos_ªc‹d_lök_assignmít


740 (
bfd
 *, 
bfd_lök_öfo
 *, const *);

741 
bfd_boﬁón
 
bfd_sunos_size_dy«mic_£˘i⁄s


742 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 **,

743 
bfd_£˘i⁄
 **, bfd_section **);

747 
bfd_boﬁón
 
bfd_i386löux_size_dy«mic_£˘i⁄s


748 (
bfd
 *, 
bfd_lök_öfo
 *);

749 
bfd_boﬁón
 
bfd_m68klöux_size_dy«mic_£˘i⁄s


750 (
bfd
 *, 
bfd_lök_öfo
 *);

751 
bfd_boﬁón
 
bfd_•¨˛öux_size_dy«mic_£˘i⁄s


752 (
bfd
 *, 
bfd_lök_öfo
 *);

756 
	g_bfd_wödow_öã∫Æ
;

757 
_bfd_wödow_öã∫Æ
 
	tbfd_wödow_öã∫Æ
;

759 
	s_bfd_wödow


762 *
	gd©a
;

763 
bfd_size_ty≥
 
	gsize
;

770 
_bfd_wödow_öã∫Æ
 *
	gi
;

772 
	tbfd_wödow
;

774 
bfd_öô_wödow


775 (
bfd_wödow
 *);

776 
bfd_‰ì_wödow


777 (
bfd_wödow
 *);

778 
bfd_boﬁón
 
bfd_gë_fûe_wödow


779 (
bfd
 *, 
fûe_±r
, 
bfd_size_ty≥
, 
bfd_wödow
 *, 
bfd_boﬁón
);

783 
bfd_boﬁón
 
bfd_xcoff_•lô_imp‹t_∑th


784 (
bfd
 *, const *, const **, const **);

785 
bfd_boﬁón
 
bfd_xcoff_£t_¨chive_imp‹t_∑th


786 (
bfd_lök_öfo
 *, 
bfd
 *, const *);

787 
bfd_boﬁón
 
bfd_xcoff_lök_ªc‹d_£t


788 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_hash_íåy
 *, 
bfd_size_ty≥
);

789 
bfd_boﬁón
 
bfd_xcoff_imp‹t_symbﬁ


790 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_hash_íåy
 *, 
bfd_vma
,

792 
bfd_boﬁón
 
bfd_xcoff_exp‹t_symbﬁ


793 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_hash_íåy
 *);

794 
bfd_boﬁón
 
bfd_xcoff_lök_cou¡_ªloc


795 (
bfd
 *, 
bfd_lök_öfo
 *, const *);

796 
bfd_boﬁón
 
bfd_xcoff_ªc‹d_lök_assignmít


797 (
bfd
 *, 
bfd_lök_öfo
 *, const *);

798 
bfd_boﬁón
 
bfd_xcoff_size_dy«mic_£˘i⁄s


799 (
bfd
 *, 
bfd_lök_öfo
 *, const *, const *,

800 , , , 
bfd_boﬁón
,

801 , 
bfd_boﬁón
, , 
bfd_£˘i⁄
 **, bfd_boolean);

802 
bfd_boﬁón
 
bfd_xcoff_lök_gíî©e_πöô


803 (
bfd
 *, c⁄° *, c⁄° *, 
bfd_boﬁón
);

806 
bfd_boﬁón
 
bfd_xcoff_¨_¨chive_£t_magic


807 (
bfd
 *, *);

811 #i‡
deföed
(
__STDC__
Ë|| deföed(
ALMOST_STDC
)

812 
	göã∫Æ_symít
;

813 
	göã∫Æ_auxít
;

816 
bfd_boﬁón
 
bfd_coff_gë_symít


817 (
bfd
 *, 
bfd_symbﬁ
 *, 
öã∫Æ_symít
 *);

819 
bfd_boﬁón
 
bfd_coff_gë_auxít


820 (
bfd
 *, 
bfd_symbﬁ
 *, , 
öã∫Æ_auxít
 *);

822 
bfd_boﬁón
 
bfd_coff_£t_symbﬁ_˛ass


823 (
bfd
 *, 
bfd_symbﬁ
 *, );

825 
bfd_boﬁón
 
bfd_m68k_coff_¸óã_embedded_ªlocs


826 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *, bfd_section *, **);

831 
	gBFD_ARM_VFP11_FIX_DEFAULT
,

832 
	gBFD_ARM_VFP11_FIX_NONE
,

833 
	gBFD_ARM_VFP11_FIX_SCALAR
,

834 
	gBFD_ARM_VFP11_FIX_VECTOR


835 } 
	tbfd_¨m_vÂ11_fix
;

837 
bfd_ñf32_¨m_öô_m≠s


838 (
bfd
 *);

840 
bfd_ñf32_¨m_£t_vÂ11_fix


841 (
bfd
 *, 
bfd_lök_öfo
 *);

843 
bfd_ñf32_¨m_£t_c‹ãx_a8_fix


844 (
bfd
 *, 
bfd_lök_öfo
 *);

846 
bfd_boﬁón
 
bfd_ñf32_¨m_vÂ11_îøtum_sˇn


847 (
bfd
 *, 
bfd_lök_öfo
 *);

849 
bfd_ñf32_¨m_vÂ11_fix_víìr_loˇti⁄s


850 (
bfd
 *, 
bfd_lök_öfo
 *);

853 
bfd_boﬁón
 
bfd_¨m_Æloˇã_öãrw‹kög_£˘i⁄s


854 (
bfd_lök_öfo
 *);

856 
bfd_boﬁón
 
bfd_¨m_¥o˚ss_bef‹e_Æloˇti⁄


857 (
bfd
 *, 
bfd_lök_öfo
 *, );

859 
bfd_boﬁón
 
bfd_¨m_gë_bfd_f‹_öãrw‹kög


860 (
bfd
 *, 
bfd_lök_öfo
 *);

863 
bfd_boﬁón
 
bfd_¨m_≥_Æloˇã_öãrw‹kög_£˘i⁄s


864 (
bfd_lök_öfo
 *);

866 
bfd_boﬁón
 
bfd_¨m_≥_¥o˚ss_bef‹e_Æloˇti⁄


867 (
bfd
 *, 
bfd_lök_öfo
 *, );

869 
bfd_boﬁón
 
bfd_¨m_≥_gë_bfd_f‹_öãrw‹kög


870 (
bfd
 *, 
bfd_lök_öfo
 *);

873 
bfd_boﬁón
 
bfd_ñf32_¨m_Æloˇã_öãrw‹kög_£˘i⁄s


874 (
bfd_lök_öfo
 *);

876 
bfd_boﬁón
 
bfd_ñf32_¨m_¥o˚ss_bef‹e_Æloˇti⁄


877 (
bfd
 *, 
bfd_lök_öfo
 *);

879 
	gbfd_ñf32_¨m_£t_èrgë_ªlocs


880 (
	gbfd
 *, 
	gbfd_lök_öfo
 *, , *, , , 
	gbfd_¨m_vÂ11_fix
,

883 
bfd_boﬁón
 
bfd_ñf32_¨m_gë_bfd_f‹_öãrw‹kög


884 (
bfd
 *, 
bfd_lök_öfo
 *);

886 
bfd_boﬁón
 
bfd_ñf32_¨m_add_glue_£˘i⁄s_to_bfd


887 (
bfd
 *, 
bfd_lök_öfo
 *);

890 
	#BFD_ARM_SPECIAL_SYM_TYPE_MAP
 (1 << 0)

	)

891 
	#BFD_ARM_SPECIAL_SYM_TYPE_TAG
 (1 << 1)

	)

892 
	#BFD_ARM_SPECIAL_SYM_TYPE_OTHER
 (1 << 2)

	)

893 
	#BFD_ARM_SPECIAL_SYM_TYPE_ANY
 (~0)

	)

894 
bfd_boﬁón
 
bfd_is_¨m_•ecül_symbﬁ_«me


895 (c⁄° * 
«me
, 
ty≥
);

897 
bfd_ñf32_¨m_£t_byãsw≠_code
 (
bfd_lök_öfo
 *, );

900 
bfd_boﬁón
 
bfd_¨m_mîge_machöes


901 (
bfd
 *, bfd *);

903 
bfd_boﬁón
 
bfd_¨m_upd©e_nŸes


904 (
bfd
 *, const *);

906 
bfd_¨m_gë_mach_‰om_nŸes


907 (
bfd
 *, const *);

910 
ñf32_¨m_£tup_£˘i⁄_li°s


911 (
bfd
 *, 
bfd_lök_öfo
 *);

912 
ñf32_¨m_√xt_öput_£˘i⁄


913 (
bfd_lök_öfo
 *, 
bfd_£˘i⁄
 *);

914 
bfd_boﬁón
 
ñf32_¨m_size_°ubs


915 (
bfd
 *, bfd *, 
bfd_lök_öfo
 *, 
bfd_sig√d_vma
,

916 
bfd_£˘i⁄
 * (*) (const *, bfd_section *), (*) ());

917 
bfd_boﬁón
 
ñf32_¨m_buûd_°ubs


918 (
bfd_lök_öfo
 *);

921 
bfd_boﬁón
 
ñf32_¨m_fix_exidx_covîage


922 (
bfd_£˘i⁄
 **, , 
bfd_lök_öfo
 *);

925 
_bfd_ñf_µc_©_és_å™sf‹m


928 
_bfd_ñf_µc_©_çªl_å™sf‹m


932 
bfd_ticoff_£t_£˘i⁄_lﬂd_∑ge


933 (
bfd_£˘i⁄
 *, );

935 
bfd_ticoff_gë_£˘i⁄_lﬂd_∑ge


936 (
bfd_£˘i⁄
 *);

939 
bfd_vma
 
bfd_h8300_∑d_addªss


940 (
bfd
 *, 
bfd_vma
);

943 
bfd_ñf32_ü64_a·î_∑r£


946 
bfd_ñf64_ü64_a·î_∑r£


954 
	scoff_comd©_öfo


957 c⁄° *
	g«me
;

963 
	gsymbﬁ
;

966 
coff_comd©_öfo
 *
bfd_coff_gë_comd©_£˘i⁄


967 (
bfd
 *, 
bfd_£˘i⁄
 *);

970 
bfd_öô
 ();

973 
bfd
 *
bfd_f›í
 (c⁄° *
fûíame
, c⁄° *
èrgë
,

974 c⁄° *
mode
, 
fd
);

976 
bfd
 *
bfd_›ír
 (c⁄° *
fûíame
, c⁄° *
èrgë
);

978 
bfd
 *
bfd_fd›ír
 (c⁄° *
fûíame
, c⁄° *
èrgë
, 
fd
);

980 
bfd
 *
bfd_›í°ªamr
 (const *, const *, *);

982 
bfd
 *
bfd_›ír_iovec
 (c⁄° *
fûíame
, c⁄° *
èrgë
,

983 *(*
›í
Ë(
bfd
 *
nbfd
,

984 *
›í_˛osuª
),

985 *
›í_˛osuª
,

986 
fûe_±r
 (*
¥ód
Ë(
bfd
 *
nbfd
,

987 *
°ªam
,

988 *
buf
,

989 
fûe_±r
 
nbyãs
,

990 
fûe_±r
 
off£t
),

991 (*
˛o£
Ë(
bfd
 *
nbfd
,

992 *
°ªam
),

993 (*
°©
Ë(
bfd
 *
abfd
,

994 *
°ªam
,

995 
°©
 *
sb
));

997 
bfd
 *
bfd_›íw
 (c⁄° *
fûíame
, c⁄° *
èrgë
);

999 
bfd_boﬁón
 
bfd_˛o£
 (
bfd
 *
abfd
);

1001 
bfd_boﬁón
 
bfd_˛o£_Æl_d⁄e
 (
bfd
 *);

1003 
bfd
 *
bfd_¸óã
 (c⁄° *
fûíame
, bfd *
ãm∂
);

1005 
bfd_boﬁón
 
bfd_make_wrôabÀ
 (
bfd
 *
abfd
);

1007 
bfd_boﬁón
 
bfd_make_ªadabÀ
 (
bfd
 *
abfd
);

1009 
	gbfd_ˇlc_gnu_debuglök_¸c32


1010 (
	g¸c
, c⁄° *
	gbuf
, 
bfd_size_ty≥
 
	gÀn
);

1012 *
bfd_fﬁlow_gnu_debuglök
 (
bfd
 *
abfd
, c⁄° *
dú
);

1014 
bfd_£˘i⁄
 *
	gbfd_¸óã_gnu_debuglök_£˘i⁄


1015 (
bfd
 *
	gabfd
, c⁄° *
	gfûíame
);

1017 
bfd_boﬁón
 
	gbfd_fûl_ö_gnu_debuglök_£˘i⁄


1018 (
bfd
 *
	gabfd
, 
bfd_£˘i⁄
 *
	g£˘
, c⁄° *
	gfûíame
);

1024 
	#bfd_put_8
(
abfd
, 
vÆ
, 
±r
) \

1025 ((Ë(*((*Ë(
±r
)Ë(
vÆ
Ë& 0xff))

	)

1026 
	#bfd_put_sig√d_8
 \

1027 
bfd_put_8


	)

1028 
	#bfd_gë_8
(
abfd
, 
±r
) \

1029 (*(*Ë(
±r
Ë& 0xff)

	)

1030 
	#bfd_gë_sig√d_8
(
abfd
, 
±r
) \

1031 (((*(*Ë(
±r
Ë& 0xffË^ 0x80Ë- 0x80)

	)

1033 
	#bfd_put_16
(
abfd
, 
vÆ
, 
±r
) \

1034 
	`BFD_SEND
 (
abfd
, 
bfd_putx16
, ((
vÆ
),(
±r
)))

	)

1035 
	#bfd_put_sig√d_16
 \

1036 
bfd_put_16


	)

1037 
	#bfd_gë_16
(
abfd
, 
±r
) \

1038 
	`BFD_SEND
 (
abfd
, 
bfd_gëx16
, (
±r
))

	)

1039 
	#bfd_gë_sig√d_16
(
abfd
, 
±r
) \

1040 
	`BFD_SEND
 (
abfd
, 
bfd_gëx_sig√d_16
, (
±r
))

	)

1042 
	#bfd_put_32
(
abfd
, 
vÆ
, 
±r
) \

1043 
	`BFD_SEND
 (
abfd
, 
bfd_putx32
, ((
vÆ
),(
±r
)))

	)

1044 
	#bfd_put_sig√d_32
 \

1045 
bfd_put_32


	)

1046 
	#bfd_gë_32
(
abfd
, 
±r
) \

1047 
	`BFD_SEND
 (
abfd
, 
bfd_gëx32
, (
±r
))

	)

1048 
	#bfd_gë_sig√d_32
(
abfd
, 
±r
) \

1049 
	`BFD_SEND
 (
abfd
, 
bfd_gëx_sig√d_32
, (
±r
))

	)

1051 
	#bfd_put_64
(
abfd
, 
vÆ
, 
±r
) \

1052 
	`BFD_SEND
 (
abfd
, 
bfd_putx64
, ((
vÆ
), (
±r
)))

	)

1053 
	#bfd_put_sig√d_64
 \

1054 
bfd_put_64


	)

1055 
	#bfd_gë_64
(
abfd
, 
±r
) \

1056 
	`BFD_SEND
 (
abfd
, 
bfd_gëx64
, (
±r
))

	)

1057 
	#bfd_gë_sig√d_64
(
abfd
, 
±r
) \

1058 
	`BFD_SEND
 (
abfd
, 
bfd_gëx_sig√d_64
, (
±r
))

	)

1060 
	#bfd_gë
(
bôs
, 
abfd
, 
±r
) \

1061 ((
bôs
Ë=8 ? (
bfd_vma
Ë
	`bfd_gë_8
 (
abfd
, 
±r
) \

1062 : (
bôs
Ë=16 ? 
	`bfd_gë_16
 (
abfd
, 
±r
) \

1063 : (
bôs
Ë=32 ? 
	`bfd_gë_32
 (
abfd
, 
±r
) \

1064 : (
bôs
Ë=64 ? 
	`bfd_gë_64
 (
abfd
, 
±r
) \

1065 : (
	`ab‹t
 (), (
bfd_vma
Ë- 1))

	)

1067 
	#bfd_put
(
bôs
, 
abfd
, 
vÆ
, 
±r
) \

1068 ((
bôs
Ë=8 ? 
	`bfd_put_8
 (
abfd
, 
vÆ
, 
±r
) \

1069 : (
bôs
Ë=16 ? 
	`bfd_put_16
 (
abfd
, 
vÆ
, 
±r
) \

1070 : (
bôs
Ë=32 ? 
	`bfd_put_32
 (
abfd
, 
vÆ
, 
±r
) \

1071 : (
bôs
Ë=64 ? 
	`bfd_put_64
 (
abfd
, 
vÆ
, 
±r
) \

1072 : (
	`ab‹t
 (), (Ë0))

	)

1077 
	#bfd_h_put_8
(
abfd
, 
vÆ
, 
±r
) \

1078 
	`bfd_put_8
 (
abfd
, 
vÆ
, 
±r
)

	)

1079 
	#bfd_h_put_sig√d_8
(
abfd
, 
vÆ
, 
±r
) \

1080 
	`bfd_put_8
 (
abfd
, 
vÆ
, 
±r
)

	)

1081 
	#bfd_h_gë_8
(
abfd
, 
±r
) \

1082 
	`bfd_gë_8
 (
abfd
, 
±r
)

	)

1083 
	#bfd_h_gë_sig√d_8
(
abfd
, 
±r
) \

1084 
	`bfd_gë_sig√d_8
 (
abfd
, 
±r
)

	)

1086 
	#bfd_h_put_16
(
abfd
, 
vÆ
, 
±r
) \

1087 
	`BFD_SEND
 (
abfd
, 
bfd_h_putx16
, (
vÆ
, 
±r
))

	)

1088 
	#bfd_h_put_sig√d_16
 \

1089 
bfd_h_put_16


	)

1090 
	#bfd_h_gë_16
(
abfd
, 
±r
) \

1091 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx16
, (
±r
))

	)

1092 
	#bfd_h_gë_sig√d_16
(
abfd
, 
±r
) \

1093 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx_sig√d_16
, (
±r
))

	)

1095 
	#bfd_h_put_32
(
abfd
, 
vÆ
, 
±r
) \

1096 
	`BFD_SEND
 (
abfd
, 
bfd_h_putx32
, (
vÆ
, 
±r
))

	)

1097 
	#bfd_h_put_sig√d_32
 \

1098 
bfd_h_put_32


	)

1099 
	#bfd_h_gë_32
(
abfd
, 
±r
) \

1100 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx32
, (
±r
))

	)

1101 
	#bfd_h_gë_sig√d_32
(
abfd
, 
±r
) \

1102 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx_sig√d_32
, (
±r
))

	)

1104 
	#bfd_h_put_64
(
abfd
, 
vÆ
, 
±r
) \

1105 
	`BFD_SEND
 (
abfd
, 
bfd_h_putx64
, (
vÆ
, 
±r
))

	)

1106 
	#bfd_h_put_sig√d_64
 \

1107 
bfd_h_put_64


	)

1108 
	#bfd_h_gë_64
(
abfd
, 
±r
) \

1109 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx64
, (
±r
))

	)

1110 
	#bfd_h_gë_sig√d_64
(
abfd
, 
±r
) \

1111 
	`BFD_SEND
 (
abfd
, 
bfd_h_gëx_sig√d_64
, (
±r
))

	)

1115 
	#H_PUT_64
 
bfd_h_put_64


	)

1116 
	#H_PUT_32
 
bfd_h_put_32


	)

1117 
	#H_PUT_16
 
bfd_h_put_16


	)

1118 
	#H_PUT_8
 
bfd_h_put_8


	)

1119 
	#H_PUT_S64
 
bfd_h_put_sig√d_64


	)

1120 
	#H_PUT_S32
 
bfd_h_put_sig√d_32


	)

1121 
	#H_PUT_S16
 
bfd_h_put_sig√d_16


	)

1122 
	#H_PUT_S8
 
bfd_h_put_sig√d_8


	)

1123 
	#H_GET_64
 
bfd_h_gë_64


	)

1124 
	#H_GET_32
 
bfd_h_gë_32


	)

1125 
	#H_GET_16
 
bfd_h_gë_16


	)

1126 
	#H_GET_8
 
bfd_h_gë_8


	)

1127 
	#H_GET_S64
 
bfd_h_gë_sig√d_64


	)

1128 
	#H_GET_S32
 
bfd_h_gë_sig√d_32


	)

1129 
	#H_GET_S16
 
bfd_h_gë_sig√d_16


	)

1130 
	#H_GET_S8
 
bfd_h_gë_sig√d_8


	)

1134 
bfd_gë_mtime
 (
bfd
 *
abfd
);

1136 
fûe_±r
 
bfd_gë_size
 (
bfd
 *
abfd
);

1138 *
bfd_mm≠
 (
bfd
 *
abfd
, *
addr
, 
bfd_size_ty≥
 
Àn
,

1139 
¥Ÿ
, 
Êags
, 
fûe_±r
 
off£t
);

1143 
	sbfd_£˘i⁄


1147 c⁄° *
	g«me
;

1150 
	gid
;

1153 
	gödex
;

1156 
bfd_£˘i⁄
 *
	g√xt
;

1159 
bfd_£˘i⁄
 *
	g¥ev
;

1164 
Êagw‹d
 
	gÊags
;

1166 
	#SEC_NO_FLAGS
 0x000

	)

1170 
	#SEC_ALLOC
 0x001

	)

1174 
	#SEC_LOAD
 0x002

	)

1178 
	#SEC_RELOC
 0x004

	)

1181 
	#SEC_READONLY
 0x008

	)

1184 
	#SEC_CODE
 0x010

	)

1187 
	#SEC_DATA
 0x020

	)

1190 
	#SEC_ROM
 0x040

	)

1202 
	#SEC_CONSTRUCTOR
 0x080

	)

1207 
	#SEC_HAS_CONTENTS
 0x100

	)

1211 
	#SEC_NEVER_LOAD
 0x200

	)

1214 
	#SEC_THREAD_LOCAL
 0x400

	)

1222 
	#SEC_HAS_GOT_REF
 0x800

	)

1229 
	#SEC_IS_COMMON
 0x1000

	)

1235 
	#SEC_DEBUGGING
 0x2000

	)

1240 
	#SEC_IN_MEMORY
 0x4000

	)

1245 
	#SEC_EXCLUDE
 0x8000

	)

1251 
	#SEC_SORT_ENTRIES
 0x10000

	)

1257 
	#SEC_LINK_ONCE
 0x20000

	)

1261 
	#SEC_LINK_DUPLICATES
 0xc0000

	)

1265 
	#SEC_LINK_DUPLICATES_DISCARD
 0x0

	)

1270 
	#SEC_LINK_DUPLICATES_ONE_ONLY
 0x40000

	)

1274 
	#SEC_LINK_DUPLICATES_SAME_SIZE
 0x80000

	)

1279 
	#SEC_LINK_DUPLICATES_SAME_CONTENTS
 \

1280 (
SEC_LINK_DUPLICATES_ONE_ONLY
 | 
SEC_LINK_DUPLICATES_SAME_SIZE
)

	)

1286 
	#SEC_LINKER_CREATED
 0x100000

	)

1291 
	#SEC_KEEP
 0x200000

	)

1295 
	#SEC_SMALL_DATA
 0x400000

	)

1299 
	#SEC_MERGE
 0x800000

	)

1304 
	#SEC_STRINGS
 0x1000000

	)

1307 
	#SEC_GROUP
 0x2000000

	)

1318 
	#SEC_COFF_SHARED_LIBRARY
 0x4000000

	)

1322 
	#SEC_COFF_SHARED
 0x8000000

	)

1329 
	#SEC_TIC54X_BLOCK
 0x10000000

	)

1334 
	#SEC_TIC54X_CLINK
 0x20000000

	)

1338 
	#SEC_COFF_NOREAD
 0x40000000

	)

1345 
	gu£r_£t_vma
 : 1;

1348 
	glökî_m¨k
 : 1;

1352 
	glökî_has_öput
 : 1;

1355 
	ggc_m¨k
 : 1;

1360 
	g£gmít_m¨k
 : 1;

1363 
	g£c_öfo_ty≥
:3;

1364 
	#ELF_INFO_TYPE_NONE
 0

	)

1365 
	#ELF_INFO_TYPE_STABS
 1

	)

1366 
	#ELF_INFO_TYPE_MERGE
 2

	)

1367 
	#ELF_INFO_TYPE_EH_FRAME
 3

	)

1368 
	#ELF_INFO_TYPE_JUST_SYMS
 4

	)

1371 
	gu£_ªœ_p
:1;

1376 
	g£c_Êg0
:1;

1377 
	g£c_Êg1
:1;

1378 
	g£c_Êg2
:1;

1379 
	g£c_Êg3
:1;

1380 
	g£c_Êg4
:1;

1381 
	g£c_Êg5
:1;

1391 
bfd_vma
 
	gvma
;

1396 
bfd_vma
 
	glma
;

1401 
bfd_size_ty≥
 
	gsize
;

1411 
bfd_size_ty≥
 
	gøwsize
;

1414 
ªœx_èbÀ
 *
	gªœx
;

1417 
	gªœx_cou¡
;

1427 
bfd_vma
 
	gouçut_off£t
;

1430 
bfd_£˘i⁄
 *
	gouçut_£˘i⁄
;

1434 
	gÆignmít_powî
;

1438 
ªloc_ˇche_íåy
 *
	gªloˇti⁄
;

1442 
ªloc_ˇche_íåy
 **
	g‹ñoˇti⁄
;

1445 
	gªloc_cou¡
;

1451 
fûe_±r
 
	gfûïos
;

1454 
fûe_±r
 
	gªl_fûïos
;

1457 
fûe_±r
 
	glöe_fûïos
;

1460 *
	gu£rd©a
;

1464 *
	gc⁄ã¡s
;

1467 
Æít
 *
	glöío
;

1470 
	glöío_cou¡
;

1473 
	gítsize
;

1477 
bfd_£˘i⁄
 *
	gkït_£˘i⁄
;

1481 
fûe_±r
 
	gmovög_löe_fûïos
;

1484 
	gèrgë_ödex
;

1486 *
	gu£d_by_bfd
;

1490 
ªÀ¡_chaö
 *
	gc⁄°ru˘‹_chaö
;

1493 
bfd
 *
	gow√r
;

1496 
bfd_symbﬁ
 *
	gsymbﬁ
;

1497 
bfd_symbﬁ
 **
	gsymbﬁ_±r_±r
;

1504 
bfd_lök_‹dî
 *
	glök_‹dî
;

1505 
bfd_£˘i⁄
 *
	gs
;

1506 } 
	gm≠_hód
, 
	gm≠_èû
;

1507 } 
	ta£˘i⁄
;

1512 
	sªœx_èbÀ
 {

1514 
bfd_vma
 
	gaddr
;

1517 
	gsize
;

1525 
	#BFD_ABS_SECTION_NAME
 "*ABS*"

	)

1526 
	#BFD_UND_SECTION_NAME
 "*UND*"

	)

1527 
	#BFD_COM_SECTION_NAME
 "*COM*"

	)

1528 
	#BFD_IND_SECTION_NAME
 "*IND*"

	)

1531 
a£˘i⁄
 
bfd_abs_£˘i⁄
;

1532 
	#bfd_abs_£˘i⁄_±r
 ((
a£˘i⁄
 *Ë&
bfd_abs_£˘i⁄
)

	)

1533 
	#bfd_is_abs_£˘i⁄
(
£c
Ë((£cË=
bfd_abs_£˘i⁄_±r
)

	)

1535 
a£˘i⁄
 
bfd_und_£˘i⁄
;

1536 
	#bfd_und_£˘i⁄_±r
 ((
a£˘i⁄
 *Ë&
bfd_und_£˘i⁄
)

	)

1537 
	#bfd_is_und_£˘i⁄
(
£c
Ë((£cË=
bfd_und_£˘i⁄_±r
)

	)

1539 
a£˘i⁄
 
bfd_com_£˘i⁄
;

1540 
	#bfd_com_£˘i⁄_±r
 ((
a£˘i⁄
 *Ë&
bfd_com_£˘i⁄
)

	)

1542 
a£˘i⁄
 
bfd_öd_£˘i⁄
;

1543 
	#bfd_öd_£˘i⁄_±r
 ((
a£˘i⁄
 *Ë&
bfd_öd_£˘i⁄
)

	)

1544 
	#bfd_is_öd_£˘i⁄
(
£c
Ë((£cË=
bfd_öd_£˘i⁄_±r
)

	)

1546 
	#bfd_is_c⁄°_£˘i⁄
(
SEC
) \

1547 –((
SEC
Ë=
bfd_abs_£˘i⁄_±r
) \

1548 || ((
SEC
Ë=
bfd_und_£˘i⁄_±r
) \

1549 || ((
SEC
Ë=
bfd_com_£˘i⁄_±r
) \

1550 || ((
SEC
Ë=
bfd_öd_£˘i⁄_±r
))

	)

1555 
	#bfd_£˘i⁄_li°_ªmove
(
ABFD
, 
S
) \

1558 
a£˘i⁄
 *
_s
 = 
S
; \

1559 
a£˘i⁄
 *
_√xt
 = 
_s
->
√xt
; \

1560 
a£˘i⁄
 *
_¥ev
 = 
_s
->
¥ev
; \

1561 i‡(
_¥ev
) \

1562 
_¥ev
->
√xt
 = 
_√xt
; \

1564 (
ABFD
)->
£˘i⁄s
 = 
_√xt
; \

1565 i‡(
_√xt
) \

1566 
_√xt
->
¥ev
 = 
_¥ev
; \

1568 (
ABFD
)->
£˘i⁄_œ°
 = 
_¥ev
; \

1570 0)

	)

1571 
	#bfd_£˘i⁄_li°_≠≥nd
(
ABFD
, 
S
) \

1574 
a£˘i⁄
 *
_s
 = 
S
; \

1575 
bfd
 *
_abfd
 = 
ABFD
; \

1576 
_s
->
√xt
 = 
NULL
; \

1577 i‡(
_abfd
->
£˘i⁄_œ°
) \

1579 
_s
->
¥ev
 = 
_abfd
->
£˘i⁄_œ°
; \

1580 
_abfd
->
£˘i⁄_œ°
->
√xt
 = 
_s
; \

1584 
_s
->
¥ev
 = 
NULL
; \

1585 
_abfd
->
£˘i⁄s
 = 
_s
; \

1587 
_abfd
->
£˘i⁄_œ°
 = 
_s
; \

1589 0)

	)

1590 
	#bfd_£˘i⁄_li°_¥ïíd
(
ABFD
, 
S
) \

1593 
a£˘i⁄
 *
_s
 = 
S
; \

1594 
bfd
 *
_abfd
 = 
ABFD
; \

1595 
_s
->
¥ev
 = 
NULL
; \

1596 i‡(
_abfd
->
£˘i⁄s
) \

1598 
_s
->
√xt
 = 
_abfd
->
£˘i⁄s
; \

1599 
_abfd
->
£˘i⁄s
->
¥ev
 = 
_s
; \

1603 
_s
->
√xt
 = 
NULL
; \

1604 
_abfd
->
£˘i⁄_œ°
 = 
_s
; \

1606 
_abfd
->
£˘i⁄s
 = 
_s
; \

1608 0)

	)

1609 
	#bfd_£˘i⁄_li°_ö£π_a·î
(
ABFD
, 
A
, 
S
) \

1612 
a£˘i⁄
 *
_a
 = 
A
; \

1613 
a£˘i⁄
 *
_s
 = 
S
; \

1614 
a£˘i⁄
 *
_√xt
 = 
_a
->
√xt
; \

1615 
_s
->
√xt
 = 
_√xt
; \

1616 
_s
->
¥ev
 = 
_a
; \

1617 
_a
->
√xt
 = 
_s
; \

1618 i‡(
_√xt
) \

1619 
_√xt
->
¥ev
 = 
_s
; \

1621 (
ABFD
)->
£˘i⁄_œ°
 = 
_s
; \

1623 0)

	)

1624 
	#bfd_£˘i⁄_li°_ö£π_bef‹e
(
ABFD
, 
B
, 
S
) \

1627 
a£˘i⁄
 *
_b
 = 
B
; \

1628 
a£˘i⁄
 *
_s
 = 
S
; \

1629 
a£˘i⁄
 *
_¥ev
 = 
_b
->
¥ev
; \

1630 
_s
->
¥ev
 = 
_¥ev
; \

1631 
_s
->
√xt
 = 
_b
; \

1632 
_b
->
¥ev
 = 
_s
; \

1633 i‡(
_¥ev
) \

1634 
_¥ev
->
√xt
 = 
_s
; \

1636 (
ABFD
)->
£˘i⁄s
 = 
_s
; \

1638 0)

	)

1639 
	#bfd_£˘i⁄_ªmoved_‰om_li°
(
ABFD
, 
S
) \

1640 ((
S
)->
√xt
 =
NULL
 ? (
ABFD
)->
£˘i⁄_œ°
 !(SË: (S)->√xt->
¥ev
 !(S))

	)

1642 
	#BFD_FAKE_SECTION
(
SEC
, 
FLAGS
, 
SYM
, 
NAME
, 
IDX
) \

1644 { 
NAME
, 
IDX
, 0, 
NULL
, NULL, 
FLAGS
, 0, \

1659 0, (
bfd_£˘i⁄
 *Ë&
SEC
, 0, \

1662 
NULL
, NULL, 0, 0, 0, \

1665 0, 
NULL
, NULL, NULL, 0, \

1668 0, 
NULL
, 0, \

1671 0, 
NULL
, NULL, NULL, \

1674 (
bfd_symbﬁ
 *Ë
SYM
, &
SEC
.
symbﬁ
, \

1677 { 
NULL
 }, { NULL } \

1678 }

	)

1680 
bfd_£˘i⁄_li°_˛ór
 (
bfd
 *);

1682 
a£˘i⁄
 *
bfd_gë_£˘i⁄_by_«me
 (
bfd
 *
abfd
, c⁄° *
«me
);

1684 
a£˘i⁄
 *
	gbfd_gë_£˘i⁄_by_«me_if


1685 (
bfd
 *
	gabfd
,

1686 c⁄° *
	g«me
,

1687 
bfd_boﬁón
 (*
func
Ë(
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘
, *
	gobj
),

1688 *
	gobj
);

1690 *
	gbfd_gë_unique_£˘i⁄_«me


1691 (
bfd
 *
	gabfd
, c⁄° *
	gãm∂©
, *
	gcou¡
);

1693 
a£˘i⁄
 *
bfd_make_£˘i⁄_ﬁd_way
 (
bfd
 *
abfd
, c⁄° *
«me
);

1695 
a£˘i⁄
 *
	gbfd_make_£˘i⁄_™yway_wôh_Êags


1696 (
bfd
 *
	gabfd
, c⁄° *
	g«me
, 
Êagw‹d
 
	gÊags
);

1698 
a£˘i⁄
 *
bfd_make_£˘i⁄_™yway
 (
bfd
 *
abfd
, c⁄° *
«me
);

1700 
a£˘i⁄
 *
	gbfd_make_£˘i⁄_wôh_Êags


1701 (
	gbfd
 *, c⁄° *
	g«me
, 
Êagw‹d
 
	gÊags
);

1703 
a£˘i⁄
 *
bfd_make_£˘i⁄
 (
bfd
 *, c⁄° *
«me
);

1705 
bfd_boﬁón
 
	gbfd_£t_£˘i⁄_Êags


1706 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
Êagw‹d
 
	gÊags
);

1708 
	gbfd_m≠_ovî_£˘i⁄s


1709 (
bfd
 *
	gabfd
,

1710 (*
	gfunc
Ë(
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘
, *
	gobj
),

1711 *
	gobj
);

1713 
a£˘i⁄
 *
	gbfd_£˘i⁄s_föd_if


1714 (
bfd
 *
	gabfd
,

1715 
bfd_boﬁón
 (*
›î©i⁄
Ë(
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘
, *
	gobj
),

1716 *
	gobj
);

1718 
bfd_boﬁón
 
	gbfd_£t_£˘i⁄_size


1719 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
bfd_size_ty≥
 
	gvÆ
);

1721 
bfd_boﬁón
 
	gbfd_£t_£˘i⁄_c⁄ã¡s


1722 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, c⁄° *
	gd©a
,

1723 
fûe_±r
 
	goff£t
, 
bfd_size_ty≥
 
	gcou¡
);

1725 
bfd_boﬁón
 
	gbfd_gë_£˘i⁄_c⁄ã¡s


1726 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, *
	gloˇti⁄
, 
fûe_±r
 
	goff£t
,

1727 
bfd_size_ty≥
 
	gcou¡
);

1729 
bfd_boﬁón
 
	gbfd_mÆloc_™d_gë_£˘i⁄


1730 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£˘i⁄
, 
bfd_byã
 **
	gbuf
);

1732 
bfd_boﬁón
 
	gbfd_c›y_¥iv©e_£˘i⁄_d©a


1733 (
bfd
 *
	gibfd
, 
a£˘i⁄
 *
	gi£c
, bfd *
	gobfd
,á£˘i⁄ *
	go£c
);

1735 
	#bfd_c›y_¥iv©e_£˘i⁄_d©a
(
ibfd
, 
i£˘i⁄
, 
obfd
, 
o£˘i⁄
) \

1736 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_£˘i⁄_d©a
, \

1737 (
ibfd
, 
i£˘i⁄
, 
obfd
, 
o£˘i⁄
))

	)

1738 
bfd_boﬁón
 
bfd_gíîic_is_group_£˘i⁄
 (
bfd
 *, c⁄° 
a£˘i⁄
 *
£c
);

1740 
bfd_boﬁón
 
bfd_gíîic_disˇrd_group
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
group
);

1743 
	ebfd_¨chôe˘uª


1745 
	gbfd_¨ch_unknown
,

1746 
	gbfd_¨ch_obscuª
,

1747 
	gbfd_¨ch_m68k
,

1748 
	#bfd_mach_m68000
 1

	)

1749 
	#bfd_mach_m68008
 2

	)

1750 
	#bfd_mach_m68010
 3

	)

1751 
	#bfd_mach_m68020
 4

	)

1752 
	#bfd_mach_m68030
 5

	)

1753 
	#bfd_mach_m68040
 6

	)

1754 
	#bfd_mach_m68060
 7

	)

1755 
	#bfd_mach_˝u32
 8

	)

1756 
	#bfd_mach_fido
 9

	)

1757 
	#bfd_mach_mcf_iß_a_nodiv
 10

	)

1758 
	#bfd_mach_mcf_iß_a
 11

	)

1759 
	#bfd_mach_mcf_iß_a_mac
 12

	)

1760 
	#bfd_mach_mcf_iß_a_emac
 13

	)

1761 
	#bfd_mach_mcf_iß_≠lus
 14

	)

1762 
	#bfd_mach_mcf_iß_≠lus_mac
 15

	)

1763 
	#bfd_mach_mcf_iß_≠lus_emac
 16

	)

1764 
	#bfd_mach_mcf_iß_b_nou•
 17

	)

1765 
	#bfd_mach_mcf_iß_b_nou•_mac
 18

	)

1766 
	#bfd_mach_mcf_iß_b_nou•_emac
 19

	)

1767 
	#bfd_mach_mcf_iß_b
 20

	)

1768 
	#bfd_mach_mcf_iß_b_mac
 21

	)

1769 
	#bfd_mach_mcf_iß_b_emac
 22

	)

1770 
	#bfd_mach_mcf_iß_b_Êﬂt
 23

	)

1771 
	#bfd_mach_mcf_iß_b_Êﬂt_mac
 24

	)

1772 
	#bfd_mach_mcf_iß_b_Êﬂt_emac
 25

	)

1773 
	#bfd_mach_mcf_iß_c
 26

	)

1774 
	#bfd_mach_mcf_iß_c_mac
 27

	)

1775 
	#bfd_mach_mcf_iß_c_emac
 28

	)

1776 
	#bfd_mach_mcf_iß_c_nodiv
 29

	)

1777 
	#bfd_mach_mcf_iß_c_nodiv_mac
 30

	)

1778 
	#bfd_mach_mcf_iß_c_nodiv_emac
 31

	)

1779 
	gbfd_¨ch_vax
,

1780 
	gbfd_¨ch_i960
,

1789 
	#bfd_mach_i960_c‹e
 1

	)

1790 
	#bfd_mach_i960_ka_ß
 2

	)

1791 
	#bfd_mach_i960_kb_sb
 3

	)

1792 
	#bfd_mach_i960_mc
 4

	)

1793 
	#bfd_mach_i960_xa
 5

	)

1794 
	#bfd_mach_i960_ˇ
 6

	)

1795 
	#bfd_mach_i960_jx
 7

	)

1796 
	#bfd_mach_i960_hx
 8

	)

1798 
	gbfd_¨ch_‹32
,

1800 
	gbfd_¨ch_•¨c
,

1801 
	#bfd_mach_•¨c
 1

	)

1803 
	#bfd_mach_•¨c_•¨˛ë
 2

	)

1804 
	#bfd_mach_•¨c_•¨˛ôe
 3

	)

1805 
	#bfd_mach_•¨c_v8∂us
 4

	)

1806 
	#bfd_mach_•¨c_v8∂uß
 5

	)

1807 
	#bfd_mach_•¨c_•¨˛ôe_À
 6

	)

1808 
	#bfd_mach_•¨c_v9
 7

	)

1809 
	#bfd_mach_•¨c_v9a
 8

	)

1810 
	#bfd_mach_•¨c_v8∂usb
 9

	)

1811 
	#bfd_mach_•¨c_v9b
 10

	)

1813 
	#bfd_mach_•¨c_v9_p
(
mach
) \

1814 ((
mach
Ë>
bfd_mach_•¨c_v8∂us
 && (machË<
bfd_mach_•¨c_v9b
 \

1815 && (
mach
Ë!
bfd_mach_•¨c_•¨˛ôe_À
)

	)

1817 
	#bfd_mach_•¨c_64bô_p
(
mach
) \

1818 ((
mach
Ë>
bfd_mach_•¨c_v9
 && (machË!
bfd_mach_•¨c_v8∂usb
)

	)

1819 
	gbfd_¨ch_•u
,

1820 
	#bfd_mach_•u
 256

	)

1821 
	gbfd_¨ch_mùs
,

1822 
	#bfd_mach_mùs3000
 3000

	)

1823 
	#bfd_mach_mùs3900
 3900

	)

1824 
	#bfd_mach_mùs4000
 4000

	)

1825 
	#bfd_mach_mùs4010
 4010

	)

1826 
	#bfd_mach_mùs4100
 4100

	)

1827 
	#bfd_mach_mùs4111
 4111

	)

1828 
	#bfd_mach_mùs4120
 4120

	)

1829 
	#bfd_mach_mùs4300
 4300

	)

1830 
	#bfd_mach_mùs4400
 4400

	)

1831 
	#bfd_mach_mùs4600
 4600

	)

1832 
	#bfd_mach_mùs4650
 4650

	)

1833 
	#bfd_mach_mùs5000
 5000

	)

1834 
	#bfd_mach_mùs5400
 5400

	)

1835 
	#bfd_mach_mùs5500
 5500

	)

1836 
	#bfd_mach_mùs6000
 6000

	)

1837 
	#bfd_mach_mùs7000
 7000

	)

1838 
	#bfd_mach_mùs8000
 8000

	)

1839 
	#bfd_mach_mùs9000
 9000

	)

1840 
	#bfd_mach_mùs10000
 10000

	)

1841 
	#bfd_mach_mùs12000
 12000

	)

1842 
	#bfd_mach_mùs14000
 14000

	)

1843 
	#bfd_mach_mùs16000
 16000

	)

1844 
	#bfd_mach_mùs16
 16

	)

1845 
	#bfd_mach_mùs5
 5

	)

1846 
	#bfd_mach_mùs_lo⁄gs⁄_2e
 3001

	)

1847 
	#bfd_mach_mùs_lo⁄gs⁄_2f
 3002

	)

1848 
	#bfd_mach_mùs_sb1
 12310201

	)

1849 
	#bfd_mach_mùs_o˘e⁄
 6501

	)

1850 
	#bfd_mach_mùs_xÃ
 887682

	)

1851 
	#bfd_mach_mùsiß32
 32

	)

1852 
	#bfd_mach_mùsiß32r2
 33

	)

1853 
	#bfd_mach_mùsiß64
 64

	)

1854 
	#bfd_mach_mùsiß64r2
 65

	)

1855 
	gbfd_¨ch_i386
,

1856 
	#bfd_mach_i386_i386
 1

	)

1857 
	#bfd_mach_i386_i8086
 2

	)

1858 
	#bfd_mach_i386_i386_öãl_sy¡ax
 3

	)

1859 
	#bfd_mach_x86_64
 64

	)

1860 
	#bfd_mach_x86_64_öãl_sy¡ax
 65

	)

1861 
	gbfd_¨ch_l1om
,

1862 
	#bfd_mach_l1om
 66

	)

1863 
	#bfd_mach_l1om_öãl_sy¡ax
 67

	)

1864 
	gbfd_¨ch_we32k
,

1865 
	gbfd_¨ch_èh€
,

1866 
	gbfd_¨ch_i860
,

1867 
	gbfd_¨ch_i370
,

1868 
	gbfd_¨ch_romp
,

1869 
	gbfd_¨ch_c⁄vex
,

1870 
	gbfd_¨ch_m88k
,

1871 
	gbfd_¨ch_m98k
,

1872 
	gbfd_¨ch_pyømid
,

1873 
	gbfd_¨ch_h8300
,

1874 
	#bfd_mach_h8300
 1

	)

1875 
	#bfd_mach_h8300h
 2

	)

1876 
	#bfd_mach_h8300s
 3

	)

1877 
	#bfd_mach_h8300hn
 4

	)

1878 
	#bfd_mach_h8300¢
 5

	)

1879 
	#bfd_mach_h8300sx
 6

	)

1880 
	#bfd_mach_h8300sxn
 7

	)

1881 
	gbfd_¨ch_pdp11
,

1882 
	gbfd_¨ch_∂ugö
,

1883 
	gbfd_¨ch_powîpc
,

1884 
	#bfd_mach_µc
 32

	)

1885 
	#bfd_mach_µc64
 64

	)

1886 
	#bfd_mach_µc_403
 403

	)

1887 
	#bfd_mach_µc_403gc
 4030

	)

1888 
	#bfd_mach_µc_405
 405

	)

1889 
	#bfd_mach_µc_505
 505

	)

1890 
	#bfd_mach_µc_601
 601

	)

1891 
	#bfd_mach_µc_602
 602

	)

1892 
	#bfd_mach_µc_603
 603

	)

1893 
	#bfd_mach_µc_ec603e
 6031

	)

1894 
	#bfd_mach_µc_604
 604

	)

1895 
	#bfd_mach_µc_620
 620

	)

1896 
	#bfd_mach_µc_630
 630

	)

1897 
	#bfd_mach_µc_750
 750

	)

1898 
	#bfd_mach_µc_860
 860

	)

1899 
	#bfd_mach_µc_a35
 35

	)

1900 
	#bfd_mach_µc_rs64ii
 642

	)

1901 
	#bfd_mach_µc_rs64iii
 643

	)

1902 
	#bfd_mach_µc_7400
 7400

	)

1903 
	#bfd_mach_µc_e500
 500

	)

1904 
	#bfd_mach_µc_e500mc
 5001

	)

1905 
	gbfd_¨ch_rs6000
,

1906 
	#bfd_mach_rs6k
 6000

	)

1907 
	#bfd_mach_rs6k_rs1
 6001

	)

1908 
	#bfd_mach_rs6k_rsc
 6003

	)

1909 
	#bfd_mach_rs6k_rs2
 6002

	)

1910 
	gbfd_¨ch_hµa
,

1911 
	#bfd_mach_hµa10
 10

	)

1912 
	#bfd_mach_hµa11
 11

	)

1913 
	#bfd_mach_hµa20
 20

	)

1914 
	#bfd_mach_hµa20w
 25

	)

1915 
	gbfd_¨ch_d10v
,

1916 
	#bfd_mach_d10v
 1

	)

1917 
	#bfd_mach_d10v_ts2
 2

	)

1918 
	#bfd_mach_d10v_ts3
 3

	)

1919 
	gbfd_¨ch_d30v
,

1920 
	gbfd_¨ch_dlx
,

1921 
	gbfd_¨ch_m68hc11
,

1922 
	gbfd_¨ch_m68hc12
,

1923 
	#bfd_mach_m6812_deÁu…
 0

	)

1924 
	#bfd_mach_m6812
 1

	)

1925 
	#bfd_mach_m6812s
 2

	)

1926 
	gbfd_¨ch_z8k
,

1927 
	#bfd_mach_z8001
 1

	)

1928 
	#bfd_mach_z8002
 2

	)

1929 
	gbfd_¨ch_h8500
,

1930 
	gbfd_¨ch_sh
,

1931 
	#bfd_mach_sh
 1

	)

1932 
	#bfd_mach_sh2
 0x20

	)

1933 
	#bfd_mach_sh_d•
 0x2d

	)

1934 
	#bfd_mach_sh2a
 0x2a

	)

1935 
	#bfd_mach_sh2a_noÂu
 0x2b

	)

1936 
	#bfd_mach_sh2a_noÂu_‹_sh4_nommu_noÂu
 0x2a1

	)

1937 
	#bfd_mach_sh2a_noÂu_‹_sh3_nommu
 0x2a2

	)

1938 
	#bfd_mach_sh2a_‹_sh4
 0x2a3

	)

1939 
	#bfd_mach_sh2a_‹_sh3e
 0x2a4

	)

1940 
	#bfd_mach_sh2e
 0x2e

	)

1941 
	#bfd_mach_sh3
 0x30

	)

1942 
	#bfd_mach_sh3_nommu
 0x31

	)

1943 
	#bfd_mach_sh3_d•
 0x3d

	)

1944 
	#bfd_mach_sh3e
 0x3e

	)

1945 
	#bfd_mach_sh4
 0x40

	)

1946 
	#bfd_mach_sh4_noÂu
 0x41

	)

1947 
	#bfd_mach_sh4_nommu_noÂu
 0x42

	)

1948 
	#bfd_mach_sh4a
 0x4a

	)

1949 
	#bfd_mach_sh4a_noÂu
 0x4b

	)

1950 
	#bfd_mach_sh4Æ_d•
 0x4d

	)

1951 
	#bfd_mach_sh5
 0x50

	)

1952 
	gbfd_¨ch_Æpha
,

1953 
	#bfd_mach_Æpha_ev4
 0x10

	)

1954 
	#bfd_mach_Æpha_ev5
 0x20

	)

1955 
	#bfd_mach_Æpha_ev6
 0x30

	)

1956 
	gbfd_¨ch_¨m
,

1957 
	#bfd_mach_¨m_unknown
 0

	)

1958 
	#bfd_mach_¨m_2
 1

	)

1959 
	#bfd_mach_¨m_2a
 2

	)

1960 
	#bfd_mach_¨m_3
 3

	)

1961 
	#bfd_mach_¨m_3M
 4

	)

1962 
	#bfd_mach_¨m_4
 5

	)

1963 
	#bfd_mach_¨m_4T
 6

	)

1964 
	#bfd_mach_¨m_5
 7

	)

1965 
	#bfd_mach_¨m_5T
 8

	)

1966 
	#bfd_mach_¨m_5TE
 9

	)

1967 
	#bfd_mach_¨m_XSˇÀ
 10

	)

1968 
	#bfd_mach_¨m_ï9312
 11

	)

1969 
	#bfd_mach_¨m_iWMMXt
 12

	)

1970 
	#bfd_mach_¨m_iWMMXt2
 13

	)

1971 
	gbfd_¨ch_ns32k
,

1972 
	gbfd_¨ch_w65
,

1973 
	gbfd_¨ch_tic30
,

1974 
	gbfd_¨ch_tic4x
,

1975 
	#bfd_mach_tic3x
 30

	)

1976 
	#bfd_mach_tic4x
 40

	)

1977 
	gbfd_¨ch_tic54x
,

1978 
	gbfd_¨ch_tic80
,

1979 
	gbfd_¨ch_v850
,

1980 
	#bfd_mach_v850
 1

	)

1981 
	#bfd_mach_v850e
 'E'

	)

1982 
	#bfd_mach_v850e1
 '1'

	)

1983 
	gbfd_¨ch_¨c
,

1984 
	#bfd_mach_¨c_5
 5

	)

1985 
	#bfd_mach_¨c_6
 6

	)

1986 
	#bfd_mach_¨c_7
 7

	)

1987 
	#bfd_mach_¨c_8
 8

	)

1988 
	gbfd_¨ch_m32c
,

1989 
	#bfd_mach_m16c
 0x75

	)

1990 
	#bfd_mach_m32c
 0x78

	)

1991 
	gbfd_¨ch_m32r
,

1992 
	#bfd_mach_m32r
 1

	)

1993 
	#bfd_mach_m32rx
 'x'

	)

1994 
	#bfd_mach_m32r2
 '2'

	)

1995 
	gbfd_¨ch_mn10200
,

1996 
	gbfd_¨ch_mn10300
,

1997 
	#bfd_mach_mn10300
 300

	)

1998 
	#bfd_mach_am33
 330

	)

1999 
	#bfd_mach_am33_2
 332

	)

2000 
	gbfd_¨ch_‰30
,

2001 
	#bfd_mach_‰30
 0x46523330

	)

2002 
	gbfd_¨ch_‰v
,

2003 
	#bfd_mach_‰v
 1

	)

2004 
	#bfd_mach_‰vsim∂e
 2

	)

2005 
	#bfd_mach_‰300
 300

	)

2006 
	#bfd_mach_‰400
 400

	)

2007 
	#bfd_mach_‰450
 450

	)

2008 
	#bfd_mach_‰vtomˇt
 499

	)

2009 
	#bfd_mach_‰500
 500

	)

2010 
	#bfd_mach_‰550
 550

	)

2011 
	gbfd_¨ch_moxõ
,

2012 
	#bfd_mach_moxõ
 1

	)

2013 
	gbfd_¨ch_mc‹e
,

2014 
	gbfd_¨ch_mï
,

2015 
	#bfd_mach_mï
 1

	)

2016 
	#bfd_mach_mï_h1
 0x6831

	)

2017 
	#bfd_mach_mï_c5
 0x6335

	)

2018 
	gbfd_¨ch_ü64
,

2019 
	#bfd_mach_ü64_ñf64
 64

	)

2020 
	#bfd_mach_ü64_ñf32
 32

	)

2021 
	gbfd_¨ch_ù2k
,

2022 
	#bfd_mach_ù2022
 1

	)

2023 
	#bfd_mach_ù2022ext
 2

	)

2024 
	gbfd_¨ch_iq2000
,

2025 
	#bfd_mach_iq2000
 1

	)

2026 
	#bfd_mach_iq10
 2

	)

2027 
	gbfd_¨ch_mt
,

2028 
	#bfd_mach_ms1
 1

	)

2029 
	#bfd_mach_mrisc2
 2

	)

2030 
	#bfd_mach_ms2
 3

	)

2031 
	gbfd_¨ch_pj
,

2032 
	gbfd_¨ch_avr
,

2033 
	#bfd_mach_avr1
 1

	)

2034 
	#bfd_mach_avr2
 2

	)

2035 
	#bfd_mach_avr25
 25

	)

2036 
	#bfd_mach_avr3
 3

	)

2037 
	#bfd_mach_avr31
 31

	)

2038 
	#bfd_mach_avr35
 35

	)

2039 
	#bfd_mach_avr4
 4

	)

2040 
	#bfd_mach_avr5
 5

	)

2041 
	#bfd_mach_avr51
 51

	)

2042 
	#bfd_mach_avr6
 6

	)

2043 
	gbfd_¨ch_bfö
,

2044 
	#bfd_mach_bfö
 1

	)

2045 
	gbfd_¨ch_¸16
,

2046 
	#bfd_mach_¸16
 1

	)

2047 
	gbfd_¨ch_¸16c
,

2048 
	#bfd_mach_¸16c
 1

	)

2049 
	gbfd_¨ch_¸x
,

2050 
	#bfd_mach_¸x
 1

	)

2051 
	gbfd_¨ch_¸is
,

2052 
	#bfd_mach_¸is_v0_v10
 255

	)

2053 
	#bfd_mach_¸is_v32
 32

	)

2054 
	#bfd_mach_¸is_v10_v32
 1032

	)

2055 
	gbfd_¨ch_rx
,

2056 
	#bfd_mach_rx
 0x75

	)

2057 
	gbfd_¨ch_s390
,

2058 
	#bfd_mach_s390_31
 31

	)

2059 
	#bfd_mach_s390_64
 64

	)

2060 
	gbfd_¨ch_sc‹e
,

2061 
	#bfd_mach_sc‹e3
 3

	)

2062 
	#bfd_mach_sc‹e7
 7

	)

2063 
	gbfd_¨ch_›írisc
,

2064 
	gbfd_¨ch_mmix
,

2065 
	gbfd_¨ch_x°‹my16
,

2066 
	#bfd_mach_x°‹my16
 1

	)

2067 
	gbfd_¨ch_m•430
,

2068 
	#bfd_mach_m•11
 11

	)

2069 
	#bfd_mach_m•110
 110

	)

2070 
	#bfd_mach_m•12
 12

	)

2071 
	#bfd_mach_m•13
 13

	)

2072 
	#bfd_mach_m•14
 14

	)

2073 
	#bfd_mach_m•15
 15

	)

2074 
	#bfd_mach_m•16
 16

	)

2075 
	#bfd_mach_m•21
 21

	)

2076 
	#bfd_mach_m•31
 31

	)

2077 
	#bfd_mach_m•32
 32

	)

2078 
	#bfd_mach_m•33
 33

	)

2079 
	#bfd_mach_m•41
 41

	)

2080 
	#bfd_mach_m•42
 42

	)

2081 
	#bfd_mach_m•43
 43

	)

2082 
	#bfd_mach_m•44
 44

	)

2083 
	gbfd_¨ch_xc16x
,

2084 
	#bfd_mach_xc16x
 1

	)

2085 
	#bfd_mach_xc16xl
 2

	)

2086 
	#bfd_mach_xc16xs
 3

	)

2087 
	gbfd_¨ch_xãnß
,

2088 
	#bfd_mach_xãnß
 1

	)

2089 
	gbfd_¨ch_maxq
,

2090 
	#bfd_mach_maxq10
 10

	)

2091 
	#bfd_mach_maxq20
 20

	)

2092 
	gbfd_¨ch_z80
,

2093 
	#bfd_mach_z80°ri˘
 1

	)

2094 
	#bfd_mach_z80
 3

	)

2095 
	#bfd_mach_z80fuŒ
 7

	)

2096 
	#bfd_mach_r800
 11

	)

2097 
	gbfd_¨ch_lm32
,

2098 
	#bfd_mach_lm32
 1

	)

2099 
	gbfd_¨ch_mi¸obœze
,

2100 
	gbfd_¨ch_œ°


2103 
	sbfd_¨ch_öfo


2105 
	gbôs_≥r_w‹d
;

2106 
	gbôs_≥r_addªss
;

2107 
	gbôs_≥r_byã
;

2108 
bfd_¨chôe˘uª
 
	g¨ch
;

2109 
	gmach
;

2110 c⁄° *
	g¨ch_«me
;

2111 c⁄° *
	g¥öèbÀ_«me
;

2112 
	g£˘i⁄_Æign_powî
;

2116 
bfd_boﬁón
 
	gthe_deÁu…
;

2117 c⁄° 
	gbfd_¨ch_öfo
 * (*
	gcom∑tibÀ
)

2118 (c⁄° 
bfd_¨ch_öfo
 *
	ga
, c⁄° bfd_¨ch_öfÿ*
	gb
);

2120 
bfd_boﬁón
 (*
sˇn
Ë(c⁄° 
	gbfd_¨ch_öfo
 *, const *);

2122 c⁄° 
bfd_¨ch_öfo
 *
	g√xt
;

2124 
	tbfd_¨ch_öfo_ty≥
;

2126 c⁄° *
bfd_¥öèbÀ_«me
 (
bfd
 *
abfd
);

2128 c⁄° 
bfd_¨ch_öfo_ty≥
 *
bfd_sˇn_¨ch
 (c⁄° *
°rög
);

2130 c⁄° **
bfd_¨ch_li°
 ();

2132 c⁄° 
bfd_¨ch_öfo_ty≥
 *
	gbfd_¨ch_gë_com∑tibÀ


2133 (c⁄° 
bfd
 *
	gabfd
, c⁄° bfd *
	gbbfd
, 
bfd_boﬁón
 
	gac˚±_unknowns
);

2135 
bfd_£t_¨ch_öfo
 (
bfd
 *
abfd
, c⁄° 
bfd_¨ch_öfo_ty≥
 *
¨g
);

2137 
bfd_¨chôe˘uª
 
bfd_gë_¨ch
 (
bfd
 *
abfd
);

2139 
bfd_gë_mach
 (
bfd
 *
abfd
);

2141 
bfd_¨ch_bôs_≥r_byã
 (
bfd
 *
abfd
);

2143 
bfd_¨ch_bôs_≥r_addªss
 (
bfd
 *
abfd
);

2145 c⁄° 
bfd_¨ch_öfo_ty≥
 *
bfd_gë_¨ch_öfo
 (
bfd
 *
abfd
);

2147 c⁄° 
bfd_¨ch_öfo_ty≥
 *
	gbfd_lookup_¨ch


2148 (
bfd_¨chôe˘uª
 
	g¨ch
, 
	gmachöe
);

2150 c⁄° *
	gbfd_¥öèbÀ_¨ch_mach


2151 (
bfd_¨chôe˘uª
 
	g¨ch
, 
	gmachöe
);

2153 
bfd_o˘ës_≥r_byã
 (
bfd
 *
abfd
);

2155 
	gbfd_¨ch_mach_o˘ës_≥r_byã


2156 (
bfd_¨chôe˘uª
 
	g¨ch
, 
	gmachöe
);

2159 
	ebfd_ªloc_°©us


2162 
	gbfd_ªloc_ok
,

2165 
	gbfd_ªloc_ovîÊow
,

2168 
	gbfd_ªloc_outo‰™ge
,

2171 
	gbfd_ªloc_c⁄töue
,

2174 
	gbfd_ªloc_nŸsuµ‹ãd
,

2177 
	gbfd_ªloc_Ÿhî
,

2180 
	gbfd_ªloc_undeföed
,

2186 
	gbfd_ªloc_d™gîous


2188 
	tbfd_ªloc_°©us_ty≥
;

2191 
	sªloc_ˇche_íåy


2194 
bfd_symbﬁ
 **
	gsym_±r_±r
;

2197 
bfd_size_ty≥
 
	gaddªss
;

2200 
bfd_vma
 
	gaddíd
;

2203 
ªloc_howto_ty≥
 *
	ghowto
;

2206 
	t¨ñít
;

2208 
	ecom∂aö_ovîÊow


2211 
	gcom∂aö_ovîÊow_d⁄t
,

2216 
	gcom∂aö_ovîÊow_bôfõld
,

2220 
	gcom∂aö_ovîÊow_sig√d
,

2224 
	gcom∂aö_ovîÊow_unsig√d


2227 
	sªloc_howto_°ru˘


2235 
	gty≥
;

2239 
	grightshi·
;

2244 
	gsize
;

2248 
	gbôsize
;

2254 
bfd_boﬁón
 
	gpc_ªœtive
;

2258 
	gbôpos
;

2262 
com∂aö_ovîÊow
 
	gcom∂aö_⁄_ovîÊow
;

2268 
bfd_ªloc_°©us_ty≥
 (*
•ecül_fun˘i⁄
)

2269 (
	gbfd
 *, 
	g¨ñít
 *, 
	gbfd_symbﬁ
 *, *, 
	ga£˘i⁄
 *,

2270 
	gbfd
 *, **);

2273 *
	g«me
;

2290 
bfd_boﬁón
 
	g∑πül_ö∂a˚
;

2300 
bfd_vma
 
	g§c_mask
;

2304 
bfd_vma
 
	gd°_mask
;

2312 
bfd_boﬁón
 
	gp¸ñ_off£t
;

2315 
	#HOWTO
(
C
, 
R
, 
S
, 
B
, 
P
, 
BI
, 
O
, 
SF
, 
NAME
, 
INPLACE
, 
MASKSRC
, 
MASKDST
, 
PC
) \

2316 { (Ë
C
, 
R
, 
S
, 
B
, 
P
, 
BI
, 
O
, 
SF
, 
NAME
, 
INPLACE
, 
MASKSRC
, 
MASKDST
, 
PC
 }

	)

2317 
	#NEWHOWTO
(
FUNCTION
, 
NAME
, 
SIZE
, 
REL
, 
IN
) \

2318 
	`HOWTO
 (0, 0, 
SIZE
, 0, 
REL
, 0, 
com∂aö_ovîÊow_d⁄t
, 
FUNCTION
, \

2319 
NAME
, 
FALSE
, 0, 0, 
IN
)

	)

2321 
	#EMPTY_HOWTO
(
C
) \

2322 
	`HOWTO
 ((
C
), 0, 0, 0, 
FALSE
, 0, 
com∂aö_ovîÊow_d⁄t
, 
NULL
, \

2323 
NULL
, 
FALSE
, 0, 0, FALSE)

	)

2325 
	#HOWTO_PREPARE
(
ªloˇti⁄
, 
symbﬁ
) \

2327 i‡(
symbﬁ
 !
NULL
) \

2329 i‡(
	`bfd_is_com_£˘i⁄
 (
symbﬁ
->
£˘i⁄
)) \

2331 
ªloˇti⁄
 = 0; \

2335 
ªloˇti⁄
 = 
symbﬁ
->
vÆue
; \

2338 }

	)

2340 
bfd_gë_ªloc_size
 (
ªloc_howto_ty≥
 *);

2342 
	sªÀ¡_chaö


2344 
¨ñít
 
	gªÀ¡
;

2345 
ªÀ¡_chaö
 *
	g√xt
;

2347 
	t¨ñít_chaö
;

2349 
bfd_ªloc_°©us_ty≥
 
	gbfd_check_ovîÊow


2350 (
com∂aö_ovîÊow
 
	ghow
,

2351 
	gbôsize
,

2352 
	grightshi·
,

2353 
	gaddrsize
,

2354 
bfd_vma
 
	gªloˇti⁄
);

2356 
bfd_ªloc_°©us_ty≥
 
	gbfd_≥rf‹m_ªloˇti⁄


2357 (
bfd
 *
	gabfd
,

2358 
¨ñít
 *
	gªloc_íåy
,

2359 *
	gd©a
,

2360 
a£˘i⁄
 *
	göput_£˘i⁄
,

2361 
bfd
 *
	gouçut_bfd
,

2362 **
	gîr‹_mesßge
);

2364 
bfd_ªloc_°©us_ty≥
 
	gbfd_ö°Æl_ªloˇti⁄


2365 (
bfd
 *
	gabfd
,

2366 
¨ñít
 *
	gªloc_íåy
,

2367 *
	gd©a
, 
bfd_vma
 
	gd©a_°¨t
,

2368 
a£˘i⁄
 *
	göput_£˘i⁄
,

2369 **
	gîr‹_mesßge
);

2371 
	ebfd_ªloc_code_ªÆ
 {

2372 
	g_dummy_fú°_bfd_ªloc_code_ªÆ
,

2376 
	gBFD_RELOC_64
,

2377 
	gBFD_RELOC_32
,

2378 
	gBFD_RELOC_26
,

2379 
	gBFD_RELOC_24
,

2380 
	gBFD_RELOC_16
,

2381 
	gBFD_RELOC_14
,

2382 
	gBFD_RELOC_8
,

2389 
	gBFD_RELOC_64_PCREL
,

2390 
	gBFD_RELOC_32_PCREL
,

2391 
	gBFD_RELOC_24_PCREL
,

2392 
	gBFD_RELOC_16_PCREL
,

2393 
	gBFD_RELOC_12_PCREL
,

2394 
	gBFD_RELOC_8_PCREL
,

2397 
	gBFD_RELOC_32_SECREL
,

2400 
	gBFD_RELOC_32_GOT_PCREL
,

2401 
	gBFD_RELOC_16_GOT_PCREL
,

2402 
	gBFD_RELOC_8_GOT_PCREL
,

2403 
	gBFD_RELOC_32_GOTOFF
,

2404 
	gBFD_RELOC_16_GOTOFF
,

2405 
	gBFD_RELOC_LO16_GOTOFF
,

2406 
	gBFD_RELOC_HI16_GOTOFF
,

2407 
	gBFD_RELOC_HI16_S_GOTOFF
,

2408 
	gBFD_RELOC_8_GOTOFF
,

2409 
	gBFD_RELOC_64_PLT_PCREL
,

2410 
	gBFD_RELOC_32_PLT_PCREL
,

2411 
	gBFD_RELOC_24_PLT_PCREL
,

2412 
	gBFD_RELOC_16_PLT_PCREL
,

2413 
	gBFD_RELOC_8_PLT_PCREL
,

2414 
	gBFD_RELOC_64_PLTOFF
,

2415 
	gBFD_RELOC_32_PLTOFF
,

2416 
	gBFD_RELOC_16_PLTOFF
,

2417 
	gBFD_RELOC_LO16_PLTOFF
,

2418 
	gBFD_RELOC_HI16_PLTOFF
,

2419 
	gBFD_RELOC_HI16_S_PLTOFF
,

2420 
	gBFD_RELOC_8_PLTOFF
,

2423 
	gBFD_RELOC_68K_GLOB_DAT
,

2424 
	gBFD_RELOC_68K_JMP_SLOT
,

2425 
	gBFD_RELOC_68K_RELATIVE
,

2426 
	gBFD_RELOC_68K_TLS_GD32
,

2427 
	gBFD_RELOC_68K_TLS_GD16
,

2428 
	gBFD_RELOC_68K_TLS_GD8
,

2429 
	gBFD_RELOC_68K_TLS_LDM32
,

2430 
	gBFD_RELOC_68K_TLS_LDM16
,

2431 
	gBFD_RELOC_68K_TLS_LDM8
,

2432 
	gBFD_RELOC_68K_TLS_LDO32
,

2433 
	gBFD_RELOC_68K_TLS_LDO16
,

2434 
	gBFD_RELOC_68K_TLS_LDO8
,

2435 
	gBFD_RELOC_68K_TLS_IE32
,

2436 
	gBFD_RELOC_68K_TLS_IE16
,

2437 
	gBFD_RELOC_68K_TLS_IE8
,

2438 
	gBFD_RELOC_68K_TLS_LE32
,

2439 
	gBFD_RELOC_68K_TLS_LE16
,

2440 
	gBFD_RELOC_68K_TLS_LE8
,

2443 
	gBFD_RELOC_32_BASEREL
,

2444 
	gBFD_RELOC_16_BASEREL
,

2445 
	gBFD_RELOC_LO16_BASEREL
,

2446 
	gBFD_RELOC_HI16_BASEREL
,

2447 
	gBFD_RELOC_HI16_S_BASEREL
,

2448 
	gBFD_RELOC_8_BASEREL
,

2449 
	gBFD_RELOC_RVA
,

2452 
	gBFD_RELOC_8_FF¬
,

2460 
	gBFD_RELOC_32_PCREL_S2
,

2461 
	gBFD_RELOC_16_PCREL_S2
,

2462 
	gBFD_RELOC_23_PCREL_S2
,

2466 
	gBFD_RELOC_HI22
,

2467 
	gBFD_RELOC_LO10
,

2473 
	gBFD_RELOC_GPREL16
,

2474 
	gBFD_RELOC_GPREL32
,

2477 
	gBFD_RELOC_I960_CALLJ
,

2481 
	gBFD_RELOC_NONE
,

2482 
	gBFD_RELOC_SPARC_WDISP22
,

2483 
	gBFD_RELOC_SPARC22
,

2484 
	gBFD_RELOC_SPARC13
,

2485 
	gBFD_RELOC_SPARC_GOT10
,

2486 
	gBFD_RELOC_SPARC_GOT13
,

2487 
	gBFD_RELOC_SPARC_GOT22
,

2488 
	gBFD_RELOC_SPARC_PC10
,

2489 
	gBFD_RELOC_SPARC_PC22
,

2490 
	gBFD_RELOC_SPARC_WPLT30
,

2491 
	gBFD_RELOC_SPARC_COPY
,

2492 
	gBFD_RELOC_SPARC_GLOB_DAT
,

2493 
	gBFD_RELOC_SPARC_JMP_SLOT
,

2494 
	gBFD_RELOC_SPARC_RELATIVE
,

2495 
	gBFD_RELOC_SPARC_UA16
,

2496 
	gBFD_RELOC_SPARC_UA32
,

2497 
	gBFD_RELOC_SPARC_UA64
,

2498 
	gBFD_RELOC_SPARC_GOTDATA_HIX22
,

2499 
	gBFD_RELOC_SPARC_GOTDATA_LOX10
,

2500 
	gBFD_RELOC_SPARC_GOTDATA_OP_HIX22
,

2501 
	gBFD_RELOC_SPARC_GOTDATA_OP_LOX10
,

2502 
	gBFD_RELOC_SPARC_GOTDATA_OP
,

2505 
	gBFD_RELOC_SPARC_BASE13
,

2506 
	gBFD_RELOC_SPARC_BASE22
,

2509 
	#BFD_RELOC_SPARC_64
 
BFD_RELOC_64


	)

2510 
	gBFD_RELOC_SPARC_10
,

2511 
	gBFD_RELOC_SPARC_11
,

2512 
	gBFD_RELOC_SPARC_OLO10
,

2513 
	gBFD_RELOC_SPARC_HH22
,

2514 
	gBFD_RELOC_SPARC_HM10
,

2515 
	gBFD_RELOC_SPARC_LM22
,

2516 
	gBFD_RELOC_SPARC_PC_HH22
,

2517 
	gBFD_RELOC_SPARC_PC_HM10
,

2518 
	gBFD_RELOC_SPARC_PC_LM22
,

2519 
	gBFD_RELOC_SPARC_WDISP16
,

2520 
	gBFD_RELOC_SPARC_WDISP19
,

2521 
	gBFD_RELOC_SPARC_7
,

2522 
	gBFD_RELOC_SPARC_6
,

2523 
	gBFD_RELOC_SPARC_5
,

2524 
	#BFD_RELOC_SPARC_DISP64
 
BFD_RELOC_64_PCREL


	)

2525 
	gBFD_RELOC_SPARC_PLT32
,

2526 
	gBFD_RELOC_SPARC_PLT64
,

2527 
	gBFD_RELOC_SPARC_HIX22
,

2528 
	gBFD_RELOC_SPARC_LOX10
,

2529 
	gBFD_RELOC_SPARC_H44
,

2530 
	gBFD_RELOC_SPARC_M44
,

2531 
	gBFD_RELOC_SPARC_L44
,

2532 
	gBFD_RELOC_SPARC_REGISTER
,

2535 
	gBFD_RELOC_SPARC_REV32
,

2538 
	gBFD_RELOC_SPARC_TLS_GD_HI22
,

2539 
	gBFD_RELOC_SPARC_TLS_GD_LO10
,

2540 
	gBFD_RELOC_SPARC_TLS_GD_ADD
,

2541 
	gBFD_RELOC_SPARC_TLS_GD_CALL
,

2542 
	gBFD_RELOC_SPARC_TLS_LDM_HI22
,

2543 
	gBFD_RELOC_SPARC_TLS_LDM_LO10
,

2544 
	gBFD_RELOC_SPARC_TLS_LDM_ADD
,

2545 
	gBFD_RELOC_SPARC_TLS_LDM_CALL
,

2546 
	gBFD_RELOC_SPARC_TLS_LDO_HIX22
,

2547 
	gBFD_RELOC_SPARC_TLS_LDO_LOX10
,

2548 
	gBFD_RELOC_SPARC_TLS_LDO_ADD
,

2549 
	gBFD_RELOC_SPARC_TLS_IE_HI22
,

2550 
	gBFD_RELOC_SPARC_TLS_IE_LO10
,

2551 
	gBFD_RELOC_SPARC_TLS_IE_LD
,

2552 
	gBFD_RELOC_SPARC_TLS_IE_LDX
,

2553 
	gBFD_RELOC_SPARC_TLS_IE_ADD
,

2554 
	gBFD_RELOC_SPARC_TLS_LE_HIX22
,

2555 
	gBFD_RELOC_SPARC_TLS_LE_LOX10
,

2556 
	gBFD_RELOC_SPARC_TLS_DTPMOD32
,

2557 
	gBFD_RELOC_SPARC_TLS_DTPMOD64
,

2558 
	gBFD_RELOC_SPARC_TLS_DTPOFF32
,

2559 
	gBFD_RELOC_SPARC_TLS_DTPOFF64
,

2560 
	gBFD_RELOC_SPARC_TLS_TPOFF32
,

2561 
	gBFD_RELOC_SPARC_TLS_TPOFF64
,

2564 
	gBFD_RELOC_SPU_IMM7
,

2565 
	gBFD_RELOC_SPU_IMM8
,

2566 
	gBFD_RELOC_SPU_IMM10
,

2567 
	gBFD_RELOC_SPU_IMM10W
,

2568 
	gBFD_RELOC_SPU_IMM16
,

2569 
	gBFD_RELOC_SPU_IMM16W
,

2570 
	gBFD_RELOC_SPU_IMM18
,

2571 
	gBFD_RELOC_SPU_PCREL9a
,

2572 
	gBFD_RELOC_SPU_PCREL9b
,

2573 
	gBFD_RELOC_SPU_PCREL16
,

2574 
	gBFD_RELOC_SPU_LO16
,

2575 
	gBFD_RELOC_SPU_HI16
,

2576 
	gBFD_RELOC_SPU_PPU32
,

2577 
	gBFD_RELOC_SPU_PPU64
,

2578 
	gBFD_RELOC_SPU_ADD_PIC
,

2586 
	gBFD_RELOC_ALPHA_GPDISP_HI16
,

2592 
	gBFD_RELOC_ALPHA_GPDISP_LO16
,

2597 
	gBFD_RELOC_ALPHA_GPDISP
,

2622 
	gBFD_RELOC_ALPHA_LITERAL
,

2623 
	gBFD_RELOC_ALPHA_ELF_LITERAL
,

2624 
	gBFD_RELOC_ALPHA_LITUSE
,

2629 
	gBFD_RELOC_ALPHA_HINT
,

2633 
	gBFD_RELOC_ALPHA_LINKAGE
,

2637 
	gBFD_RELOC_ALPHA_CODEADDR
,

2641 
	gBFD_RELOC_ALPHA_GPREL_HI16
,

2642 
	gBFD_RELOC_ALPHA_GPREL_LO16
,

2647 
	gBFD_RELOC_ALPHA_BRSGP
,

2651 
	gBFD_RELOC_ALPHA_NOP
,

2655 
	gBFD_RELOC_ALPHA_BSR
,

2659 
	gBFD_RELOC_ALPHA_LDA
,

2663 
	gBFD_RELOC_ALPHA_BOH
,

2666 
	gBFD_RELOC_ALPHA_TLSGD
,

2667 
	gBFD_RELOC_ALPHA_TLSLDM
,

2668 
	gBFD_RELOC_ALPHA_DTPMOD64
,

2669 
	gBFD_RELOC_ALPHA_GOTDTPREL16
,

2670 
	gBFD_RELOC_ALPHA_DTPREL64
,

2671 
	gBFD_RELOC_ALPHA_DTPREL_HI16
,

2672 
	gBFD_RELOC_ALPHA_DTPREL_LO16
,

2673 
	gBFD_RELOC_ALPHA_DTPREL16
,

2674 
	gBFD_RELOC_ALPHA_GOTTPREL16
,

2675 
	gBFD_RELOC_ALPHA_TPREL64
,

2676 
	gBFD_RELOC_ALPHA_TPREL_HI16
,

2677 
	gBFD_RELOC_ALPHA_TPREL_LO16
,

2678 
	gBFD_RELOC_ALPHA_TPREL16
,

2682 
	gBFD_RELOC_MIPS_JMP
,

2685 
	gBFD_RELOC_MIPS16_JMP
,

2688 
	gBFD_RELOC_MIPS16_GPREL
,

2691 
	gBFD_RELOC_HI16
,

2697 
	gBFD_RELOC_HI16_S
,

2700 
	gBFD_RELOC_LO16
,

2703 
	gBFD_RELOC_HI16_PCREL
,

2706 
	gBFD_RELOC_HI16_S_PCREL
,

2709 
	gBFD_RELOC_LO16_PCREL
,

2713 
	gBFD_RELOC_MIPS16_GOT16
,

2714 
	gBFD_RELOC_MIPS16_CALL16
,

2717 
	gBFD_RELOC_MIPS16_HI16
,

2723 
	gBFD_RELOC_MIPS16_HI16_S
,

2726 
	gBFD_RELOC_MIPS16_LO16
,

2729 
	gBFD_RELOC_MIPS_LITERAL
,

2732 
	gBFD_RELOC_MIPS_GOT16
,

2733 
	gBFD_RELOC_MIPS_CALL16
,

2734 
	gBFD_RELOC_MIPS_GOT_HI16
,

2735 
	gBFD_RELOC_MIPS_GOT_LO16
,

2736 
	gBFD_RELOC_MIPS_CALL_HI16
,

2737 
	gBFD_RELOC_MIPS_CALL_LO16
,

2738 
	gBFD_RELOC_MIPS_SUB
,

2739 
	gBFD_RELOC_MIPS_GOT_PAGE
,

2740 
	gBFD_RELOC_MIPS_GOT_OFST
,

2741 
	gBFD_RELOC_MIPS_GOT_DISP
,

2742 
	gBFD_RELOC_MIPS_SHIFT5
,

2743 
	gBFD_RELOC_MIPS_SHIFT6
,

2744 
	gBFD_RELOC_MIPS_INSERT_A
,

2745 
	gBFD_RELOC_MIPS_INSERT_B
,

2746 
	gBFD_RELOC_MIPS_DELETE
,

2747 
	gBFD_RELOC_MIPS_HIGHEST
,

2748 
	gBFD_RELOC_MIPS_HIGHER
,

2749 
	gBFD_RELOC_MIPS_SCN_DISP
,

2750 
	gBFD_RELOC_MIPS_REL16
,

2751 
	gBFD_RELOC_MIPS_RELGOT
,

2752 
	gBFD_RELOC_MIPS_JALR
,

2753 
	gBFD_RELOC_MIPS_TLS_DTPMOD32
,

2754 
	gBFD_RELOC_MIPS_TLS_DTPREL32
,

2755 
	gBFD_RELOC_MIPS_TLS_DTPMOD64
,

2756 
	gBFD_RELOC_MIPS_TLS_DTPREL64
,

2757 
	gBFD_RELOC_MIPS_TLS_GD
,

2758 
	gBFD_RELOC_MIPS_TLS_LDM
,

2759 
	gBFD_RELOC_MIPS_TLS_DTPREL_HI16
,

2760 
	gBFD_RELOC_MIPS_TLS_DTPREL_LO16
,

2761 
	gBFD_RELOC_MIPS_TLS_GOTTPREL
,

2762 
	gBFD_RELOC_MIPS_TLS_TPREL32
,

2763 
	gBFD_RELOC_MIPS_TLS_TPREL64
,

2764 
	gBFD_RELOC_MIPS_TLS_TPREL_HI16
,

2765 
	gBFD_RELOC_MIPS_TLS_TPREL_LO16
,

2769 
	gBFD_RELOC_MIPS_COPY
,

2770 
	gBFD_RELOC_MIPS_JUMP_SLOT
,

2774 
	gBFD_RELOC_MOXIE_10_PCREL
,

2778 
	gBFD_RELOC_FRV_LABEL16
,

2779 
	gBFD_RELOC_FRV_LABEL24
,

2780 
	gBFD_RELOC_FRV_LO16
,

2781 
	gBFD_RELOC_FRV_HI16
,

2782 
	gBFD_RELOC_FRV_GPREL12
,

2783 
	gBFD_RELOC_FRV_GPRELU12
,

2784 
	gBFD_RELOC_FRV_GPREL32
,

2785 
	gBFD_RELOC_FRV_GPRELHI
,

2786 
	gBFD_RELOC_FRV_GPRELLO
,

2787 
	gBFD_RELOC_FRV_GOT12
,

2788 
	gBFD_RELOC_FRV_GOTHI
,

2789 
	gBFD_RELOC_FRV_GOTLO
,

2790 
	gBFD_RELOC_FRV_FUNCDESC
,

2791 
	gBFD_RELOC_FRV_FUNCDESC_GOT12
,

2792 
	gBFD_RELOC_FRV_FUNCDESC_GOTHI
,

2793 
	gBFD_RELOC_FRV_FUNCDESC_GOTLO
,

2794 
	gBFD_RELOC_FRV_FUNCDESC_VALUE
,

2795 
	gBFD_RELOC_FRV_FUNCDESC_GOTOFF12
,

2796 
	gBFD_RELOC_FRV_FUNCDESC_GOTOFFHI
,

2797 
	gBFD_RELOC_FRV_FUNCDESC_GOTOFFLO
,

2798 
	gBFD_RELOC_FRV_GOTOFF12
,

2799 
	gBFD_RELOC_FRV_GOTOFFHI
,

2800 
	gBFD_RELOC_FRV_GOTOFFLO
,

2801 
	gBFD_RELOC_FRV_GETTLSOFF
,

2802 
	gBFD_RELOC_FRV_TLSDESC_VALUE
,

2803 
	gBFD_RELOC_FRV_GOTTLSDESC12
,

2804 
	gBFD_RELOC_FRV_GOTTLSDESCHI
,

2805 
	gBFD_RELOC_FRV_GOTTLSDESCLO
,

2806 
	gBFD_RELOC_FRV_TLSMOFF12
,

2807 
	gBFD_RELOC_FRV_TLSMOFFHI
,

2808 
	gBFD_RELOC_FRV_TLSMOFFLO
,

2809 
	gBFD_RELOC_FRV_GOTTLSOFF12
,

2810 
	gBFD_RELOC_FRV_GOTTLSOFFHI
,

2811 
	gBFD_RELOC_FRV_GOTTLSOFFLO
,

2812 
	gBFD_RELOC_FRV_TLSOFF
,

2813 
	gBFD_RELOC_FRV_TLSDESC_RELAX
,

2814 
	gBFD_RELOC_FRV_GETTLSOFF_RELAX
,

2815 
	gBFD_RELOC_FRV_TLSOFF_RELAX
,

2816 
	gBFD_RELOC_FRV_TLSMOFF
,

2820 
	gBFD_RELOC_MN10300_GOTOFF24
,

2824 
	gBFD_RELOC_MN10300_GOT32
,

2828 
	gBFD_RELOC_MN10300_GOT24
,

2832 
	gBFD_RELOC_MN10300_GOT16
,

2835 
	gBFD_RELOC_MN10300_COPY
,

2838 
	gBFD_RELOC_MN10300_GLOB_DAT
,

2841 
	gBFD_RELOC_MN10300_JMP_SLOT
,

2844 
	gBFD_RELOC_MN10300_RELATIVE
,

2849 
	gBFD_RELOC_MN10300_SYM_DIFF
,

2854 
	gBFD_RELOC_MN10300_ALIGN
,

2858 
	gBFD_RELOC_386_GOT32
,

2859 
	gBFD_RELOC_386_PLT32
,

2860 
	gBFD_RELOC_386_COPY
,

2861 
	gBFD_RELOC_386_GLOB_DAT
,

2862 
	gBFD_RELOC_386_JUMP_SLOT
,

2863 
	gBFD_RELOC_386_RELATIVE
,

2864 
	gBFD_RELOC_386_GOTOFF
,

2865 
	gBFD_RELOC_386_GOTPC
,

2866 
	gBFD_RELOC_386_TLS_TPOFF
,

2867 
	gBFD_RELOC_386_TLS_IE
,

2868 
	gBFD_RELOC_386_TLS_GOTIE
,

2869 
	gBFD_RELOC_386_TLS_LE
,

2870 
	gBFD_RELOC_386_TLS_GD
,

2871 
	gBFD_RELOC_386_TLS_LDM
,

2872 
	gBFD_RELOC_386_TLS_LDO_32
,

2873 
	gBFD_RELOC_386_TLS_IE_32
,

2874 
	gBFD_RELOC_386_TLS_LE_32
,

2875 
	gBFD_RELOC_386_TLS_DTPMOD32
,

2876 
	gBFD_RELOC_386_TLS_DTPOFF32
,

2877 
	gBFD_RELOC_386_TLS_TPOFF32
,

2878 
	gBFD_RELOC_386_TLS_GOTDESC
,

2879 
	gBFD_RELOC_386_TLS_DESC_CALL
,

2880 
	gBFD_RELOC_386_TLS_DESC
,

2881 
	gBFD_RELOC_386_IRELATIVE
,

2884 
	gBFD_RELOC_X86_64_GOT32
,

2885 
	gBFD_RELOC_X86_64_PLT32
,

2886 
	gBFD_RELOC_X86_64_COPY
,

2887 
	gBFD_RELOC_X86_64_GLOB_DAT
,

2888 
	gBFD_RELOC_X86_64_JUMP_SLOT
,

2889 
	gBFD_RELOC_X86_64_RELATIVE
,

2890 
	gBFD_RELOC_X86_64_GOTPCREL
,

2891 
	gBFD_RELOC_X86_64_32S
,

2892 
	gBFD_RELOC_X86_64_DTPMOD64
,

2893 
	gBFD_RELOC_X86_64_DTPOFF64
,

2894 
	gBFD_RELOC_X86_64_TPOFF64
,

2895 
	gBFD_RELOC_X86_64_TLSGD
,

2896 
	gBFD_RELOC_X86_64_TLSLD
,

2897 
	gBFD_RELOC_X86_64_DTPOFF32
,

2898 
	gBFD_RELOC_X86_64_GOTTPOFF
,

2899 
	gBFD_RELOC_X86_64_TPOFF32
,

2900 
	gBFD_RELOC_X86_64_GOTOFF64
,

2901 
	gBFD_RELOC_X86_64_GOTPC32
,

2902 
	gBFD_RELOC_X86_64_GOT64
,

2903 
	gBFD_RELOC_X86_64_GOTPCREL64
,

2904 
	gBFD_RELOC_X86_64_GOTPC64
,

2905 
	gBFD_RELOC_X86_64_GOTPLT64
,

2906 
	gBFD_RELOC_X86_64_PLTOFF64
,

2907 
	gBFD_RELOC_X86_64_GOTPC32_TLSDESC
,

2908 
	gBFD_RELOC_X86_64_TLSDESC_CALL
,

2909 
	gBFD_RELOC_X86_64_TLSDESC
,

2910 
	gBFD_RELOC_X86_64_IRELATIVE
,

2913 
	gBFD_RELOC_NS32K_IMM_8
,

2914 
	gBFD_RELOC_NS32K_IMM_16
,

2915 
	gBFD_RELOC_NS32K_IMM_32
,

2916 
	gBFD_RELOC_NS32K_IMM_8_PCREL
,

2917 
	gBFD_RELOC_NS32K_IMM_16_PCREL
,

2918 
	gBFD_RELOC_NS32K_IMM_32_PCREL
,

2919 
	gBFD_RELOC_NS32K_DISP_8
,

2920 
	gBFD_RELOC_NS32K_DISP_16
,

2921 
	gBFD_RELOC_NS32K_DISP_32
,

2922 
	gBFD_RELOC_NS32K_DISP_8_PCREL
,

2923 
	gBFD_RELOC_NS32K_DISP_16_PCREL
,

2924 
	gBFD_RELOC_NS32K_DISP_32_PCREL
,

2927 
	gBFD_RELOC_PDP11_DISP_8_PCREL
,

2928 
	gBFD_RELOC_PDP11_DISP_6_PCREL
,

2931 
	gBFD_RELOC_PJ_CODE_HI16
,

2932 
	gBFD_RELOC_PJ_CODE_LO16
,

2933 
	gBFD_RELOC_PJ_CODE_DIR16
,

2934 
	gBFD_RELOC_PJ_CODE_DIR32
,

2935 
	gBFD_RELOC_PJ_CODE_REL16
,

2936 
	gBFD_RELOC_PJ_CODE_REL32
,

2939 
	gBFD_RELOC_PPC_B26
,

2940 
	gBFD_RELOC_PPC_BA26
,

2941 
	gBFD_RELOC_PPC_TOC16
,

2942 
	gBFD_RELOC_PPC_B16
,

2943 
	gBFD_RELOC_PPC_B16_BRTAKEN
,

2944 
	gBFD_RELOC_PPC_B16_BRNTAKEN
,

2945 
	gBFD_RELOC_PPC_BA16
,

2946 
	gBFD_RELOC_PPC_BA16_BRTAKEN
,

2947 
	gBFD_RELOC_PPC_BA16_BRNTAKEN
,

2948 
	gBFD_RELOC_PPC_COPY
,

2949 
	gBFD_RELOC_PPC_GLOB_DAT
,

2950 
	gBFD_RELOC_PPC_JMP_SLOT
,

2951 
	gBFD_RELOC_PPC_RELATIVE
,

2952 
	gBFD_RELOC_PPC_LOCAL24PC
,

2953 
	gBFD_RELOC_PPC_EMB_NADDR32
,

2954 
	gBFD_RELOC_PPC_EMB_NADDR16
,

2955 
	gBFD_RELOC_PPC_EMB_NADDR16_LO
,

2956 
	gBFD_RELOC_PPC_EMB_NADDR16_HI
,

2957 
	gBFD_RELOC_PPC_EMB_NADDR16_HA
,

2958 
	gBFD_RELOC_PPC_EMB_SDAI16
,

2959 
	gBFD_RELOC_PPC_EMB_SDA2I16
,

2960 
	gBFD_RELOC_PPC_EMB_SDA2REL
,

2961 
	gBFD_RELOC_PPC_EMB_SDA21
,

2962 
	gBFD_RELOC_PPC_EMB_MRKREF
,

2963 
	gBFD_RELOC_PPC_EMB_RELSEC16
,

2964 
	gBFD_RELOC_PPC_EMB_RELST_LO
,

2965 
	gBFD_RELOC_PPC_EMB_RELST_HI
,

2966 
	gBFD_RELOC_PPC_EMB_RELST_HA
,

2967 
	gBFD_RELOC_PPC_EMB_BIT_FLD
,

2968 
	gBFD_RELOC_PPC_EMB_RELSDA
,

2969 
	gBFD_RELOC_PPC64_HIGHER
,

2970 
	gBFD_RELOC_PPC64_HIGHER_S
,

2971 
	gBFD_RELOC_PPC64_HIGHEST
,

2972 
	gBFD_RELOC_PPC64_HIGHEST_S
,

2973 
	gBFD_RELOC_PPC64_TOC16_LO
,

2974 
	gBFD_RELOC_PPC64_TOC16_HI
,

2975 
	gBFD_RELOC_PPC64_TOC16_HA
,

2976 
	gBFD_RELOC_PPC64_TOC
,

2977 
	gBFD_RELOC_PPC64_PLTGOT16
,

2978 
	gBFD_RELOC_PPC64_PLTGOT16_LO
,

2979 
	gBFD_RELOC_PPC64_PLTGOT16_HI
,

2980 
	gBFD_RELOC_PPC64_PLTGOT16_HA
,

2981 
	gBFD_RELOC_PPC64_ADDR16_DS
,

2982 
	gBFD_RELOC_PPC64_ADDR16_LO_DS
,

2983 
	gBFD_RELOC_PPC64_GOT16_DS
,

2984 
	gBFD_RELOC_PPC64_GOT16_LO_DS
,

2985 
	gBFD_RELOC_PPC64_PLT16_LO_DS
,

2986 
	gBFD_RELOC_PPC64_SECTOFF_DS
,

2987 
	gBFD_RELOC_PPC64_SECTOFF_LO_DS
,

2988 
	gBFD_RELOC_PPC64_TOC16_DS
,

2989 
	gBFD_RELOC_PPC64_TOC16_LO_DS
,

2990 
	gBFD_RELOC_PPC64_PLTGOT16_DS
,

2991 
	gBFD_RELOC_PPC64_PLTGOT16_LO_DS
,

2994 
	gBFD_RELOC_PPC_TLS
,

2995 
	gBFD_RELOC_PPC_TLSGD
,

2996 
	gBFD_RELOC_PPC_TLSLD
,

2997 
	gBFD_RELOC_PPC_DTPMOD
,

2998 
	gBFD_RELOC_PPC_TPREL16
,

2999 
	gBFD_RELOC_PPC_TPREL16_LO
,

3000 
	gBFD_RELOC_PPC_TPREL16_HI
,

3001 
	gBFD_RELOC_PPC_TPREL16_HA
,

3002 
	gBFD_RELOC_PPC_TPREL
,

3003 
	gBFD_RELOC_PPC_DTPREL16
,

3004 
	gBFD_RELOC_PPC_DTPREL16_LO
,

3005 
	gBFD_RELOC_PPC_DTPREL16_HI
,

3006 
	gBFD_RELOC_PPC_DTPREL16_HA
,

3007 
	gBFD_RELOC_PPC_DTPREL
,

3008 
	gBFD_RELOC_PPC_GOT_TLSGD16
,

3009 
	gBFD_RELOC_PPC_GOT_TLSGD16_LO
,

3010 
	gBFD_RELOC_PPC_GOT_TLSGD16_HI
,

3011 
	gBFD_RELOC_PPC_GOT_TLSGD16_HA
,

3012 
	gBFD_RELOC_PPC_GOT_TLSLD16
,

3013 
	gBFD_RELOC_PPC_GOT_TLSLD16_LO
,

3014 
	gBFD_RELOC_PPC_GOT_TLSLD16_HI
,

3015 
	gBFD_RELOC_PPC_GOT_TLSLD16_HA
,

3016 
	gBFD_RELOC_PPC_GOT_TPREL16
,

3017 
	gBFD_RELOC_PPC_GOT_TPREL16_LO
,

3018 
	gBFD_RELOC_PPC_GOT_TPREL16_HI
,

3019 
	gBFD_RELOC_PPC_GOT_TPREL16_HA
,

3020 
	gBFD_RELOC_PPC_GOT_DTPREL16
,

3021 
	gBFD_RELOC_PPC_GOT_DTPREL16_LO
,

3022 
	gBFD_RELOC_PPC_GOT_DTPREL16_HI
,

3023 
	gBFD_RELOC_PPC_GOT_DTPREL16_HA
,

3024 
	gBFD_RELOC_PPC64_TPREL16_DS
,

3025 
	gBFD_RELOC_PPC64_TPREL16_LO_DS
,

3026 
	gBFD_RELOC_PPC64_TPREL16_HIGHER
,

3027 
	gBFD_RELOC_PPC64_TPREL16_HIGHERA
,

3028 
	gBFD_RELOC_PPC64_TPREL16_HIGHEST
,

3029 
	gBFD_RELOC_PPC64_TPREL16_HIGHESTA
,

3030 
	gBFD_RELOC_PPC64_DTPREL16_DS
,

3031 
	gBFD_RELOC_PPC64_DTPREL16_LO_DS
,

3032 
	gBFD_RELOC_PPC64_DTPREL16_HIGHER
,

3033 
	gBFD_RELOC_PPC64_DTPREL16_HIGHERA
,

3034 
	gBFD_RELOC_PPC64_DTPREL16_HIGHEST
,

3035 
	gBFD_RELOC_PPC64_DTPREL16_HIGHESTA
,

3038 
	gBFD_RELOC_I370_D12
,

3043 
	gBFD_RELOC_CTOR
,

3047 
	gBFD_RELOC_ARM_PCREL_BRANCH
,

3052 
	gBFD_RELOC_ARM_PCREL_BLX
,

3057 
	gBFD_RELOC_THUMB_PCREL_BLX
,

3060 
	gBFD_RELOC_ARM_PCREL_CALL
,

3063 
	gBFD_RELOC_ARM_PCREL_JUMP
,

3070 
	gBFD_RELOC_THUMB_PCREL_BRANCH7
,

3071 
	gBFD_RELOC_THUMB_PCREL_BRANCH9
,

3072 
	gBFD_RELOC_THUMB_PCREL_BRANCH12
,

3073 
	gBFD_RELOC_THUMB_PCREL_BRANCH20
,

3074 
	gBFD_RELOC_THUMB_PCREL_BRANCH23
,

3075 
	gBFD_RELOC_THUMB_PCREL_BRANCH25
,

3078 
	gBFD_RELOC_ARM_OFFSET_IMM
,

3081 
	gBFD_RELOC_ARM_THUMB_OFFSET
,

3085 
	gBFD_RELOC_ARM_TARGET1
,

3088 
	gBFD_RELOC_ARM_ROSEGREL32
,

3091 
	gBFD_RELOC_ARM_SBREL32
,

3096 
	gBFD_RELOC_ARM_TARGET2
,

3099 
	gBFD_RELOC_ARM_PREL31
,

3102 
	gBFD_RELOC_ARM_MOVW
,

3103 
	gBFD_RELOC_ARM_MOVT
,

3104 
	gBFD_RELOC_ARM_MOVW_PCREL
,

3105 
	gBFD_RELOC_ARM_MOVT_PCREL
,

3106 
	gBFD_RELOC_ARM_THUMB_MOVW
,

3107 
	gBFD_RELOC_ARM_THUMB_MOVT
,

3108 
	gBFD_RELOC_ARM_THUMB_MOVW_PCREL
,

3109 
	gBFD_RELOC_ARM_THUMB_MOVT_PCREL
,

3112 
	gBFD_RELOC_ARM_JUMP_SLOT
,

3113 
	gBFD_RELOC_ARM_GLOB_DAT
,

3114 
	gBFD_RELOC_ARM_GOT32
,

3115 
	gBFD_RELOC_ARM_PLT32
,

3116 
	gBFD_RELOC_ARM_RELATIVE
,

3117 
	gBFD_RELOC_ARM_GOTOFF
,

3118 
	gBFD_RELOC_ARM_GOTPC
,

3121 
	gBFD_RELOC_ARM_TLS_GD32
,

3122 
	gBFD_RELOC_ARM_TLS_LDO32
,

3123 
	gBFD_RELOC_ARM_TLS_LDM32
,

3124 
	gBFD_RELOC_ARM_TLS_DTPOFF32
,

3125 
	gBFD_RELOC_ARM_TLS_DTPMOD32
,

3126 
	gBFD_RELOC_ARM_TLS_TPOFF32
,

3127 
	gBFD_RELOC_ARM_TLS_IE32
,

3128 
	gBFD_RELOC_ARM_TLS_LE32
,

3131 
	gBFD_RELOC_ARM_ALU_PC_G0_NC
,

3132 
	gBFD_RELOC_ARM_ALU_PC_G0
,

3133 
	gBFD_RELOC_ARM_ALU_PC_G1_NC
,

3134 
	gBFD_RELOC_ARM_ALU_PC_G1
,

3135 
	gBFD_RELOC_ARM_ALU_PC_G2
,

3136 
	gBFD_RELOC_ARM_LDR_PC_G0
,

3137 
	gBFD_RELOC_ARM_LDR_PC_G1
,

3138 
	gBFD_RELOC_ARM_LDR_PC_G2
,

3139 
	gBFD_RELOC_ARM_LDRS_PC_G0
,

3140 
	gBFD_RELOC_ARM_LDRS_PC_G1
,

3141 
	gBFD_RELOC_ARM_LDRS_PC_G2
,

3142 
	gBFD_RELOC_ARM_LDC_PC_G0
,

3143 
	gBFD_RELOC_ARM_LDC_PC_G1
,

3144 
	gBFD_RELOC_ARM_LDC_PC_G2
,

3145 
	gBFD_RELOC_ARM_ALU_SB_G0_NC
,

3146 
	gBFD_RELOC_ARM_ALU_SB_G0
,

3147 
	gBFD_RELOC_ARM_ALU_SB_G1_NC
,

3148 
	gBFD_RELOC_ARM_ALU_SB_G1
,

3149 
	gBFD_RELOC_ARM_ALU_SB_G2
,

3150 
	gBFD_RELOC_ARM_LDR_SB_G0
,

3151 
	gBFD_RELOC_ARM_LDR_SB_G1
,

3152 
	gBFD_RELOC_ARM_LDR_SB_G2
,

3153 
	gBFD_RELOC_ARM_LDRS_SB_G0
,

3154 
	gBFD_RELOC_ARM_LDRS_SB_G1
,

3155 
	gBFD_RELOC_ARM_LDRS_SB_G2
,

3156 
	gBFD_RELOC_ARM_LDC_SB_G0
,

3157 
	gBFD_RELOC_ARM_LDC_SB_G1
,

3158 
	gBFD_RELOC_ARM_LDC_SB_G2
,

3161 
	gBFD_RELOC_ARM_V4BX
,

3165 
	gBFD_RELOC_ARM_IMMEDIATE
,

3166 
	gBFD_RELOC_ARM_ADRL_IMMEDIATE
,

3167 
	gBFD_RELOC_ARM_T32_IMMEDIATE
,

3168 
	gBFD_RELOC_ARM_T32_ADD_IMM
,

3169 
	gBFD_RELOC_ARM_T32_IMM12
,

3170 
	gBFD_RELOC_ARM_T32_ADD_PC12
,

3171 
	gBFD_RELOC_ARM_SHIFT_IMM
,

3172 
	gBFD_RELOC_ARM_SMC
,

3173 
	gBFD_RELOC_ARM_SWI
,

3174 
	gBFD_RELOC_ARM_MULTI
,

3175 
	gBFD_RELOC_ARM_CP_OFF_IMM
,

3176 
	gBFD_RELOC_ARM_CP_OFF_IMM_S2
,

3177 
	gBFD_RELOC_ARM_T32_CP_OFF_IMM
,

3178 
	gBFD_RELOC_ARM_T32_CP_OFF_IMM_S2
,

3179 
	gBFD_RELOC_ARM_ADR_IMM
,

3180 
	gBFD_RELOC_ARM_LDR_IMM
,

3181 
	gBFD_RELOC_ARM_LITERAL
,

3182 
	gBFD_RELOC_ARM_IN_POOL
,

3183 
	gBFD_RELOC_ARM_OFFSET_IMM8
,

3184 
	gBFD_RELOC_ARM_T32_OFFSET_U8
,

3185 
	gBFD_RELOC_ARM_T32_OFFSET_IMM
,

3186 
	gBFD_RELOC_ARM_HWLITERAL
,

3187 
	gBFD_RELOC_ARM_THUMB_ADD
,

3188 
	gBFD_RELOC_ARM_THUMB_IMM
,

3189 
	gBFD_RELOC_ARM_THUMB_SHIFT
,

3192 
	gBFD_RELOC_SH_PCDISP8BY2
,

3193 
	gBFD_RELOC_SH_PCDISP12BY2
,

3194 
	gBFD_RELOC_SH_IMM3
,

3195 
	gBFD_RELOC_SH_IMM3U
,

3196 
	gBFD_RELOC_SH_DISP12
,

3197 
	gBFD_RELOC_SH_DISP12BY2
,

3198 
	gBFD_RELOC_SH_DISP12BY4
,

3199 
	gBFD_RELOC_SH_DISP12BY8
,

3200 
	gBFD_RELOC_SH_DISP20
,

3201 
	gBFD_RELOC_SH_DISP20BY8
,

3202 
	gBFD_RELOC_SH_IMM4
,

3203 
	gBFD_RELOC_SH_IMM4BY2
,

3204 
	gBFD_RELOC_SH_IMM4BY4
,

3205 
	gBFD_RELOC_SH_IMM8
,

3206 
	gBFD_RELOC_SH_IMM8BY2
,

3207 
	gBFD_RELOC_SH_IMM8BY4
,

3208 
	gBFD_RELOC_SH_PCRELIMM8BY2
,

3209 
	gBFD_RELOC_SH_PCRELIMM8BY4
,

3210 
	gBFD_RELOC_SH_SWITCH16
,

3211 
	gBFD_RELOC_SH_SWITCH32
,

3212 
	gBFD_RELOC_SH_USES
,

3213 
	gBFD_RELOC_SH_COUNT
,

3214 
	gBFD_RELOC_SH_ALIGN
,

3215 
	gBFD_RELOC_SH_CODE
,

3216 
	gBFD_RELOC_SH_DATA
,

3217 
	gBFD_RELOC_SH_LABEL
,

3218 
	gBFD_RELOC_SH_LOOP_START
,

3219 
	gBFD_RELOC_SH_LOOP_END
,

3220 
	gBFD_RELOC_SH_COPY
,

3221 
	gBFD_RELOC_SH_GLOB_DAT
,

3222 
	gBFD_RELOC_SH_JMP_SLOT
,

3223 
	gBFD_RELOC_SH_RELATIVE
,

3224 
	gBFD_RELOC_SH_GOTPC
,

3225 
	gBFD_RELOC_SH_GOT_LOW16
,

3226 
	gBFD_RELOC_SH_GOT_MEDLOW16
,

3227 
	gBFD_RELOC_SH_GOT_MEDHI16
,

3228 
	gBFD_RELOC_SH_GOT_HI16
,

3229 
	gBFD_RELOC_SH_GOTPLT_LOW16
,

3230 
	gBFD_RELOC_SH_GOTPLT_MEDLOW16
,

3231 
	gBFD_RELOC_SH_GOTPLT_MEDHI16
,

3232 
	gBFD_RELOC_SH_GOTPLT_HI16
,

3233 
	gBFD_RELOC_SH_PLT_LOW16
,

3234 
	gBFD_RELOC_SH_PLT_MEDLOW16
,

3235 
	gBFD_RELOC_SH_PLT_MEDHI16
,

3236 
	gBFD_RELOC_SH_PLT_HI16
,

3237 
	gBFD_RELOC_SH_GOTOFF_LOW16
,

3238 
	gBFD_RELOC_SH_GOTOFF_MEDLOW16
,

3239 
	gBFD_RELOC_SH_GOTOFF_MEDHI16
,

3240 
	gBFD_RELOC_SH_GOTOFF_HI16
,

3241 
	gBFD_RELOC_SH_GOTPC_LOW16
,

3242 
	gBFD_RELOC_SH_GOTPC_MEDLOW16
,

3243 
	gBFD_RELOC_SH_GOTPC_MEDHI16
,

3244 
	gBFD_RELOC_SH_GOTPC_HI16
,

3245 
	gBFD_RELOC_SH_COPY64
,

3246 
	gBFD_RELOC_SH_GLOB_DAT64
,

3247 
	gBFD_RELOC_SH_JMP_SLOT64
,

3248 
	gBFD_RELOC_SH_RELATIVE64
,

3249 
	gBFD_RELOC_SH_GOT10BY4
,

3250 
	gBFD_RELOC_SH_GOT10BY8
,

3251 
	gBFD_RELOC_SH_GOTPLT10BY4
,

3252 
	gBFD_RELOC_SH_GOTPLT10BY8
,

3253 
	gBFD_RELOC_SH_GOTPLT32
,

3254 
	gBFD_RELOC_SH_SHMEDIA_CODE
,

3255 
	gBFD_RELOC_SH_IMMU5
,

3256 
	gBFD_RELOC_SH_IMMS6
,

3257 
	gBFD_RELOC_SH_IMMS6BY32
,

3258 
	gBFD_RELOC_SH_IMMU6
,

3259 
	gBFD_RELOC_SH_IMMS10
,

3260 
	gBFD_RELOC_SH_IMMS10BY2
,

3261 
	gBFD_RELOC_SH_IMMS10BY4
,

3262 
	gBFD_RELOC_SH_IMMS10BY8
,

3263 
	gBFD_RELOC_SH_IMMS16
,

3264 
	gBFD_RELOC_SH_IMMU16
,

3265 
	gBFD_RELOC_SH_IMM_LOW16
,

3266 
	gBFD_RELOC_SH_IMM_LOW16_PCREL
,

3267 
	gBFD_RELOC_SH_IMM_MEDLOW16
,

3268 
	gBFD_RELOC_SH_IMM_MEDLOW16_PCREL
,

3269 
	gBFD_RELOC_SH_IMM_MEDHI16
,

3270 
	gBFD_RELOC_SH_IMM_MEDHI16_PCREL
,

3271 
	gBFD_RELOC_SH_IMM_HI16
,

3272 
	gBFD_RELOC_SH_IMM_HI16_PCREL
,

3273 
	gBFD_RELOC_SH_PT_16
,

3274 
	gBFD_RELOC_SH_TLS_GD_32
,

3275 
	gBFD_RELOC_SH_TLS_LD_32
,

3276 
	gBFD_RELOC_SH_TLS_LDO_32
,

3277 
	gBFD_RELOC_SH_TLS_IE_32
,

3278 
	gBFD_RELOC_SH_TLS_LE_32
,

3279 
	gBFD_RELOC_SH_TLS_DTPMOD32
,

3280 
	gBFD_RELOC_SH_TLS_DTPOFF32
,

3281 
	gBFD_RELOC_SH_TLS_TPOFF32
,

3287 
	gBFD_RELOC_ARC_B22_PCREL
,

3292 
	gBFD_RELOC_ARC_B26
,

3295 
	gBFD_RELOC_BFIN_16_IMM
,

3298 
	gBFD_RELOC_BFIN_16_HIGH
,

3301 
	gBFD_RELOC_BFIN_4_PCREL
,

3304 
	gBFD_RELOC_BFIN_5_PCREL
,

3307 
	gBFD_RELOC_BFIN_16_LOW
,

3310 
	gBFD_RELOC_BFIN_10_PCREL
,

3313 
	gBFD_RELOC_BFIN_11_PCREL
,

3316 
	gBFD_RELOC_BFIN_12_PCREL_JUMP
,

3319 
	gBFD_RELOC_BFIN_12_PCREL_JUMP_S
,

3322 
	gBFD_RELOC_BFIN_24_PCREL_CALL_X
,

3325 
	gBFD_RELOC_BFIN_24_PCREL_JUMP_L
,

3328 
	gBFD_RELOC_BFIN_GOT17M4
,

3329 
	gBFD_RELOC_BFIN_GOTHI
,

3330 
	gBFD_RELOC_BFIN_GOTLO
,

3331 
	gBFD_RELOC_BFIN_FUNCDESC
,

3332 
	gBFD_RELOC_BFIN_FUNCDESC_GOT17M4
,

3333 
	gBFD_RELOC_BFIN_FUNCDESC_GOTHI
,

3334 
	gBFD_RELOC_BFIN_FUNCDESC_GOTLO
,

3335 
	gBFD_RELOC_BFIN_FUNCDESC_VALUE
,

3336 
	gBFD_RELOC_BFIN_FUNCDESC_GOTOFF17M4
,

3337 
	gBFD_RELOC_BFIN_FUNCDESC_GOTOFFHI
,

3338 
	gBFD_RELOC_BFIN_FUNCDESC_GOTOFFLO
,

3339 
	gBFD_RELOC_BFIN_GOTOFF17M4
,

3340 
	gBFD_RELOC_BFIN_GOTOFFHI
,

3341 
	gBFD_RELOC_BFIN_GOTOFFLO
,

3344 
	gBFD_RELOC_BFIN_GOT
,

3347 
	gBFD_RELOC_BFIN_PLTPC
,

3350 
	gBFD_ARELOC_BFIN_PUSH
,

3353 
	gBFD_ARELOC_BFIN_CONST
,

3356 
	gBFD_ARELOC_BFIN_ADD
,

3359 
	gBFD_ARELOC_BFIN_SUB
,

3362 
	gBFD_ARELOC_BFIN_MULT
,

3365 
	gBFD_ARELOC_BFIN_DIV
,

3368 
	gBFD_ARELOC_BFIN_MOD
,

3371 
	gBFD_ARELOC_BFIN_LSHIFT
,

3374 
	gBFD_ARELOC_BFIN_RSHIFT
,

3377 
	gBFD_ARELOC_BFIN_AND
,

3380 
	gBFD_ARELOC_BFIN_OR
,

3383 
	gBFD_ARELOC_BFIN_XOR
,

3386 
	gBFD_ARELOC_BFIN_LAND
,

3389 
	gBFD_ARELOC_BFIN_LOR
,

3392 
	gBFD_ARELOC_BFIN_LEN
,

3395 
	gBFD_ARELOC_BFIN_NEG
,

3398 
	gBFD_ARELOC_BFIN_COMP
,

3401 
	gBFD_ARELOC_BFIN_PAGE
,

3404 
	gBFD_ARELOC_BFIN_HWPAGE
,

3407 
	gBFD_ARELOC_BFIN_ADDR
,

3412 
	gBFD_RELOC_D10V_10_PCREL_R
,

3419 
	gBFD_RELOC_D10V_10_PCREL_L
,

3423 
	gBFD_RELOC_D10V_18
,

3427 
	gBFD_RELOC_D10V_18_PCREL
,

3431 
	gBFD_RELOC_D30V_6
,

3435 
	gBFD_RELOC_D30V_9_PCREL
,

3441 
	gBFD_RELOC_D30V_9_PCREL_R
,

3445 
	gBFD_RELOC_D30V_15
,

3449 
	gBFD_RELOC_D30V_15_PCREL
,

3455 
	gBFD_RELOC_D30V_15_PCREL_R
,

3459 
	gBFD_RELOC_D30V_21
,

3463 
	gBFD_RELOC_D30V_21_PCREL
,

3469 
	gBFD_RELOC_D30V_21_PCREL_R
,

3472 
	gBFD_RELOC_D30V_32
,

3475 
	gBFD_RELOC_D30V_32_PCREL
,

3478 
	gBFD_RELOC_DLX_HI16_S
,

3481 
	gBFD_RELOC_DLX_LO16
,

3484 
	gBFD_RELOC_DLX_JMP26
,

3487 
	gBFD_RELOC_M32C_HI8
,

3488 
	gBFD_RELOC_M32C_RL_JUMP
,

3489 
	gBFD_RELOC_M32C_RL_1ADDR
,

3490 
	gBFD_RELOC_M32C_RL_2ADDR
,

3494 
	gBFD_RELOC_M32R_24
,

3497 
	gBFD_RELOC_M32R_10_PCREL
,

3500 
	gBFD_RELOC_M32R_18_PCREL
,

3503 
	gBFD_RELOC_M32R_26_PCREL
,

3507 
	gBFD_RELOC_M32R_HI16_ULO
,

3511 
	gBFD_RELOC_M32R_HI16_SLO
,

3514 
	gBFD_RELOC_M32R_LO16
,

3518 
	gBFD_RELOC_M32R_SDA16
,

3521 
	gBFD_RELOC_M32R_GOT24
,

3522 
	gBFD_RELOC_M32R_26_PLTREL
,

3523 
	gBFD_RELOC_M32R_COPY
,

3524 
	gBFD_RELOC_M32R_GLOB_DAT
,

3525 
	gBFD_RELOC_M32R_JMP_SLOT
,

3526 
	gBFD_RELOC_M32R_RELATIVE
,

3527 
	gBFD_RELOC_M32R_GOTOFF
,

3528 
	gBFD_RELOC_M32R_GOTOFF_HI_ULO
,

3529 
	gBFD_RELOC_M32R_GOTOFF_HI_SLO
,

3530 
	gBFD_RELOC_M32R_GOTOFF_LO
,

3531 
	gBFD_RELOC_M32R_GOTPC24
,

3532 
	gBFD_RELOC_M32R_GOT16_HI_ULO
,

3533 
	gBFD_RELOC_M32R_GOT16_HI_SLO
,

3534 
	gBFD_RELOC_M32R_GOT16_LO
,

3535 
	gBFD_RELOC_M32R_GOTPC_HI_ULO
,

3536 
	gBFD_RELOC_M32R_GOTPC_HI_SLO
,

3537 
	gBFD_RELOC_M32R_GOTPC_LO
,

3540 
	gBFD_RELOC_V850_9_PCREL
,

3543 
	gBFD_RELOC_V850_22_PCREL
,

3546 
	gBFD_RELOC_V850_SDA_16_16_OFFSET
,

3550 
	gBFD_RELOC_V850_SDA_15_16_OFFSET
,

3553 
	gBFD_RELOC_V850_ZDA_16_16_OFFSET
,

3557 
	gBFD_RELOC_V850_ZDA_15_16_OFFSET
,

3561 
	gBFD_RELOC_V850_TDA_6_8_OFFSET
,

3565 
	gBFD_RELOC_V850_TDA_7_8_OFFSET
,

3568 
	gBFD_RELOC_V850_TDA_7_7_OFFSET
,

3571 
	gBFD_RELOC_V850_TDA_16_16_OFFSET
,

3575 
	gBFD_RELOC_V850_TDA_4_5_OFFSET
,

3578 
	gBFD_RELOC_V850_TDA_4_4_OFFSET
,

3582 
	gBFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET
,

3586 
	gBFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET
,

3589 
	gBFD_RELOC_V850_CALLT_6_7_OFFSET
,

3592 
	gBFD_RELOC_V850_CALLT_16_16_OFFSET
,

3595 
	gBFD_RELOC_V850_LONGCALL
,

3598 
	gBFD_RELOC_V850_LONGJUMP
,

3601 
	gBFD_RELOC_V850_ALIGN
,

3605 
	gBFD_RELOC_V850_LO16_SPLIT_OFFSET
,

3609 
	gBFD_RELOC_MN10300_32_PCREL
,

3613 
	gBFD_RELOC_MN10300_16_PCREL
,

3618 
	gBFD_RELOC_TIC30_LDP
,

3623 
	gBFD_RELOC_TIC54X_PARTLS7
,

3628 
	gBFD_RELOC_TIC54X_PARTMS9
,

3631 
	gBFD_RELOC_TIC54X_23
,

3636 
	gBFD_RELOC_TIC54X_16_OF_23
,

3641 
	gBFD_RELOC_TIC54X_MS7_OF_23
,

3644 
	gBFD_RELOC_FR30_48
,

3648 
	gBFD_RELOC_FR30_20
,

3652 
	gBFD_RELOC_FR30_6_IN_4
,

3656 
	gBFD_RELOC_FR30_8_IN_8
,

3660 
	gBFD_RELOC_FR30_9_IN_8
,

3664 
	gBFD_RELOC_FR30_10_IN_8
,

3668 
	gBFD_RELOC_FR30_9_PCREL
,

3672 
	gBFD_RELOC_FR30_12_PCREL
,

3675 
	gBFD_RELOC_MCORE_PCREL_IMM8BY4
,

3676 
	gBFD_RELOC_MCORE_PCREL_IMM11BY2
,

3677 
	gBFD_RELOC_MCORE_PCREL_IMM4BY2
,

3678 
	gBFD_RELOC_MCORE_PCREL_32
,

3679 
	gBFD_RELOC_MCORE_PCREL_JSR_IMM11BY2
,

3680 
	gBFD_RELOC_MCORE_RVA
,

3683 
	gBFD_RELOC_MEP_8
,

3684 
	gBFD_RELOC_MEP_16
,

3685 
	gBFD_RELOC_MEP_32
,

3686 
	gBFD_RELOC_MEP_PCREL8A2
,

3687 
	gBFD_RELOC_MEP_PCREL12A2
,

3688 
	gBFD_RELOC_MEP_PCREL17A2
,

3689 
	gBFD_RELOC_MEP_PCREL24A2
,

3690 
	gBFD_RELOC_MEP_PCABS24A2
,

3691 
	gBFD_RELOC_MEP_LOW16
,

3692 
	gBFD_RELOC_MEP_HI16U
,

3693 
	gBFD_RELOC_MEP_HI16S
,

3694 
	gBFD_RELOC_MEP_GPREL
,

3695 
	gBFD_RELOC_MEP_TPREL
,

3696 
	gBFD_RELOC_MEP_TPREL7
,

3697 
	gBFD_RELOC_MEP_TPREL7A2
,

3698 
	gBFD_RELOC_MEP_TPREL7A4
,

3699 
	gBFD_RELOC_MEP_UIMM24
,

3700 
	gBFD_RELOC_MEP_ADDR24A4
,

3701 
	gBFD_RELOC_MEP_GNU_VTINHERIT
,

3702 
	gBFD_RELOC_MEP_GNU_VTENTRY
,

3706 
	gBFD_RELOC_MMIX_GETA
,

3707 
	gBFD_RELOC_MMIX_GETA_1
,

3708 
	gBFD_RELOC_MMIX_GETA_2
,

3709 
	gBFD_RELOC_MMIX_GETA_3
,

3712 
	gBFD_RELOC_MMIX_CBRANCH
,

3713 
	gBFD_RELOC_MMIX_CBRANCH_J
,

3714 
	gBFD_RELOC_MMIX_CBRANCH_1
,

3715 
	gBFD_RELOC_MMIX_CBRANCH_2
,

3716 
	gBFD_RELOC_MMIX_CBRANCH_3
,

3719 
	gBFD_RELOC_MMIX_PUSHJ
,

3720 
	gBFD_RELOC_MMIX_PUSHJ_1
,

3721 
	gBFD_RELOC_MMIX_PUSHJ_2
,

3722 
	gBFD_RELOC_MMIX_PUSHJ_3
,

3723 
	gBFD_RELOC_MMIX_PUSHJ_STUBBABLE
,

3726 
	gBFD_RELOC_MMIX_JMP
,

3727 
	gBFD_RELOC_MMIX_JMP_1
,

3728 
	gBFD_RELOC_MMIX_JMP_2
,

3729 
	gBFD_RELOC_MMIX_JMP_3
,

3733 
	gBFD_RELOC_MMIX_ADDR19
,

3736 
	gBFD_RELOC_MMIX_ADDR27
,

3740 
	gBFD_RELOC_MMIX_REG_OR_BYTE
,

3744 
	gBFD_RELOC_MMIX_REG
,

3748 
	gBFD_RELOC_MMIX_BASE_PLUS_OFFSET
,

3752 
	gBFD_RELOC_MMIX_LOCAL
,

3756 
	gBFD_RELOC_AVR_7_PCREL
,

3760 
	gBFD_RELOC_AVR_13_PCREL
,

3764 
	gBFD_RELOC_AVR_16_PM
,

3768 
	gBFD_RELOC_AVR_LO8_LDI
,

3772 
	gBFD_RELOC_AVR_HI8_LDI
,

3776 
	gBFD_RELOC_AVR_HH8_LDI
,

3780 
	gBFD_RELOC_AVR_MS8_LDI
,

3784 
	gBFD_RELOC_AVR_LO8_LDI_NEG
,

3789 
	gBFD_RELOC_AVR_HI8_LDI_NEG
,

3794 
	gBFD_RELOC_AVR_HH8_LDI_NEG
,

3798 
	gBFD_RELOC_AVR_MS8_LDI_NEG
,

3802 
	gBFD_RELOC_AVR_LO8_LDI_PM
,

3808 
	gBFD_RELOC_AVR_LO8_LDI_GS
,

3812 
	gBFD_RELOC_AVR_HI8_LDI_PM
,

3818 
	gBFD_RELOC_AVR_HI8_LDI_GS
,

3822 
	gBFD_RELOC_AVR_HH8_LDI_PM
,

3826 
	gBFD_RELOC_AVR_LO8_LDI_PM_NEG
,

3831 
	gBFD_RELOC_AVR_HI8_LDI_PM_NEG
,

3836 
	gBFD_RELOC_AVR_HH8_LDI_PM_NEG
,

3840 
	gBFD_RELOC_AVR_CALL
,

3844 
	gBFD_RELOC_AVR_LDI
,

3848 
	gBFD_RELOC_AVR_6
,

3852 
	gBFD_RELOC_AVR_6_ADIW
,

3855 
	gBFD_RELOC_RX_NEG8
,

3856 
	gBFD_RELOC_RX_NEG16
,

3857 
	gBFD_RELOC_RX_NEG24
,

3858 
	gBFD_RELOC_RX_NEG32
,

3859 
	gBFD_RELOC_RX_16_OP
,

3860 
	gBFD_RELOC_RX_24_OP
,

3861 
	gBFD_RELOC_RX_32_OP
,

3862 
	gBFD_RELOC_RX_8U
,

3863 
	gBFD_RELOC_RX_16U
,

3864 
	gBFD_RELOC_RX_24U
,

3865 
	gBFD_RELOC_RX_DIR3U_PCREL
,

3866 
	gBFD_RELOC_RX_DIFF
,

3867 
	gBFD_RELOC_RX_GPRELB
,

3868 
	gBFD_RELOC_RX_GPRELW
,

3869 
	gBFD_RELOC_RX_GPRELL
,

3870 
	gBFD_RELOC_RX_SYM
,

3871 
	gBFD_RELOC_RX_OP_SUBTRACT
,

3872 
	gBFD_RELOC_RX_ABS8
,

3873 
	gBFD_RELOC_RX_ABS16
,

3874 
	gBFD_RELOC_RX_ABS32
,

3875 
	gBFD_RELOC_RX_ABS16U
,

3876 
	gBFD_RELOC_RX_ABS16UW
,

3877 
	gBFD_RELOC_RX_ABS16UL
,

3878 
	gBFD_RELOC_RX_RELAX
,

3881 
	gBFD_RELOC_390_12
,

3884 
	gBFD_RELOC_390_GOT12
,

3887 
	gBFD_RELOC_390_PLT32
,

3890 
	gBFD_RELOC_390_COPY
,

3893 
	gBFD_RELOC_390_GLOB_DAT
,

3896 
	gBFD_RELOC_390_JMP_SLOT
,

3899 
	gBFD_RELOC_390_RELATIVE
,

3902 
	gBFD_RELOC_390_GOTPC
,

3905 
	gBFD_RELOC_390_GOT16
,

3908 
	gBFD_RELOC_390_PC16DBL
,

3911 
	gBFD_RELOC_390_PLT16DBL
,

3914 
	gBFD_RELOC_390_PC32DBL
,

3917 
	gBFD_RELOC_390_PLT32DBL
,

3920 
	gBFD_RELOC_390_GOTPCDBL
,

3923 
	gBFD_RELOC_390_GOT64
,

3926 
	gBFD_RELOC_390_PLT64
,

3929 
	gBFD_RELOC_390_GOTENT
,

3932 
	gBFD_RELOC_390_GOTOFF64
,

3935 
	gBFD_RELOC_390_GOTPLT12
,

3938 
	gBFD_RELOC_390_GOTPLT16
,

3941 
	gBFD_RELOC_390_GOTPLT32
,

3944 
	gBFD_RELOC_390_GOTPLT64
,

3947 
	gBFD_RELOC_390_GOTPLTENT
,

3950 
	gBFD_RELOC_390_PLTOFF16
,

3953 
	gBFD_RELOC_390_PLTOFF32
,

3956 
	gBFD_RELOC_390_PLTOFF64
,

3959 
	gBFD_RELOC_390_TLS_LOAD
,

3960 
	gBFD_RELOC_390_TLS_GDCALL
,

3961 
	gBFD_RELOC_390_TLS_LDCALL
,

3962 
	gBFD_RELOC_390_TLS_GD32
,

3963 
	gBFD_RELOC_390_TLS_GD64
,

3964 
	gBFD_RELOC_390_TLS_GOTIE12
,

3965 
	gBFD_RELOC_390_TLS_GOTIE32
,

3966 
	gBFD_RELOC_390_TLS_GOTIE64
,

3967 
	gBFD_RELOC_390_TLS_LDM32
,

3968 
	gBFD_RELOC_390_TLS_LDM64
,

3969 
	gBFD_RELOC_390_TLS_IE32
,

3970 
	gBFD_RELOC_390_TLS_IE64
,

3971 
	gBFD_RELOC_390_TLS_IEENT
,

3972 
	gBFD_RELOC_390_TLS_LE32
,

3973 
	gBFD_RELOC_390_TLS_LE64
,

3974 
	gBFD_RELOC_390_TLS_LDO32
,

3975 
	gBFD_RELOC_390_TLS_LDO64
,

3976 
	gBFD_RELOC_390_TLS_DTPMOD
,

3977 
	gBFD_RELOC_390_TLS_DTPOFF
,

3978 
	gBFD_RELOC_390_TLS_TPOFF
,

3981 
	gBFD_RELOC_390_20
,

3982 
	gBFD_RELOC_390_GOT20
,

3983 
	gBFD_RELOC_390_GOTPLT20
,

3984 
	gBFD_RELOC_390_TLS_GOTIE20
,

3988 
	gBFD_RELOC_SCORE_GPREL15
,

3991 
	gBFD_RELOC_SCORE_DUMMY2
,

3992 
	gBFD_RELOC_SCORE_JMP
,

3995 
	gBFD_RELOC_SCORE_BRANCH
,

3998 
	gBFD_RELOC_SCORE_IMM30
,

4001 
	gBFD_RELOC_SCORE_IMM32
,

4004 
	gBFD_RELOC_SCORE16_JMP
,

4007 
	gBFD_RELOC_SCORE16_BRANCH
,

4010 
	gBFD_RELOC_SCORE_BCMP
,

4013 
	gBFD_RELOC_SCORE_GOT15
,

4014 
	gBFD_RELOC_SCORE_GOT_LO16
,

4015 
	gBFD_RELOC_SCORE_CALL15
,

4016 
	gBFD_RELOC_SCORE_DUMMY_HI16
,

4019 
	gBFD_RELOC_IP2K_FR9
,

4022 
	gBFD_RELOC_IP2K_BANK
,

4025 
	gBFD_RELOC_IP2K_ADDR16CJP
,

4028 
	gBFD_RELOC_IP2K_PAGE3
,

4031 
	gBFD_RELOC_IP2K_LO8DATA
,

4032 
	gBFD_RELOC_IP2K_HI8DATA
,

4033 
	gBFD_RELOC_IP2K_EX8DATA
,

4036 
	gBFD_RELOC_IP2K_LO8INSN
,

4037 
	gBFD_RELOC_IP2K_HI8INSN
,

4040 
	gBFD_RELOC_IP2K_PC_SKIP
,

4043 
	gBFD_RELOC_IP2K_TEXT
,

4046 
	gBFD_RELOC_IP2K_FR_OFFSET
,

4049 
	gBFD_RELOC_VPE4KMATH_DATA
,

4050 
	gBFD_RELOC_VPE4KMATH_INSN
,

4069 
	gBFD_RELOC_VTABLE_INHERIT
,

4070 
	gBFD_RELOC_VTABLE_ENTRY
,

4073 
	gBFD_RELOC_IA64_IMM14
,

4074 
	gBFD_RELOC_IA64_IMM22
,

4075 
	gBFD_RELOC_IA64_IMM64
,

4076 
	gBFD_RELOC_IA64_DIR32MSB
,

4077 
	gBFD_RELOC_IA64_DIR32LSB
,

4078 
	gBFD_RELOC_IA64_DIR64MSB
,

4079 
	gBFD_RELOC_IA64_DIR64LSB
,

4080 
	gBFD_RELOC_IA64_GPREL22
,

4081 
	gBFD_RELOC_IA64_GPREL64I
,

4082 
	gBFD_RELOC_IA64_GPREL32MSB
,

4083 
	gBFD_RELOC_IA64_GPREL32LSB
,

4084 
	gBFD_RELOC_IA64_GPREL64MSB
,

4085 
	gBFD_RELOC_IA64_GPREL64LSB
,

4086 
	gBFD_RELOC_IA64_LTOFF22
,

4087 
	gBFD_RELOC_IA64_LTOFF64I
,

4088 
	gBFD_RELOC_IA64_PLTOFF22
,

4089 
	gBFD_RELOC_IA64_PLTOFF64I
,

4090 
	gBFD_RELOC_IA64_PLTOFF64MSB
,

4091 
	gBFD_RELOC_IA64_PLTOFF64LSB
,

4092 
	gBFD_RELOC_IA64_FPTR64I
,

4093 
	gBFD_RELOC_IA64_FPTR32MSB
,

4094 
	gBFD_RELOC_IA64_FPTR32LSB
,

4095 
	gBFD_RELOC_IA64_FPTR64MSB
,

4096 
	gBFD_RELOC_IA64_FPTR64LSB
,

4097 
	gBFD_RELOC_IA64_PCREL21B
,

4098 
	gBFD_RELOC_IA64_PCREL21BI
,

4099 
	gBFD_RELOC_IA64_PCREL21M
,

4100 
	gBFD_RELOC_IA64_PCREL21F
,

4101 
	gBFD_RELOC_IA64_PCREL22
,

4102 
	gBFD_RELOC_IA64_PCREL60B
,

4103 
	gBFD_RELOC_IA64_PCREL64I
,

4104 
	gBFD_RELOC_IA64_PCREL32MSB
,

4105 
	gBFD_RELOC_IA64_PCREL32LSB
,

4106 
	gBFD_RELOC_IA64_PCREL64MSB
,

4107 
	gBFD_RELOC_IA64_PCREL64LSB
,

4108 
	gBFD_RELOC_IA64_LTOFF_FPTR22
,

4109 
	gBFD_RELOC_IA64_LTOFF_FPTR64I
,

4110 
	gBFD_RELOC_IA64_LTOFF_FPTR32MSB
,

4111 
	gBFD_RELOC_IA64_LTOFF_FPTR32LSB
,

4112 
	gBFD_RELOC_IA64_LTOFF_FPTR64MSB
,

4113 
	gBFD_RELOC_IA64_LTOFF_FPTR64LSB
,

4114 
	gBFD_RELOC_IA64_SEGREL32MSB
,

4115 
	gBFD_RELOC_IA64_SEGREL32LSB
,

4116 
	gBFD_RELOC_IA64_SEGREL64MSB
,

4117 
	gBFD_RELOC_IA64_SEGREL64LSB
,

4118 
	gBFD_RELOC_IA64_SECREL32MSB
,

4119 
	gBFD_RELOC_IA64_SECREL32LSB
,

4120 
	gBFD_RELOC_IA64_SECREL64MSB
,

4121 
	gBFD_RELOC_IA64_SECREL64LSB
,

4122 
	gBFD_RELOC_IA64_REL32MSB
,

4123 
	gBFD_RELOC_IA64_REL32LSB
,

4124 
	gBFD_RELOC_IA64_REL64MSB
,

4125 
	gBFD_RELOC_IA64_REL64LSB
,

4126 
	gBFD_RELOC_IA64_LTV32MSB
,

4127 
	gBFD_RELOC_IA64_LTV32LSB
,

4128 
	gBFD_RELOC_IA64_LTV64MSB
,

4129 
	gBFD_RELOC_IA64_LTV64LSB
,

4130 
	gBFD_RELOC_IA64_IPLTMSB
,

4131 
	gBFD_RELOC_IA64_IPLTLSB
,

4132 
	gBFD_RELOC_IA64_COPY
,

4133 
	gBFD_RELOC_IA64_LTOFF22X
,

4134 
	gBFD_RELOC_IA64_LDXMOV
,

4135 
	gBFD_RELOC_IA64_TPREL14
,

4136 
	gBFD_RELOC_IA64_TPREL22
,

4137 
	gBFD_RELOC_IA64_TPREL64I
,

4138 
	gBFD_RELOC_IA64_TPREL64MSB
,

4139 
	gBFD_RELOC_IA64_TPREL64LSB
,

4140 
	gBFD_RELOC_IA64_LTOFF_TPREL22
,

4141 
	gBFD_RELOC_IA64_DTPMOD64MSB
,

4142 
	gBFD_RELOC_IA64_DTPMOD64LSB
,

4143 
	gBFD_RELOC_IA64_LTOFF_DTPMOD22
,

4144 
	gBFD_RELOC_IA64_DTPREL14
,

4145 
	gBFD_RELOC_IA64_DTPREL22
,

4146 
	gBFD_RELOC_IA64_DTPREL64I
,

4147 
	gBFD_RELOC_IA64_DTPREL32MSB
,

4148 
	gBFD_RELOC_IA64_DTPREL32LSB
,

4149 
	gBFD_RELOC_IA64_DTPREL64MSB
,

4150 
	gBFD_RELOC_IA64_DTPREL64LSB
,

4151 
	gBFD_RELOC_IA64_LTOFF_DTPREL22
,

4155 
	gBFD_RELOC_M68HC11_HI8
,

4159 
	gBFD_RELOC_M68HC11_LO8
,

4163 
	gBFD_RELOC_M68HC11_3B
,

4170 
	gBFD_RELOC_M68HC11_RL_JUMP
,

4176 
	gBFD_RELOC_M68HC11_RL_GROUP
,

4182 
	gBFD_RELOC_M68HC11_LO16
,

4188 
	gBFD_RELOC_M68HC11_PAGE
,

4194 
	gBFD_RELOC_M68HC11_24
,

4198 
	gBFD_RELOC_M68HC12_5B
,

4201 
	gBFD_RELOC_16C_NUM08
,

4202 
	gBFD_RELOC_16C_NUM08_C
,

4203 
	gBFD_RELOC_16C_NUM16
,

4204 
	gBFD_RELOC_16C_NUM16_C
,

4205 
	gBFD_RELOC_16C_NUM32
,

4206 
	gBFD_RELOC_16C_NUM32_C
,

4207 
	gBFD_RELOC_16C_DISP04
,

4208 
	gBFD_RELOC_16C_DISP04_C
,

4209 
	gBFD_RELOC_16C_DISP08
,

4210 
	gBFD_RELOC_16C_DISP08_C
,

4211 
	gBFD_RELOC_16C_DISP16
,

4212 
	gBFD_RELOC_16C_DISP16_C
,

4213 
	gBFD_RELOC_16C_DISP24
,

4214 
	gBFD_RELOC_16C_DISP24_C
,

4215 
	gBFD_RELOC_16C_DISP24a
,

4216 
	gBFD_RELOC_16C_DISP24a_C
,

4217 
	gBFD_RELOC_16C_REG04
,

4218 
	gBFD_RELOC_16C_REG04_C
,

4219 
	gBFD_RELOC_16C_REG04a
,

4220 
	gBFD_RELOC_16C_REG04a_C
,

4221 
	gBFD_RELOC_16C_REG14
,

4222 
	gBFD_RELOC_16C_REG14_C
,

4223 
	gBFD_RELOC_16C_REG16
,

4224 
	gBFD_RELOC_16C_REG16_C
,

4225 
	gBFD_RELOC_16C_REG20
,

4226 
	gBFD_RELOC_16C_REG20_C
,

4227 
	gBFD_RELOC_16C_ABS20
,

4228 
	gBFD_RELOC_16C_ABS20_C
,

4229 
	gBFD_RELOC_16C_ABS24
,

4230 
	gBFD_RELOC_16C_ABS24_C
,

4231 
	gBFD_RELOC_16C_IMM04
,

4232 
	gBFD_RELOC_16C_IMM04_C
,

4233 
	gBFD_RELOC_16C_IMM16
,

4234 
	gBFD_RELOC_16C_IMM16_C
,

4235 
	gBFD_RELOC_16C_IMM20
,

4236 
	gBFD_RELOC_16C_IMM20_C
,

4237 
	gBFD_RELOC_16C_IMM24
,

4238 
	gBFD_RELOC_16C_IMM24_C
,

4239 
	gBFD_RELOC_16C_IMM32
,

4240 
	gBFD_RELOC_16C_IMM32_C
,

4243 
	gBFD_RELOC_CR16_NUM8
,

4244 
	gBFD_RELOC_CR16_NUM16
,

4245 
	gBFD_RELOC_CR16_NUM32
,

4246 
	gBFD_RELOC_CR16_NUM32a
,

4247 
	gBFD_RELOC_CR16_REGREL0
,

4248 
	gBFD_RELOC_CR16_REGREL4
,

4249 
	gBFD_RELOC_CR16_REGREL4a
,

4250 
	gBFD_RELOC_CR16_REGREL14
,

4251 
	gBFD_RELOC_CR16_REGREL14a
,

4252 
	gBFD_RELOC_CR16_REGREL16
,

4253 
	gBFD_RELOC_CR16_REGREL20
,

4254 
	gBFD_RELOC_CR16_REGREL20a
,

4255 
	gBFD_RELOC_CR16_ABS20
,

4256 
	gBFD_RELOC_CR16_ABS24
,

4257 
	gBFD_RELOC_CR16_IMM4
,

4258 
	gBFD_RELOC_CR16_IMM8
,

4259 
	gBFD_RELOC_CR16_IMM16
,

4260 
	gBFD_RELOC_CR16_IMM20
,

4261 
	gBFD_RELOC_CR16_IMM24
,

4262 
	gBFD_RELOC_CR16_IMM32
,

4263 
	gBFD_RELOC_CR16_IMM32a
,

4264 
	gBFD_RELOC_CR16_DISP4
,

4265 
	gBFD_RELOC_CR16_DISP8
,

4266 
	gBFD_RELOC_CR16_DISP16
,

4267 
	gBFD_RELOC_CR16_DISP20
,

4268 
	gBFD_RELOC_CR16_DISP24
,

4269 
	gBFD_RELOC_CR16_DISP24a
,

4270 
	gBFD_RELOC_CR16_SWITCH8
,

4271 
	gBFD_RELOC_CR16_SWITCH16
,

4272 
	gBFD_RELOC_CR16_SWITCH32
,

4273 
	gBFD_RELOC_CR16_GOT_REGREL20
,

4274 
	gBFD_RELOC_CR16_GOTC_REGREL20
,

4275 
	gBFD_RELOC_CR16_GLOB_DAT
,

4278 
	gBFD_RELOC_CRX_REL4
,

4279 
	gBFD_RELOC_CRX_REL8
,

4280 
	gBFD_RELOC_CRX_REL8_CMP
,

4281 
	gBFD_RELOC_CRX_REL16
,

4282 
	gBFD_RELOC_CRX_REL24
,

4283 
	gBFD_RELOC_CRX_REL32
,

4284 
	gBFD_RELOC_CRX_REGREL12
,

4285 
	gBFD_RELOC_CRX_REGREL22
,

4286 
	gBFD_RELOC_CRX_REGREL28
,

4287 
	gBFD_RELOC_CRX_REGREL32
,

4288 
	gBFD_RELOC_CRX_ABS16
,

4289 
	gBFD_RELOC_CRX_ABS32
,

4290 
	gBFD_RELOC_CRX_NUM8
,

4291 
	gBFD_RELOC_CRX_NUM16
,

4292 
	gBFD_RELOC_CRX_NUM32
,

4293 
	gBFD_RELOC_CRX_IMM16
,

4294 
	gBFD_RELOC_CRX_IMM32
,

4295 
	gBFD_RELOC_CRX_SWITCH8
,

4296 
	gBFD_RELOC_CRX_SWITCH16
,

4297 
	gBFD_RELOC_CRX_SWITCH32
,

4301 
	gBFD_RELOC_CRIS_BDISP8
,

4302 
	gBFD_RELOC_CRIS_UNSIGNED_5
,

4303 
	gBFD_RELOC_CRIS_SIGNED_6
,

4304 
	gBFD_RELOC_CRIS_UNSIGNED_6
,

4305 
	gBFD_RELOC_CRIS_SIGNED_8
,

4306 
	gBFD_RELOC_CRIS_UNSIGNED_8
,

4307 
	gBFD_RELOC_CRIS_SIGNED_16
,

4308 
	gBFD_RELOC_CRIS_UNSIGNED_16
,

4309 
	gBFD_RELOC_CRIS_LAPCQ_OFFSET
,

4310 
	gBFD_RELOC_CRIS_UNSIGNED_4
,

4313 
	gBFD_RELOC_CRIS_COPY
,

4314 
	gBFD_RELOC_CRIS_GLOB_DAT
,

4315 
	gBFD_RELOC_CRIS_JUMP_SLOT
,

4316 
	gBFD_RELOC_CRIS_RELATIVE
,

4319 
	gBFD_RELOC_CRIS_32_GOT
,

4322 
	gBFD_RELOC_CRIS_16_GOT
,

4325 
	gBFD_RELOC_CRIS_32_GOTPLT
,

4328 
	gBFD_RELOC_CRIS_16_GOTPLT
,

4331 
	gBFD_RELOC_CRIS_32_GOTREL
,

4334 
	gBFD_RELOC_CRIS_32_PLT_GOTREL
,

4337 
	gBFD_RELOC_CRIS_32_PLT_PCREL
,

4340 
	gBFD_RELOC_CRIS_32_GOT_GD
,

4341 
	gBFD_RELOC_CRIS_16_GOT_GD
,

4342 
	gBFD_RELOC_CRIS_32_GD
,

4343 
	gBFD_RELOC_CRIS_DTP
,

4344 
	gBFD_RELOC_CRIS_32_DTPREL
,

4345 
	gBFD_RELOC_CRIS_16_DTPREL
,

4346 
	gBFD_RELOC_CRIS_32_GOT_TPREL
,

4347 
	gBFD_RELOC_CRIS_16_GOT_TPREL
,

4348 
	gBFD_RELOC_CRIS_32_TPREL
,

4349 
	gBFD_RELOC_CRIS_16_TPREL
,

4350 
	gBFD_RELOC_CRIS_DTPMOD
,

4351 
	gBFD_RELOC_CRIS_32_IE
,

4354 
	gBFD_RELOC_860_COPY
,

4355 
	gBFD_RELOC_860_GLOB_DAT
,

4356 
	gBFD_RELOC_860_JUMP_SLOT
,

4357 
	gBFD_RELOC_860_RELATIVE
,

4358 
	gBFD_RELOC_860_PC26
,

4359 
	gBFD_RELOC_860_PLT26
,

4360 
	gBFD_RELOC_860_PC16
,

4361 
	gBFD_RELOC_860_LOW0
,

4362 
	gBFD_RELOC_860_SPLIT0
,

4363 
	gBFD_RELOC_860_LOW1
,

4364 
	gBFD_RELOC_860_SPLIT1
,

4365 
	gBFD_RELOC_860_LOW2
,

4366 
	gBFD_RELOC_860_SPLIT2
,

4367 
	gBFD_RELOC_860_LOW3
,

4368 
	gBFD_RELOC_860_LOGOT0
,

4369 
	gBFD_RELOC_860_SPGOT0
,

4370 
	gBFD_RELOC_860_LOGOT1
,

4371 
	gBFD_RELOC_860_SPGOT1
,

4372 
	gBFD_RELOC_860_LOGOTOFF0
,

4373 
	gBFD_RELOC_860_SPGOTOFF0
,

4374 
	gBFD_RELOC_860_LOGOTOFF1
,

4375 
	gBFD_RELOC_860_SPGOTOFF1
,

4376 
	gBFD_RELOC_860_LOGOTOFF2
,

4377 
	gBFD_RELOC_860_LOGOTOFF3
,

4378 
	gBFD_RELOC_860_LOPC
,

4379 
	gBFD_RELOC_860_HIGHADJ
,

4380 
	gBFD_RELOC_860_HAGOT
,

4381 
	gBFD_RELOC_860_HAGOTOFF
,

4382 
	gBFD_RELOC_860_HAPC
,

4383 
	gBFD_RELOC_860_HIGH
,

4384 
	gBFD_RELOC_860_HIGOT
,

4385 
	gBFD_RELOC_860_HIGOTOFF
,

4388 
	gBFD_RELOC_OPENRISC_ABS_26
,

4389 
	gBFD_RELOC_OPENRISC_REL_26
,

4392 
	gBFD_RELOC_H8_DIR16A8
,

4393 
	gBFD_RELOC_H8_DIR16R8
,

4394 
	gBFD_RELOC_H8_DIR24A8
,

4395 
	gBFD_RELOC_H8_DIR24R8
,

4396 
	gBFD_RELOC_H8_DIR32A16
,

4399 
	gBFD_RELOC_XSTORMY16_REL_12
,

4400 
	gBFD_RELOC_XSTORMY16_12
,

4401 
	gBFD_RELOC_XSTORMY16_24
,

4402 
	gBFD_RELOC_XSTORMY16_FPTR16
,

4405 
	gBFD_RELOC_RELC
,

4409 
	gBFD_RELOC_XC16X_PAG
,

4410 
	gBFD_RELOC_XC16X_POF
,

4411 
	gBFD_RELOC_XC16X_SEG
,

4412 
	gBFD_RELOC_XC16X_SOF
,

4415 
	gBFD_RELOC_VAX_GLOB_DAT
,

4416 
	gBFD_RELOC_VAX_JMP_SLOT
,

4417 
	gBFD_RELOC_VAX_RELATIVE
,

4420 
	gBFD_RELOC_MT_PC16
,

4423 
	gBFD_RELOC_MT_HI16
,

4426 
	gBFD_RELOC_MT_LO16
,

4429 
	gBFD_RELOC_MT_GNU_VTINHERIT
,

4432 
	gBFD_RELOC_MT_GNU_VTENTRY
,

4435 
	gBFD_RELOC_MT_PCINSN8
,

4438 
	gBFD_RELOC_MSP430_10_PCREL
,

4439 
	gBFD_RELOC_MSP430_16_PCREL
,

4440 
	gBFD_RELOC_MSP430_16
,

4441 
	gBFD_RELOC_MSP430_16_PCREL_BYTE
,

4442 
	gBFD_RELOC_MSP430_16_BYTE
,

4443 
	gBFD_RELOC_MSP430_2X_PCREL
,

4444 
	gBFD_RELOC_MSP430_RL_PCREL
,

4447 
	gBFD_RELOC_IQ2000_OFFSET_16
,

4448 
	gBFD_RELOC_IQ2000_OFFSET_21
,

4449 
	gBFD_RELOC_IQ2000_UHI16
,

4454 
	gBFD_RELOC_XTENSA_RTLD
,

4457 
	gBFD_RELOC_XTENSA_GLOB_DAT
,

4458 
	gBFD_RELOC_XTENSA_JMP_SLOT
,

4459 
	gBFD_RELOC_XTENSA_RELATIVE
,

4463 
	gBFD_RELOC_XTENSA_PLT
,

4471 
	gBFD_RELOC_XTENSA_DIFF8
,

4472 
	gBFD_RELOC_XTENSA_DIFF16
,

4473 
	gBFD_RELOC_XTENSA_DIFF32
,

4479 
	gBFD_RELOC_XTENSA_SLOT0_OP
,

4480 
	gBFD_RELOC_XTENSA_SLOT1_OP
,

4481 
	gBFD_RELOC_XTENSA_SLOT2_OP
,

4482 
	gBFD_RELOC_XTENSA_SLOT3_OP
,

4483 
	gBFD_RELOC_XTENSA_SLOT4_OP
,

4484 
	gBFD_RELOC_XTENSA_SLOT5_OP
,

4485 
	gBFD_RELOC_XTENSA_SLOT6_OP
,

4486 
	gBFD_RELOC_XTENSA_SLOT7_OP
,

4487 
	gBFD_RELOC_XTENSA_SLOT8_OP
,

4488 
	gBFD_RELOC_XTENSA_SLOT9_OP
,

4489 
	gBFD_RELOC_XTENSA_SLOT10_OP
,

4490 
	gBFD_RELOC_XTENSA_SLOT11_OP
,

4491 
	gBFD_RELOC_XTENSA_SLOT12_OP
,

4492 
	gBFD_RELOC_XTENSA_SLOT13_OP
,

4493 
	gBFD_RELOC_XTENSA_SLOT14_OP
,

4497 
	gBFD_RELOC_XTENSA_SLOT0_ALT
,

4498 
	gBFD_RELOC_XTENSA_SLOT1_ALT
,

4499 
	gBFD_RELOC_XTENSA_SLOT2_ALT
,

4500 
	gBFD_RELOC_XTENSA_SLOT3_ALT
,

4501 
	gBFD_RELOC_XTENSA_SLOT4_ALT
,

4502 
	gBFD_RELOC_XTENSA_SLOT5_ALT
,

4503 
	gBFD_RELOC_XTENSA_SLOT6_ALT
,

4504 
	gBFD_RELOC_XTENSA_SLOT7_ALT
,

4505 
	gBFD_RELOC_XTENSA_SLOT8_ALT
,

4506 
	gBFD_RELOC_XTENSA_SLOT9_ALT
,

4507 
	gBFD_RELOC_XTENSA_SLOT10_ALT
,

4508 
	gBFD_RELOC_XTENSA_SLOT11_ALT
,

4509 
	gBFD_RELOC_XTENSA_SLOT12_ALT
,

4510 
	gBFD_RELOC_XTENSA_SLOT13_ALT
,

4511 
	gBFD_RELOC_XTENSA_SLOT14_ALT
,

4515 
	gBFD_RELOC_XTENSA_OP0
,

4516 
	gBFD_RELOC_XTENSA_OP1
,

4517 
	gBFD_RELOC_XTENSA_OP2
,

4522 
	gBFD_RELOC_XTENSA_ASM_EXPAND
,

4528 
	gBFD_RELOC_XTENSA_ASM_SIMPLIFY
,

4531 
	gBFD_RELOC_XTENSA_TLSDESC_FN
,

4532 
	gBFD_RELOC_XTENSA_TLSDESC_ARG
,

4533 
	gBFD_RELOC_XTENSA_TLS_DTPOFF
,

4534 
	gBFD_RELOC_XTENSA_TLS_TPOFF
,

4535 
	gBFD_RELOC_XTENSA_TLS_FUNC
,

4536 
	gBFD_RELOC_XTENSA_TLS_ARG
,

4537 
	gBFD_RELOC_XTENSA_TLS_CALL
,

4540 
	gBFD_RELOC_Z80_DISP8
,

4543 
	gBFD_RELOC_Z8K_DISP7
,

4546 
	gBFD_RELOC_Z8K_CALLR
,

4549 
	gBFD_RELOC_Z8K_IMM4L
,

4552 
	gBFD_RELOC_LM32_CALL
,

4553 
	gBFD_RELOC_LM32_BRANCH
,

4554 
	gBFD_RELOC_LM32_16_GOT
,

4555 
	gBFD_RELOC_LM32_GOTOFF_HI16
,

4556 
	gBFD_RELOC_LM32_GOTOFF_LO16
,

4557 
	gBFD_RELOC_LM32_COPY
,

4558 
	gBFD_RELOC_LM32_GLOB_DAT
,

4559 
	gBFD_RELOC_LM32_JMP_SLOT
,

4560 
	gBFD_RELOC_LM32_RELATIVE
,

4564 
	gBFD_RELOC_MACH_O_SECTDIFF
,

4567 
	gBFD_RELOC_MACH_O_PAIR
,

4571 
	gBFD_RELOC_MICROBLAZE_32_LO
,

4575 
	gBFD_RELOC_MICROBLAZE_32_LO_PCREL
,

4579 
	gBFD_RELOC_MICROBLAZE_32_ROSDA
,

4583 
	gBFD_RELOC_MICROBLAZE_32_RWSDA
,

4587 
	gBFD_RELOC_MICROBLAZE_32_SYM_OP_SYM
,

4592 
	gBFD_RELOC_MICROBLAZE_64_NONE
,

4597 
	gBFD_RELOC_MICROBLAZE_64_GOTPC
,

4602 
	gBFD_RELOC_MICROBLAZE_64_GOT
,

4607 
	gBFD_RELOC_MICROBLAZE_64_PLT
,

4612 
	gBFD_RELOC_MICROBLAZE_64_GOTOFF
,

4616 
	gBFD_RELOC_MICROBLAZE_32_GOTOFF
,

4620 
	gBFD_RELOC_MICROBLAZE_COPY
,

4621 
	gBFD_RELOC_UNUSED
 };

4622 
bfd_ªloc_code_ªÆ
 
	tbfd_ªloc_code_ªÆ_ty≥
;

4623 
ªloc_howto_ty≥
 *
	gbfd_ªloc_ty≥_lookup


4624 (
bfd
 *
	gabfd
, 
bfd_ªloc_code_ªÆ_ty≥
 
	gcode
);

4625 
ªloc_howto_ty≥
 *
	gbfd_ªloc_«me_lookup


4626 (
bfd
 *
	gabfd
, c⁄° *
	gªloc_«me
);

4628 c⁄° *
bfd_gë_ªloc_code_«me
 (
bfd_ªloc_code_ªÆ_ty≥
 
code
);

4632 
	sbfd_symbﬁ


4643 
bfd
 *
	gthe_bfd
;

4647 c⁄° *
	g«me
;

4652 
symvÆue
 
	gvÆue
;

4655 
	#BSF_NO_FLAGS
 0x00

	)

4659 
	#BSF_LOCAL
 (1 << 0)

	)

4663 
	#BSF_GLOBAL
 (1 << 1)

	)

4667 
	#BSF_EXPORT
 
BSF_GLOBAL


	)

4675 
	#BSF_DEBUGGING
 (1 << 2)

	)

4679 
	#BSF_FUNCTION
 (1 << 3)

	)

4682 
	#BSF_KEEP
 (1 << 5)

	)

4683 
	#BSF_KEEP_G
 (1 << 6)

	)

4687 
	#BSF_WEAK
 (1 << 7)

	)

4691 
	#BSF_SECTION_SYM
 (1 << 8)

	)

4695 
	#BSF_OLD_COMMON
 (1 << 9)

	)

4702 
	#BSF_NOT_AT_END
 (1 << 10)

	)

4705 
	#BSF_CONSTRUCTOR
 (1 << 11)

	)

4711 
	#BSF_WARNING
 (1 << 12)

	)

4715 
	#BSF_INDIRECT
 (1 << 13)

	)

4719 
	#BSF_FILE
 (1 << 14)

	)

4722 
	#BSF_DYNAMIC
 (1 << 15)

	)

4726 
	#BSF_OBJECT
 (1 << 16)

	)

4731 
	#BSF_DEBUGGING_RELOC
 (1 << 17)

	)

4734 
	#BSF_THREAD_LOCAL
 (1 << 18)

	)

4738 
	#BSF_RELC
 (1 << 19)

	)

4742 
	#BSF_SRELC
 (1 << 20)

	)

4745 
	#BSF_SYNTHETIC
 (1 << 21)

	)

4751 
	#BSF_GNU_INDIRECT_FUNCTION
 (1 << 22)

	)

4755 
	#BSF_GNU_UNIQUE
 (1 << 23)

	)

4757 
Êagw‹d
 
	gÊags
;

4762 
bfd_£˘i⁄
 *
	g£˘i⁄
;

4767 *
	gp
;

4768 
bfd_vma
 
	gi
;

4770 
	gud©a
;

4772 
	tasymbﬁ
;

4774 
	#bfd_gë_symèb_uµî_bound
(
abfd
) \

4775 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_symèb_uµî_bound
, (abfd))

	)

4777 
bfd_boﬁón
 
bfd_is_loˇl_œbñ
 (
bfd
 *
abfd
, 
asymbﬁ
 *
sym
);

4779 
bfd_boﬁón
 
bfd_is_loˇl_œbñ_«me
 (
bfd
 *
abfd
, c⁄° *
«me
);

4781 
	#bfd_is_loˇl_œbñ_«me
(
abfd
, 
«me
) \

4782 
	`BFD_SEND
 (
abfd
, 
_bfd_is_loˇl_œbñ_«me
, (abfd, 
«me
))

	)

4784 
bfd_boﬁón
 
bfd_is_èrgë_•ecül_symbﬁ
 (
bfd
 *
abfd
, 
asymbﬁ
 *
sym
);

4786 
	#bfd_is_èrgë_•ecül_symbﬁ
(
abfd
, 
sym
) \

4787 
	`BFD_SEND
 (
abfd
, 
_bfd_is_èrgë_•ecül_symbﬁ
, (abfd, 
sym
))

	)

4789 
	#bfd_ˇn⁄iˇlize_symèb
(
abfd
, 
loˇti⁄
) \

4790 
	`BFD_SEND
 (
abfd
, 
_bfd_ˇn⁄iˇlize_symèb
, (abfd, 
loˇti⁄
))

	)

4792 
bfd_boﬁón
 
	gbfd_£t_symèb


4793 (
bfd
 *
	gabfd
, 
asymbﬁ
 **
	gloˇti⁄
, 
	gcou¡
);

4795 
bfd_¥öt_symbﬁ_v™df
 (
bfd
 *
abfd
, *
fûe
, 
asymbﬁ
 *
symbﬁ
);

4797 
	#bfd_make_em±y_symbﬁ
(
abfd
) \

4798 
	`BFD_SEND
 (
abfd
, 
_bfd_make_em±y_symbﬁ
, (abfd))

	)

4800 
asymbﬁ
 *
_bfd_gíîic_make_em±y_symbﬁ
 (
bfd
 *);

4802 
	#bfd_make_debug_symbﬁ
(
abfd
,
±r
,
size
) \

4803 
	`BFD_SEND
 (
abfd
, 
_bfd_make_debug_symbﬁ
, (abfd, 
±r
, 
size
))

	)

4805 
bfd_decode_sym˛ass
 (
asymbﬁ
 *
symbﬁ
);

4807 
bfd_boﬁón
 
bfd_is_undeföed_sym˛ass
 (
sym˛ass
);

4809 
bfd_symbﬁ_öfo
 (
asymbﬁ
 *
symbﬁ
, 
symbﬁ_öfo
 *
ªt
);

4811 
bfd_boﬁón
 
	gbfd_c›y_¥iv©e_symbﬁ_d©a


4812 (
bfd
 *
	gibfd
, 
asymbﬁ
 *
	gisym
, bfd *
	gobfd
,ásymbﬁ *
	gosym
);

4814 
	#bfd_c›y_¥iv©e_symbﬁ_d©a
(
ibfd
, 
isymbﬁ
, 
obfd
, 
osymbﬁ
) \

4815 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_symbﬁ_d©a
, \

4816 (
ibfd
, 
isymbﬁ
, 
obfd
, 
osymbﬁ
))

	)

4819 
	ebfd_dúe˘i⁄


4821 
	gno_dúe˘i⁄
 = 0,

4822 
	gªad_dúe˘i⁄
 = 1,

4823 
	gwrôe_dúe˘i⁄
 = 2,

4824 
	gbŸh_dúe˘i⁄
 = 3

4827 
	sbfd


4830 
	gid
;

4833 c⁄° *
	gfûíame
;

4836 c⁄° 
bfd_èrgë
 *
	gxvec
;

4840 *
	gio°ªam
;

4841 c⁄° 
bfd_iovec
 *
	giovec
;

4845 
bfd
 *
	gÃu_¥ev
, *
	gÃu_√xt
;

4849 
ufûe_±r
 
	gwhîe
;

4852 
	gmtime
;

4855 
	gifd
;

4858 
bfd_f‹m©
 
	gf‹m©
;

4861 
bfd_dúe˘i⁄
 
	gdúe˘i⁄
;

4864 
Êagw‹d
 
	gÊags
;

4873 
	#BFD_NO_FLAGS
 0x00

	)

4876 
	#HAS_RELOC
 0x01

	)

4879 
	#EXEC_P
 0x02

	)

4883 
	#HAS_LINENO
 0x04

	)

4886 
	#HAS_DEBUG
 0x08

	)

4889 
	#HAS_SYMS
 0x10

	)

4893 
	#HAS_LOCALS
 0x20

	)

4896 
	#DYNAMIC
 0x40

	)

4901 
	#WP_TEXT
 0x80

	)

4905 
	#D_PAGED
 0x100

	)

4910 
	#BFD_IS_RELAXABLE
 0x200

	)

4916 
	#BFD_TRADITIONAL_FORMAT
 0x400

	)

4921 
	#BFD_IN_MEMORY
 0x800

	)

4924 
	#HAS_LOAD_PAGE
 0x1000

	)

4928 
	#BFD_LINKER_CREATED
 0x2000

	)

4933 
	#BFD_DETERMINISTIC_OUTPUT
 0x4000

	)

4938 
ufûe_±r
 
	g‹igö
;

4945 
ufûe_±r
 
	g¥oxy_‹igö
;

4948 
bfd_hash_èbÀ
 
	g£˘i⁄_hèb
;

4951 
bfd_£˘i⁄
 *
	g£˘i⁄s
;

4954 
bfd_£˘i⁄
 *
	g£˘i⁄_œ°
;

4957 
	g£˘i⁄_cou¡
;

4961 
bfd_vma
 
	g°¨t_addªss
;

4964 
	gsymcou¡
;

4968 
bfd_symbﬁ
 **
	goutsymbﬁs
;

4971 
	gdynsymcou¡
;

4974 c⁄° 
bfd_¨ch_öfo
 *
	g¨ch_öfo
;

4977 *
	g¨ñt_d©a
;

4978 
bfd
 *
	gmy_¨chive
;

4979 
bfd
 *
	g¨chive_√xt
;

4980 
bfd
 *
	g¨chive_hód
;

4981 
bfd
 *
	g√°ed_¨chives
;

4985 
bfd
 *
	glök_√xt
;

4989 
	g¨chive_∑ss
;

4994 
aout_d©a_°ru˘
 *
	gaout_d©a
;

4995 
¨td©a
 *
	gaout_¨_d©a
;

4996 
_ﬂsys_d©a
 *
	gﬂsys_obj_d©a
;

4997 
_ﬂsys_¨_d©a
 *
	gﬂsys_¨_d©a
;

4998 
coff_td©a
 *
	gcoff_obj_d©a
;

4999 
≥_td©a
 *
	g≥_obj_d©a
;

5000 
xcoff_td©a
 *
	gxcoff_obj_d©a
;

5001 
ecoff_td©a
 *
	gecoff_obj_d©a
;

5002 
õì_d©a_°ru˘
 *
	gõì_d©a
;

5003 
õì_¨_d©a_°ru˘
 *
	gõì_¨_d©a
;

5004 
§ec_d©a_°ru˘
 *
	g§ec_d©a
;

5005 
vîûog_d©a_°ru˘
 *
	gvîûog_d©a
;

5006 
ihex_d©a_°ru˘
 *
	gihex_d©a
;

5007 
ãkhex_d©a_°ru˘
 *
	gãkhex_d©a
;

5008 
ñf_obj_td©a
 *
	gñf_obj_d©a
;

5009 
∆m_obj_td©a
 *
	g∆m_obj_d©a
;

5010 
bout_d©a_°ru˘
 *
	gbout_d©a
;

5011 
mmo_d©a_°ru˘
 *
	gmmo_d©a
;

5012 
sun_c‹e_°ru˘
 *
	gsun_c‹e_d©a
;

5013 
sco5_c‹e_°ru˘
 *
	gsco5_c‹e_d©a
;

5014 
åad_c‹e_°ru˘
 *
	gåad_c‹e_d©a
;

5015 
som_d©a_°ru˘
 *
	gsom_d©a
;

5016 
hpux_c‹e_°ru˘
 *
	ghpux_c‹e_d©a
;

5017 
hµabsd_c‹e_°ru˘
 *
	ghµabsd_c‹e_d©a
;

5018 
sgi_c‹e_°ru˘
 *
	gsgi_c‹e_d©a
;

5019 
lynx_c‹e_°ru˘
 *
	glynx_c‹e_d©a
;

5020 
osf_c‹e_°ru˘
 *
	gosf_c‹e_d©a
;

5021 
cisco_c‹e_°ru˘
 *
	gcisco_c‹e_d©a
;

5022 
vîßdos_d©a_°ru˘
 *
	gvîßdos_d©a
;

5023 
√tbsd_c‹e_°ru˘
 *
	g√tbsd_c‹e_d©a
;

5024 
mach_o_d©a_°ru˘
 *
	gmach_o_d©a
;

5025 
mach_o_Át_d©a_°ru˘
 *
	gmach_o_Át_d©a
;

5026 
∂ugö_d©a_°ru˘
 *
	g∂ugö_d©a
;

5027 
bfd_≥f_d©a_°ru˘
 *
	g≥f_d©a
;

5028 
bfd_≥f_xlib_d©a_°ru˘
 *
	g≥f_xlib_d©a
;

5029 
bfd_sym_d©a_°ru˘
 *
	gsym_d©a
;

5030 *
	g™y
;

5032 
	gtd©a
;

5035 *
	gu§d©a
;

5040 *
	gmem‹y
;

5044 
	gˇchóbÀ
 : 1;

5049 
	gèrgë_deÁu…ed
 : 1;

5052 
	g›íed_⁄˚
 : 1;

5056 
	gmtime_£t
 : 1;

5059 
	gno_exp‹t
 : 1;

5063 
	gouçut_has_begun
 : 1;

5066 
	ghas_¨m≠
 : 1;

5069 
	gis_thö_¨chive
 : 1;

5072 
	ghas_g≠_ö_ñf_shndx
 : 1;

5075 
	ebfd_îr‹


5077 
	gbfd_îr‹_no_îr‹
 = 0,

5078 
	gbfd_îr‹_sy°em_ˇŒ
,

5079 
	gbfd_îr‹_övÆid_èrgë
,

5080 
	gbfd_îr‹_wr⁄g_f‹m©
,

5081 
	gbfd_îr‹_wr⁄g_obje˘_f‹m©
,

5082 
	gbfd_îr‹_övÆid_›î©i⁄
,

5083 
	gbfd_îr‹_no_mem‹y
,

5084 
	gbfd_îr‹_no_symbﬁs
,

5085 
	gbfd_îr‹_no_¨m≠
,

5086 
	gbfd_îr‹_no_m‹e_¨chived_fûes
,

5087 
	gbfd_îr‹_mÆf‹med_¨chive
,

5088 
	gbfd_îr‹_fûe_nŸ_ªcognized
,

5089 
	gbfd_îr‹_fûe_ambiguou¶y_ªcognized
,

5090 
	gbfd_îr‹_no_c⁄ã¡s
,

5091 
	gbfd_îr‹_n⁄ª¥e£¡abÀ_£˘i⁄
,

5092 
	gbfd_îr‹_no_debug_£˘i⁄
,

5093 
	gbfd_îr‹_bad_vÆue
,

5094 
	gbfd_îr‹_fûe_åunˇãd
,

5095 
	gbfd_îr‹_fûe_too_big
,

5096 
	gbfd_îr‹_⁄_öput
,

5097 
	gbfd_îr‹_övÆid_îr‹_code


5099 
	tbfd_îr‹_ty≥
;

5101 
bfd_îr‹_ty≥
 
bfd_gë_îr‹
 ();

5103 
bfd_£t_îr‹
 (
bfd_îr‹_ty≥
 
îr‹_èg
, ...);

5105 c⁄° *
bfd_îrmsg
 (
bfd_îr‹_ty≥
 
îr‹_èg
);

5107 
bfd_≥º‹
 (c⁄° *
mesßge
);

5109 (*
	gbfd_îr‹_h™dÀr_ty≥
) (const *, ...);

5111 
bfd_îr‹_h™dÀr_ty≥
 
bfd_£t_îr‹_h™dÀr
 (bfd_error_handler_type);

5113 
bfd_£t_îr‹_¥ogøm_«me
 (const *);

5115 
bfd_îr‹_h™dÀr_ty≥
 
bfd_gë_îr‹_h™dÀr
 ();

5117 
bfd_gë_ªloc_uµî_bound
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
£˘
);

5119 
	gbfd_ˇn⁄iˇlize_ªloc


5120 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
¨ñít
 **
	gloc
, 
asymbﬁ
 **
	gsyms
);

5122 
	gbfd_£t_ªloc


5123 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
¨ñít
 **
	gªl
, 
	gcou¡
);

5125 
bfd_boﬁón
 
bfd_£t_fûe_Êags
 (
bfd
 *
abfd
, 
Êagw‹d
 
Êags
);

5127 
bfd_gë_¨ch_size
 (
bfd
 *
abfd
);

5129 
bfd_gë_sign_exãnd_vma
 (
bfd
 *
abfd
);

5131 
bfd_boﬁón
 
bfd_£t_°¨t_addªss
 (
bfd
 *
abfd
, 
bfd_vma
 
vma
);

5133 
bfd_gë_gp_size
 (
bfd
 *
abfd
);

5135 
bfd_£t_gp_size
 (
bfd
 *
abfd
, 
i
);

5137 
bfd_vma
 
bfd_sˇn_vma
 (c⁄° *
°rög
, c⁄° **
íd
, 
ba£
);

5139 
bfd_boﬁón
 
bfd_c›y_¥iv©e_hódî_d©a
 (
bfd
 *
ibfd
, bfd *
obfd
);

5141 
	#bfd_c›y_¥iv©e_hódî_d©a
(
ibfd
, 
obfd
) \

5142 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_hódî_d©a
, \

5143 (
ibfd
, 
obfd
))

	)

5144 
bfd_boﬁón
 
bfd_c›y_¥iv©e_bfd_d©a
 (
bfd
 *
ibfd
, bfd *
obfd
);

5146 
	#bfd_c›y_¥iv©e_bfd_d©a
(
ibfd
, 
obfd
) \

5147 
	`BFD_SEND
 (
obfd
, 
_bfd_c›y_¥iv©e_bfd_d©a
, \

5148 (
ibfd
, 
obfd
))

	)

5149 
bfd_boﬁón
 
bfd_mîge_¥iv©e_bfd_d©a
 (
bfd
 *
ibfd
, bfd *
obfd
);

5151 
	#bfd_mîge_¥iv©e_bfd_d©a
(
ibfd
, 
obfd
) \

5152 
	`BFD_SEND
 (
obfd
, 
_bfd_mîge_¥iv©e_bfd_d©a
, \

5153 (
ibfd
, 
obfd
))

	)

5154 
bfd_boﬁón
 
bfd_£t_¥iv©e_Êags
 (
bfd
 *
abfd
, 
Êagw‹d
 
Êags
);

5156 
	#bfd_£t_¥iv©e_Êags
(
abfd
, 
Êags
) \

5157 
	`BFD_SEND
 (
abfd
, 
_bfd_£t_¥iv©e_Êags
, (abfd, 
Êags
))

	)

5158 
	#bfd_sizeof_hódîs
(
abfd
, 
öfo
) \

5159 
	`BFD_SEND
 (
abfd
, 
_bfd_sizeof_hódîs
, (abfd, 
öfo
))

	)

5161 
	#bfd_föd_√¨e°_löe
(
abfd
, 
£c
, 
syms
, 
off
, 
fûe
, 
func
, 
löe
) \

5162 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_√¨e°_löe
, \

5163 (
abfd
, 
£c
, 
syms
, 
off
, 
fûe
, 
func
, 
löe
))

	)

5165 
	#bfd_föd_löe
(
abfd
, 
syms
, 
sym
, 
fûe
, 
löe
) \

5166 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_löe
, \

5167 (
abfd
, 
syms
, 
sym
, 
fûe
, 
löe
))

	)

5169 
	#bfd_föd_ölöî_öfo
(
abfd
, 
fûe
, 
func
, 
löe
) \

5170 
	`BFD_SEND
 (
abfd
, 
_bfd_föd_ölöî_öfo
, \

5171 (
abfd
, 
fûe
, 
func
, 
löe
))

	)

5173 
	#bfd_debug_öfo_°¨t
(
abfd
) \

5174 
	`BFD_SEND
 (
abfd
, 
_bfd_debug_öfo_°¨t
, (abfd))

	)

5176 
	#bfd_debug_öfo_íd
(
abfd
) \

5177 
	`BFD_SEND
 (
abfd
, 
_bfd_debug_öfo_íd
, (abfd))

	)

5179 
	#bfd_debug_öfo_accumuœã
(
abfd
, 
£˘i⁄
) \

5180 
	`BFD_SEND
 (
abfd
, 
_bfd_debug_öfo_accumuœã
, (abfd, 
£˘i⁄
))

	)

5182 
	#bfd_°©_¨ch_ñt
(
abfd
, 
°©
) \

5183 
	`BFD_SEND
 (
abfd
, 
_bfd_°©_¨ch_ñt
,◊bfd, 
°©
))

	)

5185 
	#bfd_upd©e_¨m≠_time°amp
(
abfd
) \

5186 
	`BFD_SEND
 (
abfd
, 
_bfd_upd©e_¨m≠_time°amp
, (abfd))

	)

5188 
	#bfd_£t_¨ch_mach
(
abfd
, 
¨ch
, 
mach
)\

5189 
	`BFD_SEND
 ( 
abfd
, 
_bfd_£t_¨ch_mach
, (abfd, 
¨ch
, 
mach
))

	)

5191 
	#bfd_ªœx_£˘i⁄
(
abfd
, 
£˘i⁄
, 
lök_öfo
, 
agaö
) \

5192 
	`BFD_SEND
 (
abfd
, 
_bfd_ªœx_£˘i⁄
, (abfd, 
£˘i⁄
, 
lök_öfo
, 
agaö
))

	)

5194 
	#bfd_gc_£˘i⁄s
(
abfd
, 
lök_öfo
) \

5195 
	`BFD_SEND
 (
abfd
, 
_bfd_gc_£˘i⁄s
, (abfd, 
lök_öfo
))

	)

5197 
	#bfd_mîge_£˘i⁄s
(
abfd
, 
lök_öfo
) \

5198 
	`BFD_SEND
 (
abfd
, 
_bfd_mîge_£˘i⁄s
, (abfd, 
lök_öfo
))

	)

5200 
	#bfd_is_group_£˘i⁄
(
abfd
, 
£c
) \

5201 
	`BFD_SEND
 (
abfd
, 
_bfd_is_group_£˘i⁄
, (abfd, 
£c
))

	)

5203 
	#bfd_disˇrd_group
(
abfd
, 
£c
) \

5204 
	`BFD_SEND
 (
abfd
, 
_bfd_disˇrd_group
, (abfd, 
£c
))

	)

5206 
	#bfd_lök_hash_èbÀ_¸óã
(
abfd
) \

5207 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_hash_èbÀ_¸óã
, (abfd))

	)

5209 
	#bfd_lök_hash_èbÀ_‰ì
(
abfd
, 
hash
) \

5210 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_hash_èbÀ_‰ì
, (
hash
))

	)

5212 
	#bfd_lök_add_symbﬁs
(
abfd
, 
öfo
) \

5213 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_add_symbﬁs
, (abfd, 
öfo
))

	)

5215 
	#bfd_lök_ju°_syms
(
abfd
, 
£c
, 
öfo
) \

5216 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_ju°_syms
, (
£c
, 
öfo
))

	)

5218 
	#bfd_föÆ_lök
(
abfd
, 
öfo
) \

5219 
	`BFD_SEND
 (
abfd
, 
_bfd_föÆ_lök
, (abfd, 
öfo
))

	)

5221 
	#bfd_‰ì_ˇched_öfo
(
abfd
) \

5222 
	`BFD_SEND
 (
abfd
, 
_bfd_‰ì_ˇched_öfo
, (abfd))

	)

5224 
	#bfd_gë_dy«mic_symèb_uµî_bound
(
abfd
) \

5225 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_dy«mic_symèb_uµî_bound
, (abfd))

	)

5227 
	#bfd_¥öt_¥iv©e_bfd_d©a
(
abfd
, 
fûe
)\

5228 
	`BFD_SEND
 (
abfd
, 
_bfd_¥öt_¥iv©e_bfd_d©a
, (abfd, 
fûe
))

	)

5230 
	#bfd_ˇn⁄iˇlize_dy«mic_symèb
(
abfd
, 
asymbﬁs
) \

5231 
	`BFD_SEND
 (
abfd
, 
_bfd_ˇn⁄iˇlize_dy«mic_symèb
, (abfd, 
asymbﬁs
))

	)

5233 
	#bfd_gë_sy¡hëic_symèb
(
abfd
, 
cou¡
, 
syms
, 
dyncou¡
, 
dynsyms
, 
ªt
) \

5234 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_sy¡hëic_symèb
, (abfd, 
cou¡
, 
syms
, \

5235 
dyncou¡
, 
dynsyms
, 
ªt
))

	)

5237 
	#bfd_gë_dy«mic_ªloc_uµî_bound
(
abfd
) \

5238 
	`BFD_SEND
 (
abfd
, 
_bfd_gë_dy«mic_ªloc_uµî_bound
, (abfd))

	)

5240 
	#bfd_ˇn⁄iˇlize_dy«mic_ªloc
(
abfd
, 
¨ñs
, 
asyms
) \

5241 
	`BFD_SEND
 (
abfd
, 
_bfd_ˇn⁄iˇlize_dy«mic_ªloc
, (abfd, 
¨ñs
, 
asyms
))

	)

5243 
bfd_byã
 *
bfd_gë_ªloˇãd_£˘i⁄_c⁄ã¡s


5244 (
bfd
 *, 
bfd_lök_öfo
 *, 
bfd_lök_‹dî
 *, 
bfd_byã
 *,

5245 
bfd_boﬁón
, 
asymbﬁ
 **);

5247 
bfd_boﬁón
 
bfd_Æt_mach_code
 (
bfd
 *
abfd
, 
Æã∫©ive
);

5249 
	sbfd_¥e£rve


5251 *
	gm¨kî
;

5252 *
	gtd©a
;

5253 
Êagw‹d
 
	gÊags
;

5254 c⁄° 
bfd_¨ch_öfo
 *
	g¨ch_öfo
;

5255 
bfd_£˘i⁄
 *
	g£˘i⁄s
;

5256 
bfd_£˘i⁄
 *
	g£˘i⁄_œ°
;

5257 
	g£˘i⁄_cou¡
;

5258 
bfd_hash_èbÀ
 
	g£˘i⁄_hèb
;

5261 
bfd_boﬁón
 
bfd_¥e£rve_ßve
 (
bfd
 *, 
bfd_¥e£rve
 *);

5263 
bfd_¥e£rve_ª°‹e
 (
bfd
 *, 
bfd_¥e£rve
 *);

5265 
bfd_¥e£rve_föish
 (
bfd
 *, 
bfd_¥e£rve
 *);

5267 
bfd_vma
 
bfd_emul_gë_max∑gesize
 (const *);

5269 
bfd_emul_£t_max∑gesize
 (c⁄° *, 
bfd_vma
);

5271 
bfd_vma
 
bfd_emul_gë_comm⁄∑gesize
 (const *);

5273 
bfd_emul_£t_comm⁄∑gesize
 (c⁄° *, 
bfd_vma
);

5275 *
bfd_dem™gÀ
 (
bfd
 *, const *, );

5278 
symödex
 
	gbfd_gë_√xt_m≠ít


5279 (
bfd
 *
	gabfd
, 
symödex
 
	g¥evious
, 
ˇrsym
 **
	gsym
);

5281 
bfd_boﬁón
 
bfd_£t_¨chive_hód
 (
bfd
 *
ouçut
, bfd *
√w_hód
);

5283 
bfd
 *
bfd_›ír_√xt_¨chived_fûe
 (bfd *
¨chive
, bfd *
¥evious
);

5286 c⁄° *
bfd_c‹e_fûe_Áûög_comm™d
 (
bfd
 *
abfd
);

5288 
bfd_c‹e_fûe_Áûög_sig«l
 (
bfd
 *
abfd
);

5290 
bfd_boﬁón
 
	gc‹e_fûe_m©ches_execuèbÀ_p


5291 (
bfd
 *
	gc‹e_bfd
, bfd *
	gexec_bfd
);

5293 
bfd_boﬁón
 
	ggíîic_c‹e_fûe_m©ches_execuèbÀ_p


5294 (
bfd
 *
	gc‹e_bfd
, bfd *
	gexec_bfd
);

5297 
	#BFD_SEND
(
bfd
, 
mesßge
, 
¨gli°
) \

5298 ((*((
bfd
)->
xvec
->
mesßge
)Ë
¨gli°
)

	)

5300 #ifde‡
DEBUG_BFD_SEND


5301 #unde‡
BFD_SEND


5302 
	#BFD_SEND
(
bfd
, 
mesßge
, 
¨gli°
) \

5303 (((
bfd
Ë&& (bfd)->
xvec
 && (bfd)->xvec->
mesßge
) ? \

5304 ((*((
bfd
)->
xvec
->
mesßge
)Ë
¨gli°
) : \

5305 (
	`bfd_as£π
 (
__FILE__
,
__LINE__
), 
NULL
))

	)

5307 
	#BFD_SEND_FMT
(
bfd
, 
mesßge
, 
¨gli°
) \

5308 (((
bfd
)->
xvec
->
mesßge
[(Ë((bfd)->
f‹m©
)]Ë
¨gli°
)

	)

5310 #ifde‡
DEBUG_BFD_SEND


5311 #unde‡
BFD_SEND_FMT


5312 
	#BFD_SEND_FMT
(
bfd
, 
mesßge
, 
¨gli°
) \

5313 (((
bfd
Ë&& (bfd)->
xvec
 && (bfd)->xvec->
mesßge
) ? \

5314 (((
bfd
)->
xvec
->
mesßge
[(Ë((bfd)->
f‹m©
)]Ë
¨gli°
) : \

5315 (
	`bfd_as£π
 (
__FILE__
,
__LINE__
), 
NULL
))

	)

5318 
	ebfd_Êavour


5320 
	gbfd_èrgë_unknown_Êavour
,

5321 
	gbfd_èrgë_aout_Êavour
,

5322 
	gbfd_èrgë_coff_Êavour
,

5323 
	gbfd_èrgë_ecoff_Êavour
,

5324 
	gbfd_èrgë_xcoff_Êavour
,

5325 
	gbfd_èrgë_ñf_Êavour
,

5326 
	gbfd_èrgë_õì_Êavour
,

5327 
	gbfd_èrgë_∆m_Êavour
,

5328 
	gbfd_èrgë_ﬂsys_Êavour
,

5329 
	gbfd_èrgë_ãkhex_Êavour
,

5330 
	gbfd_èrgë_§ec_Êavour
,

5331 
	gbfd_èrgë_vîûog_Êavour
,

5332 
	gbfd_èrgë_ihex_Êavour
,

5333 
	gbfd_èrgë_som_Êavour
,

5334 
	gbfd_èrgë_os9k_Êavour
,

5335 
	gbfd_èrgë_vîßdos_Êavour
,

5336 
	gbfd_èrgë_msdos_Êavour
,

5337 
	gbfd_èrgë_ovax_Êavour
,

5338 
	gbfd_èrgë_evax_Êavour
,

5339 
	gbfd_èrgë_mmo_Êavour
,

5340 
	gbfd_èrgë_mach_o_Êavour
,

5341 
	gbfd_èrgë_≥f_Êavour
,

5342 
	gbfd_èrgë_≥f_xlib_Êavour
,

5343 
	gbfd_èrgë_sym_Êavour


5346 
	ebfd_ídün
 { 
	gBFD_ENDIAN_BIG
, 
	gBFD_ENDIAN_LITTLE
, 
	gBFD_ENDIAN_UNKNOWN
 };

5349 
bfd_lök_öfo
 
	t_bfd_lök_öfo
;

5351 
	sbfd_èrgë


5354 *
	g«me
;

5358 
bfd_Êavour
 
	gÊavour
;

5361 
bfd_ídün
 
	gbyã‹dî
;

5364 
bfd_ídün
 
	ghódî_byã‹dî
;

5368 
Êagw‹d
 
	gobje˘_Êags
;

5372 
Êagw‹d
 
	g£˘i⁄_Êags
;

5376 
	gsymbﬁ_Àadög_ch¨
;

5379 
	g¨_∑d_ch¨
;

5382 
	g¨_max_«mñí
;

5387 
bfd_uöt64_t
 (*
bfd_gëx64
) (const *);

5388 
bfd_öt64_t
 (*
bfd_gëx_sig√d_64
) (const *);

5389 (*
	gbfd_putx64
Ë(
	gbfd_uöt64_t
, *);

5390 
bfd_vma
 (*
bfd_gëx32
) (const *);

5391 
bfd_sig√d_vma
 (*
bfd_gëx_sig√d_32
) (const *);

5392 (*
	gbfd_putx32
Ë(
	gbfd_vma
, *);

5393 
bfd_vma
 (*
bfd_gëx16
) (const *);

5394 
bfd_sig√d_vma
 (*
bfd_gëx_sig√d_16
) (const *);

5395 (*
	gbfd_putx16
Ë(
	gbfd_vma
, *);

5398 
bfd_uöt64_t
 (*
bfd_h_gëx64
) (const *);

5399 
bfd_öt64_t
 (*
bfd_h_gëx_sig√d_64
) (const *);

5400 (*
	gbfd_h_putx64
Ë(
	gbfd_uöt64_t
, *);

5401 
bfd_vma
 (*
bfd_h_gëx32
) (const *);

5402 
bfd_sig√d_vma
 (*
bfd_h_gëx_sig√d_32
) (const *);

5403 (*
	gbfd_h_putx32
Ë(
	gbfd_vma
, *);

5404 
bfd_vma
 (*
bfd_h_gëx16
) (const *);

5405 
bfd_sig√d_vma
 (*
bfd_h_gëx_sig√d_16
) (const *);

5406 (*
	gbfd_h_putx16
Ë(
	gbfd_vma
, *);

5412 c⁄° 
	gbfd_èrgë
 *(*
	g_bfd_check_f‹m©
[
bfd_ty≥_íd
]Ë(
	gbfd
 *);

5415 
bfd_boﬁón
 (*
_bfd_£t_f‹m©
[
bfd_ty≥_íd
]Ë(
	gbfd
 *);

5418 
bfd_boﬁón
 (*
_bfd_wrôe_c⁄ã¡s
[
bfd_ty≥_íd
]Ë(
	gbfd
 *);

5422 
	#BFD_JUMP_TABLE_GENERIC
(
NAME
) \

5423 
NAME
##
_˛o£_™d_˛ónup
, \

5424 
NAME
##
_bfd_‰ì_ˇched_öfo
, \

5425 
NAME
##
_√w_£˘i⁄_hook
, \

5426 
NAME
##
_gë_£˘i⁄_c⁄ã¡s
, \

5427 
NAME
##
_gë_£˘i⁄_c⁄ã¡s_ö_wödow


	)

5430 
bfd_boﬁón
 (*
_˛o£_™d_˛ónup
Ë(
	gbfd
 *);

5432 
bfd_boﬁón
 (*
_bfd_‰ì_ˇched_öfo
Ë(
	gbfd
 *);

5434 
bfd_boﬁón
 (*
_√w_£˘i⁄_hook
Ë(
	gbfd
 *, 
	g£c_±r
);

5436 
bfd_boﬁón
 (*
_bfd_gë_£˘i⁄_c⁄ã¡s
)

5437 (
	gbfd
 *, 
	g£c_±r
, *, 
	gfûe_±r
, 
	gbfd_size_ty≥
);

5438 
bfd_boﬁón
 (*
_bfd_gë_£˘i⁄_c⁄ã¡s_ö_wödow
)

5439 (
	gbfd
 *, 
	g£c_±r
, 
	gbfd_wödow
 *, 
	gfûe_±r
, 
	gbfd_size_ty≥
);

5442 
	#BFD_JUMP_TABLE_COPY
(
NAME
) \

5443 
NAME
##
_bfd_c›y_¥iv©e_bfd_d©a
, \

5444 
NAME
##
_bfd_mîge_¥iv©e_bfd_d©a
, \

5445 
_bfd_gíîic_öô_¥iv©e_£˘i⁄_d©a
, \

5446 
NAME
##
_bfd_c›y_¥iv©e_£˘i⁄_d©a
, \

5447 
NAME
##
_bfd_c›y_¥iv©e_symbﬁ_d©a
, \

5448 
NAME
##
_bfd_c›y_¥iv©e_hódî_d©a
, \

5449 
NAME
##
_bfd_£t_¥iv©e_Êags
, \

5450 
NAME
##
_bfd_¥öt_¥iv©e_bfd_d©a


	)

5454 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_bfd_d©a
Ë(
	gbfd
 *, bfd *);

5457 
bfd_boﬁón
 (*
_bfd_mîge_¥iv©e_bfd_d©a
Ë(
	gbfd
 *, bfd *);

5460 
	#bfd_öô_¥iv©e_£˘i⁄_d©a
(
ibfd
, 
i£c
, 
obfd
, 
o£c
, 
lök_öfo
) \

5461 
	`BFD_SEND
 (
obfd
, 
_bfd_öô_¥iv©e_£˘i⁄_d©a
, (
ibfd
, 
i£c
, obfd, 
o£c
, 
lök_öfo
))

	)

5462 
bfd_boﬁón
 (*
_bfd_öô_¥iv©e_£˘i⁄_d©a
)

5463 (
	gbfd
 *, 
	g£c_±r
, bfd *, sec_±r, 
	gbfd_lök_öfo
 *);

5466 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_£˘i⁄_d©a
)

5467 (
	gbfd
 *, 
	g£c_±r
, bfd *, sec_ptr);

5470 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_symbﬁ_d©a
)

5471 (
	gbfd
 *, 
	gasymbﬁ
 *, bfd *,ásymbol *);

5474 
bfd_boﬁón
 (*
_bfd_c›y_¥iv©e_hódî_d©a
)

5475 (
	gbfd
 *, bfd *);

5477 
bfd_boﬁón
 (*
_bfd_£t_¥iv©e_Êags
Ë(
	gbfd
 *, 
	gÊagw‹d
);

5480 
bfd_boﬁón
 (*
_bfd_¥öt_¥iv©e_bfd_d©a
Ë(
	gbfd
 *, *);

5483 
	#BFD_JUMP_TABLE_CORE
(
NAME
) \

5484 
NAME
##
_c‹e_fûe_Áûög_comm™d
, \

5485 
NAME
##
_c‹e_fûe_Áûög_sig«l
, \

5486 
NAME
##
_c‹e_fûe_m©ches_execuèbÀ_p


	)

5488 * (*
	g_c‹e_fûe_Áûög_comm™d
Ë(
	gbfd
 *);

5489 (*
	g_c‹e_fûe_Áûög_sig«l
Ë(
	gbfd
 *);

5490 
bfd_boﬁón
 (*
_c‹e_fûe_m©ches_execuèbÀ_p
Ë(
	gbfd
 *, bfd *);

5493 
	#BFD_JUMP_TABLE_ARCHIVE
(
NAME
) \

5494 
NAME
##
_¶uΩ_¨m≠
, \

5495 
NAME
##
_¶uΩ_exãnded_«me_èbÀ
, \

5496 
NAME
##
_c⁄°ru˘_exãnded_«me_èbÀ
, \

5497 
NAME
##
_åunˇã_¨«me
, \

5498 
NAME
##
_wrôe_¨m≠
, \

5499 
NAME
##
_ªad_¨_hdr
, \

5500 
NAME
##
_›ír_√xt_¨chived_fûe
, \

5501 
NAME
##
_gë_ñt_©_ödex
, \

5502 
NAME
##
_gíîic_°©_¨ch_ñt
, \

5503 
NAME
##
_upd©e_¨m≠_time°amp


	)

5505 
bfd_boﬁón
 (*
_bfd_¶uΩ_¨m≠
Ë(
	gbfd
 *);

5506 
bfd_boﬁón
 (*
_bfd_¶uΩ_exãnded_«me_èbÀ
Ë(
	gbfd
 *);

5507 
bfd_boﬁón
 (*
_bfd_c⁄°ru˘_exãnded_«me_èbÀ
)

5508 (
	gbfd
 *, **, 
	gbfd_size_ty≥
 *, const **);

5509 (*
	g_bfd_åunˇã_¨«me
Ë(
	gbfd
 *, const *, *);

5510 
bfd_boﬁón
 (*
wrôe_¨m≠
)

5511 (
	gbfd
 *, , 
	g‹l
 *, , );

5512 * (*
	g_bfd_ªad_¨_hdr_‚
Ë(
	gbfd
 *);

5513 
	gbfd
 * (*
	g›ír_√xt_¨chived_fûe
) (bfd *, bfd *);

5514 
	#bfd_gë_ñt_©_ödex
(
b
,
i
Ë
	`BFD_SEND
 (b, 
_bfd_gë_ñt_©_ödex
, (b,i))

	)

5515 
	gbfd
 * (*
	g_bfd_gë_ñt_©_ödex
Ë(bfd *, 
	gsymödex
);

5516 (*
	g_bfd_°©_¨ch_ñt
Ë(
	gbfd
 *, 
	g°©
 *);

5517 
bfd_boﬁón
 (*
_bfd_upd©e_¨m≠_time°amp
Ë(
	gbfd
 *);

5520 
	#BFD_JUMP_TABLE_SYMBOLS
(
NAME
) \

5521 
NAME
##
_gë_symèb_uµî_bound
, \

5522 
NAME
##
_ˇn⁄iˇlize_symèb
, \

5523 
NAME
##
_make_em±y_symbﬁ
, \

5524 
NAME
##
_¥öt_symbﬁ
, \

5525 
NAME
##
_gë_symbﬁ_öfo
, \

5526 
NAME
##
_bfd_is_loˇl_œbñ_«me
, \

5527 
NAME
##
_bfd_is_èrgë_•ecül_symbﬁ
, \

5528 
NAME
##
_gë_löío
, \

5529 
NAME
##
_föd_√¨e°_löe
, \

5530 
_bfd_gíîic_föd_löe
, \

5531 
NAME
##
_föd_ölöî_öfo
, \

5532 
NAME
##
_bfd_make_debug_symbﬁ
, \

5533 
NAME
##
_ªad_möisymbﬁs
, \

5534 
NAME
##
_möisymbﬁ_to_symbﬁ


	)

5536 (*
	g_bfd_gë_symèb_uµî_bound
Ë(
	gbfd
 *);

5537 (*
	g_bfd_ˇn⁄iˇlize_symèb
)

5538 (
	gbfd
 *, 
	gbfd_symbﬁ
 **);

5539 
	gbfd_symbﬁ
 *

5540 (*
	g_bfd_make_em±y_symbﬁ
Ë(
	gbfd
 *);

5541 (*
	g_bfd_¥öt_symbﬁ
)

5542 (
	gbfd
 *, *, 
	gbfd_symbﬁ
 *, 
	gbfd_¥öt_symbﬁ_ty≥
);

5543 
	#bfd_¥öt_symbﬁ
(
b
,
p
,
s
,
e
Ë
	`BFD_SEND
 (b, 
_bfd_¥öt_symbﬁ
, (b,p,s,e))

	)

5544 (*
	g_bfd_gë_symbﬁ_öfo
)

5545 (
	gbfd
 *, 
	gbfd_symbﬁ
 *, 
	gsymbﬁ_öfo
 *);

5546 
	#bfd_gë_symbﬁ_öfo
(
b
,
p
,
e
Ë
	`BFD_SEND
 (b, 
_bfd_gë_symbﬁ_öfo
, (b,p,e))

	)

5547 
bfd_boﬁón
 (*
_bfd_is_loˇl_œbñ_«me
Ë(
	gbfd
 *, const *);

5548 
bfd_boﬁón
 (*
_bfd_is_èrgë_•ecül_symbﬁ
Ë(
	gbfd
 *, 
	gasymbﬁ
 *);

5549 
	gÆít
 * (*
	g_gë_löío
Ë(
	gbfd
 *, 
	gbfd_symbﬁ
 *);

5550 
bfd_boﬁón
 (*
_bfd_föd_√¨e°_löe
)

5551 (
	gbfd
 *, 
	gbfd_£˘i⁄
 *, 
	gbfd_symbﬁ
 **, 
	gbfd_vma
,

5553 
bfd_boﬁón
 (*
_bfd_föd_löe
)

5554 (
	gbfd
 *, 
	gbfd_symbﬁ
 **, bfd_symbol *,

5556 
bfd_boﬁón
 (*
_bfd_föd_ölöî_öfo
)

5557 (
	gbfd
 *, const **, const **, *);

5561 
	gasymbﬁ
 * (*
	g_bfd_make_debug_symbﬁ
)

5562 (
	gbfd
 *, *, 
	gsize
);

5563 
	#bfd_ªad_möisymbﬁs
(
b
, 
d
, 
m
, 
s
) \

5564 
	`BFD_SEND
 (
b
, 
_ªad_möisymbﬁs
, (b, 
d
, 
m
, 
s
))

	)

5565 (*
	g_ªad_möisymbﬁs
)

5566 (
	gbfd
 *, 
	gbfd_boﬁón
, **, *);

5567 
	#bfd_möisymbﬁ_to_symbﬁ
(
b
, 
d
, 
m
, 
f
) \

5568 
	`BFD_SEND
 (
b
, 
_möisymbﬁ_to_symbﬁ
, (b, 
d
, 
m
, 
f
))

	)

5569 
	gasymbﬁ
 * (*
	g_möisymbﬁ_to_symbﬁ
)

5570 (
	gbfd
 *, 
	gbfd_boﬁón
, c⁄° *, 
	gasymbﬁ
 *);

5573 
	#BFD_JUMP_TABLE_RELOCS
(
NAME
) \

5574 
NAME
##
_gë_ªloc_uµî_bound
, \

5575 
NAME
##
_ˇn⁄iˇlize_ªloc
, \

5576 
NAME
##
_bfd_ªloc_ty≥_lookup
, \

5577 
NAME
##
_bfd_ªloc_«me_lookup


	)

5579 (*
	g_gë_ªloc_uµî_bound
Ë(
	gbfd
 *, 
	g£c_±r
);

5580 (*
	g_bfd_ˇn⁄iˇlize_ªloc
)

5581 (
	gbfd
 *, 
	g£c_±r
, 
	g¨ñít
 **, 
	gbfd_symbﬁ
 **);

5583 
	gªloc_howto_ty≥
 *

5584 (*
	gªloc_ty≥_lookup
Ë(
	gbfd
 *, 
	gbfd_ªloc_code_ªÆ_ty≥
);

5585 
	gªloc_howto_ty≥
 *

5586 (*
	gªloc_«me_lookup
Ë(
	gbfd
 *, const *);

5590 
	#BFD_JUMP_TABLE_WRITE
(
NAME
) \

5591 
NAME
##
_£t_¨ch_mach
, \

5592 
NAME
##
_£t_£˘i⁄_c⁄ã¡s


	)

5594 
bfd_boﬁón
 (*
_bfd_£t_¨ch_mach
)

5595 (
	gbfd
 *, 
	gbfd_¨chôe˘uª
, );

5596 
bfd_boﬁón
 (*
_bfd_£t_£˘i⁄_c⁄ã¡s
)

5597 (
	gbfd
 *, 
	g£c_±r
, c⁄° *, 
	gfûe_±r
, 
	gbfd_size_ty≥
);

5600 
	#BFD_JUMP_TABLE_LINK
(
NAME
) \

5601 
NAME
##
_sizeof_hódîs
, \

5602 
NAME
##
_bfd_gë_ªloˇãd_£˘i⁄_c⁄ã¡s
, \

5603 
NAME
##
_bfd_ªœx_£˘i⁄
, \

5604 
NAME
##
_bfd_lök_hash_èbÀ_¸óã
, \

5605 
NAME
##
_bfd_lök_hash_èbÀ_‰ì
, \

5606 
NAME
##
_bfd_lök_add_symbﬁs
, \

5607 
NAME
##
_bfd_lök_ju°_syms
, \

5608 
NAME
##
_bfd_föÆ_lök
, \

5609 
NAME
##
_bfd_lök_•lô_£˘i⁄
, \

5610 
NAME
##
_bfd_gc_£˘i⁄s
, \

5611 
NAME
##
_bfd_mîge_£˘i⁄s
, \

5612 
NAME
##
_bfd_is_group_£˘i⁄
, \

5613 
NAME
##
_bfd_disˇrd_group
, \

5614 
NAME
##
_£˘i⁄_Æªady_löked
, \

5615 
NAME
##
_bfd_deföe_comm⁄_symbﬁ


	)

5617 (*
	g_bfd_sizeof_hódîs
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

5618 
	gbfd_byã
 * (*
	g_bfd_gë_ªloˇãd_£˘i⁄_c⁄ã¡s
)

5619 (
	gbfd
 *, 
	gbfd_lök_öfo
 *, 
	gbfd_lök_‹dî
 *,

5620 
	gbfd_byã
 *, 
	gbfd_boﬁón
, 
	gbfd_symbﬁ
 **);

5622 
bfd_boﬁón
 (*
_bfd_ªœx_£˘i⁄
)

5623 (
	gbfd
 *, 
	gbfd_£˘i⁄
 *, 
	gbfd_lök_öfo
 *, 
	gbfd_boﬁón
 *);

5627 
	gbfd_lök_hash_èbÀ
 *

5628 (*
	g_bfd_lök_hash_èbÀ_¸óã
Ë(
	gbfd
 *);

5631 (*
	g_bfd_lök_hash_èbÀ_‰ì
Ë(
	gbfd_lök_hash_èbÀ
 *);

5634 
bfd_boﬁón
 (*
_bfd_lök_add_symbﬁs
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

5637 (*
	g_bfd_lök_ju°_syms
Ë(
	ga£˘i⁄
 *, 
	gbfd_lök_öfo
 *);

5641 
bfd_boﬁón
 (*
_bfd_föÆ_lök
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

5644 
bfd_boﬁón
 (*
_bfd_lök_•lô_£˘i⁄
Ë(
	gbfd
 *, 
	gbfd_£˘i⁄
 *);

5647 
bfd_boﬁón
 (*
_bfd_gc_£˘i⁄s
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

5650 
bfd_boﬁón
 (*
_bfd_mîge_£˘i⁄s
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *);

5653 
bfd_boﬁón
 (*
_bfd_is_group_£˘i⁄
Ë(
	gbfd
 *, c⁄° 
	gbfd_£˘i⁄
 *);

5656 
bfd_boﬁón
 (*
_bfd_disˇrd_group
Ë(
	gbfd
 *, 
	gbfd_£˘i⁄
 *);

5660 (*
	g_£˘i⁄_Æªady_löked
Ë(
	gbfd
 *, 
	gbfd_£˘i⁄
 *,

5661 
	gbfd_lök_öfo
 *);

5664 
bfd_boﬁón
 (*
_bfd_deföe_comm⁄_symbﬁ
Ë(
	gbfd
 *, 
	gbfd_lök_öfo
 *,

5665 
	gbfd_lök_hash_íåy
 *);

5668 
	#BFD_JUMP_TABLE_DYNAMIC
(
NAME
) \

5669 
NAME
##
_gë_dy«mic_symèb_uµî_bound
, \

5670 
NAME
##
_ˇn⁄iˇlize_dy«mic_symèb
, \

5671 
NAME
##
_gë_sy¡hëic_symèb
, \

5672 
NAME
##
_gë_dy«mic_ªloc_uµî_bound
, \

5673 
NAME
##
_ˇn⁄iˇlize_dy«mic_ªloc


	)

5676 (*
	g_bfd_gë_dy«mic_symèb_uµî_bound
Ë(
	gbfd
 *);

5678 (*
	g_bfd_ˇn⁄iˇlize_dy«mic_symèb
)

5679 (
	gbfd
 *, 
	gbfd_symbﬁ
 **);

5681 (*
	g_bfd_gë_sy¡hëic_symèb
)

5682 (
	gbfd
 *, , 
	gbfd_symbﬁ
 **, , bfd_symbol **,

5683 
	gbfd_symbﬁ
 **);

5685 (*
	g_bfd_gë_dy«mic_ªloc_uµî_bound
Ë(
	gbfd
 *);

5687 (*
	g_bfd_ˇn⁄iˇlize_dy«mic_ªloc
)

5688 (
	gbfd
 *, 
	g¨ñít
 **, 
	gbfd_symbﬁ
 **);

5691 c⁄° 
bfd_èrgë
 * 
	gÆã∫©ive_èrgë
;

5695 c⁄° *
	gbackíd_d©a
;

5697 } 
	tbfd_èrgë
;

5699 
bfd_boﬁón
 
bfd_£t_deÁu…_èrgë
 (c⁄° *
«me
);

5701 c⁄° 
bfd_èrgë
 *
bfd_föd_èrgë
 (c⁄° *
èrgë_«me
, 
bfd
 *
abfd
);

5703 c⁄° ** 
bfd_èrgë_li°
 ();

5705 c⁄° 
bfd_èrgë
 *
	gbfd_£¨ch_f‹_èrgë


5706 ((*
	g£¨ch_func
Ë(c⁄° 
	gbfd_èrgë
 *, *),

5710 
bfd_boﬁón
 
bfd_check_f‹m©
 (
bfd
 *
abfd
, 
bfd_f‹m©
 
f‹m©
);

5712 
bfd_boﬁón
 
	gbfd_check_f‹m©_m©ches


5713 (
bfd
 *
	gabfd
, 
bfd_f‹m©
 
	gf‹m©
, ***
	gm©chög
);

5715 
bfd_boﬁón
 
bfd_£t_f‹m©
 (
bfd
 *
abfd
, 
bfd_f‹m©
 
f‹m©
);

5717 c⁄° *
bfd_f‹m©_°rög
 (
bfd_f‹m©
 
f‹m©
);

5720 
bfd_boﬁón
 
bfd_lök_•lô_£˘i⁄
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
£c
);

5722 
	#bfd_lök_•lô_£˘i⁄
(
abfd
, 
£c
) \

5723 
	`BFD_SEND
 (
abfd
, 
_bfd_lök_•lô_£˘i⁄
, (abfd, 
£c
))

	)

5725 
bfd_£˘i⁄_Æªady_löked
 (
bfd
 *
abfd
, 
a£˘i⁄
 *
£c
,

5726 
bfd_lök_öfo
 *
öfo
);

5728 
	#bfd_£˘i⁄_Æªady_löked
(
abfd
, 
£c
, 
öfo
) \

5729 
	`BFD_SEND
 (
abfd
, 
_£˘i⁄_Æªady_löked
, (abfd, 
£c
, 
öfo
))

	)

5731 
bfd_boﬁón
 
	gbfd_gíîic_deföe_comm⁄_symbﬁ


5732 (
bfd
 *
	gouçut_bfd
, 
bfd_lök_öfo
 *
	göfo
,

5733 
bfd_lök_hash_íåy
 *
	gh
);

5735 
	#bfd_deföe_comm⁄_symbﬁ
(
ouçut_bfd
, 
öfo
, 
h
) \

5736 
	`BFD_SEND
 (
ouçut_bfd
, 
_bfd_deföe_comm⁄_symbﬁ
, (ouçut_bfd, 
öfo
, 
h
))

	)

5738 
bfd_ñf_vîsi⁄_åì
 * 
	gbfd_föd_vîsi⁄_f‹_sym


5739 (
bfd_ñf_vîsi⁄_åì
 *
	gvîdefs
,

5740 c⁄° *
	gsym_«me
, 
bfd_boﬁón
 *
	ghide
);

5743 
bfd_byã
 *
	gbfd_sim∂e_gë_ªloˇãd_£˘i⁄_c⁄ã¡s


5744 (
bfd
 *
	gabfd
, 
a£˘i⁄
 *
	g£c
, 
bfd_byã
 *
	goutbuf
, 
asymbﬁ
 **
	gsymbﬁ_èbÀ
);

5747 
bfd_boﬁón
 
	gbfd_uncom¥ess_£˘i⁄_c⁄ã¡s


5748 (
bfd_byã
 **
	gbuf„r
, 
bfd_size_ty≥
 *
	gsize
);

5750 #ifde‡
__˝lu•lus


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_EACCESS
 0x200

	)

122 
f˙é
 (
__fd
, 
__cmd
, ...);

130 #i‚de‡
__USE_FILE_OFFSET64


131 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

133 #ifde‡
__REDIRECT


134 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

135 
	`__n⁄nuŒ
 ((1));

137 
	#›í
 
›í64


	)

140 #ifde‡
__USE_LARGEFILE64


141 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

144 #ifde‡
__USE_ATFILE


154 #i‚de‡
__USE_FILE_OFFSET64


155 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

156 
	`__n⁄nuŒ
 ((2));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

160 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

162 
	#›í©
 
›í©64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

167 
	`__n⁄nuŒ
 ((2));

176 #i‚de‡
__USE_FILE_OFFSET64


177 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

179 #ifde‡
__REDIRECT


180 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

181 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

183 
	#¸ót
 
¸ót64


	)

186 #ifde‡
__USE_LARGEFILE64


187 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

190 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

191 && !
deföed
 
__USE_POSIX
))

200 
	#F_ULOCK
 0

	)

201 
	#F_LOCK
 1

	)

202 
	#F_TLOCK
 2

	)

203 
	#F_TEST
 3

	)

205 #i‚de‡
__USE_FILE_OFFSET64


206 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

208 #ifde‡
__REDIRECT


209 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

211 
	#lockf
 
lockf64


	)

214 #ifde‡
__USE_LARGEFILE64


215 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

219 #ifde‡
__USE_XOPEN2K


222 #i‚de‡
__USE_FILE_OFFSET64


223 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

224 
__advi£
Ë
__THROW
;

226 #ifde‡
__REDIRECT_NTH


227 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

228 
__off64_t
 
__Àn
, 
__advi£
),

229 
posix_Ádvi£64
);

231 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

234 #ifde‡
__USE_LARGEFILE64


235 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

236 
__advi£
Ë
__THROW
;

244 #i‚de‡
__USE_FILE_OFFSET64


245 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

247 #ifde‡
__REDIRECT


248 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

249 
__off64_t
 
__Àn
),

250 
posix_ÁŒoˇã64
);

252 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

262 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

263 && 
deföed
 
__va_¨g_∑ck_Àn


264 
	~<bôs/f˙é2.h
>

267 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

283 #i‚de‡
__FAST_MATH__


284 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

289 #ifdef 
__USE_MISC


293 
_IEEE_
 = -1,

294 
_SVID_
,

295 
_XOPEN_
,

296 
_POSIX_
,

297 
_ISOC_


298 } 
	t_LIB_VERSION_TYPE
;

303 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

307 #ifde‡
__USE_SVID


313 #ifde‡
__˝lu•lus


314 
__ex˚±i⁄


316 
ex˚±i⁄


319 
ty≥
;

320 *
«me
;

321 
¨g1
;

322 
¨g2
;

323 
ªtvÆ
;

324 
	}
};

326 #ifde‡
__˝lu•lus


327 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

329 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

332 
	#X_TLOSS
 1.41484755040568800000e+16

	)

335 
	#DOMAIN
 1

	)

336 
	#SING
 2

	)

337 
	#OVERFLOW
 3

	)

338 
	#UNDERFLOW
 4

	)

339 
	#TLOSS
 5

	)

340 
	#PLOSS
 6

	)

343 
	#HUGE
 3.40282347e+38F

	)

347 #ifde‡
__USE_XOPEN


349 
	#MAXFLOAT
 3.40282347e+38F

	)

356 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


357 
	#M_E
 2.7182818284590452354

	)

358 
	#M_LOG2E
 1.4426950408889634074

	)

359 
	#M_LOG10E
 0.43429448190325182765

	)

360 
	#M_LN2
 0.69314718055994530942

	)

361 
	#M_LN10
 2.30258509299404568402

	)

362 
	#M_PI
 3.14159265358979323846

	)

363 
	#M_PI_2
 1.57079632679489661923

	)

364 
	#M_PI_4
 0.78539816339744830962

	)

365 
	#M_1_PI
 0.31830988618379067154

	)

366 
	#M_2_PI
 0.63661977236758134308

	)

367 
	#M_2_SQRTPI
 1.12837916709551257390

	)

368 
	#M_SQRT2
 1.41421356237309504880

	)

369 
	#M_SQRT1_2
 0.70710678118654752440

	)

375 #ifde‡
__USE_GNU


376 
	#M_El
 2.7182818284590452353602874713526625L

	)

377 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

378 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

379 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

380 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

381 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

382 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

383 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

384 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

385 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

386 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

387 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

388 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

395 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


396 
	#__NO_MATH_INLINES
 1

	)

399 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

406 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

407 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

408 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

409 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

410 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

411 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

415 #ifde‡
__USE_EXTERN_INLINES


416 
	~<bôs/m©hölöe.h
>

419 #ifde‡
__USE_ISOC99


423 #i‚de‡
isgª©î


424 
	#isgª©î
(
x
, 
y
) \

425 (
__exãnsi⁄__
 \

426 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

427 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

431 #i‚de‡
isgª©îequÆ


432 
	#isgª©îequÆ
(
x
, 
y
) \

433 (
__exãnsi⁄__
 \

434 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

435 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

439 #i‚de‡
i¶ess


440 
	#i¶ess
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

447 #i‚de‡
i¶es£quÆ


448 
	#i¶es£quÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

455 #i‚de‡
i¶essgª©î


456 
	#i¶essgª©î
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

463 #i‚de‡
isun‹dîed


464 
	#isun‹dîed
(
u
, 
v
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

467 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

472 
	g__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/netinet/udp.h

48 #i‚de‡
__NETINET_UDP_H


49 
	#__NETINET_UDP_H
 1

	)

51 
	~<„©uªs.h
>

52 
	~<sys/ty≥s.h
>

56 #ifde‡
__FAVOR_BSD


58 
	sudphdr


60 
u_öt16_t
 
	muh_•‹t
;

61 
u_öt16_t
 
	muh_dp‹t
;

62 
u_öt16_t
 
	muh_uÀn
;

63 
u_öt16_t
 
	muh_sum
;

68 
	sudphdr


70 
u_öt16_t
 
	msour˚
;

71 
u_öt16_t
 
	mde°
;

72 
u_öt16_t
 
	mÀn
;

73 
u_öt16_t
 
	mcheck
;

78 
	#UDP_CORK
 1

	)

79 
	#UDP_ENCAP
 100

	)

83 
	#UDP_ENCAP_ESPINUDP_NON_IKE
 1

	)

84 
	#UDP_ENCAP_ESPINUDP
 2

	)

85 
	#UDP_ENCAP_L2TPINUDP
 3

	)

87 
	#SOL_UDP
 17

	)

	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/sgtty.h

19 #i‚def 
_SGTTY_H


20 
	#_SGTTY_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/io˘l.h
>

28 
	gsgâyb
;

30 
__BEGIN_DECLS


33 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

36 
	$°ty
 (
__fd
, 
__c⁄°
 
sgâyb
 *
__∑øms
Ë
__THROW
;

39 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

168 #ifde‡
__STDC__


170 
	#°dö
 
°dö


	)

171 
	#°dout
 
°dout


	)

172 
	#°dîr
 
°dîr


	)

175 
__BEGIN_NAMESPACE_STD


177 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

179 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

180 
__END_NAMESPACE_STD


182 #ifde‡
__USE_ATFILE


184 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

185 
__c⁄°
 *
__√w
Ë
__THROW
;

188 
__BEGIN_NAMESPACE_STD


193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

196 #ifde‡
__REDIRECT


197 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

199 
	#tmpfûe
 
tmpfûe64


	)

203 #ifde‡
__USE_LARGEFILE64


204 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

208 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

209 
__END_NAMESPACE_STD


211 #ifde‡
__USE_MISC


214 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

218 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


226 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

227 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

231 
__BEGIN_NAMESPACE_STD


236 
	`f˛o£
 (
FILE
 *
__°ªam
);

241 
	`fÊush
 (
FILE
 *
__°ªam
);

242 
__END_NAMESPACE_STD


244 #ifde‡
__USE_MISC


251 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

254 #ifde‡
__USE_GNU


261 
	`f˛o£Æl
 ();

265 
__BEGIN_NAMESPACE_STD


266 #i‚de‡
__USE_FILE_OFFSET64


271 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

272 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

277 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

278 
__c⁄°
 *
__ª°ri˘
 
__modes
,

279 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifde‡
__REDIRECT


282 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

283 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

284 
__wur
;

285 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

286 
__c⁄°
 *
__ª°ri˘
 
__modes
,

287 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

288 
__wur
;

290 
	#f›í
 
f›í64


	)

291 
	#‰e›í
 
‰e›í64


	)

294 
__END_NAMESPACE_STD


295 #ifde‡
__USE_LARGEFILE64


296 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

298 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
,

300 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 #ifdef 
__USE_POSIX


305 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

308 #ifdef 
__USE_GNU


311 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

312 
__c⁄°
 *
__ª°ri˘
 
__modes
,

313 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

316 #ifde‡
__USE_XOPEN2K8


318 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

319 
__THROW
 
__wur
;

324 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

328 
__BEGIN_NAMESPACE_STD


331 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

335 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

336 
__modes
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifdef 
__USE_BSD


342 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

343 
size_t
 
__size
Ë
__THROW
;

346 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
__BEGIN_NAMESPACE_STD


355 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	$•rötf
 (*
__ª°ri˘
 
__s
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

370 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

371 
_G_va_li°
 
__¨g
);

376 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

378 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

379 
_G_va_li°
 
__¨g
Ë
__THROW
;

380 
__END_NAMESPACE_STD


382 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


383 
__BEGIN_NAMESPACE_C99


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

392 
__END_NAMESPACE_C99


395 #ifde‡
__USE_GNU


398 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

399 
_G_va_li°
 
__¨g
)

400 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

401 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

402 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

403 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

404 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

405 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

406 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

409 #ifde‡
__USE_XOPEN2K8


416 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

417 
_G_va_li°
 
__¨g
)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

419 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

424 
__BEGIN_NAMESPACE_STD


429 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

430 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

440 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

441 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

442 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

443 #ifde‡
__REDIRECT


447 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

448 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_fsˇnf
Ë
__wur
;

450 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_sˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

453 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

454 
__isoc99_ssˇnf
Ë
__THROW
;

456 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

458 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

459 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

460 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

461 
	#fsˇnf
 
__isoc99_fsˇnf


	)

462 
	#sˇnf
 
__isoc99_sˇnf


	)

463 
	#ssˇnf
 
__isoc99_ssˇnf


	)

467 
__END_NAMESPACE_STD


469 #ifdef 
__USE_ISOC99


470 
__BEGIN_NAMESPACE_C99


475 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

476 
_G_va_li°
 
__¨g
)

477 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

483 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

484 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

488 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

489 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

491 #i‡!
deföed
 
__USE_GNU
 \

492 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

493 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

494 #ifde‡
__REDIRECT


498 
	`__REDIRECT
 (
vfsˇnf
,

499 (
FILE
 *
__ª°ri˘
 
__s
,

500 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

501 
__isoc99_vfsˇnf
)

502 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

503 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

504 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

505 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

506 
	`__REDIRECT
 (
vssˇnf
,

507 (
__c⁄°
 *
__ª°ri˘
 
__s
,

508 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

509 
__isoc99_vssˇnf
)

510 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

512 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

513 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

518 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

519 
_G_va_li°
 
__¨g
Ë
__THROW
;

520 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

521 
	#vsˇnf
 
__isoc99_vsˇnf


	)

522 
	#vssˇnf
 
__isoc99_vssˇnf


	)

526 
__END_NAMESPACE_C99


530 
__BEGIN_NAMESPACE_STD


535 
	`fgëc
 (
FILE
 *
__°ªam
);

536 
	`gëc
 (
FILE
 *
__°ªam
);

542 
	`gëch¨
 ();

543 
__END_NAMESPACE_STD


547 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

549 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


554 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

555 
	`gëch¨_u∆ocked
 ();

558 #ifde‡
__USE_MISC


565 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

569 
__BEGIN_NAMESPACE_STD


577 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

578 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

584 
	`putch¨
 (
__c
);

585 
__END_NAMESPACE_STD


589 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

591 #ifde‡
__USE_MISC


598 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

601 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


606 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

607 
	`putch¨_u∆ocked
 (
__c
);

611 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

612 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

614 
	`gëw
 (
FILE
 *
__°ªam
);

617 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

621 
__BEGIN_NAMESPACE_STD


626 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

627 
__wur
;

634 *
	$gës
 (*
__s
Ë
__wur
;

635 
__END_NAMESPACE_STD


637 #ifde‡
__USE_GNU


644 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

645 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

649 #ifdef 
__USE_XOPEN2K8


660 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

661 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

662 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

663 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

664 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

665 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

673 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

674 
size_t
 *
__ª°ri˘
 
__n
,

675 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

679 
__BEGIN_NAMESPACE_STD


684 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

690 
	`puts
 (
__c⁄°
 *
__s
);

697 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

704 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

710 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

712 
__END_NAMESPACE_STD


714 #ifde‡
__USE_GNU


721 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

722 
FILE
 *
__ª°ri˘
 
__°ªam
);

725 #ifde‡
__USE_MISC


732 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

734 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
__BEGIN_NAMESPACE_STD


744 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

749 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

754 
	`ªwöd
 (
FILE
 *
__°ªam
);

755 
__END_NAMESPACE_STD


762 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


763 #i‚de‡
__USE_FILE_OFFSET64


768 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

773 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

775 #ifde‡
__REDIRECT


776 
	`__REDIRECT
 (
f£eko
,

777 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

778 
f£eko64
);

779 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

781 
	#f£eko
 
f£eko64


	)

782 
	#·ñlo
 
·ñlo64


	)

787 
__BEGIN_NAMESPACE_STD


788 #i‚de‡
__USE_FILE_OFFSET64


793 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

798 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

800 #ifde‡
__REDIRECT


801 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

802 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

803 
	`__REDIRECT
 (
f£ços
,

804 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

806 
	#fgëpos
 
fgëpos64


	)

807 
	#f£ços
 
f£ços64


	)

810 
__END_NAMESPACE_STD


812 #ifde‡
__USE_LARGEFILE64


813 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

814 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

815 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

816 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

819 
__BEGIN_NAMESPACE_STD


821 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

823 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

825 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

826 
__END_NAMESPACE_STD


828 #ifde‡
__USE_MISC


830 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

831 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
__BEGIN_NAMESPACE_STD


841 
	`≥º‹
 (
__c⁄°
 *
__s
);

842 
__END_NAMESPACE_STD


848 
	~<bôs/sys_îæi°.h
>

851 #ifdef 
__USE_POSIX


853 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

856 #ifde‡
__USE_MISC


858 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

862 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

863 
deföed
 
__USE_MISC
)

868 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

874 
	`p˛o£
 (
FILE
 *
__°ªam
);

878 #ifdef 
__USE_POSIX


880 *
	$˘îmid
 (*
__s
Ë
__THROW
;

884 #ifde‡
__USE_XOPEN


886 *
	`cu£rid
 (*
__s
);

890 #ifdef 
__USE_GNU


891 
ob°ack
;

894 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

895 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

896 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

897 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

898 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

899 
_G_va_li°
 
__¨gs
)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

904 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


908 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

912 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

915 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


922 
	#__√ed_gë›t


	)

923 
	~<gë›t.h
>

928 #ifde‡
__USE_EXTERN_INLINES


929 
	~<bôs/°dio.h
>

931 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


932 
	~<bôs/°dio2.h
>

934 #ifde‡
__LDBL_COMPAT


935 
	~<bôs/°dio-ldbl.h
>

938 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/dir.h

19 #i‚def 
_SYS_DIR_H


20 
	#_SYS_DIR_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<dúít.h
>

26 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/file.h

19 #i‚def 
_SYS_FILE_H


20 
	#_SYS_FILE_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‚def 
_FCNTL_H


25 
	~<f˙é.h
>

28 
	g__BEGIN_DECLS


33 #i‚de‡
L_SET


34 
	#L_SET
 0

	)

35 
	#L_INCR
 1

	)

36 
	#L_XTND
 2

	)

41 
	#LOCK_SH
 1

	)

42 
	#LOCK_EX
 2

	)

43 
	#LOCK_UN
 8

	)

46 
	#LOCK_NB
 4

	)

51 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

54 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/mount.h

22 #i‚de‡
_SYS_MOUNT_H


23 
	#_SYS_MOUNT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<sys/io˘l.h
>

28 
	#BLOCK_SIZE
 1024

	)

29 
	#BLOCK_SIZE_BITS
 10

	)

36 
	mMS_RDONLY
 = 1,

37 
	#MS_RDONLY
 
MS_RDONLY


	)

38 
	mMS_NOSUID
 = 2,

39 
	#MS_NOSUID
 
MS_NOSUID


	)

40 
	mMS_NODEV
 = 4,

41 
	#MS_NODEV
 
MS_NODEV


	)

42 
	mMS_NOEXEC
 = 8,

43 
	#MS_NOEXEC
 
MS_NOEXEC


	)

44 
	mMS_SYNCHRONOUS
 = 16,

45 
	#MS_SYNCHRONOUS
 
MS_SYNCHRONOUS


	)

46 
	mMS_REMOUNT
 = 32,

47 
	#MS_REMOUNT
 
MS_REMOUNT


	)

48 
	mMS_MANDLOCK
 = 64,

49 
	#MS_MANDLOCK
 
MS_MANDLOCK


	)

50 
	mMS_DIRSYNC
 = 128,

51 
	#MS_DIRSYNC
 
MS_DIRSYNC


	)

52 
	mMS_NOATIME
 = 1024,

53 
	#MS_NOATIME
 
MS_NOATIME


	)

54 
	mMS_NODIRATIME
 = 2048,

55 
	#MS_NODIRATIME
 
MS_NODIRATIME


	)

56 
	mMS_BIND
 = 4096,

57 
	#MS_BIND
 
MS_BIND


	)

58 
	mMS_MOVE
 = 8192,

59 
	#MS_MOVE
 
MS_MOVE


	)

60 
	mMS_REC
 = 16384,

61 
	#MS_REC
 
MS_REC


	)

62 
	mMS_SILENT
 = 32768,

63 
	#MS_SILENT
 
MS_SILENT


	)

64 
	mMS_POSIXACL
 = 1 << 16,

65 
	#MS_POSIXACL
 
MS_POSIXACL


	)

66 
	mMS_UNBINDABLE
 = 1 << 17,

67 
	#MS_UNBINDABLE
 
MS_UNBINDABLE


	)

68 
	mMS_PRIVATE
 = 1 << 18,

69 
	#MS_PRIVATE
 
MS_PRIVATE


	)

70 
	mMS_SLAVE
 = 1 << 19,

71 
	#MS_SLAVE
 
MS_SLAVE


	)

72 
	mMS_SHARED
 = 1 << 20,

73 
	#MS_SHARED
 
MS_SHARED


	)

74 
	mMS_RELATIME
 = 1 << 21,

75 
	#MS_RELATIME
 
MS_RELATIME


	)

76 
	mMS_KERNMOUNT
 = 1 << 22,

77 
	#MS_KERNMOUNT
 
MS_KERNMOUNT


	)

78 
	mMS_I_VERSION
 = 1 << 23,

79 
	#MS_I_VERSION
 
MS_I_VERSION


	)

80 
	mMS_STRICTATIME
 = 1 << 24,

81 
	#MS_STRICTATIME
 
MS_STRICTATIME


	)

82 
	mMS_ACTIVE
 = 1 << 30,

83 
	#MS_ACTIVE
 
MS_ACTIVE


	)

84 
	mMS_NOUSER
 = 1 << 31

85 
	#MS_NOUSER
 
MS_NOUSER


	)

89 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

94 
	#MS_MGC_VAL
 0xc0ed0000

	)

95 
	#MS_MGC_MSK
 0xffff0000

	)

102 
	#BLKROSET
 
	`_IO
(0x12, 93Ë

	)

103 
	#BLKROGET
 
	`_IO
(0x12, 94Ë

	)

104 
	#BLKRRPART
 
	`_IO
(0x12, 95Ë

	)

105 
	#BLKGETSIZE
 
	`_IO
(0x12, 96Ë

	)

106 
	#BLKFLSBUF
 
	`_IO
(0x12, 97Ë

	)

107 
	#BLKRASET
 
	`_IO
(0x12, 98Ë

	)

108 
	#BLKRAGET
 
	`_IO
(0x12, 99Ë

	)

109 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

110 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

111 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

112 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

113 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

114 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

115 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

116 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

122 
	mMNT_FORCE
 = 1,

123 
	#MNT_FORCE
 
MNT_FORCE


	)

124 
	mMNT_DETACH
 = 2,

125 
	#MNT_DETACH
 
MNT_DETACH


	)

126 
	mMNT_EXPIRE
 = 4,

127 
	#MNT_EXPIRE
 
MNT_EXPIRE


	)

128 
	mUMOUNT_NOFOLLOW
 = 8

129 
	#UMOUNT_NOFOLLOW
 
UMOUNT_NOFOLLOW


	)

133 
__BEGIN_DECLS


136 
	$mou¡
 (
__c⁄°
 *
__•ecül_fûe
, __c⁄° *
__dú
,

137 
__c⁄°
 *
__f°y≥
, 
__rwÊag
,

138 
__c⁄°
 *
__d©a
Ë
__THROW
;

141 
	$umou¡
 (
__c⁄°
 *
__•ecül_fûe
Ë
__THROW
;

144 
	$umou¡2
 (
__c⁄°
 *
__•ecül_fûe
, 
__Êags
Ë
__THROW
;

146 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/poll.h

20 #i‚def 
_SYS_POLL_H


21 
	#_SYS_POLL_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/pﬁl.h
>

27 #ifde‡
__USE_GNU


29 
	~<bôs/sig£t.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

37 
	tnfds_t
;

40 
	spﬁlfd


42 
	mfd
;

43 
	mevíts
;

44 
	mªvíts
;

48 
__BEGIN_DECLS


58 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

60 #ifde‡
__USE_GNU


67 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

68 
__c⁄°
 
time•ec
 *
__timeout
,

69 
__c⁄°
 
__sig£t_t
 *
__ss
);

72 
	g__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/statfs.h

20 #i‚def 
_SYS_STATFS_H


21 
	#_SYS_STATFS_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/°©fs.h
>

28 
	g__BEGIN_DECLS


31 #i‚de‡
__USE_FILE_OFFSET64


32 
	$°©fs
 (
__c⁄°
 *
__fûe
, 
°©fs
 *
__buf
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

35 #ifde‡
__REDIRECT_NTH


36 
	`__REDIRECT_NTH
 (
°©fs
,

37 (
__c⁄°
 *
__fûe
, 
°©fs
 *
__buf
),

38 
°©fs64
Ë
	`__n⁄nuŒ
 ((1, 2));

40 
	#°©fs
 
°©fs64


	)

43 #ifde‡
__USE_LARGEFILE64


44 
	$°©fs64
 (
__c⁄°
 *
__fûe
, 
°©fs64
 *
__buf
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$f°©fs
 (
__fûdes
, 
°©fs
 *
__buf
)

52 
__THROW
 
	`__n⁄nuŒ
 ((2));

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
f°©fs
, (
__fûdes
, 
°©fs
 *
__buf
),

56 
f°©fs64
Ë
	`__n⁄nuŒ
 ((2));

58 
	#f°©fs
 
f°©fs64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$f°©fs64
 (
__fûdes
, 
°©fs64
 *
__buf
)

63 
__THROW
 
	`__n⁄nuŒ
 ((2));

66 
__END_DECLS


	@/usr/include/sys/statvfs.h

20 #i‚def 
_SYS_STATVFS_H


21 
	#_SYS_STATVFS_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/°©vfs.h
>

28 #i‚de‡
__USE_FILE_OFFSET64


29 #i‚de‡
__fsblk˙t_t_deföed


30 
__fsblk˙t_t
 
	tfsblk˙t_t
;

31 
	#__fsblk˙t_t_deföed


	)

33 #i‚de‡
__fsfû˙t_t_deföed


34 
__fsfû˙t_t
 
	tfsfû˙t_t
;

35 
	#__fsfû˙t_t_deföed


	)

38 #i‚de‡
__fsblk˙t_t_deföed


39 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

40 
	#__fsblk˙t_t_deföed


	)

42 #i‚de‡
__fsfû˙t_t_deföed


43 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

44 
	#__fsfû˙t_t_deföed


	)

48 
	g__BEGIN_DECLS


51 #i‚de‡
__USE_FILE_OFFSET64


52 
	$°©vfs
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

53 
°©vfs
 *
__ª°ri˘
 
__buf
)

54 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

56 #ifde‡
__REDIRECT_NTH


57 
	`__REDIRECT_NTH
 (
°©vfs
,

58 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

59 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

60 
	`__n⁄nuŒ
 ((1, 2));

62 
	#°©vfs
 
°©vfs64


	)

65 #ifde‡
__USE_LARGEFILE64


66 
	$°©vfs64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

67 
°©vfs64
 *
__ª°ri˘
 
__buf
)

68 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

73 #i‚de‡
__USE_FILE_OFFSET64


74 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

75 
__THROW
 
	`__n⁄nuŒ
 ((2));

77 #ifde‡
__REDIRECT_NTH


78 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

79 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

81 
	#f°©vfs
 
f°©vfs64


	)

84 #ifde‡
__USE_LARGEFILE64


85 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

86 
__THROW
 
	`__n⁄nuŒ
 ((2));

89 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/sys/vfs.h

4 
	~<sys/°©fs.h
>

	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1028 #ifde‡
__REDIRECT_NTH


1029 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1030 
·runˇã64
Ë
__wur
;

1032 
	#·runˇã
 
·runˇã64


	)

1035 #ifde‡
__USE_LARGEFILE64


1036 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1043 || 
deföed
 
__USE_MISC


1047 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1053 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1057 #ifde‡
__USE_MISC


1068 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1073 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1085 
	#F_ULOCK
 0

	)

1086 
	#F_LOCK
 1

	)

1087 
	#F_TLOCK
 2

	)

1088 
	#F_TEST
 3

	)

1090 #i‚de‡
__USE_FILE_OFFSET64


1091 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1093 #ifde‡
__REDIRECT


1094 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1095 
lockf64
Ë
__wur
;

1097 
	#lockf
 
lockf64


	)

1100 #ifde‡
__USE_LARGEFILE64


1101 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1106 #ifde‡
__USE_GNU


1111 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1112 (
__exãnsi⁄__
 \

1113 ({ 
__ªsu…
; \

1114 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1115 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1116 
__ªsu…
; 
	}
}))

	)

1119 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1122 
fd©async
 (
__fûdes
);

1128 #ifdef 
__USE_XOPEN


1130 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1135 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1142 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1143 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1151 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1156 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1157 
	~<bôs/uni°d.h
>

1160 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@machine.def

196 
DEFLINK
(
TOPLEV
, 0x00, "toplev", 26, 0x3f)

197 
	$CONNECT
(
TOPLEV
)

200 
	`DEFLINK
(
CALL_PAL
, 0x00, "call_pal", 0, 0xff)

202 
	#LDA_IMPL
 \

204 
	`SET_GPR
(
RA
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
)); \

205 
	}

	)
}

206 
DEFINST
(
LDA
, 0x08,

208 
I¡ALU
, 
F_ICOMP
,

209 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

211 
	#LDAH_IMPL
 \

213 
	`SET_GPR
(
RA
, 
	`GPR
(
RB
Ë+ 
	`SEXT32
(65536 * 
OFS
)); \

214 }

	)

215 
DEFINST
(
LDAH
, 0x09,

217 
I¡ALU
, 
F_ICOMP
,

218 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

221 
	#LDBU_IMPL
 \

223 
byã_t
 
_ªsu…
; \

224 
md_Áu…_ty≥
 
_Áu…
; \

226 
_ªsu…
 = 
	`READ_BYTE
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

227 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

228 
	`DECLARE_FAULT
(
_Áu…
); \

230 
	`SET_GPR
(
RA
, (
qw‹d_t
)
_ªsu…
); \

231 }

	)

232 
DEFINST
(
LDBU
, 0x0a,

234 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

235 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

237 
	#LDQ_U_IMPL
 \

239 
qw‹d_t
 
_ªsu…
; \

240 
md_Áu…_ty≥
 
_Áu…
; \

242 
_ªsu…
 = 
	`READ_QWORD
((
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
)Ë& ~7, 
_Áu…
); \

243 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

244 
	`DECLARE_FAULT
(
_Áu…
); \

246 
	`SET_GPR
(
RA
, 
_ªsu…
); \

247 }

	)

248 
DEFINST
(
LDQ_U
, 0x0b,

250 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

251 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

254 
	#LDWU_IMPL
 \

256 
hÆf_t
 
_ªsu…
; \

257 
md_Áu…_ty≥
 
_Áu…
; \

259 
_ªsu…
 = 
	`READ_HALF
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

260 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

261 
	`DECLARE_FAULT
(
_Áu…
); \

263 
	`SET_GPR
(
RA
, (
qw‹d_t
)
_ªsu…
); \

264 }

	)

265 
DEFINST
(
LDWU
, 0x0c,

267 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

268 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

271 
	#STW_IMPL
 \

273 
md_Áu…_ty≥
 
_Áu…
; \

275 
	`WRITE_HALF
((
hÆf_t
)
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

276 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

277 
	`DECLARE_FAULT
(
_Áu…
); \

278 }

	)

279 
DEFINST
(
STW
, 0x0d,

281 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

282 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

285 
	#STB_IMPL
 \

287 
md_Áu…_ty≥
 
_Áu…
; \

289 
	`WRITE_BYTE
((
byã_t
)
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

290 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

291 
	`DECLARE_FAULT
(
_Áu…
); \

292 }

	)

293 
DEFINST
(
STB
, 0x0e,

295 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

296 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

298 
	#STQ_U_IMPL
 \

300 
md_Áu…_ty≥
 
_Áu…
; \

302 
	`WRITE_QWORD
(
	`GPR
(
RA
), (GPR(
RB
Ë+ 
	`SEXT
(
OFS
)Ë& ~7, 
_Áu…
); \

303 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

304 
	`DECLARE_FAULT
(
_Áu…
); \

305 }

	)

306 
DEFINST
(
STQ_U
, 0x0f,

308 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

309 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

311 
DEFLINK
(
INTA
, 0x10, "inta", 5, 0x7f)

313 
DEFLINK
(
INTL
, 0x11, "intl", 5, 0x7f)

315 
DEFLINK
(
INTS
, 0x12, "ints", 5, 0x7f)

318 
DEFLINK
(
INTM
, 0x13, "intm", 5, 0x3f)

323 
DEFLINK
(
ITFP
, 0x14, "itfp", 5, 0x3f)

326 
	#FLTV_IMPL
 \

329 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

330 }

	)

331 
DEFINST
(
FLTV
, 0x15,

333 
NA
, NA,

334 
DNA
, DNA, DNA, DNA, DNA)

336 
DEFLINK
(
FLTI
, 0x16, "flti", 5, 0x3f)

338 
DEFLINK
(
FLTL
, 0x17, "fltl", 5, 0x7f)

341 
DEFLINK
(
MISC
, 0x18, "misc", 8, 0xff)

343 
DEFLINK
(
JMPJSR
, 0x1a, "jmpjsr", 14, 0x03)

346 
DEFLINK
(
FPTI
, 0x1c, "fpti", 5, 0x7f)

348 
	#LDF_IMPL
 \

351 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

352 }

	)

353 
DEFINST
(
LDF
, 0x20,

355 
NA
, NA,

356 
DNA
, DNA, DNA, DNA, DNA)

358 
	#LDG_IMPL
 \

361 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

362 }

	)

363 
DEFINST
(
LDG
, 0x21,

365 
NA
, NA,

366 
DNA
, DNA, DNA, DNA, DNA)

368 
	#LDS_IMPL
 \

370 
sqw‹d_t
 
_l⁄ghﬁd
, 
_e1
, 
_e2
; \

371 
md_Áu…_ty≥
 
_Áu…
; \

373 
_l⁄ghﬁd
 = 
	`READ_WORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

374 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

375 
	`DECLARE_FAULT
(
_Áu…
); \

377 
_e1
 = 
_l⁄ghﬁd
 & 0x40000000; \

378 
_e2
 = (
_l⁄ghﬁd
 >> 23Ë& 
	`ULL
(0x7f); \

379 i‡(
_e1
) \

381 i‡(
_e2
 =
	`ULL
(0x3f800000)) \

382 
_e2
 = 
	`ULL
(0x7ff); \

384 
_e2
 |
	`ULL
(0x400); \

388 i‡(
_e2
 == 0) \

389 
_e2
 = 0; \

391 
_e2
 |
	`ULL
(0x380); \

393 
	`SET_FPR_Q
(
RA
, ((
_l⁄ghﬁd
 & 
	`ULL
(0x80000000)) << 32 \

394 | 
_e2
 << 52 | (
_l⁄ghﬁd
 & 
	`ULL
(0x7fffff)) << 29)); \

395 }

	)

396 
DEFINST
(
LDS
, 0x22,

398 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

399 
DFPR
(
RA
), 
DNA
, DNA, 
DGPR
(
RB
), DNA)

401 
	#LDT_IMPL
 \

403 
qw‹d_t
 
_ªsu…
; \

404 
md_Áu…_ty≥
 
_Áu…
; \

406 
_ªsu…
 = 
	`READ_QWORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

407 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

408 
	`DECLARE_FAULT
(
_Áu…
); \

410 
	`SET_FPR_Q
(
RA
, 
_ªsu…
); \

411 }

	)

412 
DEFINST
(
LDT
, 0x23,

414 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

415 
DFPR
(
RA
), 
DNA
, DNA, 
DGPR
(
RB
), DNA)

417 
	#STF_IMPL
 \

420 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

421 }

	)

422 
DEFINST
(
STF
, 0x24,

424 
NA
, NA,

425 
DNA
, DNA, DNA, DNA, DNA)

427 
	#STG_IMPL
 \

430 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

431 }

	)

432 
DEFINST
(
STG
, 0x25,

434 
NA
, NA,

435 
DNA
, DNA, DNA, DNA, DNA)

437 
	#STS_IMPL
 \

439 
sqw‹d_t
 
_l⁄ghﬁd
; \

440 
sw‹d_t
 
_öthﬁd
; \

441 
md_Áu…_ty≥
 
_Áu…
; \

443 
_l⁄ghﬁd
 = 
	`FPR_Q
(
RA
); \

444 
_öthﬁd
 = (((
_l⁄ghﬁd
 >> 32Ë& 
	`ULL
(0xc0000000)) \

445 | ((
_l⁄ghﬁd
 >> 29Ë& 
	`ULL
(0x3fffffff))); \

446 
	`WRITE_WORD
(
_öthﬁd
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

447 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

448 
	`DECLARE_FAULT
(
_Áu…
); \

449 }

	)

450 
DEFINST
(
STS
, 0x26,

452 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

453 
DNA
, DNA, 
DFPR
(
RA
), 
DGPR
(
RB
), DNA)

455 
	#STT_IMPL
 \

457 
md_Áu…_ty≥
 
_Áu…
; \

459 
	`WRITE_QWORD
(
	`FPR_Q
(
RA
), 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

460 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

461 
	`DECLARE_FAULT
(
_Áu…
); \

462 }

	)

463 
DEFINST
(
STT
, 0x27,

465 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

466 
DNA
, DNA, 
DFPR
(
RA
), 
DGPR
(
RB
), DNA)

468 
	#LDL_IMPL
 \

470 
w‹d_t
 
_ªsu…
; \

471 
md_Áu…_ty≥
 
_Áu…
; \

473 
_ªsu…
 = 
	`READ_WORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

474 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

475 
	`DECLARE_FAULT
(
_Áu…
); \

477 
	`SET_GPR
(
RA
, (
sqw‹d_t
)((
sw‹d_t
)
_ªsu…
)); \

478 }

	)

479 
DEFINST
(
LDL
, 0x28,

481 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

482 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

484 
	#LDQ_IMPL
 \

486 
qw‹d_t
 
_ªsu…
; \

487 
md_Áu…_ty≥
 
_Áu…
; \

489 
_ªsu…
 = 
	`READ_QWORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

490 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

491 
	`DECLARE_FAULT
(
_Áu…
); \

493 
	`SET_GPR
(
RA
, 
_ªsu…
); \

494 }

	)

495 
DEFINST
(
LDQ
, 0x29,

497 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

498 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

501 
	#LDL_L_IMPL
 \

503 
w‹d_t
 
_ªsu…
; \

504 
md_Áu…_ty≥
 
_Áu…
; \

506 
_ªsu…
 = 
	`READ_WORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

507 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

508 
	`DECLARE_FAULT
(
_Áu…
); \

510 
	`SET_GPR
(
RA
, (
sqw‹d_t
)((
sw‹d_t
)
_ªsu…
)); \

511 }

	)

512 
DEFINST
(
LDL_L
, 0x2a,

514 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

515 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

518 
	#LDQ_L_IMPL
 \

520 
qw‹d_t
 
_ªsu…
; \

521 
md_Áu…_ty≥
 
_Áu…
; \

523 
_ªsu…
 = 
	`READ_QWORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

524 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

525 
	`DECLARE_FAULT
(
_Áu…
); \

527 
	`SET_GPR
(
RA
, 
_ªsu…
); \

528 }

	)

529 
DEFINST
(
LDQ_L
, 0x2b,

531 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

532 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

534 
	#STL_IMPL
 \

536 
w‹d_t
 
_§c
; \

537 
md_Áu…_ty≥
 
_Áu…
; \

539 
_§c
 = (
w‹d_t
)(
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff)); \

540 
	`WRITE_WORD
(
_§c
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

541 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

542 
	`DECLARE_FAULT
(
_Áu…
); \

543 }

	)

544 
DEFINST
(
STL
, 0x2c,

546 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

547 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

549 
	#STQ_IMPL
 \

551 
md_Áu…_ty≥
 
_Áu…
; \

553 
	`WRITE_QWORD
(
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

554 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

555 
	`DECLARE_FAULT
(
_Áu…
); \

556 }

	)

557 
DEFINST
(
STQ
, 0x2d,

559 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

560 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

563 
	#STL_C_IMPL
 \

565 
w‹d_t
 
_§c
; \

566 
md_Áu…_ty≥
 
_Áu…
; \

568 
_§c
 = (
w‹d_t
)(
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff)); \

569 
	`WRITE_WORD
(
_§c
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

570 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

571 
	`DECLARE_FAULT
(
_Áu…
); \

572 }

	)

573 
DEFINST
(
STL_C
, 0x2e,

575 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

576 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

579 
	#STQ_C_IMPL
 \

581 
md_Áu…_ty≥
 
_Áu…
; \

583 
	`WRITE_QWORD
(
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

584 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

585 
	`DECLARE_FAULT
(
_Áu…
); \

586 }

	)

587 
DEFINST
(
STQ_C
, 0x2f,

589 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

590 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

592 
	#BR_IMPL
 \

594 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

595 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

596 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

597 }

	)

598 
DEFINST
(
BR
, 0x30,

600 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_DIRJMP
,

601 
DGPR
(
RA
), 
DNA
, DNA, DNA, DNA)

603 
	#FBEQ_IMPL
 \

605 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

606 i‡(
	`FPR
(
RA
) == 0.0) \

607 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

608 }

	)

609 
DEFINST
(
FBEQ
, 0x31,

611 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

612 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

614 
	#FBLT_IMPL
 \

616 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

617 i‡(
	`FPR
(
RA
) < 0.0) \

618 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

619 }

	)

620 
DEFINST
(
FBLT
, 0x32,

622 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

623 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

625 
	#FBLE_IMPL
 \

627 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

628 i‡(
	`FPR
(
RA
) <= 0.0) \

629 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

630 }

	)

631 
DEFINST
(
FBLE
, 0x33,

633 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

634 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

638 
	#BSR_IMPL
 \

640 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

641 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

642 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

643 }

	)

644 
DEFINST
(
BSR
, 0x34,

646 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_DIRJMP
,

647 
DGPR
(
RA
), 
DNA
, DNA, DNA, DNA)

649 
	#FBNE_IMPL
 \

651 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

652 i‡(
	`FPR
(
RA
) != 0.0) \

653 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

654 }

	)

655 
DEFINST
(
FBNE
, 0x35,

657 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

658 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

660 
	#FBGE_IMPL
 \

662 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

663 i‡(
	`FPR
(
RA
) >= 0.0) \

664 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

665 }

	)

666 
DEFINST
(
FBGE
, 0x36,

668 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

669 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

671 
	#FBGT_IMPL
 \

673 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

674 i‡(
	`FPR
(
RA
) > 0.0) \

675 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

676 }

	)

677 
DEFINST
(
FBGT
, 0x37,

679 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

680 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

682 
	#BLBC_IMPL
 \

684 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

685 i‡(!(
	`GPR
(
RA
) & 1)) \

686 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

687 }

	)

688 
DEFINST
(
BLBC
, 0x38,

690 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

691 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

693 
	#BEQ_IMPL
 \

695 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

696 i‡(
	`GPR
(
RA
Ë=
	`ULL
(0)) \

697 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

698 }

	)

699 
DEFINST
(
BEQ
, 0x39,

701 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

702 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

704 
	#BLT_IMPL
 \

706 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

707 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë< 
	`LL
(0)) \

708 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

709 }

	)

710 
DEFINST
(
BLT
, 0x3a,

712 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

713 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

715 
	#BLE_IMPL
 \

717 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

718 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë<
	`LL
(0)) \

719 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

720 }

	)

721 
DEFINST
(
BLE
, 0x3b,

723 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

724 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

726 
	#BLBS_IMPL
 \

728 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

729 i‡(
	`GPR
(
RA
) & 1) \

730 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

731 }

	)

732 
DEFINST
(
BLBS
, 0x3c,

734 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

735 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

737 
	#BNE_IMPL
 \

739 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

740 i‡(
	`GPR
(
RA
Ë!
	`ULL
(0)) \

741 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

742 }

	)

743 
DEFINST
(
BNE
, 0x3d,

745 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

746 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

748 
	#BGE_IMPL
 \

750 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

751 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë>
	`LL
(0)) \

752 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

753 }

	)

754 
DEFINST
(
BGE
, 0x3e,

756 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

757 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

759 
	#BGT_IMPL
 \

761 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

762 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë> 
	`LL
(0)) \

763 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

764 }

	)

765 
DEFINST
(
BGT
, 0x3f,

767 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

768 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

771 
	$CONNECT
(
CALL_PAL
)

773 
	#PAL_CALLSYS_IMPL
 \

775 
	`SYSCALL
(
ö°
); \

776 
	}

	)
}

777 
DEFINST
(
PAL_CALLSYS
, 0x83,

779 
NA
, 
F_TRAP
,

780 
DNA
, DNA, DNA, DNA, DNA)

782 
	#PAL_RDUNIQ_IMPL
 \

784 
	`SET_GPR
–0, 
UNIQ
); \

785 }

	)

786 
DEFINST
(
PAL_RDUNIQ
, 0x9e,

788 
NA
, 
F_TRAP
,

789 
DGPR
–0), 
DNA
, 
DUNIQ
, DNA, DNA)

791 
	#PAL_WRUNIQ_IMPL
 \

793 
	`SET_UNIQ
(
	`GPR
( 16)); \

794 }

	)

795 
DEFINST
(
PAL_WRUNIQ
, 0x9f,

797 
NA
, 
F_TRAP
,

798 
DUNIQ
, 
DNA
, 
DGPR
( 16), DNA, DNA)

801 
	$CONNECT
(
INTA
)

803 
	`DEFLINK
(
ADDL_LINK
, 0x00, "addl_link", 12, 1)

805 
	`DEFLINK
(
S4ADDL_LINK
, 0x02, "s4addl_link", 12, 1)

807 
	`DEFLINK
(
SUBL_LINK
, 0x09, "subl_link", 12, 1)

809 
	`DEFLINK
(
S4SUBL_LINK
, 0x0b, "s4subl_link", 12, 1)

811 
	`DEFLINK
(
CMPBGE_LINK
, 0x0f, "cmpbge_link", 12, 1)

813 
	`DEFLINK
(
S8ADDL_LINK
, 0x12, "s8addl_link", 12, 1)

815 
	`DEFLINK
(
S8SUBL_LINK
, 0x1b, "s8subl_link", 12, 1)

817 
	`DEFLINK
(
CMPULT_LINK
, 0x1d, "cmpult_link", 12, 1)

819 
	`DEFLINK
(
ADDQ_LINK
, 0x20, "addq_link", 12, 1)

821 
	`DEFLINK
(
S4ADDQ_LINK
, 0x22, "s4addq_link", 12, 1)

823 
	`DEFLINK
(
SUBQ_LINK
, 0x29, "subq_link", 12, 1)

825 
	`DEFLINK
(
S4SUBQ_LINK
, 0x2b, "s4subq_link", 12, 1)

827 
	`DEFLINK
(
CMPEQ_LINK
, 0x2d, "cmpeq_link", 12, 1)

829 
	`DEFLINK
(
S8ADDQ_LINK
, 0x32, "s8addq_link", 12, 1)

831 
	`DEFLINK
(
S8SUBQ_LINK
, 0x3b, "s8subq_link", 12, 1)

833 
	`DEFLINK
(
CMPULE_LINK
, 0x3d, "cmpule_link", 12, 1)

835 
	`DEFLINK
(
ADDLV_LINK
, 0x40, "addlv_link", 12, 1)

837 
	`DEFLINK
(
SUBLV_LINK
, 0x49, "sublv_link", 12, 1)

839 
	`DEFLINK
(
CMPLT_LINK
, 0x4d, "cmplt_link", 12, 1)

841 
	`DEFLINK
(
ADDQV_LINK
, 0x60, "addqv_link", 12, 1)

843 
	`DEFLINK
(
SUBQV_LINK
, 0x69, "subqv_link", 12, 1)

845 
	`DEFLINK
(
CMPLE_LINK
, 0x6d, "cmple_link", 12, 1)

848 
	$CONNECT
(
ADDL_LINK
)

850 
	#ADDL_IMPL
 \

852 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

853 
	}

	)
}

854 
DEFINST
(
ADDL
, 0x00,

856 
I¡ALU
, 
F_ICOMP
,

857 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

859 
	#ADDLI_IMPL
 \

861 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

862 }

	)

863 
DEFINST
(
ADDLI
, 0x01,

865 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

866 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

869 
	$CONNECT
(
S4ADDL_LINK
)

871 
	#S4ADDL_IMPL
 \

873 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

874 
	}

	)
}

875 
DEFINST
(
S4ADDL
, 0x00,

877 
I¡ALU
, 
F_ICOMP
,

878 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

880 
	#S4ADDLI_IMPL
 \

882 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

883 }

	)

884 
DEFINST
(
S4ADDLI
, 0x01,

886 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

887 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

890 
	$CONNECT
(
SUBL_LINK
)

892 
	#SUBL_IMPL
 \

894 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

895 
	}

	)
}

896 
DEFINST
(
SUBL
, 0x00,

898 
I¡ALU
, 
F_ICOMP
,

899 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

901 
	#SUBLI_IMPL
 \

903 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

904 }

	)

905 
DEFINST
(
SUBLI
, 0x01,

907 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

908 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

911 
	$CONNECT
(
S4SUBL_LINK
)

913 
	#S4SUBL_IMPL
 \

915 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

916 
	}

	)
}

917 
DEFINST
(
S4SUBL
, 0x00,

919 
I¡ALU
, 
F_ICOMP
,

920 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

922 
	#S4SUBLI_IMPL
 \

924 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

925 }

	)

926 
DEFINST
(
S4SUBLI
, 0x01,

928 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

929 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

932 
	$CONNECT
(
CMPBGE_LINK
)

934 
	#CMPBGE_IMPL
 \

936 
_i
; \

937 
qw‹d_t
 
_øv
, 
_rbv
; \

939 
_øv
 = 
	`GPR
(
RA
); \

940 
_rbv
 = 
	`GPR
(
RB
); \

941 
	`SET_GPR
(
RC
, 0); \

943 
_i
 = 56; _i >= 0; _i -= 8) \

945 
	`SET_GPR
(
RC
, 
	`GPR
(RC) << 1); \

946 
	`SET_GPR
(
RC
, (
	`GPR
(RC) \

947 | ((
_øv
 >> 
_i
 & (
sqw‹d_t
)0xff) >= \

948 (
_rbv
 >> 
_i
 & (
sqw‹d_t
)0xff)))); \

950 
	}

	)
}

951 
DEFINST
(
CMPBGE
, 0x00,

953 
I¡ALU
, 
F_ICOMP
,

954 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

956 
	#CMPBGEI_IMPL
 \

958 
_i
; \

959 
qw‹d_t
 
_øv
, 
_rbv
; \

961 
_øv
 = 
	`GPR
(
RA
); \

962 
_rbv
 = 
IMM
; \

963 
	`SET_GPR
(
RC
, 0); \

965 
_i
 = 56; _i >= 0; _i -= 8) \

967 
	`SET_GPR
(
RC
, 
	`GPR
(RC) << 1); \

968 
	`SET_GPR
(
RC
, (
	`GPR
(RC) \

969 | ((
_øv
 >> 
_i
 & (
sqw‹d_t
)0xff) >= \

970 (
_rbv
 >> 
_i
 & (
sqw‹d_t
)0xff)))); \

972 }

	)

973 
DEFINST
(
CMPBGEI
, 0x01,

975 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

976 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

979 
	$CONNECT
(
S8ADDL_LINK
)

981 
	#S8ADDL_IMPL
 \

983 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

984 
	}

	)
}

985 
DEFINST
(
S8ADDL
, 0x00,

987 
I¡ALU
, 
F_ICOMP
,

988 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

990 
	#S8ADDLI_IMPL
 \

992 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

993 }

	)

994 
DEFINST
(
S8ADDLI
, 0x01,

996 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

997 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1000 
	$CONNECT
(
S8SUBL_LINK
)

1002 
	#S8SUBL_IMPL
 \

1004 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1005 
	}

	)
}

1006 
DEFINST
(
S8SUBL
, 0x00,

1008 
I¡ALU
, 
F_ICOMP
,

1009 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1011 
	#S8SUBLI_IMPL
 \

1013 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1014 }

	)

1015 
DEFINST
(
S8SUBLI
, 0x01,

1017 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1018 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1021 
	$CONNECT
(
CMPULT_LINK
)

1023 
	#CMPULT_IMPL
 \

1025 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë< (qw‹d_t)GPR(
RB
)); \

1026 
	}

	)
}

1027 
DEFINST
(
CMPULT
, 0x00,

1029 
I¡ALU
, 
F_ICOMP
,

1030 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1032 
	#CMPULTI_IMPL
 \

1034 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë< (qw‹d_t)
IMM
); \

1035 }

	)

1036 
DEFINST
(
CMPULTI
, 0x01,

1038 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1039 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1042 
	$CONNECT
(
ADDQ_LINK
)

1044 
	#ADDQ_IMPL
 \

1046 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ GPR(
RB
)); \

1047 
	}

	)
}

1048 
DEFINST
(
ADDQ
, 0x00,

1050 
I¡ALU
, 
F_ICOMP
,

1051 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1053 
	#ADDQI_IMPL
 \

1055 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ 
IMM
); \

1056 }

	)

1057 
DEFINST
(
ADDQI
, 0x01,

1059 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1060 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1063 
	$CONNECT
(
S4ADDQ_LINK
)

1065 
	#S4ADDQ_IMPL
 \

1067 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë+ GPR(
RB
)); \

1068 
	}

	)
}

1069 
DEFINST
(
S4ADDQ
, 0x00,

1071 
I¡ALU
, 
F_ICOMP
,

1072 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1074 
	#S4ADDQI_IMPL
 \

1076 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë+ 
IMM
); \

1077 }

	)

1078 
DEFINST
(
S4ADDQI
, 0x01,

1080 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1081 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1084 
	$CONNECT
(
SUBQ_LINK
)

1086 
	#SUBQ_IMPL
 \

1088 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- GPR(
RB
)); \

1089 
	}

	)
}

1090 
DEFINST
(
SUBQ
, 0x00,

1092 
I¡ALU
, 
F_ICOMP
,

1093 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1095 
	#SUBQI_IMPL
 \

1097 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- 
IMM
); \

1098 }

	)

1099 
DEFINST
(
SUBQI
, 0x01,

1101 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1102 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1105 
	$CONNECT
(
S4SUBQ_LINK
)

1107 
	#S4SUBQ_IMPL
 \

1109 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë- GPR(
RB
)); \

1110 
	}

	)
}

1111 
DEFINST
(
S4SUBQ
, 0x00,

1113 
I¡ALU
, 
F_ICOMP
,

1114 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1116 
	#S4SUBQI_IMPL
 \

1118 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë- 
IMM
); \

1119 }

	)

1120 
DEFINST
(
S4SUBQI
, 0x01,

1122 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1123 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1126 
	$CONNECT
(
CMPEQ_LINK
)

1128 
	#CMPEQ_IMPL
 \

1130 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë=GPR(
RB
)); \

1131 
	}

	)
}

1132 
DEFINST
(
CMPEQ
, 0x00,

1134 
I¡ALU
, 
F_ICOMP
,

1135 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1137 
	#CMPEQI_IMPL
 \

1139 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë=(
qw‹d_t
)
IMM
); \

1140 }

	)

1141 
DEFINST
(
CMPEQI
, 0x01,

1143 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1144 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1147 
	$CONNECT
(
S8ADDQ_LINK
)

1149 
	#S8ADDQ_IMPL
 \

1151 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë+ GPR(
RB
)); \

1152 
	}

	)
}

1153 
DEFINST
(
S8ADDQ
, 0x00,

1155 
I¡ALU
, 
F_ICOMP
,

1156 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1158 
	#S8ADDQI_IMPL
 \

1160 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë+ 
IMM
); \

1161 }

	)

1162 
DEFINST
(
S8ADDQI
, 0x01,

1164 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1165 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1168 
	$CONNECT
(
S8SUBQ_LINK
)

1170 
	#S8SUBQ_IMPL
 \

1172 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë- GPR(
RB
)); \

1173 
	}

	)
}

1174 
DEFINST
(
S8SUBQ
, 0x00,

1176 
I¡ALU
, 
F_ICOMP
,

1177 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1179 
	#S8SUBQI_IMPL
 \

1181 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë- 
IMM
); \

1182 }

	)

1183 
DEFINST
(
S8SUBQI
, 0x01,

1185 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1186 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1189 
	$CONNECT
(
CMPULE_LINK
)

1191 
	#CMPULE_IMPL
 \

1193 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë<(qw‹d_t)GPR(
RB
)); \

1194 
	}

	)
}

1195 
DEFINST
(
CMPULE
, 0x00,

1197 
I¡ALU
, 
F_ICOMP
,

1198 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1200 
	#CMPULEI_IMPL
 \

1202 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë<(qw‹d_t)
IMM
); \

1203 }

	)

1204 
DEFINST
(
CMPULEI
, 0x01,

1206 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1207 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1210 
	$CONNECT
(
ADDLV_LINK
)

1212 
	#ADDLV_IMPL
 \

1215 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1216 
	}

	)
}

1217 
DEFINST
(
ADDLV
, 0x00,

1219 
I¡ALU
, 
F_ICOMP
,

1220 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1222 
	#ADDLVI_IMPL
 \

1225 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1226 }

	)

1227 
DEFINST
(
ADDLVI
, 0x01,

1229 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1230 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1233 
	$CONNECT
(
SUBLV_LINK
)

1235 
	#SUBLV_IMPL
 \

1237 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1238 
	}

	)
}

1239 
DEFINST
(
SUBLV
, 0x00,

1241 
I¡ALU
, 
F_ICOMP
,

1242 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1244 
	#SUBLVI_IMPL
 \

1246 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1247 }

	)

1248 
DEFINST
(
SUBLVI
, 0x01,

1250 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1251 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1254 
	$CONNECT
(
CMPLT_LINK
)

1256 
	#CMPLT_IMPL
 \

1258 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë< (sqw‹d_t)GPR(
RB
)); \

1259 
	}

	)
}

1260 
DEFINST
(
CMPLT
, 0x00,

1262 
I¡ALU
, 
F_ICOMP
,

1263 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1265 
	#CMPLTI_IMPL
 \

1267 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë< (sqw‹d_t)
IMM
); \

1268 }

	)

1269 
DEFINST
(
CMPLTI
, 0x01,

1271 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1272 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1275 
	$CONNECT
(
ADDQV_LINK
)

1277 
	#ADDQV_IMPL
 \

1280 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ GPR(
RB
)); \

1281 
	}

	)
}

1282 
DEFINST
(
ADDQV
, 0x00,

1284 
I¡ALU
, 
F_ICOMP
,

1285 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1287 
	#ADDQVI_IMPL
 \

1290 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ 
IMM
); \

1291 }

	)

1292 
DEFINST
(
ADDQVI
, 0x01,

1294 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1295 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1298 
	$CONNECT
(
SUBQV_LINK
)

1300 
	#SUBQV_IMPL
 \

1303 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- GPR(
RB
)); \

1304 
	}

	)
}

1305 
DEFINST
(
SUBQV
, 0x00,

1307 
I¡ALU
, 
F_ICOMP
,

1308 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1310 
	#SUBQVI_IMPL
 \

1313 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- 
IMM
); \

1314 }

	)

1315 
DEFINST
(
SUBQVI
, 0x01,

1317 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1318 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1321 
	$CONNECT
(
CMPLE_LINK
)

1323 
	#CMPLE_IMPL
 \

1325 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë<(sqw‹d_t)GPR(
RB
)); \

1326 
	}

	)
}

1327 
DEFINST
(
CMPLE
, 0x00,

1329 
I¡ALU
, 
F_ICOMP
,

1330 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1332 
	#CMPLEI_IMPL
 \

1334 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë<(sqw‹d_t)
IMM
); \

1335 }

	)

1336 
DEFINST
(
CMPLEI
, 0x01,

1338 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1339 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1342 
	$CONNECT
(
INTL
)

1344 
	`DEFLINK
(
AND_LINK
, 0x00, "and_link", 12, 1)

1346 
	`DEFLINK
(
BIC_LINK
, 0x08, "bic_link", 12, 1)

1348 
	`DEFLINK
(
CMOVLBS_LINK
, 0x14, "cmovlbs_link", 12, 1)

1350 
	`DEFLINK
(
CMOVLBC_LINK
, 0x16, "cmovlbc_link", 12, 1)

1353 
	`DEFLINK
(
BIS_LINK
, 0x20, "bis_link", 12, 1)

1355 
	`DEFLINK
(
CMOVEQ_LINK
, 0x24, "cmoveq_link", 12, 1)

1357 
	`DEFLINK
(
CMOVNE_LINK
, 0x26, "cmovne_link", 12, 1)

1359 
	`DEFLINK
(
ORNOT_LINK
, 0x28, "ornot_link", 12, 1)

1361 
	`DEFLINK
(
XOR_LINK
, 0x40, "xor_link", 12, 1)

1363 
	`DEFLINK
(
CMOVLT_LINK
, 0x44, "cmovlt_link", 12, 1)

1365 
	`DEFLINK
(
CMOVGE_LINK
, 0x46, "cmovge_link", 12, 1)

1367 
	`DEFLINK
(
EQV_LINK
, 0x48, "eqv_link", 12, 1)

1370 
	`DEFLINK
(
AMASK_LINK
, 0x61, "amask_link", 12, 1)

1372 
	`DEFLINK
(
CMOVLE_LINK
, 0x64, "cmovle_link", 12, 1)

1374 
	`DEFLINK
(
CMOVGT_LINK
, 0x66, "cmovgt_link", 12, 1)

1381 
	#IMPLVER_IMPL
 \

1383 
	`SET_GPR
(
RC
, 
	`ULL
(2)); \

1384 
	}

	)
}

1385 
DEFINST
(
IMPLVER
, 0x6c,

1387 
NA
, NA,

1388 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

1391 
	$CONNECT
(
AND_LINK
)

1393 
	#AND_IMPL
 \

1395 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& GPR(
RB
)); \

1396 
	}

	)
}

1397 
DEFINST
(
AND
, 0x00,

1399 
I¡ALU
, 
F_ICOMP
,

1400 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1402 
	#ANDI_IMPL
 \

1404 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& 
IMM
); \

1405 }

	)

1406 
DEFINST
(
ANDI
, 0x01,

1408 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1409 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1412 
	$CONNECT
(
BIC_LINK
)

1414 
	#BIC_IMPL
 \

1416 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~GPR(
RB
)); \

1417 
	}

	)
}

1418 
DEFINST
(
BIC
, 0x00,

1420 
I¡ALU
, 
F_ICOMP
,

1421 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1423 
	#BICI_IMPL
 \

1425 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~
IMM
); \

1426 }

	)

1427 
DEFINST
(
BICI
, 0x01,

1429 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1430 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1433 
	$CONNECT
(
CMOVLBS_LINK
)

1435 
	#CMOVLBS_IMPL
 \

1437 i‡(
	`GPR
(
RA
) & 1) \

1438 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1439 
	}

	)
}

1440 
DEFINST
(
CMOVLBS
, 0x00,

1442 
I¡ALU
, 
F_ICOMP
,

1443 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1445 
	#CMOVLBSI_IMPL
 \

1447 i‡(
	`GPR
(
RA
) & 1) \

1448 
	`SET_GPR
(
RC
, 
IMM
); \

1449 }

	)

1450 
DEFINST
(
CMOVLBSI
, 0x01,

1452 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1453 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1456 
	$CONNECT
(
CMOVLBC_LINK
)

1458 
	#CMOVLBC_IMPL
 \

1460 i‡((
	`GPR
(
RA
) & 1) == 0) \

1461 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1462 
	}

	)
}

1463 
DEFINST
(
CMOVLBC
, 0x00,

1465 
I¡ALU
, 
F_ICOMP
,

1466 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1468 
	#CMOVLBCI_IMPL
 \

1470 i‡((
	`GPR
(
RA
) & 1) == 0) \

1471 
	`SET_GPR
(
RC
, 
IMM
); \

1472 }

	)

1473 
DEFINST
(
CMOVLBCI
, 0x01,

1475 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1476 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1479 
	$CONNECT
(
BIS_LINK
)

1481 
	#BIS_IMPL
 \

1483 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| GPR(
RB
)); \

1484 
	}

	)
}

1485 
DEFINST
(
BIS
, 0x00,

1487 
I¡ALU
, 
F_ICOMP
,

1488 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1490 
	#BISI_IMPL
 \

1492 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| 
IMM
); \

1493 }

	)

1494 
DEFINST
(
BISI
, 0x01,

1496 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1497 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1500 
	$CONNECT
(
CMOVEQ_LINK
)

1502 
	#CMOVEQ_IMPL
 \

1504 i‡(
	`GPR
(
RA
) == 0) \

1505 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1506 
	}

	)
}

1507 
DEFINST
(
CMOVEQ
, 0x00,

1509 
I¡ALU
, 
F_ICOMP
,

1510 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1512 
	#CMOVEQI_IMPL
 \

1514 i‡(
	`GPR
(
RA
) == 0) \

1515 
	`SET_GPR
(
RC
, 
IMM
); \

1516 }

	)

1517 
DEFINST
(
CMOVEQI
, 0x01,

1519 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1520 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1523 
	$CONNECT
(
CMOVNE_LINK
)

1525 
	#CMOVNE_IMPL
 \

1527 i‡(
	`GPR
(
RA
) != 0) \

1528 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1529 
	}

	)
}

1530 
DEFINST
(
CMOVNE
, 0x00,

1532 
I¡ALU
, 
F_ICOMP
,

1533 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1535 
	#CMOVNEI_IMPL
 \

1537 i‡(
	`GPR
(
RA
) != 0) \

1538 
	`SET_GPR
(
RC
, 
IMM
); \

1539 }

	)

1540 
DEFINST
(
CMOVNEI
, 0x01,

1542 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1543 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1546 
	$CONNECT
(
ORNOT_LINK
)

1548 
	#ORNOT_IMPL
 \

1550 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| ~GPR(
RB
)); \

1551 
	}

	)
}

1552 
DEFINST
(
ORNOT
, 0x00,

1554 
I¡ALU
, 
F_ICOMP
,

1555 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1557 
	#ORNOTI_IMPL
 \

1559 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| ~
IMM
); \

1560 }

	)

1561 
DEFINST
(
ORNOTI
, 0x01,

1563 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1564 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1567 
	$CONNECT
(
XOR_LINK
)

1569 
	#XOR_IMPL
 \

1571 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ GPR(
RB
)); \

1572 
	}

	)
}

1573 
DEFINST
(
XOR
, 0x00,

1575 
I¡ALU
, 
F_ICOMP
,

1576 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1578 
	#XORI_IMPL
 \

1580 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ 
IMM
); \

1581 }

	)

1582 
DEFINST
(
XORI
, 0x01,

1584 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1585 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1588 
	$CONNECT
(
CMOVLT_LINK
)

1590 
	#CMOVLT_IMPL
 \

1592 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë< 
	`LL
(0)) \

1593 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1594 
	}

	)
}

1595 
DEFINST
(
CMOVLT
, 0x00,

1597 
I¡ALU
, 
F_ICOMP
,

1598 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1600 
	#CMOVLTI_IMPL
 \

1602 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë< 
	`LL
(0)) \

1603 
	`SET_GPR
(
RC
, 
IMM
); \

1604 }

	)

1605 
DEFINST
(
CMOVLTI
, 0x01,

1607 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1608 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1611 
	$CONNECT
(
CMOVGE_LINK
)

1613 
	#CMOVGE_IMPL
 \

1615 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë>
	`LL
(0)) \

1616 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1617 
	}

	)
}

1618 
DEFINST
(
CMOVGE
, 0x00,

1620 
I¡ALU
, 
F_ICOMP
,

1621 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1623 
	#CMOVGEI_IMPL
 \

1625 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë>
	`LL
(0)) \

1626 
	`SET_GPR
(
RC
, 
IMM
); \

1627 }

	)

1628 
DEFINST
(
CMOVGEI
, 0x01,

1630 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1631 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1634 
	$CONNECT
(
EQV_LINK
)

1636 
	#EQV_IMPL
 \

1638 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ ~GPR(
RB
)); \

1639 
	}

	)
}

1640 
DEFINST
(
EQV
, 0x00,

1642 
I¡ALU
, 
F_ICOMP
,

1643 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1645 
	#EQVI_IMPL
 \

1647 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ ~
IMM
); \

1648 }

	)

1649 
DEFINST
(
EQVI
, 0x01,

1651 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1652 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1656 
	$CONNECT
(
AMASK_LINK
)

1664 
	#AMASK_IMPL
 \

1666 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
Ë& 
	`ULL
(0xfffffffffffffef8)); \

1667 
	}

	)
}

1668 
DEFINST
(
AMASK
, 0x00,

1670 
NA
, NA,

1671 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

1673 
	#AMASKI_IMPL
 \

1675 
	`SET_GPR
(
RC
, 
IMM
 & 
	`ULL
(0xfffffffffffffef8)); \

1676 }

	)

1677 
DEFINST
(
AMASKI
, 0x01,

1679 
NA
, 
F_IMM
,

1680 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

1683 
	$CONNECT
(
CMOVLE_LINK
)

1685 
	#CMOVLE_IMPL
 \

1687 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë<
	`LL
(0)) \

1688 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1689 
	}

	)
}

1690 
DEFINST
(
CMOVLE
, 0x00,

1692 
I¡ALU
, 
F_ICOMP
,

1693 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1695 
	#CMOVLEI_IMPL
 \

1697 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë<
	`LL
(0)) \

1698 
	`SET_GPR
(
RC
, 
IMM
); \

1699 }

	)

1700 
DEFINST
(
CMOVLEI
, 0x01,

1702 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1703 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1706 
	$CONNECT
(
CMOVGT_LINK
)

1708 
	#CMOVGT_IMPL
 \

1710 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë> 
	`LL
(0)) \

1711 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1712 
	}

	)
}

1713 
DEFINST
(
CMOVGT
, 0x00,

1715 
I¡ALU
, 
F_ICOMP
,

1716 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1718 
	#CMOVGTI_IMPL
 \

1720 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë> 
	`LL
(0)) \

1721 
	`SET_GPR
(
RC
, 
IMM
); \

1722 }

	)

1723 
DEFINST
(
CMOVGTI
, 0x01,

1725 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1726 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1729 
	$CONNECT
(
INTS
)

1731 
	`DEFLINK
(
MSKBL_LINK
, 0x02, "mskbl_link", 12, 1)

1733 
	`DEFLINK
(
EXTBL_LINK
, 0x06, "extbl_link", 12, 1)

1735 
	`DEFLINK
(
INSBL_LINK
, 0x0b, "insbl_link", 12, 1)

1737 
	`DEFLINK
(
MSKWL_LINK
, 0x12, "mskwl_link", 12, 1)

1739 
	`DEFLINK
(
EXTWL_LINK
, 0x16, "extwl_link", 12, 1)

1741 
	`DEFLINK
(
INSWL_LINK
, 0x1b, "inswl_link", 12, 1)

1743 
	`DEFLINK
(
MSKLL_LINK
, 0x22, "mskll_link", 12, 1)

1745 
	`DEFLINK
(
EXTLL_LINK
, 0x26, "extll_link", 12, 1)

1747 
	`DEFLINK
(
INSLL_LINK
, 0x2b, "insll_link", 12, 1)

1749 
	`DEFLINK
(
ZAP_LINK
, 0x30, "zap_link", 12, 1)

1751 
	`DEFLINK
(
ZAPNOT_LINK
, 0x31, "zapnot_link", 12, 1)

1753 
	`DEFLINK
(
MSKQL_LINK
, 0x32, "mskql_link", 12, 1)

1755 
	`DEFLINK
(
SRL_LINK
, 0x34, "srl_link", 12, 1)

1757 
	`DEFLINK
(
EXTQL_LINK
, 0x36, "extql_link", 12, 1)

1759 
	`DEFLINK
(
SLL_LINK
, 0x39, "sll_link", 12, 1)

1761 
	`DEFLINK
(
INSQL_LINK
, 0x3b, "insql_link", 12, 1)

1763 
	`DEFLINK
(
SRA_LINK
, 0x3c, "sra_link", 12, 1)

1765 
	`DEFLINK
(
MSKWH_LINK
, 0x52, "mskwh_link", 12, 1)

1767 
	`DEFLINK
(
INSWH_LINK
, 0x57, "inswh_link", 12, 1)

1769 
	`DEFLINK
(
EXTWH_LINK
, 0x5a, "extwh_link", 12, 1)

1771 
	`DEFLINK
(
MSKLH_LINK
, 0x62, "msklh_link", 12, 1)

1773 
	`DEFLINK
(
INSLH_LINK
, 0x67, "inslh_link", 12, 1)

1775 
	`DEFLINK
(
EXTLH_LINK
, 0x6a, "extlh_link", 12, 1)

1777 
	`DEFLINK
(
MSKQH_LINK
, 0x72, "mskqh_link", 12, 1)

1779 
	`DEFLINK
(
INSQH_LINK
, 0x77, "insqh_link", 12, 1)

1781 
	`DEFLINK
(
EXTQH_LINK
, 0x7a, "extqh_link", 12, 1)

1784 
	$CONNECT
(
MSKBL_LINK
)

1786 
	#MSKBL_IMPL
 \

1788 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffË<< ((GPR(
RB
) & 0x7) * 8))); \

1789 
	}

	)
}

1790 
DEFINST
(
MSKBL
, 0x00,

1792 
I¡ALU
, 
F_ICOMP
,

1793 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1795 
	#MSKBLI_IMPL
 \

1797 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffË<< ((
IMM
 & 0x7) * 8))); \

1798 }

	)

1799 
DEFINST
(
MSKBLI
, 0x01,

1801 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1802 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1805 
	$CONNECT
(
EXTBL_LINK
)

1807 
	#EXTBL_IMPL
 \

1809 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((GPR(
RB
Ë& 0x7Ë* 8)Ë& 
	`LL
(0xff)); \

1810 
	}

	)
}

1811 
DEFINST
(
EXTBL
, 0x00,

1813 
I¡ALU
, 
F_ICOMP
,

1814 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1816 
	#EXTBLI_IMPL
 \

1818 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7Ë* 8)Ë& 
	`LL
(0xff)); \

1819 }

	)

1820 
DEFINST
(
EXTBLI
, 0x01,

1822 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1823 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1826 
	$CONNECT
(
INSBL_LINK
)

1828 
	#INSBL_IMPL
 \

1830 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

1831 & (
	`ULL
(0xffË<< ((
	`GPR
(
RB
) & 0x7) * 8)))); \

1832 
	}

	)
}

1833 
DEFINST
(
INSBL
, 0x00,

1835 
I¡ALU
, 
F_ICOMP
,

1836 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1838 
	#INSBLI_IMPL
 \

1840 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

1841 & (
	`ULL
(0xffË<< ((
IMM
 & 0x7) * 8)))); \

1842 }

	)

1843 
DEFINST
(
INSBLI
, 0x01,

1845 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1846 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1849 
	$CONNECT
(
MSKWL_LINK
)

1851 
	#MSKWL_IMPL
 \

1853 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË<< ((GPR(
RB
) & 0x7) * 8))); \

1854 
	}

	)
}

1855 
DEFINST
(
MSKWL
, 0x00,

1857 
I¡ALU
, 
F_ICOMP
,

1858 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1860 
	#MSKWLI_IMPL
 \

1862 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË<< ((
IMM
 & 0x7) * 8))); \

1863 }

	)

1864 
DEFINST
(
MSKWLI
, 0x01,

1866 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1867 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1870 
	$CONNECT
(
EXTWL_LINK
)

1872 
	#EXTWL_IMPL
 \

1874 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((GPR(
RB
Ë& 0x7Ë* 8)Ë& 
	`LL
(0xffff)); \

1875 
	}

	)
}

1876 
DEFINST
(
EXTWL
, 0x00,

1878 
I¡ALU
, 
F_ICOMP
,

1879 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1881 
	#EXTWLI_IMPL
 \

1883 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7Ë* 8)Ë& 
	`LL
(0xffff)); \

1884 }

	)

1885 
DEFINST
(
EXTWLI
, 0x01,

1887 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1888 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1891 
	$CONNECT
(
INSWL_LINK
)

1893 
	#INSWL_IMPL
 \

1895 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

1896 & (
	`ULL
(0xffffË<< ((
	`GPR
(
RB
) & 0x7) * 8)))); \

1897 
	}

	)
}

1898 
DEFINST
(
INSWL
, 0x00,

1900 
I¡ALU
, 
F_ICOMP
,

1901 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1903 
	#INSWLI_IMPL
 \

1905 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

1906 & (
	`ULL
(0xffffË<< ((
IMM
 & 0x7) * 8)))); \

1907 }

	)

1908 
DEFINST
(
INSWLI
, 0x01,

1910 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1911 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1914 
	$CONNECT
(
MSKLL_LINK
)

1916 
	#MSKLL_IMPL
 \

1918 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffË<< ((GPR(
RB
) & 0x7) * 8))); \

1919 
	}

	)
}

1920 
DEFINST
(
MSKLL
, 0x00,

1922 
I¡ALU
, 
F_ICOMP
,

1923 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1925 
	#MSKLLI_IMPL
 \

1927 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffË<< ((
IMM
 & 0x7) * 8))); \

1928 }

	)

1929 
DEFINST
(
MSKLLI
, 0x01,

1931 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1932 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1935 
	$CONNECT
(
EXTLL_LINK
)

1937 
	#EXTLL_IMPL
 \

1939 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((GPR(
RB
Ë& 0x7Ë* 8)Ë& 
	`LL
(0xffffffff)); \

1940 
	}

	)
}

1941 
DEFINST
(
EXTLL
, 0x00,

1943 
I¡ALU
, 
F_ICOMP
,

1944 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1946 
	#EXTLLI_IMPL
 \

1948 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7Ë* 8)Ë& 
	`LL
(0xffffffff)); \

1949 }

	)

1950 
DEFINST
(
EXTLLI
, 0x01,

1952 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1953 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1956 
	$CONNECT
(
INSLL_LINK
)

1958 
	#INSLL_IMPL
 \

1960 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

1961 & (
	`ULL
(0xffffffffË<< ((
	`GPR
(
RB
) & 0x7) * 8)))); \

1962 
	}

	)
}

1963 
DEFINST
(
INSLL
, 0x00,

1965 
I¡ALU
, 
F_ICOMP
,

1966 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1968 
	#INSLLI_IMPL
 \

1970 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

1971 & (
	`ULL
(0xffffffffË<< ((
IMM
 & 0x7) * 8)))); \

1972 }

	)

1973 
DEFINST
(
INSLLI
, 0x01,

1975 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1976 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1979 
	$CONNECT
(
ZAP_LINK
)

1981 
	#ZAP_IMPL
 \

1983 
_i
; \

1984 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

1985 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

1986 
qw‹d_t
 
_rbv
 = 
	`GPR
(
RB
); \

1988 
	`SET_GPR
(
RC
, 0); \

1989 
_i
 = 1; _i < 0x100; _i = _i << 1) \

1991 i‡(
_i
 & ~
_rbv
) \

1992 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

1993 
_ãmp
 = _temp << 8; \

1995 
	}

	)
}

1996 
DEFINST
(
ZAP
, 0x00,

1998 
I¡ALU
, 
F_ICOMP
,

1999 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2001 
	#ZAPI_IMPL
 \

2003 
_i
; \

2004 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2005 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2006 
qw‹d_t
 
_rbv
 = 
IMM
; \

2008 
	`SET_GPR
(
RC
, 0); \

2009 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2011 i‡(
_i
 & ~
_rbv
) \

2012 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2013 
_ãmp
 = _temp << 8; \

2015 }

	)

2016 
DEFINST
(
ZAPI
, 0x01,

2018 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2019 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2022 
	$CONNECT
(
ZAPNOT_LINK
)

2024 
	#ZAPNOT_IMPL
 \

2026 
_i
; \

2027 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2028 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2029 
qw‹d_t
 
_rbv
 = 
	`GPR
(
RB
); \

2031 
	`SET_GPR
(
RC
, 0); \

2032 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2034 i‡(
_i
 & 
_rbv
) \

2035 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2036 
_ãmp
 = _temp << 8; \

2038 
	}

	)
}

2039 
DEFINST
(
ZAPNOT
, 0x00,

2041 
I¡ALU
, 
F_ICOMP
,

2042 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2044 
	#ZAPNOTI_IMPL
 \

2046 
_i
; \

2047 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2048 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2049 
qw‹d_t
 
_rbv
 = 
IMM
; \

2051 
	`SET_GPR
(
RC
, 0); \

2052 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2054 i‡(
_i
 & 
_rbv
) \

2055 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2056 
_ãmp
 = _temp << 8; \

2058 }

	)

2059 
DEFINST
(
ZAPNOTI
, 0x01,

2061 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2062 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2065 
	$CONNECT
(
MSKQL_LINK
)

2067 
	#MSKQL_IMPL
 \

2069 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
) \

2070 & ~(
	`ULL
(0xffffffffffffffff) \

2071 << ((
	`GPR
(
RB
) & 0x7) * 8)))); \

2072 
	}

	)
}

2073 
DEFINST
(
MSKQL
, 0x00,

2075 
I¡ALU
, 
F_ICOMP
,

2076 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2078 
	#MSKQLI_IMPL
 \

2080 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
) \

2081 & ~(
	`ULL
(0xffffffffffffffffË<< ((
IMM
 & 0x7) * 8)))); \

2082 }

	)

2083 
DEFINST
(
MSKQLI
, 0x01,

2085 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2086 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2089 
	$CONNECT
(
SRL_LINK
)

2091 
	#SRL_IMPL
 \

2093 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> (GPR(
RB
) & 0x3f)); \

2094 
	}

	)
}

2095 
DEFINST
(
SRL
, 0x00,

2097 
I¡ALU
, 
F_ICOMP
,

2098 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2100 
	#SRLI_IMPL
 \

2102 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> (
IMM
 & 0x3f)); \

2103 }

	)

2104 
DEFINST
(
SRLI
, 0x01,

2106 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2107 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2110 
	$CONNECT
(
EXTQL_LINK
)

2112 
	#EXTQL_IMPL
 \

2114 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> ((GPR(
RB
) & 0x7) * 8)); \

2115 
	}

	)
}

2116 
DEFINST
(
EXTQL
, 0x00,

2118 
I¡ALU
, 
F_ICOMP
,

2119 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2121 
	#EXTQLI_IMPL
 \

2123 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7) * 8)); \

2124 }

	)

2125 
DEFINST
(
EXTQLI
, 0x01,

2127 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2128 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2131 
	$CONNECT
(
SLL_LINK
)

2133 
	#SLL_IMPL
 \

2135 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë<< (GPR(
RB
) & 0x3f)); \

2136 
	}

	)
}

2137 
DEFINST
(
SLL
, 0x00,

2139 
I¡ALU
, 
F_ICOMP
,

2140 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2142 
	#SLLI_IMPL
 \

2144 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë<< (
IMM
 & 0x3f)); \

2145 }

	)

2146 
DEFINST
(
SLLI
, 0x01,

2148 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2149 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2152 
	$CONNECT
(
INSQL_LINK
)

2154 
	#INSQL_IMPL
 \

2156 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

2157 & (
	`ULL
(0xffffffffffffffffË<< ((
	`GPR
(
RB
) & 0x7) * 8))));\

2158 
	}

	)
}

2159 
DEFINST
(
INSQL
, 0x00,

2161 
I¡ALU
, 
F_ICOMP
,

2162 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2164 
	#INSQLI_IMPL
 \

2166 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

2167 & (
	`ULL
(0xffffffffffffffffË<< ((
IMM
 & 0x7) * 8)))); \

2168 }

	)

2169 
DEFINST
(
INSQLI
, 0x01,

2171 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2172 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2174 
	$CONNECT
(
SRA_LINK
)

2176 
	#SRA_IMPL
 \

2178 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë>> (GPR(
RB
) & 0x3f)); \

2179 
	}

	)
}

2180 
DEFINST
(
SRA
, 0x00,

2182 
I¡ALU
, 
F_ICOMP
,

2183 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2185 
	#SRAI_IMPL
 \

2187 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë>> (
IMM
 & 0x3f)); \

2188 }

	)

2189 
DEFINST
(
SRAI
, 0x01,

2191 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2192 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2195 
	$CONNECT
(
MSKWH_LINK
)

2197 
	#MSKWH_IMPL
 \

2199 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2200 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË>> ((8 - (GPR(
RB
) & 0x7)) * 8)));\

2202 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2203 
	}

	)
}

2204 
DEFINST
(
MSKWH
, 0x00,

2206 
I¡ALU
, 
F_ICOMP
,

2207 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2209 
	#MSKWHI_IMPL
 \

2211 i‡((
IMM
 & 0x7) != 0) \

2212 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË>> ((8 - (
IMM
 & 0x7)) * 8))); \

2214 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2215 }

	)

2216 
DEFINST
(
MSKWHI
, 0x01,

2218 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2219 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2222 
	$CONNECT
(
INSWH_LINK
)

2224 
	#INSWH_IMPL
 \

2226 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2227 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (GPR(
RB
) & 0x7) * 8)) >> 1 \

2228 & (
	`ULL
(0xffffË>> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8)))); \

2230 
	`SET_GPR
(
RC
, 0); \

2231 
	}

	)
}

2232 
DEFINST
(
INSWH
, 0x00,

2234 
I¡ALU
, 
F_ICOMP
,

2235 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2237 
	#INSWHI_IMPL
 \

2239 i‡((
IMM
 & 0x7) != 0) \

2240 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (
IMM
 & 0x7) * 8)) >> 1 \

2241 & (
	`ULL
(0xffffË>> ((8 - (
IMM
 & 0x7)) * 8)))); \

2243 
	`SET_GPR
(
RC
, 0); \

2244 }

	)

2245 
DEFINST
(
INSWHI
, 0x01,

2247 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2248 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2251 
	$CONNECT
(
EXTWH_LINK
)

2253 
	#EXTWH_IMPL
 \

2255 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (GPR(
RB
)&0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffff));\

2256 
	}

	)
}

2257 
DEFINST
(
EXTWH
, 0x00,

2259 
I¡ALU
, 
F_ICOMP
,

2260 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2262 
	#EXTWHI_IMPL
 \

2264 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (
IMM
 & 0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffff));\

2265 }

	)

2266 
DEFINST
(
EXTWHI
, 0x01,

2268 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2269 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2272 
	$CONNECT
(
MSKLH_LINK
)

2274 
	#MSKLH_IMPL
 \

2276 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2277 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffff) >> \

2278 ((8 - (
	`GPR
(
RB
) & 0x7)) * 8))); \

2280 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2281 
	}

	)
}

2282 
DEFINST
(
MSKLH
, 0x00,

2284 
I¡ALU
, 
F_ICOMP
,

2285 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2287 
	#MSKLHI_IMPL
 \

2289 i‡((
IMM
 & 0x7) != 0) \

2290 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffff) >> \

2291 ((8 - (
IMM
 & 0x7)) * 8))); \

2293 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2294 }

	)

2295 
DEFINST
(
MSKLHI
, 0x01,

2297 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2298 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2301 
	$CONNECT
(
INSLH_LINK
)

2303 
	#INSLH_IMPL
 \

2305 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2306 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (GPR(
RB
) & 0x7) * 8)) >> 1 \

2307 & (
	`ULL
(0xffffffffË>> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8))));\

2309 
	`SET_GPR
(
RC
, 0); \

2310 
	}

	)
}

2311 
DEFINST
(
INSLH
, 0x00,

2313 
I¡ALU
, 
F_ICOMP
,

2314 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2316 
	#INSLHI_IMPL
 \

2318 i‡((
IMM
 & 0x7) != 0) \

2319 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (
IMM
 & 0x7) * 8)) >> 1 \

2320 & (
	`ULL
(0xffffffffË>> ((8 - (
IMM
 & 0x7)) * 8)))); \

2321 
	`SET_GPR
(
RC
, 0); \

2322 }

	)

2323 
DEFINST
(
INSLHI
, 0x01,

2325 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2326 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2329 
	$CONNECT
(
EXTLH_LINK
)

2331 
	#EXTLH_IMPL
 \

2333 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
) << \

2334 ((64 - (
	`GPR
(
RB
Ë& 0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffffffff));\

2335 
	}

	)
}

2336 
DEFINST
(
EXTLH
, 0x00,

2338 
I¡ALU
, 
F_ICOMP
,

2339 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2341 
	#EXTLHI_IMPL
 \

2343 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (
IMM
&0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffffffff));\

2344 }

	)

2345 
DEFINST
(
EXTLHI
, 0x01,

2347 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2348 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2351 
	$CONNECT
(
MSKQH_LINK
)

2353 
	#MSKQH_IMPL
 \

2355 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2356 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffffffffff) \

2357 >> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8)))); \

2359 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2360 
	}

	)
}

2361 
DEFINST
(
MSKQH
, 0x00,

2363 
I¡ALU
, 
F_ICOMP
,

2364 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2366 
	#MSKQHI_IMPL
 \

2368 i‡((
IMM
 & 0x7) != 0) \

2369 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffffffffff) \

2370 >> ((8 - (
IMM
 & 0x7)) * 8)))); \

2372 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2373 }

	)

2374 
DEFINST
(
MSKQHI
, 0x01,

2376 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2377 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2380 
	$CONNECT
(
INSQH_LINK
)

2382 
	#INSQH_IMPL
 \

2384 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2385 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (GPR(
RB
) & 0x7) * 8)) >> 1 \

2386 & (
	`ULL
(0xffffffffffffffff) \

2387 >> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8)))); \

2389 
	`SET_GPR
(
RC
, 0); \

2390 
	}

	)
}

2391 
DEFINST
(
INSQH
, 0x00,

2393 
I¡ALU
, 
F_ICOMP
,

2394 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2396 
	#INSQHI_IMPL
 \

2398 i‡((
IMM
 & 0x7) != 0) \

2399 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (
IMM
 & 0x7) * 8)) >> 1 \

2400 & (
	`ULL
(0xffffffffffffffff) \

2401 >> ((8 - (
IMM
 & 0x7)) * 8)))); \

2403 
	`SET_GPR
(
RC
, 0); \

2404 }

	)

2405 
DEFINST
(
INSQHI
, 0x01,

2407 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2408 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2411 
	$CONNECT
(
EXTQH_LINK
)

2413 
	#EXTQH_IMPL
 \

2415 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (GPR(
RB
) & 0x7) * 8) & 0x3f))); \

2416 
	}

	)
}

2417 
DEFINST
(
EXTQH
, 0x00,

2419 
I¡ALU
, 
F_ICOMP
,

2420 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2422 
	#EXTQHI_IMPL
 \

2424 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (
IMM
 & 0x7) * 8) & 0x3f))); \

2425 }

	)

2426 
DEFINST
(
EXTQHI
, 0x01,

2428 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2429 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2432 
	$CONNECT
(
INTM
)

2439 
	`DEFLINK
(
MULL_LINK
, 0x00, "mull_link", 12, 1)

2441 
	`DEFLINK
(
MULQ_LINK
, 0x20, "mulq_link", 12, 1)

2443 
	`DEFLINK
(
UMULH_LINK
, 0x30, "umulh_link", 12, 1)

2446 
	$CONNECT
(
MULL_LINK
)

2448 
	#MULL_IMPL
 \

2450 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë* GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

2451 
	}

	)
}

2452 
DEFINST
(
MULL
, 0x00,

2454 
I¡MULT
, 
F_ICOMP
,

2455 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2457 
	#MULLI_IMPL
 \

2459 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë* 
IMM
Ë& 
	`ULL
(0xffffffff))); \

2460 }

	)

2461 
DEFINST
(
MULLI
, 0x01,

2463 
I¡MULT
, 
F_ICOMP
|
F_IMM
,

2464 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2467 
	$CONNECT
(
MULQ_LINK
)

2469 
	#MULQ_IMPL
 \

2471 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë* GPR(
RB
)); \

2472 
	}

	)
}

2473 
DEFINST
(
MULQ
, 0x00,

2475 
I¡MULT
, 
F_ICOMP
,

2476 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2478 
	#MULQI_IMPL
 \

2480 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë* 
IMM
); \

2481 }

	)

2482 
DEFINST
(
MULQI
, 0x01,

2484 
I¡MULT
, 
F_ICOMP
|
F_IMM
,

2485 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2488 
	$CONNECT
(
UMULH_LINK
)

2490 
	#UMULH_IMPL
 \

2492 
sqw‹d_t
 
_v1
 = 
	`GPR
(
RA
); \

2493 
sqw‹d_t
 
_v2
 = 
	`GPR
(
RB
); \

2494 
qw‹d_t
 
_ªsu…
; \

2495 
qw‹d_t
 
_a
, 
_b
, 
_c
, 
_d
; \

2496 
qw‹d_t
 
_bd
, 
_ad
, 
_cb
, 
_ac
; \

2497 
qw‹d_t
 
_mid
, 
_mid2
, 
_ˇºy_mid
 = 0; \

2499 
_a
 = (
_v1
 >> 32Ë& 
	`LL
(0xffffffff); \

2500 
_b
 = 
_v1
 & 
	`LL
(0xffffffff); \

2501 
_c
 = (
_v2
 >> 32Ë& 
	`LL
(0xffffffff); \

2502 
_d
 = 
_v2
 & 
	`LL
(0xffffffff); \

2505 
_bd
 = 
_b
 * 
_d
; \

2506 
_ad
 = 
_a
 * 
_d
; \

2507 
_cb
 = 
_c
 * 
_b
; \

2508 
_ac
 = 
_a
 * 
_c
; \

2511 
_mid
 = 
_ad
 + 
_cb
; \

2512 i‡(
	`ARITH_OVFL
(
_mid
, 
_ad
, 
_cb
)) \

2513 
_ˇºy_mid
 = 1; \

2515 
_mid2
 = 
_mid
 + ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)); \

2516 i‡(
	`ARITH_OVFL
(
_mid2
, 
_mid
, ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)))) \

2517 
_ˇºy_mid
 += 1; \

2518 
_ªsu…
 = \

2519 
_ac
 + (
_ˇºy_mid
 << 32Ë+ ((
_mid2
 >> 32Ë& 
	`LL
(0xffffffff)); \

2522 
	`SET_GPR
(
RC
, 
_ªsu…
); \

2523 
	}

	)
}

2524 
DEFINST
(
UMULH
, 0x00,

2526 
I¡MULT
, 
F_ICOMP
,

2527 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2529 
	#UMULHI_IMPL
 \

2531 
sqw‹d_t
 
_v1
 = 
	`GPR
(
RA
); \

2532 
sqw‹d_t
 
_v2
 = 
IMM
; \

2533 
qw‹d_t
 
_ªsu…
; \

2534 
qw‹d_t
 
_a
, 
_b
, 
_c
, 
_d
; \

2535 
qw‹d_t
 
_bd
, 
_ad
, 
_cb
, 
_ac
; \

2536 
qw‹d_t
 
_mid
, 
_mid2
, 
_ˇºy_mid
 = 0; \

2538 
_a
 = (
_v1
 >> 32Ë& 
	`LL
(0xffffffff); \

2539 
_b
 = 
_v1
 & 
	`LL
(0xffffffff); \

2540 
_c
 = (
_v2
 >> 32Ë& 
	`LL
(0xffffffff); \

2541 
_d
 = 
_v2
 & 
	`LL
(0xffffffff); \

2543 
_bd
 = 
_b
 * 
_d
; \

2544 
_ad
 = 
_a
 * 
_d
; \

2545 
_cb
 = 
_c
 * 
_b
; \

2546 
_ac
 = 
_a
 * 
_c
; \

2548 
_mid
 = 
_ad
 + 
_cb
; \

2549 i‡(
	`ARITH_OVFL
(
_mid
, 
_ad
, 
_cb
)) \

2550 
_ˇºy_mid
 = 1; \

2552 
_mid2
 = 
_mid
 + ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)); \

2553 i‡(
	`ARITH_OVFL
(
_mid2
, 
_mid
, ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)))) \

2554 
_ˇºy_mid
 += 1; \

2555 
_ªsu…
 = \

2556 
_ac
 + (
_ˇºy_mid
 << 32Ë+ ((
_mid2
 >> 32Ë& 
	`LL
(0xffffffff)); \

2558 
	`SET_GPR
(
RC
, 
_ªsu…
); \

2559 }

	)

2560 
DEFINST
(
UMULHI
, 0x01,

2562 
I¡MULT
, 
F_ICOMP
|
F_IMM
,

2563 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2568 
	$CONNECT
(
ITFP
)

2570 
	#ITOFS_IMPL
 \

2572 
sqw‹d_t
 
_l⁄ghﬁd
, 
_e1
, 
_e2
; \

2574 
_l⁄ghﬁd
 = 
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff); \

2576 
_e1
 = 
_l⁄ghﬁd
 & 0x40000000; \

2577 
_e2
 = (
_l⁄ghﬁd
 >> 23Ë& 
	`ULL
(0x7f); \

2578 i‡(
_e1
) \

2580 i‡(
_e2
 =
	`ULL
(0x3f800000)) \

2581 
_e2
 = 
	`ULL
(0x7ff); \

2583 
_e2
 |
	`ULL
(0x400); \

2587 i‡(
_e2
 == 0) \

2588 
_e2
 = 0; \

2590 
_e2
 |
	`ULL
(0x380); \

2592 
	`SET_FPR_Q
(
RC
, (((
_l⁄ghﬁd
 & 
	`ULL
(0x80000000)) << 32) \

2593 | (
_e2
 << 52Ë| ((
_l⁄ghﬁd
 & 
	`ULL
(0x7fffff)) << 29)));\

2594 
	}

	)
}

2595 
DEFINST
(
ITOFS
, 0x04,

2597 
FlﬂtCVT
, 
F_FCOMP
,

2598 
DFPR
(
RC
), 
DNA
, 
DGPR
(
RA
), DNA, DNA)

2600 
	#SQRTF_IMPL
 \

2603 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

2604 }

	)

2605 
DEFINST
(
SQRTF
, 0x0a,

2607 
NA
, NA,

2608 
DNA
, DNA, DNA, DNA, DNA)

2611 
	#SQRTS_IMPL
 \

2613 i‡(
	`FPR
(
RB
) < 0.0) \

2614 
	`DECLARE_FAULT
(
md_Áu…_övÆid
); \

2617 
	`SET_FPR
(
RC
, (
dÊﬂt_t
)
	`sqπ
(()
	`FPR
(
RB
))); \

2618 }

	)

2619 
DEFINST
(
SQRTS
, 0x0b,

2621 
FlﬂtSQRT
, 
F_FCOMP
,

2622 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2624 
	#ITOFF_IMPL
 \

2627 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

2628 }

	)

2629 
DEFINST
(
ITOFF
, 0x14,

2631 
NA
, NA,

2632 
DNA
, DNA, DNA, DNA, DNA)

2634 
	#ITOFT_IMPL
 \

2636 
	`SET_FPR_Q
(
RC
, 
	`GPR
(
RA
)); \

2637 }

	)

2638 
DEFINST
(
ITOFT
, 0x24,

2640 
FlﬂtCVT
, 
F_FCOMP
,

2641 
DFPR
(
RC
), 
DNA
, 
DGPR
(
RA
), DNA, DNA)

2643 
	#SQRTG_IMPL
 \

2646 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

2647 }

	)

2648 
DEFINST
(
SQRTG
, 0x2a,

2650 
NA
, NA,

2651 
DNA
, DNA, DNA, DNA, DNA)

2653 
	#SQRTT_IMPL
 \

2655 i‡(
	`FPR
(
RB
) < 0.0) \

2656 
	`DECLARE_FAULT
(
md_Áu…_övÆid
); \

2658 
	`SET_FPR
(
RC
, (
dÊﬂt_t
)
	`sqπ
(()
	`FPR
(
RB
))); \

2659 }

	)

2660 
DEFINST
(
SQRTT
, 0x2b,

2662 
NA
, NA,

2663 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2666 
	$CONNECT
(
FLTI
)

2668 
	#ADDS_IMPL
 \

2671 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë+ FPR(
RB
)); \

2672 
	}

	)
}

2673 
DEFINST
(
ADDS
, 0x00,

2675 
FlﬂtADD
, 
F_FCOMP
,

2676 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2678 
	#SUBS_IMPL
 \

2681 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë- FPR(
RB
)); \

2682 }

	)

2683 
DEFINST
(
SUBS
, 0x01,

2685 
FlﬂtADD
, 
F_FCOMP
,

2686 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2688 
	#MULS_IMPL
 \

2691 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë* FPR(
RB
)); \

2692 }

	)

2693 
DEFINST
(
MULS
, 0x02,

2695 
FlﬂtMULT
, 
F_FCOMP
,

2696 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2698 
	#DIVS_IMPL
 \

2701 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë/ FPR(
RB
)); \

2702 }

	)

2703 
DEFINST
(
DIVS
, 0x03,

2705 
FlﬂtDIV
, 
F_FCOMP
,

2706 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2708 
	#ADDT_IMPL
 \

2710 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë+ FPR(
RB
)); \

2711 }

	)

2712 
DEFINST
(
ADDT
, 0x20,

2714 
FlﬂtADD
, 
F_FCOMP
,

2715 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2717 
	#SUBT_IMPL
 \

2719 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë- FPR(
RB
)); \

2720 }

	)

2721 
DEFINST
(
SUBT
, 0x21,

2723 
FlﬂtADD
, 
F_FCOMP
,

2724 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2726 
	#MULT_IMPL
 \

2728 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë* FPR(
RB
)); \

2729 }

	)

2730 
DEFINST
(
MULT
, 0x22,

2732 
FlﬂtMULT
, 
F_FCOMP
,

2733 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2735 
	#DIVT_IMPL
 \

2737 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë/ FPR(
RB
)); \

2738 }

	)

2739 
DEFINST
(
DIVT
, 0x23,

2741 
FlﬂtDIV
, 
F_FCOMP
,

2742 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2744 
	#CMPTUN_IMPL
 \

2746 
	`SET_FPR
(
RC
, (
	`IS_IEEEFP_DBL_NAN
(
	`FPR_Q
(
RA
)Ë|| IS_IEEEFP_DBL_NAN(FPR_Q(
RB
)))\

2749 }

	)

2750 
DEFINST
(
CMPTUN
, 0x24,

2752 
FlﬂtCMP
, 
F_FCOMP
,

2753 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2755 
	#CMPTEQ_IMPL
 \

2757 
	`SET_FPR
(
RC
, (((
	`FPR_Q
(
RA
Ë=FPR_Q(
RB
)) \

2758 || (
	`FPR_Q
(
RA
Ë<< 1 =
	`ULL
(0) \

2759 && 
	`FPR_Q
(
RB
Ë<< 1 =
	`ULL
(0))) \

2762 }

	)

2763 
DEFINST
(
CMPTEQ
, 0x25,

2765 
FlﬂtADD
, 
F_FCOMP
,

2766 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2768 
	#CMPTLT_IMPL
 \

2770 
	`SET_FPR
(
RC
, (
	`FPR
(
RA
Ë< FPR(
RB
)) ? 2.0 : 0.0); \

2771 }

	)

2772 
DEFINST
(
CMPTLT
, 0x26,

2774 
FlﬂtADD
, 
F_FCOMP
,

2775 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2777 
	#CMPTLE_IMPL
 \

2779 
	`SET_FPR
(
RC
, (
	`FPR
(
RA
Ë<FPR(
RB
)) ? 2.0 : 0.0); \

2780 }

	)

2781 
DEFINST
(
CMPTLE
, 0x27,

2783 
FlﬂtADD
, 
F_FCOMP
,

2784 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2786 
	#CVTTS_IMPL
 \

2788 
	`SET_FPR
(
RC
, ()
	`FPR
(
RB
)); \

2789 }

	)

2790 
DEFINST
(
CVTTS
, 0x2c,

2792 
FlﬂtADD
, 
F_FCOMP
,

2793 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2795 
	#CVTTQ_IMPL
 \

2797 
	`SET_FPR_Q
(
RC
, (
sqw‹d_t
)
	`FPR
(
RB
)); \

2798 }

	)

2799 
DEFINST
(
CVTTQ
, 0x2f,

2801 
FlﬂtADD
, 
F_FCOMP
,

2802 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2804 
	#CVTQS_IMPL
 \

2807 
	`SET_FPR
(
RC
, (
sqw‹d_t
)
	`FPR_Q
(
RB
)); \

2808 }

	)

2809 
DEFINST
(
CVTQS
, 0x3c,

2811 
FlﬂtADD
, 
F_FCOMP
,

2812 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2814 
	#CVTQT_IMPL
 \

2816 
	`SET_FPR
(
RC
, (
sqw‹d_t
)
	`FPR_Q
(
RB
)); \

2817 }

	)

2818 
DEFINST
(
CVTQT
, 0x3e,

2820 
FlﬂtADD
, 
F_FCOMP
,

2821 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2824 
	$CONNECT
(
FLTL
)

2826 
	#CVTLQ_IMPL
 \

2828 
sqw‹d_t
 
_l⁄ghﬁd
; \

2829 
sw‹d_t
 
_öthﬁd
; \

2831 
_l⁄ghﬁd
 = 
	`FPR_Q
(
RB
); \

2832 
_öthﬁd
 = (((
_l⁄ghﬁd
 >> 32) & 0xc0000000) \

2833 | ((
_l⁄ghﬁd
 >> 29) & 0x3fffffff)); \

2834 
	`SET_FPR_Q
(
RC
, (
sqw‹d_t
)
_öthﬁd
); \

2835 
	}

	)
}

2837 
DEFINST
(
CVTLQ
, 0x10,

2839 
FlﬂtADD
, 
F_FCOMP
,

2840 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2842 
	#CPYS_IMPL
 \

2844 
	`SET_FPR_Q
(
RC
, ((
	`FPR_Q
(
RA
Ë& 
	`ULL
(1) << 63) \

2845 | (
	`FPR_Q
(
RB
Ë& 
	`LL
(0x7fffffffffffffff)))); \

2846 }

	)

2847 
DEFINST
(
CPYS
, 0x20,

2849 
FlﬂtADD
, 
F_FCOMP
,

2850 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2852 
	#CPYSN_IMPL
 \

2854 
	`SET_FPR_Q
(
RC
, ((
	`FPR_Q
(
RA
) >> 63 ^ 1) << 63 \

2855 | (
	`FPR_Q
(
RB
Ë& 
	`LL
(0x7fffffffffffffff)))); \

2856 }

	)

2857 
DEFINST
(
CPYSN
, 0x21,

2859 
FlﬂtADD
, 
F_FCOMP
,

2860 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2862 
	#CPYSE_IMPL
 \

2864 
	`SET_FPR_Q
(
RC
, ((
	`FPR_Q
(
RA
Ë& 
	`ULL
(0xfff) << 52) \

2865 | (
	`FPR_Q
(
RB
Ë& 
	`ULL
(0xfffffffffffff)))); \

2866 }

	)

2867 
DEFINST
(
CPYSE
, 0x22,

2869 
FlﬂtADD
, 
F_FCOMP
,

2870 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2872 
	#MT_FPCR_IMPL
 \

2875 
	`SET_FPCR
(
	`FPR_Q
(
RA
)); \

2876 }

	)

2877 
DEFINST
(
MT_FPCR
, 0x24,

2879 
FlﬂtADD
, 
F_FCOMP
,

2880 
DFPCR
, 
DNA
, 
DFPR
(
RA
), DNA, DNA)

2882 #ifde‡
_MSC_VER


2883 
	#MF_FPCR_IMPL
 \

2887 
	`SET_FPR_Q
(
RA
, 
FPCR
); \

2888 }

	)

2890 
	#MF_FPCR_IMPL
 \

2893 
	`SET_FPR_Q
(
RA
, 
FPCR
); \

2894 }

	)

2896 
DEFINST
(
MF_FPCR
, 0x25,

2898 
FlﬂtADD
, 
F_FCOMP
,

2899 
DFPR
(
RA
), 
DNA
, 
DFPCR
, DNA, DNA)

2901 
	#FCMOVEQ_IMPL
 \

2903 i‡((
	`FPR_Q
(
RA
Ë<< 1Ë=
	`ULL
(0)) \

2904 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

2905 }

	)

2906 
DEFINST
(
FCMOVEQ
, 0x2a,

2908 
FlﬂtADD
, 
F_FCOMP
,

2909 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2911 
	#FCMOVNE_IMPL
 \

2913 i‡((
	`FPR_Q
(
RA
Ë<< 1Ë!
	`ULL
(0)) \

2914 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

2915 }

	)

2916 
DEFINST
(
FCMOVNE
, 0x2b,

2918 
FlﬂtADD
, 
F_FCOMP
,

2919 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2921 
	#FCMOVLT_IMPL
 \

2923 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë!
	`ULL
(0)) && (FPR_Q(RA) >> 63)) \

2924 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

2925 }

	)

2926 
DEFINST
(
FCMOVLT
, 0x2c,

2928 
FlﬂtADD
, 
F_FCOMP
,

2929 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2931 
	#FCMOVGE_IMPL
 \

2933 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë=
	`ULL
(0)) || (FPR_Q(RA) >> 63 == ULL(0))) \

2934 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

2935 }

	)

2936 
DEFINST
(
FCMOVGE
, 0x2d,

2938 
FlﬂtADD
, 
F_FCOMP
,

2939 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2941 
	#FCMOVLE_IMPL
 \

2943 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë=
	`ULL
(0)) || (FPR_Q(RA) >> 63)) \

2944 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

2945 }

	)

2946 
DEFINST
(
FCMOVLE
, 0x2e,

2948 
FlﬂtADD
, 
F_FCOMP
,

2949 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2951 
	#FCMOVGT_IMPL
 \

2953 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë!
	`ULL
(0)) && (FPR_Q(RA) >> 63 == ULL(0))) \

2954 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

2955 }

	)

2956 
DEFINST
(
FCMOVGT
, 0x2f,

2958 
FlﬂtADD
, 
F_FCOMP
,

2959 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2962 
	#CVTQL_IMPL
 \

2964 
sqw‹d_t
 
l⁄ghﬁd
 = 
	`FPR_Q
(
RB
); \

2966 
	`SET_FPR_Q
(
RC
, (((
l⁄ghﬁd
 >> 32Ë& 
	`LL
(0xc000000000000000)) \

2967 | (
l⁄ghﬁd
 & 
	`LL
(0x3fffffff)) << 29)); \

2968 }

	)

2969 
DEFINST
(
CVTQL
, 0x30,

2971 
FlﬂtADD
, 
F_FCOMP
,

2972 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2975 
	$CONNECT
(
MISC
)

2980 
	#TRAPB_IMPL
 \

2983 
	}

	)
}

2984 
DEFINST
(
TRAPB
, 0x00,

2986 
NA
, 
F_TRAP
,

2987 
DNA
, DNA, DNA, DNA, DNA)

2990 
	#EXCB_IMPL
 \

2993 }

	)

2994 
DEFINST
(
EXCB
, 0x04,

2996 
NA
, 
F_TRAP
,

2997 
DNA
, DNA, DNA, DNA, DNA)

2999 
	#MB_IMPL
 \

3002 }

	)

3003 
DEFINST
(
MB
, 0x40,

3005 
NA
, 
F_TRAP
,

3006 
DNA
, DNA, DNA, DNA, DNA)

3010 
	#WMB_IMPL
 \

3013 }

	)

3014 
DEFINST
(
WMB
, 0x44,

3016 
NA
, 
F_TRAP
,

3017 
DNA
, DNA, DNA, DNA, DNA)

3020 
	#FETCH_IMPL
 \

3023 }

	)

3024 
DEFINST
(
FETCH
, 0x80,

3026 
NA
, NA,

3027 
DNA
, DNA, DNA, DNA, DNA)

3030 
	#FETCH_M_IMPL
 \

3033 }

	)

3034 
DEFINST
(
FETCH_M
, 0xa0,

3036 
NA
, NA,

3037 
DNA
, DNA, DNA, DNA, DNA)

3040 
	#RPCC_IMPL
 \

3043 
	`SET_GPR
(
RA
, 
	`ULL
(0)); \

3044 }

	)

3045 
DEFINST
(
RPCC
, 0xc0,

3047 
NA
, NA,

3048 
DGPR
(
RA
), 
DNA
, DNA, DNA, DNA)

3051 
	#_RC_IMPL
 \

3054 }

	)

3055 
DEFINST
(
_RC
, 0xe0,

3057 
NA
, NA,

3058 
DNA
, DNA, DNA, DNA, DNA)

3061 
	#ECB_IMPL
 \

3064 }

	)

3065 
DEFINST
(
ECB
, 0xe8,

3067 
NA
, NA,

3068 
DNA
, DNA, DNA, DNA, DNA)

3071 
	#_RS_IMPL
 \

3074 }

	)

3075 
DEFINST
(
_RS
, 0xf0,

3077 
NA
, NA,

3078 
DNA
, DNA, DNA, DNA, DNA)

3081 
	#WH64_IMPL
 \

3084 }

	)

3085 
DEFINST
(
WH64
, 0xf8,

3087 
NA
, NA,

3088 
DNA
, DNA, DNA, DNA, DNA)

3091 
	$CONNECT
(
JMPJSR
)

3093 
	#JMP_IMPL
 \

3095 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3096 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3097 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3098 
	}

	)
}

3099 
DEFINST
(
JMP
, 0x00,

3101 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3102 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3104 
	#JSR_IMPL
 \

3106 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3107 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3108 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3109 }

	)

3110 
DEFINST
(
JSR
, 0x01,

3112 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3113 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3115 
	#RETN_IMPL
 \

3117 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3118 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3119 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3120 }

	)

3121 
DEFINST
(
RETN
, 0x02,

3123 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3124 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3126 
	#JSR_COROUTINE_IMPL
 \

3128 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3129 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3130 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3131 }

	)

3132 
DEFINST
(
JSR_COROUTINE
, 0x03,

3134 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3135 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3139 
	$CONNECT
(
FPTI
)

3142 
	`DEFLINK
(
SEXTB_LINK
, 0x00, "sextb_link", 12, 1)

3145 
	`DEFLINK
(
SEXTW_LINK
, 0x01, "sextw_link", 12, 1)

3153 
	#CTPOP_IMPL
 \

3155 
_ãmp
, 
_i
; \

3156 
qw‹d_t
 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3158 
_ãmp
 = 0; \

3159 
_i
 = 0; _i <= 63; _i++) \

3160 i‡(
_qw‹dhﬁd
 & (
	`ULL
(1Ë<< 
_i
)) \

3161 
_ãmp
++; \

3163 
	`SET_GPR
(
RC
, (
qw‹d_t
)
_ãmp
); \

3164 
	}

	)
}

3165 
DEFINST
(
CTPOP
, 0x30,

3167 
I¡ALU
, 
F_ICOMP
,

3168 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3171 
	#PERR_IMPL
 \

3173 
_i
; \

3174 
qw‹d_t
 
_sum_diffs
, 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
; \

3176 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3177 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3178 
_sum_diffs
 = 0; \

3180 
_i
 = 0; _i <= 7; _i++) \

3182 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
; \

3184 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
*8)) & 0xff; \

3185 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
*8)) & 0xff; \

3186 i‡(
_byãhﬁd_a
 >
_byãhﬁd_b
) \

3187 
_sum_diffs
 +(
_byãhﬁd_a
 - 
_byãhﬁd_b
); \

3189 
_sum_diffs
 +(
_byãhﬁd_b
 - 
_byãhﬁd_a
); \

3192 
	`SET_GPR
(
RC
, 
_sum_diffs
); \

3193 }

	)

3194 
DEFINST
(
PERR
, 0x31,

3196 
I¡ALU
, 
F_ICOMP
,

3197 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3201 
	#CTLZ_IMPL
 \

3203 
_ãmp
, 
_i
; \

3204 
qw‹d_t
 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3206 
_ãmp
 = 0; \

3207 
_i
 = 63; _i >= 0; _i--) \

3209 i‡(
_qw‹dhﬁd
 & (
	`ULL
(1Ë<< 
_i
)) \

3212 
_ãmp
++; \

3215 
	`SET_GPR
(
RC
, (
qw‹d_t
)
_ãmp
); \

3216 }

	)

3217 
DEFINST
(
CTLZ
, 0x32,

3219 
I¡ALU
, 
F_ICOMP
,

3220 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3222 
	#CTTZ_IMPL
 \

3224 
_ãmp
, 
_i
; \

3225 
qw‹d_t
 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3227 
_ãmp
 = 0; \

3228 
_i
 = 0; _i <= 63; _i++) \

3230 i‡(
_qw‹dhﬁd
 & (
	`ULL
(1Ë<< 
_i
)) \

3233 
_ãmp
++; \

3236 
	`SET_GPR
(
RC
, (
qw‹d_t
)
_ãmp
); \

3237 }

	)

3238 
DEFINST
(
CTTZ
, 0x33,

3240 
I¡ALU
, 
F_ICOMP
,

3241 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3245 
	#UNPKBW_IMPL
 \

3247 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3249 
_ãmp
 = 0; \

3250 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3252 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3253 
_ãmp
 |(((
_qw‹dhﬁd
 >> 8) & 0xff) << 16); \

3254 
_ãmp
 |(((
_qw‹dhﬁd
 >> 16) & 0xff) << 32); \

3255 
_ãmp
 |(((
_qw‹dhﬁd
 >> 24) & 0xff) << 48); \

3257 
	`SET_GPR
(
RC
, 
_ãmp
); \

3258 }

	)

3259 
DEFINST
(
UNPKBW
, 0x34,

3261 
I¡ALU
, 
F_ICOMP
,

3262 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3264 
	#UNPKBL_IMPL
 \

3266 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3268 
_ãmp
 = 0; \

3269 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3271 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3272 
_ãmp
 |(((
_qw‹dhﬁd
 >> 8) & 0xff) << 32); \

3274 
	`SET_GPR
(
RC
, 
_ãmp
); \

3275 }

	)

3276 
DEFINST
(
UNPKBL
, 0x35,

3278 
I¡ALU
, 
F_ICOMP
,

3279 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3281 
	#PKWB_IMPL
 \

3283 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3285 
_ãmp
 = 0; \

3286 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3288 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3289 
_ãmp
 |(((
_qw‹dhﬁd
 >> 16) & 0xff) << 8); \

3290 
_ãmp
 |(((
_qw‹dhﬁd
 >> 32) & 0xff) << 16); \

3291 
_ãmp
 |(((
_qw‹dhﬁd
 >> 48) & 0xff) << 24); \

3293 
	`SET_GPR
(
RC
, 
_ãmp
); \

3294 }

	)

3295 
DEFINST
(
PKWB
, 0x36,

3297 
I¡ALU
, 
F_ICOMP
,

3298 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3300 
	#PKLB_IMPL
 \

3302 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3304 
_ãmp
 = 0; \

3305 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3307 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3308 
_ãmp
 |(((
_qw‹dhﬁd
 >> 32) & 0xff) << 8); \

3310 
	`SET_GPR
(
RC
, 
_ãmp
); \

3311 }

	)

3312 
DEFINST
(
PKLB
, 0x37,

3314 
I¡ALU
, 
F_ICOMP
,

3315 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3319 
DEFLINK
(
MINSB8_LINK
, 0x38, "minsb8_link", 12, 1)

3321 
DEFLINK
(
MINSW4_LINK
, 0x39, "minsw4_link", 12, 1)

3323 
DEFLINK
(
MINUB8_LINK
, 0x3a, "minub8_link", 12, 1)

3325 
DEFLINK
(
MINUW4_LINK
, 0x3b, "minuw4_link", 12, 1)

3327 
DEFLINK
(
MAXUB8_LINK
, 0x3c, "maxub8_link", 12, 1)

3329 
DEFLINK
(
MAXUW4_LINK
, 0x3d, "maxuw4_link", 12, 1)

3331 
DEFLINK
(
MAXSB8_LINK
, 0x3e, "maxsb8_link", 12, 1)

3333 
DEFLINK
(
MAXSW4_LINK
, 0x3f, "maxsw4_link", 12, 1)

3336 
	#FTOIT_IMPL
 \

3338 
	`SET_GPR
(
RC
, 
	`FPR_Q
(
RA
)); \

3339 }

	)

3340 
DEFINST
(
FTOIT
, 0x70,

3342 
FlﬂtCVT
, 
F_FCOMP
,

3343 
DGPR
(
RC
), 
DNA
, 
DFPR
(
RA
), DNA, DNA)

3345 
	#FTOIS_IMPL
 \

3347 
sqw‹d_t
 
_l⁄ghﬁd
; \

3348 
sw‹d_t
 
_öthﬁd
; \

3350 
_l⁄ghﬁd
 = 
	`FPR_Q
(
RA
); \

3351 
_öthﬁd
 = (((
_l⁄ghﬁd
 >> 32Ë& 
	`ULL
(0xc0000000)) \

3352 | ((
_l⁄ghﬁd
 >> 29Ë& 
	`ULL
(0x3fffffff))); \

3354 
	`SET_GPR
(
RC
, (
	`SEXT32
(
_l⁄ghﬁd
 >> 63Ë<< 32Ë| 
_öthﬁd
); \

3355 }

	)

3356 
DEFINST
(
FTOIS
, 0x78,

3358 
FlﬂtCVT
, 
F_FCOMP
,

3359 
DGPR
(
RC
), 
DNA
, 
DFPR
(
RA
), DNA, DNA)

3363 
	$CONNECT
(
MINSB8_LINK
)

3365 
	#MINSB8_IMPL
 \

3367 
_i
; \

3368 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3370 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3371 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3372 
_qw‹dhﬁd_c
 = 0; \

3374 
_i
 = 0; _i <= 7; _i++) \

3376 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3378 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3379 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3380 
_byãhﬁd_c
 = 
	`MIN
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3382 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3385 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3386 
	}

	)
}

3387 
DEFINST
(
MINSB8
, 0x00,

3389 
I¡ALU
, 
F_ICOMP
,

3390 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3392 
	#MINSB8I_IMPL
 \

3394 
_i
; \

3395 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3397 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3398 
_qw‹dhﬁd_b
 = 
IMM
; \

3399 
_qw‹dhﬁd_c
 = 0; \

3401 
_i
 = 0; _i <= 7; _i++) \

3403 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3405 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3406 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3407 
_byãhﬁd_c
 = 
	`MIN
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3409 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3412 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3413 }

	)

3414 
DEFINST
(
MINSB8I
, 0x01,

3416 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3417 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3420 
	$CONNECT
(
MINSW4_LINK
)

3422 
	#MINSW4_IMPL
 \

3424 
_i
; \

3425 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3427 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3428 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3429 
_qw‹dhﬁd_c
 = 0; \

3431 
_i
 = 0; _i <= 3; _i++) \

3433 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3435 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3436 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3437 
_hÆfhﬁd_c
 = 
	`MIN
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3439 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3442 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3443 
	}

	)
}

3444 
DEFINST
(
MINSW4
, 0x00,

3446 
I¡ALU
, 
F_ICOMP
,

3447 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3449 
	#MINSW4I_IMPL
 \

3451 
_i
; \

3452 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3454 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3455 
_qw‹dhﬁd_b
 = 
IMM
; \

3456 
_qw‹dhﬁd_c
 = 0; \

3458 
_i
 = 0; _i <= 3; _i++) \

3460 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3462 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3463 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3464 
_hÆfhﬁd_c
 = 
	`MIN
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3466 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3469 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3470 }

	)

3471 
DEFINST
(
MINSW4I
, 0x01,

3473 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3474 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3477 
	$CONNECT
(
MINUB8_LINK
)

3479 
	#MINUB8_IMPL
 \

3481 
_i
; \

3482 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3484 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3485 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3486 
_qw‹dhﬁd_c
 = 0; \

3488 
_i
 = 0; _i <= 7; _i++) \

3490 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3492 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3493 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3494 
_byãhﬁd_c
 = 
	`MIN
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3496 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3499 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3500 
	}

	)
}

3501 
DEFINST
(
MINUB8
, 0x00,

3503 
I¡ALU
, 
F_ICOMP
,

3504 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3506 
	#MINUB8I_IMPL
 \

3508 
_i
; \

3509 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3511 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3512 
_qw‹dhﬁd_b
 = 
IMM
; \

3513 
_qw‹dhﬁd_c
 = 0; \

3515 
_i
 = 0; _i <= 7; _i++) \

3517 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3519 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3520 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3521 
_byãhﬁd_c
 = 
	`MIN
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3523 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3526 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3527 }

	)

3528 
DEFINST
(
MINUB8I
, 0x01,

3530 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3531 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3534 
	$CONNECT
(
MINUW4_LINK
)

3536 
	#MINUW4_IMPL
 \

3538 
_i
; \

3539 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3541 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3542 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3543 
_qw‹dhﬁd_c
 = 0; \

3545 
_i
 = 0; _i <= 3; _i++) \

3547 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3549 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3550 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3551 
_hÆfhﬁd_c
 = 
	`MIN
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3553 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3556 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3557 
	}

	)
}

3558 
DEFINST
(
MINUW4
, 0x00,

3560 
I¡ALU
, 
F_ICOMP
,

3561 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3563 
	#MINUW4I_IMPL
 \

3565 
_i
; \

3566 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3568 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3569 
_qw‹dhﬁd_b
 = 
IMM
; \

3570 
_qw‹dhﬁd_c
 = 0; \

3572 
_i
 = 0; _i <= 3; _i++) \

3574 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3576 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3577 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3578 
_hÆfhﬁd_c
 = 
	`MIN
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3580 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3583 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3584 }

	)

3585 
DEFINST
(
MINUW4I
, 0x01,

3587 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3588 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3591 
	$CONNECT
(
MAXUB8_LINK
)

3593 
	#MAXUB8_IMPL
 \

3595 
_i
; \

3596 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3598 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3599 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3600 
_qw‹dhﬁd_c
 = 0; \

3602 
_i
 = 0; _i <= 7; _i++) \

3604 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3606 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3607 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3608 
_byãhﬁd_c
 = 
	`MAX
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3610 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3613 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3614 
	}

	)
}

3615 
DEFINST
(
MAXUB8
, 0x00,

3617 
I¡ALU
, 
F_ICOMP
,

3618 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3620 
	#MAXUB8I_IMPL
 \

3622 
_i
; \

3623 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3625 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3626 
_qw‹dhﬁd_b
 = 
IMM
; \

3627 
_qw‹dhﬁd_c
 = 0; \

3629 
_i
 = 0; _i <= 7; _i++) \

3631 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3633 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3634 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3635 
_byãhﬁd_c
 = 
	`MAX
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3637 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3640 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3641 }

	)

3642 
DEFINST
(
MAXUB8I
, 0x01,

3644 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3645 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3648 
	$CONNECT
(
MAXUW4_LINK
)

3650 
	#MAXUW4_IMPL
 \

3652 
_i
; \

3653 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3655 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3656 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3657 
_qw‹dhﬁd_c
 = 0; \

3659 
_i
 = 0; _i <= 3; _i++) \

3661 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3663 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3664 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3665 
_hÆfhﬁd_c
 = 
	`MAX
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3667 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3670 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3671 
	}

	)
}

3672 
DEFINST
(
MAXUW4
, 0x00,

3674 
I¡ALU
, 
F_ICOMP
,

3675 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3677 
	#MAXUW4I_IMPL
 \

3679 
_i
; \

3680 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3682 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3683 
_qw‹dhﬁd_b
 = 
IMM
; \

3684 
_qw‹dhﬁd_c
 = 0; \

3686 
_i
 = 0; _i <= 3; _i++) \

3688 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3690 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3691 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3692 
_hÆfhﬁd_c
 = 
	`MAX
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3694 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3697 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3698 }

	)

3699 
DEFINST
(
MAXUW4I
, 0x01,

3701 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3702 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3705 
	$CONNECT
(
MAXSB8_LINK
)

3707 
	#MAXSB8_IMPL
 \

3709 
_i
; \

3710 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3712 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3713 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3714 
_qw‹dhﬁd_c
 = 0; \

3716 
_i
 = 0; _i <= 7; _i++) \

3718 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3720 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3721 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3722 
_byãhﬁd_c
 = 
	`MAX
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3724 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3727 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3728 
	}

	)
}

3729 
DEFINST
(
MAXSB8
, 0x00,

3731 
I¡ALU
, 
F_ICOMP
,

3732 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3734 
	#MAXSB8I_IMPL
 \

3736 
_i
; \

3737 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3739 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3740 
_qw‹dhﬁd_b
 = 
IMM
; \

3741 
_qw‹dhﬁd_c
 = 0; \

3743 
_i
 = 0; _i <= 7; _i++) \

3745 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3747 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3748 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3749 
_byãhﬁd_c
 = 
	`MAX
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3751 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3754 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3755 }

	)

3756 
DEFINST
(
MAXSB8I
, 0x01,

3758 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3759 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3762 
	$CONNECT
(
MAXSW4_LINK
)

3764 
	#MAXSW4_IMPL
 \

3766 
_i
; \

3767 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3769 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3770 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3771 
_qw‹dhﬁd_c
 = 0; \

3773 
_i
 = 0; _i <= 3; _i++) \

3775 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3777 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3778 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3779 
_hÆfhﬁd_c
 = 
	`MAX
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3781 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3784 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3785 
	}

	)
}

3786 
DEFINST
(
MAXSW4
, 0x00,

3788 
I¡ALU
, 
F_ICOMP
,

3789 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3791 
	#MAXSW4I_IMPL
 \

3793 
_i
; \

3794 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3796 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3797 
_qw‹dhﬁd_b
 = 
IMM
; \

3798 
_qw‹dhﬁd_c
 = 0; \

3800 
_i
 = 0; _i <= 3; _i++) \

3802 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3804 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3805 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3806 
_hÆfhﬁd_c
 = 
	`MAX
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3808 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3811 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3812 }

	)

3813 
DEFINST
(
MAXSW4I
, 0x01,

3815 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3816 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3820 
	$CONNECT
(
SEXTB_LINK
)

3823 
	#SEXTB_IMPL
 \

3825 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
sbyã_t
)(
	`GPR
(
RB
) & 0xff)); \

3826 
	}

	)
}

3827 
DEFINST
(
SEXTB
, 0x00,

3829 
I¡ALU
, 
F_ICOMP
,

3830 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3833 
	#SEXTBI_IMPL
 \

3835 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
sbyã_t
)(
IMM
 & 0xff)); \

3836 }

	)

3837 
DEFINST
(
SEXTBI
, 0x01,

3839 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3840 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

3844 
	$CONNECT
(
SEXTW_LINK
)

3847 
	#SEXTW_IMPL
 \

3849 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
shÆf_t
)(
	`GPR
(
RB
) & 0xffff)); \

3850 
	}

	)
}

3851 
DEFINST
(
SEXTW
, 0x00,

3853 
I¡ALU
, 
F_ICOMP
,

3854 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3857 
	#SEXTWI_IMPL
 \

3859 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
shÆf_t
)(
IMM
 & 0xffff)); \

3860 }

	)

3861 
DEFINST
(
SEXTWI
, 0x01,

3863 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3864 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

3869 #unde‡
LDA_IMPL


3870 #unde‡
LDAH_IMPL


3871 #unde‡
LDBU_IMPL


3872 #unde‡
LDQ_U_IMPL


3873 #unde‡
LDWU_IMPL


3874 #unde‡
STW_IMPL


3875 #unde‡
STB_IMPL


3876 #unde‡
STQ_U_IMPL


3877 #unde‡
FLTV_IMPL


3878 #unde‡
LDF_IMPL


3879 #unde‡
LDG_IMPL


3880 #unde‡
LDS_IMPL


3881 #unde‡
LDT_IMPL


3882 #unde‡
STF_IMPL


3883 #unde‡
STG_IMPL


3884 #unde‡
STS_IMPL


3885 #unde‡
STT_IMPL


3886 #unde‡
LDL_IMPL


3887 #unde‡
LDQ_IMPL


3888 #unde‡
LDL_L_IMPL


3889 #unde‡
LDQ_L_IMPL


3890 #unde‡
STL_IMPL


3891 #unde‡
STQ_IMPL


3892 #unde‡
STL_C_IMPL


3893 #unde‡
STQ_C_IMPL


3894 #unde‡
BR_IMPL


3895 #unde‡
FBEQ_IMPL


3896 #unde‡
FBLT_IMPL


3897 #unde‡
FBLE_IMPL


3898 #unde‡
BSR_IMPL


3899 #unde‡
FBNE_IMPL


3900 #unde‡
FBGE_IMPL


3901 #unde‡
FBGT_IMPL


3902 #unde‡
BLBC_IMPL


3903 #unde‡
BEQ_IMPL


3904 #unde‡
BLT_IMPL


3905 #unde‡
BLE_IMPL


3906 #unde‡
BLBS_IMPL


3907 #unde‡
BNE_IMPL


3908 #unde‡
BGE_IMPL


3909 #unde‡
BGT_IMPL


3910 #unde‡
PAL_CALLSYS_IMPL


3911 #unde‡
PAL_RDUNIQ_IMPL


3912 #unde‡
PAL_WRUNIQ_IMPL


3913 #unde‡
ADDL_IMPL


3914 #unde‡
ADDLI_IMPL


3915 #unde‡
S4ADDL_IMPL


3916 #unde‡
S4ADDLI_IMPL


3917 #unde‡
SUBL_IMPL


3918 #unde‡
SUBLI_IMPL


3919 #unde‡
S4SUBL_IMPL


3920 #unde‡
S4SUBLI_IMPL


3921 #unde‡
CMPBGE_IMPL


3922 #unde‡
CMPBGEI_IMPL


3923 #unde‡
S8ADDL_IMPL


3924 #unde‡
S8ADDLI_IMPL


3925 #unde‡
S8SUBL_IMPL


3926 #unde‡
S8SUBLI_IMPL


3927 #unde‡
CMPULT_IMPL


3928 #unde‡
CMPULTI_IMPL


3929 #unde‡
ADDQ_IMPL


3930 #unde‡
ADDQI_IMPL


3931 #unde‡
S4ADDQ_IMPL


3932 #unde‡
S4ADDQI_IMPL


3933 #unde‡
SUBQ_IMPL


3934 #unde‡
SUBQI_IMPL


3935 #unde‡
S4SUBQ_IMPL


3936 #unde‡
S4SUBQI_IMPL


3937 #unde‡
CMPEQ_IMPL


3938 #unde‡
CMPEQI_IMPL


3939 #unde‡
S8ADDQ_IMPL


3940 #unde‡
S8ADDQI_IMPL


3941 #unde‡
S8SUBQ_IMPL


3942 #unde‡
S8SUBQI_IMPL


3943 #unde‡
CMPULE_IMPL


3944 #unde‡
CMPULEI_IMPL


3945 #unde‡
ADDLV_IMPL


3946 #unde‡
ADDLVI_IMPL


3947 #unde‡
SUBLV_IMPL


3948 #unde‡
SUBLVI_IMPL


3949 #unde‡
CMPLT_IMPL


3950 #unde‡
CMPLTI_IMPL


3951 #unde‡
ADDQV_IMPL


3952 #unde‡
ADDQVI_IMPL


3953 #unde‡
SUBQV_IMPL


3954 #unde‡
SUBQVI_IMPL


3955 #unde‡
CMPLE_IMPL


3956 #unde‡
CMPLEI_IMPL


3957 #unde‡
AND_IMPL


3958 #unde‡
ANDI_IMPL


3959 #unde‡
BIC_IMPL


3960 #unde‡
BICI_IMPL


3961 #unde‡
CMOVLBS_IMPL


3962 #unde‡
CMOVLBSI_IMPL


3963 #unde‡
CMOVLBC_IMPL


3964 #unde‡
CMOVLBCI_IMPL


3965 #unde‡
BIS_IMPL


3966 #unde‡
BISI_IMPL


3967 #unde‡
CMOVEQ_IMPL


3968 #unde‡
CMOVEQI_IMPL


3969 #unde‡
CMOVNE_IMPL


3970 #unde‡
CMOVNEI_IMPL


3971 #unde‡
ORNOT_IMPL


3972 #unde‡
ORNOTI_IMPL


3973 #unde‡
XOR_IMPL


3974 #unde‡
XORI_IMPL


3975 #unde‡
CMOVLT_IMPL


3976 #unde‡
CMOVLTI_IMPL


3977 #unde‡
CMOVGE_IMPL


3978 #unde‡
CMOVGEI_IMPL


3979 #unde‡
EQV_IMPL


3980 #unde‡
EQVI_IMPL


3981 #unde‡
AMASK_IMPL


3982 #unde‡
AMASKI_IMPL


3983 #unde‡
CMOVLE_IMPL


3984 #unde‡
CMOVLEI_IMPL


3985 #unde‡
CMOVGT_IMPL


3986 #unde‡
CMOVGTI_IMPL


3987 #unde‡
IMPLVER_IMPL


3988 #unde‡
MSKBL_IMPL


3989 #unde‡
MSKBLI_IMPL


3990 #unde‡
EXTBL_IMPL


3991 #unde‡
EXTBLI_IMPL


3992 #unde‡
INSBL_IMPL


3993 #unde‡
INSBLI_IMPL


3994 #unde‡
MSKWL_IMPL


3995 #unde‡
MSKWLI_IMPL


3996 #unde‡
EXTWL_IMPL


3997 #unde‡
EXTWLI_IMPL


3998 #unde‡
INSWL_IMPL


3999 #unde‡
INSWLI_IMPL


4000 #unde‡
MSKLL_IMPL


4001 #unde‡
MSKLLI_IMPL


4002 #unde‡
EXTLL_IMPL


4003 #unde‡
EXTLLI_IMPL


4004 #unde‡
INSLL_IMPL


4005 #unde‡
INSLLI_IMPL


4006 #unde‡
ZAP_IMPL


4007 #unde‡
ZAPI_IMPL


4008 #unde‡
ZAPNOT_IMPL


4009 #unde‡
ZAPNOTI_IMPL


4010 #unde‡
MSKQL_IMPL


4011 #unde‡
MSKQLI_IMPL


4012 #unde‡
SRL_IMPL


4013 #unde‡
SRLI_IMPL


4014 #unde‡
EXTQL_IMPL


4015 #unde‡
EXTQLI_IMPL


4016 #unde‡
SLL_IMPL


4017 #unde‡
SLLI_IMPL


4018 #unde‡
INSQL_IMPL


4019 #unde‡
INSQLI_IMPL


4020 #unde‡
SRA_IMPL


4021 #unde‡
SRAI_IMPL


4022 #unde‡
MSKWH_IMPL


4023 #unde‡
MSKWHI_IMPL


4024 #unde‡
INSWH_IMPL


4025 #unde‡
INSWHI_IMPL


4026 #unde‡
EXTWH_IMPL


4027 #unde‡
EXTWHI_IMPL


4028 #unde‡
MSKLH_IMPL


4029 #unde‡
MSKLHI_IMPL


4030 #unde‡
INSLH_IMPL


4031 #unde‡
INSLHI_IMPL


4032 #unde‡
EXTLH_IMPL


4033 #unde‡
EXTLHI_IMPL


4034 #unde‡
MSKQH_IMPL


4035 #unde‡
MSKQHI_IMPL


4036 #unde‡
INSQH_IMPL


4037 #unde‡
INSQHI_IMPL


4038 #unde‡
EXTQH_IMPL


4039 #unde‡
EXTQHI_IMPL


4040 #unde‡
MULL_IMPL


4041 #unde‡
MULLI_IMPL


4042 #unde‡
MULQ_IMPL


4043 #unde‡
MULQI_IMPL


4044 #unde‡
UMULH_IMPL


4045 #unde‡
UMULHI_IMPL


4046 #unde‡
ITOFS_IMPL


4047 #unde‡
SQRTF_IMPL


4048 #unde‡
SQRTS_IMPL


4049 #unde‡
ITOFF_IMPL


4050 #unde‡
ITOFT_IMPL


4051 #unde‡
SQRTG_IMPL


4052 #unde‡
SQRTT_IMPL


4053 #unde‡
ADDS_IMPL


4054 #unde‡
SUBS_IMPL


4055 #unde‡
MULS_IMPL


4056 #unde‡
DIVS_IMPL


4057 #unde‡
ADDT_IMPL


4058 #unde‡
SUBT_IMPL


4059 #unde‡
MULT_IMPL


4060 #unde‡
DIVT_IMPL


4061 #unde‡
CMPTUN_IMPL


4062 #unde‡
CMPTEQ_IMPL


4063 #unde‡
CMPTLT_IMPL


4064 #unde‡
CMPTLE_IMPL


4065 #unde‡
CVTTS_IMPL


4066 #unde‡
CVTTQ_IMPL


4067 #unde‡
CVTQS_IMPL


4068 #unde‡
CVTQT_IMPL


4069 #unde‡
CVTLQ_IMPL


4070 #unde‡
CPYS_IMPL


4071 #unde‡
CPYSN_IMPL


4072 #unde‡
CPYSE_IMPL


4073 #unde‡
MT_FPCR_IMPL


4074 #unde‡
MF_FPCR_IMPL


4075 #unde‡
FCMOVEQ_IMPL


4076 #unde‡
FCMOVNE_IMPL


4077 #unde‡
FCMOVLT_IMPL


4078 #unde‡
FCMOVGE_IMPL


4079 #unde‡
FCMOVLE_IMPL


4080 #unde‡
FCMOVGT_IMPL


4081 #unde‡
CVTQL_IMPL


4082 #unde‡
TRAPB_IMPL


4083 #unde‡
EXCB_IMPL


4084 #unde‡
MB_IMPL


4085 #unde‡
WMB_IMPL


4086 #unde‡
FETCH_IMPL


4087 #unde‡
FETCH_M_IMPL


4088 #unde‡
RPCC_IMPL


4089 #unde‡
_RC_IMPL


4090 #unde‡
ECB_IMPL


4091 #unde‡
_RS_IMPL


4092 #unde‡
WH64_IMPL


4093 #unde‡
JMP_IMPL


4094 #unde‡
JSR_IMPL


4095 #unde‡
RETN_IMPL


4096 #unde‡
JSR_COROUTINE_IMPL


4097 #unde‡
SEXTB_IMPL


4098 #unde‡
SEXTBI_IMPL


4099 #unde‡
SEXTW_IMPL


4100 #unde‡
SEXTWI_IMPL


4101 #unde‡
CTPOP_IMPL


4102 #unde‡
PERR_IMPL


4103 #unde‡
CTLZ_IMPL


4104 #unde‡
CTTZ_IMPL


4105 #unde‡
UNPKBW_IMPL


4106 #unde‡
UNPKBL_IMPL


4107 #unde‡
PKWB_IMPL


4108 #unde‡
PKLB_IMPL


4109 #unde‡
MINSB8_IMPL


4110 #unde‡
MINSW4_IMPL


4111 #unde‡
MINUB8_IMPL


4112 #unde‡
MINUW4_IMPL


4113 #unde‡
MAXUB8_IMPL


4114 #unde‡
MAXUW4_IMPL


4115 #unde‡
MAXSB8_IMPL


4116 #unde‡
MAXSW4_IMPL


4117 #unde‡
FTOIT_IMPL


4118 #unde‡
FTOIS_IMPL


4120 #unde‡
DEFINST


4121 #unde‡
DEFLINK


4122 #unde‡
CONNECT


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/ansidecl.h

115 #i‚def 
_ANSIDECL_H


116 
	#_ANSIDECL_H
 1

	)

118 #ifde‡
__˝lu•lus


140 #i‚de‡
GCC_VERSION


141 
	#GCC_VERSION
 (
__GNUC__
 * 1000 + 
__GNUC_MINOR__
)

	)

144 #i‡
deföed
 (
__STDC__
Ë|| deföed(
__˝lu•lus
Ë|| deföed (
_AIX
Ë|| (deföed (
__mùs
Ë&& deföed (
_SYSTYPE_SVR4
)Ë|| deföed(
_WIN32
)

152 
	#ANSI_PROTOTYPES
 1

	)

153 
	#PTR
 *

	)

154 
	#PTRCONST
 *c⁄°

	)

155 
	#LONG_DOUBLE
 

	)

159 #i‚de‡
PARAMS


160 
	#PARAMS
(
ARGS
Ë
	)
ARGS

163 
	#VPARAMS
(
ARGS
Ë
	)
ARGS

164 
	#VA_START
(
VA_LIST
, 
VAR
Ë
	`va_°¨t
(VA_LIST, VAR)

	)

170 
	#VA_OPEN
(
AP
, 
VAR
Ë{ 
va_li°
 AP; 
	`va_°¨t
(AP, VAR); { 
Qdmy


	)

171 
	#VA_CLOSE
(
AP
Ë} 
	`va_íd
(AP); }

	)

172 
	#VA_FIXEDARG
(
AP
, 
T
, 
N
Ë
Qdmy


	)

180 #unde‡
ölöe


181 #i‡
__STDC_VERSION__
 > 199901L || 
deföed
(
__˝lu•lus
)

184 #i‡
GCC_VERSION
 >= 2007

185 
	#ölöe
 
__ölöe__


	)

187 
	#ölöe


	)

192 #i‚de‡
IN_GCC


193 
	#CONST
 c⁄°

	)

194 
	#VOLATILE
 vﬁ©ûe

	)

195 
	#SIGNED
 sig√d

	)

197 
	#PROTO
(
ty≥
, 
«me
, 
¨gli°
Ëty≥Çamê
	)
arglist

198 
	#EXFUN
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

199 
	#DEFUN
(
«me
, 
¨gli°
, 
¨gs
Ë
	`«me
◊rgs)

	)

200 
	#DEFUN_VOID
(
«me
Ë
	`«me
()

	)

201 
	#AND
 ,

	)

202 
	#DOTS
 , ...

	)

203 
	#NOARGS
 

	)

208 #unde‡
ANSI_PROTOTYPES


209 
	#PTR
 *

	)

210 
	#PTRCONST
 
PTR


	)

211 
	#LONG_DOUBLE
 

	)

213 
	#PARAMS
(
¨gs
Ë()

	)

214 
	#VPARAMS
(
¨gs
Ë(
va_Æi°
Ë
va_d˛


	)

215 
	#VA_START
(
va_li°
, 
v¨
Ë
	`va_°¨t
(va_li°)

	)

217 
	#VA_OPEN
(
AP
, 
VAR
Ë{ 
va_li°
 AP; 
	`va_°¨t
(AP); { 
Qdmy


	)

218 
	#VA_CLOSE
(
AP
Ë} 
	`va_íd
(AP); }

	)

219 
	#VA_FIXEDARG
(
AP
, 
TYPE
, 
NAME
ËTYPE NAME = 
	`va_¨g
(AP, TYPE)

	)

225 #unde‡
ölöe


226 c⁄°

	)

227 vﬁ©ûe

	)

228 sig√d

	)

229 
	#ölöe


	)

231 #i‚de‡
IN_GCC


232 
	#CONST


	)

233 
	#VOLATILE


	)

234 
	#SIGNED


	)

236 
	#PROTO
(
ty≥
, 
«me
, 
¨gli°
Ëty≥ 
	`«me
 ()

	)

237 
	#EXFUN
(
«me
, 
¥Ÿo
Ë
	`«me
()

	)

238 
	#DEFUN
(
«me
, 
¨gli°
, 
¨gs
Ë«mê¨gli°árgs;

	)

239 
	#DEFUN_VOID
(
«me
Ë
	`«me
()

	)

240 
	#AND
 ;

	)

241 
	#DOTS


	)

242 
	#NOARGS


	)

251 #i‡(
GCC_VERSION
 < 2007)

252 
	#__©åibuã__
(
x
)

	)

256 #i‚de‡
ATTRIBUTE_MALLOC


257 #i‡(
GCC_VERSION
 >= 2096)

258 
	#ATTRIBUTE_MALLOC
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

260 
	#ATTRIBUTE_MALLOC


	)

266 #i‚de‡
ATTRIBUTE_UNUSED_LABEL


267 #i‚de‡
__˝lu•lus


268 #i‡
GCC_VERSION
 >= 2093

269 
	#ATTRIBUTE_UNUSED_LABEL
 
ATTRIBUTE_UNUSED


	)

271 
	#ATTRIBUTE_UNUSED_LABEL


	)

274 #i‡
GCC_VERSION
 >= 4005

275 
	#ATTRIBUTE_UNUSED_LABEL
 
ATTRIBUTE_UNUSED
 ;

	)

277 
	#ATTRIBUTE_UNUSED_LABEL


	)

282 #i‚de‡
ATTRIBUTE_UNUSED


283 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

288 #i‡! 
deföed
(
__˝lu•lus
Ë|| (
GCC_VERSION
 >= 3004)

289 
	#ARG_UNUSED
(
NAME
ËNAME 
ATTRIBUTE_UNUSED


	)

291 
	#ARG_UNUSED
(
NAME
Ë
	)
NAME

294 #i‚de‡
ATTRIBUTE_NORETURN


295 
	#ATTRIBUTE_NORETURN
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

299 #i‚de‡
ATTRIBUTE_NONNULL


300 #i‡(
GCC_VERSION
 >= 3003)

301 
	#ATTRIBUTE_NONNULL
(
m
Ë
	`__©åibuã__
 ((
	`__n⁄nuŒ__
 (m)))

	)

303 
	#ATTRIBUTE_NONNULL
(
m
)

	)

308 #i‚de‡
ATTRIBUTE_PURE


309 #i‡(
GCC_VERSION
 >= 3000)

310 
	#ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

312 
	#ATTRIBUTE_PURE


	)

320 #i‚de‡
ATTRIBUTE_PRINTF


321 
	#ATTRIBUTE_PRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, m,Ç))Ë
	`ATTRIBUTE_NONNULL
(m)

	)

322 
	#ATTRIBUTE_PRINTF_1
 
	`ATTRIBUTE_PRINTF
(1, 2)

	)

323 
	#ATTRIBUTE_PRINTF_2
 
	`ATTRIBUTE_PRINTF
(2, 3)

	)

324 
	#ATTRIBUTE_PRINTF_3
 
	`ATTRIBUTE_PRINTF
(3, 4)

	)

325 
	#ATTRIBUTE_PRINTF_4
 
	`ATTRIBUTE_PRINTF
(4, 5)

	)

326 
	#ATTRIBUTE_PRINTF_5
 
	`ATTRIBUTE_PRINTF
(5, 6)

	)

332 #i‚de‡
ATTRIBUTE_FPTR_PRINTF


333 #i‡(
GCC_VERSION
 >= 3001)

334 
	#ATTRIBUTE_FPTR_PRINTF
(
m
, 
n
Ë
	`ATTRIBUTE_PRINTF
(m,Ç)

	)

336 
	#ATTRIBUTE_FPTR_PRINTF
(
m
, 
n
)

	)

338 
	#ATTRIBUTE_FPTR_PRINTF_1
 
	`ATTRIBUTE_FPTR_PRINTF
(1, 2)

	)

339 
	#ATTRIBUTE_FPTR_PRINTF_2
 
	`ATTRIBUTE_FPTR_PRINTF
(2, 3)

	)

340 
	#ATTRIBUTE_FPTR_PRINTF_3
 
	`ATTRIBUTE_FPTR_PRINTF
(3, 4)

	)

341 
	#ATTRIBUTE_FPTR_PRINTF_4
 
	`ATTRIBUTE_FPTR_PRINTF
(4, 5)

	)

342 
	#ATTRIBUTE_FPTR_PRINTF_5
 
	`ATTRIBUTE_FPTR_PRINTF
(5, 6)

	)

347 #i‚de‡
ATTRIBUTE_NULL_PRINTF


348 #i‡(
GCC_VERSION
 >= 3003)

349 
	#ATTRIBUTE_NULL_PRINTF
(
m
, 
n
Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, m,Ç)))

	)

351 
	#ATTRIBUTE_NULL_PRINTF
(
m
, 
n
)

	)

353 
	#ATTRIBUTE_NULL_PRINTF_1
 
	`ATTRIBUTE_NULL_PRINTF
(1, 2)

	)

354 
	#ATTRIBUTE_NULL_PRINTF_2
 
	`ATTRIBUTE_NULL_PRINTF
(2, 3)

	)

355 
	#ATTRIBUTE_NULL_PRINTF_3
 
	`ATTRIBUTE_NULL_PRINTF
(3, 4)

	)

356 
	#ATTRIBUTE_NULL_PRINTF_4
 
	`ATTRIBUTE_NULL_PRINTF
(4, 5)

	)

357 
	#ATTRIBUTE_NULL_PRINTF_5
 
	`ATTRIBUTE_NULL_PRINTF
(5, 6)

	)

361 #i‚de‡
ATTRIBUTE_SENTINEL


362 #i‡(
GCC_VERSION
 >= 3005)

363 
	#ATTRIBUTE_SENTINEL
 
	`__©åibuã__
 ((
__£¡öñ__
))

	)

365 
	#ATTRIBUTE_SENTINEL


	)

370 #i‚de‡
ATTRIBUTE_ALIGNED_ALIGNOF


371 #i‡(
GCC_VERSION
 >= 3000)

372 
	#ATTRIBUTE_ALIGNED_ALIGNOF
(
m
Ë
	`__©åibuã__
 ((
	`__Æig√d__
 (
	`__Æignof__
 (m))))

	)

374 
	#ATTRIBUTE_ALIGNED_ALIGNOF
(
m
)

	)

380 #i‚de‡
ATTRIBUTE_PACKED


381 
	#ATTRIBUTE_PACKED
 
	`__©åibuã__
 ((
∑cked
))

	)

385 #i‚de‡
ATTRIBUTE_COLD


386 #i‡(
GCC_VERSION
 >= 4003)

387 
	#ATTRIBUTE_COLD
 
	`__©åibuã__
 ((
__cﬁd__
))

	)

389 
	#ATTRIBUTE_COLD


	)

392 #i‚de‡
ATTRIBUTE_HOT


393 #i‡(
GCC_VERSION
 >= 4003)

394 
	#ATTRIBUTE_HOT
 
	`__©åibuã__
 ((
__hŸ__
))

	)

396 
	#ATTRIBUTE_HOT


	)

403 #i‡
GCC_VERSION
 < 2008

404 
	#__exãnsi⁄__


	)

413 #ifde‡
__˝lu•lus


414 
	#EXPORTED_CONST
 c⁄°

	)

416 
	#EXPORTED_CONST
 c⁄°

	)

419 #ifde‡
__˝lu•lus


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

62 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


63 
	#O_DSYNC
 010000

	)

64 
	#O_RSYNC
 
O_SYNC


	)

67 #ifde‡
__USE_LARGEFILE64


68 #i‡
__WORDSIZE
 == 64

69 
	#O_LARGEFILE
 0

	)

71 
	#O_LARGEFILE
 0100000

	)

76 
	#F_DUPFD
 0

	)

77 
	#F_GETFD
 1

	)

78 
	#F_SETFD
 2

	)

79 
	#F_GETFL
 3

	)

80 
	#F_SETFL
 4

	)

81 #i‡
__WORDSIZE
 == 64

82 
	#F_GETLK
 5

	)

83 
	#F_SETLK
 6

	)

84 
	#F_SETLKW
 7

	)

86 
	#F_GETLK64
 5

	)

87 
	#F_SETLK64
 6

	)

88 
	#F_SETLKW64
 7

	)

90 #i‚de‡
__USE_FILE_OFFSET64


91 
	#F_GETLK
 5

	)

92 
	#F_SETLK
 6

	)

93 
	#F_SETLKW
 7

	)

95 
	#F_GETLK
 
F_GETLK64


	)

96 
	#F_SETLK
 
F_SETLK64


	)

97 
	#F_SETLKW
 
F_SETLKW64


	)

99 
	#F_GETLK64
 12

	)

100 
	#F_SETLK64
 13

	)

101 
	#F_SETLKW64
 14

	)

104 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


105 
	#F_SETOWN
 8

	)

106 
	#F_GETOWN
 9

	)

109 #ifde‡
__USE_GNU


110 
	#F_SETSIG
 10

	)

111 
	#F_GETSIG
 11

	)

112 
	#F_SETOWN_EX
 15

	)

113 
	#F_GETOWN_EX
 16

	)

116 #ifde‡
__USE_GNU


117 
	#F_SETLEASE
 1024

	)

118 
	#F_GETLEASE
 1025

	)

119 
	#F_NOTIFY
 1026

	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#F_DUPFD_CLOEXEC
 1030

	)

127 
	#FD_CLOEXEC
 1

	)

130 
	#F_RDLCK
 0

	)

131 
	#F_WRLCK
 1

	)

132 
	#F_UNLCK
 2

	)

135 
	#F_EXLCK
 4

	)

136 
	#F_SHLCK
 8

	)

138 #ifde‡
__USE_BSD


140 
	#LOCK_SH
 1

	)

141 
	#LOCK_EX
 2

	)

142 
	#LOCK_NB
 4

	)

144 
	#LOCK_UN
 8

	)

147 #ifde‡
__USE_GNU


148 
	#LOCK_MAND
 32

	)

149 
	#LOCK_READ
 64

	)

150 
	#LOCK_WRITE
 128

	)

151 
	#LOCK_RW
 192

	)

154 #ifde‡
__USE_GNU


156 
	#DN_ACCESS
 0x00000001

	)

157 
	#DN_MODIFY
 0x00000002

	)

158 
	#DN_CREATE
 0x00000004

	)

159 
	#DN_DELETE
 0x00000008

	)

160 
	#DN_RENAME
 0x00000010

	)

161 
	#DN_ATTRIB
 0x00000020

	)

162 
	#DN_MULTISHOT
 0x80000000

	)

165 
	sÊock


167 
	ml_ty≥
;

168 
	ml_whí˚
;

169 #i‚de‡
__USE_FILE_OFFSET64


170 
__off_t
 
	ml_°¨t
;

171 
__off_t
 
	ml_Àn
;

173 
__off64_t
 
	ml_°¨t
;

174 
__off64_t
 
	ml_Àn
;

176 
__pid_t
 
	ml_pid
;

179 #ifde‡
__USE_LARGEFILE64


180 
	sÊock64


182 
	ml_ty≥
;

183 
	ml_whí˚
;

184 
__off64_t
 
	ml_°¨t
;

185 
__off64_t
 
	ml_Àn
;

186 
__pid_t
 
	ml_pid
;

190 #ifde‡
__USE_GNU


192 
	e__pid_ty≥


194 
	mF_OWNER_TID
 = 0,

195 
	mF_OWNER_PID
,

196 
	mF_OWNER_PGRP
,

197 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


201 
	sf_ow√r_ex


203 
__pid_ty≥
 
	mty≥
;

204 
__pid_t
 
	mpid
;

210 #ifdef 
__USE_BSD


211 
	#FAPPEND
 
O_APPEND


	)

212 
	#FFSYNC
 
O_FSYNC


	)

213 
	#FASYNC
 
O_ASYNC


	)

214 
	#FNONBLOCK
 
O_NONBLOCK


	)

215 
	#FNDELAY
 
O_NDELAY


	)

219 #ifde‡
__USE_XOPEN2K


220 
	#POSIX_FADV_NORMAL
 0

	)

221 
	#POSIX_FADV_RANDOM
 1

	)

222 
	#POSIX_FADV_SEQUENTIAL
 2

	)

223 
	#POSIX_FADV_WILLNEED
 3

	)

224 
	#POSIX_FADV_DONTNEED
 4

	)

225 
	#POSIX_FADV_NOREUSE
 5

	)

229 #ifde‡
__USE_GNU


231 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

234 
	#SYNC_FILE_RANGE_WRITE
 2

	)

237 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

242 
	#SPLICE_F_MOVE
 1

	)

243 
	#SPLICE_F_NONBLOCK
 2

	)

246 
	#SPLICE_F_MORE
 4

	)

247 
	#SPLICE_F_GIFT
 8

	)

250 
	g__BEGIN_DECLS


252 #ifde‡
__USE_GNU


255 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

256 
__THROW
;

260 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

261 
__Êags
);

265 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

266 
size_t
 
__cou¡
, 
__Êags
);

269 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

270 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

271 
__Êags
);

274 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

275 
__Êags
);

278 #i‚de‡
__USE_FILE_OFFSET64


279 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

281 #ifde‡
__REDIRECT


282 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

283 
__off64_t
 
__Àn
),

284 
ÁŒoˇã64
);

286 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

289 #ifde‡
__USE_LARGEFILE64


290 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

291 
__off64_t
 
__Àn
);

295 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

67 
	#IP_MTU
 14

	)

68 
	#IP_FREEBIND
 15

	)

69 
	#IP_IPSEC_POLICY
 16

	)

70 
	#IP_XFRM_POLICY
 17

	)

71 
	#IP_PASSSEC
 18

	)

72 
	#IP_TRANSPARENT
 19

	)

73 
	#IP_MULTICAST_ALL
 49

	)

76 
	#IP_ORIGDSTADDR
 20

	)

77 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

79 
	#IP_MINTTL
 21

	)

83 
	#IP_PMTUDISC_DONT
 0

	)

84 
	#IP_PMTUDISC_WANT
 1

	)

85 
	#IP_PMTUDISC_DO
 2

	)

86 
	#IP_PMTUDISC_PROBE
 3

	)

89 
	#SOL_IP
 0

	)

91 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

92 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

93 
	#IP_MAX_MEMBERSHIPS
 20

	)

95 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


99 
	sù_›ts


101 
ö_addr
 
	mù_d°
;

102 
	mù_›ts
[40];

106 
	sù_mªqn


108 
ö_addr
 
	mimr_mu…üddr
;

109 
ö_addr
 
	mimr_addªss
;

110 
	mimr_ifödex
;

114 
	sö_pktöfo


116 
	mùi_ifödex
;

117 
ö_addr
 
	mùi_•ec_d°
;

118 
ö_addr
 
	mùi_addr
;

125 
	#IPV6_ADDRFORM
 1

	)

126 
	#IPV6_2292PKTINFO
 2

	)

127 
	#IPV6_2292HOPOPTS
 3

	)

128 
	#IPV6_2292DSTOPTS
 4

	)

129 
	#IPV6_2292RTHDR
 5

	)

130 
	#IPV6_2292PKTOPTIONS
 6

	)

131 
	#IPV6_CHECKSUM
 7

	)

132 
	#IPV6_2292HOPLIMIT
 8

	)

134 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

136 
	#IPV6_NEXTHOP
 9

	)

137 
	#IPV6_AUTHHDR
 10

	)

138 
	#IPV6_UNICAST_HOPS
 16

	)

139 
	#IPV6_MULTICAST_IF
 17

	)

140 
	#IPV6_MULTICAST_HOPS
 18

	)

141 
	#IPV6_MULTICAST_LOOP
 19

	)

142 
	#IPV6_JOIN_GROUP
 20

	)

143 
	#IPV6_LEAVE_GROUP
 21

	)

144 
	#IPV6_ROUTER_ALERT
 22

	)

145 
	#IPV6_MTU_DISCOVER
 23

	)

146 
	#IPV6_MTU
 24

	)

147 
	#IPV6_RECVERR
 25

	)

148 
	#IPV6_V6ONLY
 26

	)

149 
	#IPV6_JOIN_ANYCAST
 27

	)

150 
	#IPV6_LEAVE_ANYCAST
 28

	)

151 
	#IPV6_IPSEC_POLICY
 34

	)

152 
	#IPV6_XFRM_POLICY
 35

	)

154 
	#IPV6_RECVPKTINFO
 49

	)

155 
	#IPV6_PKTINFO
 50

	)

156 
	#IPV6_RECVHOPLIMIT
 51

	)

157 
	#IPV6_HOPLIMIT
 52

	)

158 
	#IPV6_RECVHOPOPTS
 53

	)

159 
	#IPV6_HOPOPTS
 54

	)

160 
	#IPV6_RTHDRDSTOPTS
 55

	)

161 
	#IPV6_RECVRTHDR
 56

	)

162 
	#IPV6_RTHDR
 57

	)

163 
	#IPV6_RECVDSTOPTS
 58

	)

164 
	#IPV6_DSTOPTS
 59

	)

166 
	#IPV6_RECVTCLASS
 66

	)

167 
	#IPV6_TCLASS
 67

	)

170 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

171 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

172 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

173 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

176 
	#IPV6_PMTUDISC_DONT
 0

	)

177 
	#IPV6_PMTUDISC_WANT
 1

	)

178 
	#IPV6_PMTUDISC_DO
 2

	)

179 
	#IPV6_PMTUDISC_PROBE
 3

	)

182 
	#SOL_IPV6
 41

	)

183 
	#SOL_ICMPV6
 58

	)

186 
	#IPV6_RTHDR_LOOSE
 0

	)

187 
	#IPV6_RTHDR_STRICT
 1

	)

189 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/poll.h

19 #i‚de‡
_SYS_POLL_H


26 
	#POLLIN
 0x001

	)

27 
	#POLLPRI
 0x002

	)

28 
	#POLLOUT
 0x004

	)

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


32 
	#POLLRDNORM
 0x040

	)

33 
	#POLLRDBAND
 0x080

	)

34 
	#POLLWRNORM
 0x100

	)

35 
	#POLLWRBAND
 0x200

	)

38 #ifde‡
__USE_GNU


40 
	#POLLMSG
 0x400

	)

41 
	#POLLREMOVE
 0x1000

	)

42 
	#POLLRDHUP
 0x2000

	)

48 
	#POLLERR
 0x008

	)

49 
	#POLLHUP
 0x010

	)

50 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTH
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTH
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTH
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROW
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

235 
	mMSG_WAITFORONE
 = 0x10000,

236 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

238 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

241 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

247 
	smsghdr


249 *
	mmsg_«me
;

250 
sockÀn_t
 
	mmsg_«mñí
;

252 
iovec
 *
	mmsg_iov
;

253 
size_t
 
	mmsg_iovÀn
;

255 *
	mmsg_c⁄åﬁ
;

256 
size_t
 
	mmsg_c⁄åﬁÀn
;

261 
	mmsg_Êags
;

264 #ifde‡
__USE_GNU


266 
	smmsghdr


268 
msghdr
 
	mmsg_hdr
;

269 
	mmsg_Àn
;

274 
	scmsghdr


276 
size_t
 
	mcmsg_Àn
;

281 
	mcmsg_Àvñ
;

282 
	mcmsg_ty≥
;

283 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

284 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

289 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

290 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

292 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

294 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

295 
	#CMSG_FIRSTHDR
(
mhdr
) \

296 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

297 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

298 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

299 & (
size_t
Ë~( (size_tË- 1))

	)

300 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

301 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

302 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

304 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

305 
cmsghdr
 *
__cmsg
Ë
__THROW
;

306 #ifde‡
__USE_EXTERN_INLINES


307 #i‚de‡
_EXTERN_INLINE


308 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

310 
_EXTERN_INLINE
 
cmsghdr
 *

311 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

313 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

317 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

318 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

319 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


320 + 
__mhdr
->
msg_c⁄åﬁÀn
)

321 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

322 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

325  
__cmsg
;

326 
	}
}

333 
	mSCM_RIGHTS
 = 0x01

334 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

335 #ifde‡
__USE_GNU


336 , 
	mSCM_CREDENTIALS
 = 0x02

337 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

341 #ifde‡
__USE_GNU


343 
	su¸ed


345 
pid_t
 
	mpid
;

346 
uid_t
 
	muid
;

347 
gid_t
 
	mgid
;

352 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


353 #i‚de‡
FIOGETOWN


354 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

356 #i‚de‡
FIOSETOWN


357 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

359 #i‚de‡
SIOCATMARK


360 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

362 #i‚de‡
SIOCGPGRP


363 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

365 #i‚de‡
SIOCGSTAMP


366 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

368 #i‚de‡
SIOCGSTAMPNS


369 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

371 #i‚de‡
SIOCSPGRP


372 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

377 
	~<asm/sockë.h
>

379 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


380 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


381 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


382 #unde‡
FIOGETOWN


384 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


385 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


386 #unde‡
FIOSETOWN


388 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


389 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


390 #unde‡
SIOCATMARK


392 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


393 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


394 #unde‡
SIOCGPGRP


396 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


397 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


398 #unde‡
SIOCGSTAMP


400 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


401 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


402 #unde‡
SIOCGSTAMPNS


404 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


405 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


406 #unde‡
SIOCSPGRP


411 
	slögî


413 
	ml_⁄off
;

414 
	ml_lögî
;

418 
__BEGIN_DECLS


425 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

426 
__vÀn
, 
__Êags
,

427 
__c⁄°
 
time•ec
 *
__tmo
);

429 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statfs.h

19 #i‚de‡
_SYS_STATFS_H


23 
	~<bôs/ty≥s.h
>

25 
	s°©fs


27 
__SWORD_TYPE
 
	mf_ty≥
;

28 
__SWORD_TYPE
 
	mf_bsize
;

29 #i‚de‡
__USE_FILE_OFFSET64


30 
__fsblk˙t_t
 
	mf_blocks
;

31 
__fsblk˙t_t
 
	mf_b‰ì
;

32 
__fsblk˙t_t
 
	mf_bavaû
;

33 
__fsfû˙t_t
 
	mf_fûes
;

34 
__fsfû˙t_t
 
	mf_f‰ì
;

36 
__fsblk˙t64_t
 
	mf_blocks
;

37 
__fsblk˙t64_t
 
	mf_b‰ì
;

38 
__fsblk˙t64_t
 
	mf_bavaû
;

39 
__fsfû˙t64_t
 
	mf_fûes
;

40 
__fsfû˙t64_t
 
	mf_f‰ì
;

42 
__fsid_t
 
	mf_fsid
;

43 
__SWORD_TYPE
 
	mf_«mñí
;

44 
__SWORD_TYPE
 
	mf_‰size
;

45 
__SWORD_TYPE
 
	mf_Êags
;

46 
__SWORD_TYPE
 
	mf_•¨e
[4];

49 #ifde‡
__USE_LARGEFILE64


50 
	s°©fs64


52 
__SWORD_TYPE
 
	mf_ty≥
;

53 
__SWORD_TYPE
 
	mf_bsize
;

54 
__fsblk˙t64_t
 
	mf_blocks
;

55 
__fsblk˙t64_t
 
	mf_b‰ì
;

56 
__fsblk˙t64_t
 
	mf_bavaû
;

57 
__fsfû˙t64_t
 
	mf_fûes
;

58 
__fsfû˙t64_t
 
	mf_f‰ì
;

59 
__fsid_t
 
	mf_fsid
;

60 
__SWORD_TYPE
 
	mf_«mñí
;

61 
__SWORD_TYPE
 
	mf_‰size
;

62 
__SWORD_TYPE
 
	mf_Êags
;

63 
__SWORD_TYPE
 
	mf_•¨e
[4];

68 
	#_STATFS_F_NAMELEN


	)

69 
	#_STATFS_F_FRSIZE


	)

70 
	#_STATFS_F_FLAGS


	)

	@/usr/include/bits/statvfs.h

19 #i‚de‡
_SYS_STATVFS_H


23 
	~<bôs/ty≥s.h
>

25 #i‡
__WORDSIZE
 == 32

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
	mf_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/symcat.h

19 #i‚de‡
SYM_CAT_H


20 
	#SYM_CAT_H


	)

22 #i‡
deföed
 (
__STDC__
Ë|| deföed (
ALMOST_STDC
Ë|| deföed (
HAVE_STRINGIZE
)

23 
	#CONCAT2
(
a
,
b
Ëa##
	)
b

24 
	#CONCAT3
(
a
,
b
,
c
Ëa##b##
	)
c

25 
	#CONCAT4
(
a
,
b
,
c
,
d
Ëa##b##c##
	)
d

26 
	#STRINGX
(
s
Ë#s

	)

32 
	#CONCAT2
(
a
,
b
Ë®
	)
b

33 
	#CONCAT3
(
a
,
b
,
c
Ë®b 
	)
c

34 
	#CONCAT4
(
a
,
b
,
c
,
d
Ë®b c 
	)
d

35 
	#STRINGX
(
s
Ë"s"

	)

38 
	#XCONCAT2
(
a
,
b
Ë
	`CONCAT2
◊,b)

	)

39 
	#XCONCAT3
(
a
,
b
,
c
Ë
	`CONCAT3
◊,b,c)

	)

40 
	#XCONCAT4
(
a
,
b
,
c
,
d
Ë
	`CONCAT4
◊,b,c,d)

	)

47 
	#XSTRING
(
s
Ë
	`STRINGX
(s)

	)

	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 
	#TIOCSRS485
 0x542F

	)

66 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

67 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

68 
	#TCGETX
 0x5432

	)

69 
	#TCSETX
 0x5433

	)

70 
	#TCSETXF
 0x5434

	)

71 
	#TCSETXW
 0x5435

	)

73 
	#FIONCLEX
 0x5450

	)

74 
	#FIOCLEX
 0x5451

	)

75 
	#FIOASYNC
 0x5452

	)

76 
	#TIOCSERCONFIG
 0x5453

	)

77 
	#TIOCSERGWILD
 0x5454

	)

78 
	#TIOCSERSWILD
 0x5455

	)

79 
	#TIOCGLCKTRMIOS
 0x5456

	)

80 
	#TIOCSLCKTRMIOS
 0x5457

	)

81 
	#TIOCSERGSTRUCT
 0x5458

	)

82 
	#TIOCSERGETLSR
 0x5459

	)

83 
	#TIOCSERGETMULTI
 0x545A

	)

84 
	#TIOCSERSETMULTI
 0x545B

	)

86 
	#TIOCMIWAIT
 0x545C

	)

87 
	#TIOCGICOUNT
 0x545D

	)

93 #i‚de‡
FIOQSIZE


94 
	#TIOCGHAYESESP
 0x545E

	)

95 
	#TIOCSHAYESESP
 0x545F

	)

96 
	#FIOQSIZE
 0x5460

	)

100 
	#TIOCPKT_DATA
 0

	)

101 
	#TIOCPKT_FLUSHREAD
 1

	)

102 
	#TIOCPKT_FLUSHWRITE
 2

	)

103 
	#TIOCPKT_STOP
 4

	)

104 
	#TIOCPKT_START
 8

	)

105 
	#TIOCPKT_NOSTOP
 16

	)

106 
	#TIOCPKT_DOSTOP
 32

	)

108 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_MISC


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_MISC


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
__END_DECLS


97 #i‡!
deföed
 
__deföed_sched∑øm
 \

98 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

99 
	#__deföed_sched∑øm
 1

	)

101 
	s__sched_∑øm


103 
__sched_¥i‹ôy
;

105 #unde‡
__√ed_sched∑øm


109 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


110 
	#__˝u_£t_t_deföed


	)

112 
	#__CPU_SETSIZE
 1024

	)

113 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

116 
	t__˝u_mask
;

119 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

120 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

125 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

126 } 
	t˝u_£t_t
;

129 #i‡
	`__GNUC_PREREQ
 (2, 91)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

131 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 
size_t
 
__i
; \

136 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

137 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

138 
__i
 = 0; __ò< 
__imax
; ++__i) \

139 
__bôs
[
__i
] = 0; \

140 
	}
} 0)

	)

142 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

143 (
__exãnsi⁄__
 \

144 ({ 
size_t
 
__˝u
 = (
˝u
); \

145 
__˝u
 < 8 * (
£tsize
) \

146 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

147 |
	`__CPUMASK
 (
__˝u
)) \

148 : 0; }))

	)

149 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

154 &~
	`__CPUMASK
 (
__˝u
)) \

155 : 0; }))

	)

156 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

157 (
__exãnsi⁄__
 \

158 ({ 
size_t
 
__˝u
 = (
˝u
); \

159 
__˝u
 < 8 * (
£tsize
) \

160 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

161 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

162 : 0; }))

	)

164 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

165 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

167 #i‡
__GNUC_PREREQ
 (2, 91)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
__exãnsi⁄__
 \

173 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

174 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 i‡(
__bôs
[
__i
] != __bits[__i]) \

180 
__i
 =
__imax
; }))

	)

183 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

184 (
__exãnsi⁄__
 \

185 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

186 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

187 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

188 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

189 
size_t
 
__i
; \

190 
__i
 = 0; __ò< 
__imax
; ++__i) \

191 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

192 
__de°
; }))

	)

194 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

195 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

196 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

197 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

199 
__BEGIN_DECLS


201 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

202 
__THROW
;

203 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

204 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

206 
__END_DECLS


	@
1
.
1
/usr/include
230
5078
bitmap.h
bpred.c
bpred.h
cache.c
cache.h
config.h
dlite.c
dlite.h
eio.c
eio.h
endian.c
endian.h
eval.c
eval.h
eventq.c
eventq.h
host.h
libexo/exo-test.c
libexo/exolex.c
libexo/libexo.c
libexo/libexo.h
loader.c
loader.h
machine.c
machine.h
main.c
memory.c
memory.h
misc.c
misc.h
options.c
options.h
ptrace.c
ptrace.h
range.c
range.h
regs.c
regs.h
resource.c
resource.h
sim-bpred.c
sim-cache.c
sim-eio.c
sim-fast.c
sim-outorder.c
sim-profile.c
sim-safe.c
sim.h
stats.c
stats.h
symbol.c
symbol.h
syscall.c
syscall.h
sysprobe.c
target-alpha/alpha.c
target-alpha/alpha.h
target-alpha/config.h
target-alpha/ecoff.h
target-alpha/loader.c
target-alpha/symbol.c
target-alpha/syscall.c
target-pisa/config.h
target-pisa/configbig.h
target-pisa/configlit.h
target-pisa/ecoff.h
target-pisa/loader.c
target-pisa/pisa.c
target-pisa/pisa.h
target-pisa/symbol.c
target-pisa/syscall.c
tests-alpha/src/anagram.c
tests-alpha/src/test-dirent.c
tests-alpha/src/test-fmath.c
tests-alpha/src/test-llong.c
tests-alpha/src/test-lswlr.c
tests-alpha/src/test-math.c
tests-alpha/src/test-printf.c
tests-pisa/src/anagram.c
tests-pisa/src/test-fmath.c
tests-pisa/src/test-llong.c
tests-pisa/src/test-lswlr.c
tests-pisa/src/test-math.c
tests-pisa/src/test-printf.c
version.h
/usr/include/assert.h
/usr/include/bfd.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/netinet/udp.h
/usr/include/setjmp.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/dir.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/mount.h
/usr/include/sys/param.h
/usr/include/sys/poll.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/statfs.h
/usr/include/sys/statvfs.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/vfs.h
/usr/include/termio.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
machine.def
/usr/include/alloca.h
/usr/include/ansidecl.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/poll.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/statfs.h
/usr/include/bits/statvfs.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/stdint.h
/usr/include/symcat.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/termios.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/socket.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/termios.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/param.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/linux/ioctl.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/ioctl.h
/usr/include/sched.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/sched.h
